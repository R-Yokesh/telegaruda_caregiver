{"version":3,"file":"static/js/149.39e456df.chunk.js","mappings":"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","sources":["ApiServices/useApi.jsx","Components/Badge/Badge.jsx","Components/BlurBackground/BlurBackground.jsx","Components/Breadcrumb/Breadcrumb.jsx","Components/Buttons/ActiveButton/ActiveButton.jsx","Components/Buttons/DropDownButton/DropDownButton.jsx","Components/Buttons/PrimaryButton/PrimaryButton.jsx","Components/Consultant/TableColumnsJson/ObjectiveJson.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Neurological/Neurological.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Ophthalmic/Ophthalmic.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Peadiatric/Peadiatric.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Psychiatric/Psychiatric.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Psychiatric/PsychiatricForm.jsx","Components/Tables/DiagnosisTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Diagnosis/DiagnosisForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Diagnosis/Diagnosis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Immunization/ImmunizationForm.jsx","Components/Tables/ImmunizationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Immunization/Immunization.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Lab/LabForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/PhysicalExam/PhysicalExam.jsx","Components/Tables/NextAppointmentTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointmentTab/NextAppointmentForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointmentTab/NextAppointmentTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointment.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/DetailsTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationCompleted.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrder.jsx","Components/Tables/PatientEducationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducationTab/PatientEducationTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducation.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducationTab/PatientEducationForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureForm.jsx","Components/Tables/ProcedurerTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/Cpt.jsx","Components/Tables/TherapiesTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/TherapiesTab/TherapiesForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/TherapiesTab/TherapiesTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/Therapies.jsx","Components/Tables/Subjective/ChiefComplaintTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Chief Complaints/ChiefComplaintsForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Chief Complaints/ChiefComplaints.jsx","Components/Tables/Subjective/FamilyHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Family History/FamilyHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Medical History/MedHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Medical History/MedicalHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/ObstericHistoryForm.jsx","Components/Tables/Subjective/ObstetricHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/MensturalHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/ScreeningHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/OGHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Social History/MedHistoryForm.jsx","Components/Tables/Subjective/SocialHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Social History/SocialHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Surgical History/SurgicalForm.jsx","Components/Tables/Subjective/SurgicalTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Surgical History/SurgicalHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Medication/Medication.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Medication/MedicationForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Signs And Symptoms/SignsSymptomsForm.jsx","Components/Tables/Subjective/SymtomsTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Signs And Symptoms/SignsSymptoms.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/ExerciseHabit/ExcerciseHabitForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/ExerciseHabit/ExerciseHabit.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Mood/MoodForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Mood/Mood.jsx","Components/Tables/Subjective/WellnessProfileTable/NutritionDietTable.jsx","Components/Tables/Subjective/WellnessProfileTable/NutritionFluidTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/DietForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/FluidIntakeForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/Nutrition.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/SexualStatus/SexualStatusForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/SexualStatus/SexualStatus.jsx","Components/Tables/Subjective/WellnessProfileTable/SleepTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Sleep/SleepForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Sleep/Sleep.jsx","Components/DateCards/DateCards.jsx","Components/DateRangePicker/DateSearch.jsx","Components/DateRangePicker/DateSelector.jsx","Components/DateRangePicker/SingleDatePicker.jsx","Components/Dropdown/Dropdown.jsx","Components/OptionItems/OptionItem.jsx","Components/Pagination/Pagination.jsx","Components/SearchBar/SearchBar.jsx","Components/Tables/AssessmentTools/PsychiatricTable.jsx","Components/Tables/DynamicTable.jsx","Components/Tables/ImagingOrderTable.jsx","Components/Tables/LabOrderTable.jsx","Components/Tables/LabTable.jsx","Components/Tables/MedicationOrderTable.jsx","Components/Tables/Subjective/MedicalHistoryTable.jsx","Components/Tables/Subjective/MedicationTable.jsx","Components/Tables/Subjective/WellnessProfileTable/ExerciseHabitTable.jsx","Components/Tables/Subjective/WellnessProfileTable/MoodTable.jsx","Config/config.jsx","Utils/commonUtils.jsx","Utils/dateUtils.jsx"],"sourcesContent":["import { useState, useCallback, useRef } from \"react\";\r\n\r\nconst useApi = () => {\r\n  const apiUrl = process.env.REACT_APP_API_URL;\r\n  const apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const cache = useRef({});\r\n\r\n  const fetchData = useCallback(\r\n    async (url, options) => {\r\n      setLoading(true);\r\n\r\n      if (cache?.current[url] && url.startsWith(\"resource/vitals\")) {\r\n        setLoading(true);\r\n        cache.current = {};\r\n      }\r\n      if (cache?.current[url]) {\r\n        setLoading(false);\r\n        return cache.current[url];\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(apiUrl + url, options);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch ${url}: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        cache.current[url] = data;\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(`Error: ${error.message}`);\r\n        throw error;\r\n      }\r\n    },\r\n    [apiUrl]\r\n  );\r\n\r\n  const get = useCallback(\r\n    async (url) => {\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData, apiKey]\r\n  );\r\n\r\n  const post = useCallback(\r\n    async (url, body) => {\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n        body: JSON.stringify(body),\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData]\r\n  );\r\n\r\n  const patch = useCallback(\r\n    async (url, body) => {\r\n      const options = {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n        body: JSON.stringify(body),\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData]\r\n  );\r\n\r\n  const del = useCallback(\r\n    async (url) => {\r\n      const options = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n      };\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(apiUrl + url, options);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch ${url}: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(`Error: ${error.message}`);\r\n        throw error;\r\n      }\r\n    },\r\n    [apiKey, apiUrl]\r\n  );\r\n\r\n  // Function to clear all cache entries\r\n  const clearCache = useCallback(() => {\r\n    cache.current = {}; // Clear all entries from cache\r\n  }, []);\r\n  return {\r\n    loading,\r\n    error,\r\n    get,\r\n    post,\r\n    patch,\r\n    del,\r\n    clearCache,\r\n  };\r\n};\r\n\r\nexport default useApi;\r\n","import React from \"react\";\r\n\r\nconst Badge = ({ label, color }) => {\r\n  return <div className={`badge badge-${color} fs-14 fw-500`}>{label}</div>;\r\n};\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\n\r\nconst BlurBackground = ({ children }) => {\r\n  return <div className=\"blur-background\">{children}</div>;\r\n};\r\n\r\nexport default BlurBackground;\r\n","import { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./Breadcrumb.css\";\r\n\r\nconst Breadcrumb = ({ paths }) => {\r\n  const lastIndex = paths.length - 1;\r\n  const url = \"/telegaruda-caregiver\";\r\n  return (\r\n    <>\r\n      <CBreadcrumb>\r\n        {paths.map((data, index) => (\r\n          <CBreadcrumbItem\r\n            href={url + data?.to}\r\n            className={`breadcrumb-item-custom ${\r\n              lastIndex === index && \"black\"\r\n            }`}\r\n          >\r\n            <span className=\"breadcrumb-label\">{data.label}</span>\r\n          </CBreadcrumbItem>\r\n        ))}\r\n      </CBreadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from \"react\";\r\nimport \"./ActiveButton.css\";\r\n\r\nconst ActiveButton = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"act-button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ActiveButton;\r\n","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst DropdownButton = ({ buttonName2, getbtnNames }) => {\r\n  const [buttonText, setButtonText] = useState(\"SAVE\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleItemClick = (text) => {\r\n    setButtonText(text);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button className=\"dropdown-button button\">\r\n        <div className=\"d-flex align-items-center justify-content-between\" onClick={() => getbtnNames(buttonText)}>\r\n          <div className=\"w-100\" >\r\n            <span className=\"fs-16 fw-600\">{buttonText}</span>\r\n          </div>\r\n          <div onClick={toggleDropdown}>\r\n            {!isOpen ? (\r\n              <img src={Assets.cDown} alt=\"down\" />\r\n            ) : (\r\n              <img src={Assets.cUp} alt=\"up\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"dropdown-content\">\r\n          {buttonText === buttonName2 && (\r\n            <span\r\n              onClick={() => handleItemClick(\"SAVE\")}\r\n              className=\"fs-14 fw-600\"\r\n            >\r\n              SAVE\r\n            </span>\r\n          )}\r\n          {buttonText === \"SAVE\" && (\r\n            <span\r\n              onClick={() => handleItemClick(buttonName2)}\r\n              className=\"fs-14 fw-600\"\r\n            >\r\n              {buttonName2}\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownButton;\r\n","import React from \"react\";\r\nimport \"./PrimaryButton.css\";\r\n\r\nconst PrimaryButton = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import { Assets } from \"../../../assets/Assets\";\r\n\r\nexport const ObjectiveDatas = [\r\n  {\r\n    id: 1,\r\n    icon: Assets.VitalBP,\r\n    slug: \"blood-pressure\",\r\n    name: \"Blood Pressure\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    category: \"Primary Vitals\",\r\n    badge: [\r\n      { label: \"120/80 mm Hg\", color: \"success\" },\r\n      // { label: \"DIA : 71\", color: \"success\" },\r\n      // { label: \"Pulse : 89\", color: \"success\" },\r\n    ],\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"SYSTOLIC\" },\r\n      { id: 4, label: \"DIASTOLIC\" },\r\n      { id: 5, label: \"PULSE (IN BPM)\" },\r\n      { id: 6, label: \"DATE\" },\r\n      { id: 7, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        systolic: \"112\",\r\n        diastolic: \"25\",\r\n        \"pulse_(in_bpm)\": \"89\",\r\n        chartLabel1: \"PULSE (IN BPM)\",\r\n        date: \"02-04-2024 12:13\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Pressure\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"error\",\r\n          name: \"High Blood Pressure (Hypertension) Stage 1\",\r\n        },\r\n        systolic: \"112\",\r\n        diastolic: \"25\",\r\n        \"pulse_(in_bpm)\": \"125\",\r\n        date: \"05-04-2024 13:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Pressure\",\r\n      },\r\n    ],\r\n    chartLabel1: \"PULSE (IN BPM)\",\r\n  },\r\n  {\r\n    id: 2,\r\n    icon: Assets.VitalBs,\r\n    slug: \"blood-sugar\",\r\n    name: \"Blood Sugar\",\r\n    category: \"Metabolic And Biochemical Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"110 mg/dL\", color: \"success\" }],\r\n    chartLabel1: \"Blood Sugar (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Blood Sugar\" },\r\n      { id: 4, label: \"Type\" },\r\n      { id: 5, label: \"DATE\" },\r\n      { id: 6, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        blood_sugar: \"110 mg/dL\",\r\n        blood_sugar_value: \"110\",\r\n        type: \"Random\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Sugar\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        blood_sugar: \"110 mg/dL\",\r\n        blood_sugar_value: \"110\",\r\n        type: \"Random\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Blood Sugar\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    icon: Assets.VitalBMI,\r\n    slug: \"bmi\",\r\n    name: \"BMI\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"24.5 kg/m²\", color: \"success\" }],\r\n    chartLabel1: \"BMI (kg/m²)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BMI (kg/m²)\" },\r\n      { id: 4, label: \"Height (cm)\" },\r\n      { id: 5, label: \"Weight (kg)\" },\r\n      { id: 6, label: \"DATE\" },\r\n      { id: 7, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        bmi: \"24.13\",\r\n        height: \"159cm\",\r\n        weight: \"61kg\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"BMI\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"error\",\r\n          name: \"Overweight\",\r\n        },\r\n        bmi: \"27.01\",\r\n        height: \"180cm\",\r\n        weight: \"87.5kg\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"BMI\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    icon: Assets.VitalHCT,\r\n    name: \"Hematocrit (HCT)\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"23%\", color: \"error\" }],\r\n    chartLabel1: \"HCT (%)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"HCT %\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        \"hct_%\": \"42%\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Hematocrit (HCT)\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        \"hct_%\": \"45%\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Hematocrit (HCT)\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    icon: Assets.VitalHBeat,\r\n    slug: \"heart-rate\",\r\n    name: \"Heart\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"1 bpm\", color: \"success\" }],\r\n    chartLabel1: \"Heart Rate (bpm)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"Result\" },\r\n      { id: 3, label: \"HR (bpm)\" },\r\n      { id: 4, label: \"Type\" },\r\n      { id: 5, label: \"Result File\" },\r\n      { id: 6, label: \"Interpretation\" },\r\n      { id: 7, label: \"DATE\" },\r\n      { id: 8, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"error\", name: \"Abnormal Heart Rate\" },\r\n        // ecg: {\r\n        //   contentType: \"image\",\r\n        //   link: Assets.ecgSample,\r\n        // },\r\n        \"hr_(bpm)\": \"120\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Heart Rate\",\r\n        interpretation: \"ECG Interpretation\",\r\n        type: \"3 Lead\",\r\n        // result_file: \"heart.png\",\r\n        result_file: {\r\n          contentType: \"image\",\r\n          link: Assets.ecgSample,\r\n          name: \"heart.png\",\r\n        },\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        // ecg: {\r\n        //   contentType: \"pdf\",\r\n        //   link: \"https://www.orimi.com/pdf-test.pdf\",\r\n        // },\r\n        \"hr_(bpm)\": \"80\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Heart Rate\",\r\n        interpretation: \"ECG Interpretation\",\r\n        type: \"3 Lead\",\r\n        // result_file: \"heart.pdf\",\r\n        result_file: {\r\n          contentType: \"pdf\",\r\n          link: \"https://www.orimi.com/pdf-test.pdf\",\r\n          name: \"heart.pdf\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    icon: Assets.VitalHae,\r\n    name: \"Hemoglobin\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"14 g/dL\", color: \"error\" }],\r\n    chartLabel1: \"Hemoglobin (g/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Hemoglobin\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        hemoglobin: \"15 g/dL\",\r\n        hemoglobinValue: \"15\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Hemoglobin\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        hemoglobin: \"15 g/dL\",\r\n        hemoglobinValue: \"15\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Hemoglobin\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    icon: Assets.BKetone,\r\n    name: \"Blood Ketone\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"0.5 mmol/L\", color: \"error\" }],\r\n    chartLabel1: \"Blood Ketone (mmol/L)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BLOOD KETONE\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        blood_ketone: \"0.33 mmol/L\",\r\n        blood_ketone_value: \"0.33\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Ketone\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        blood_ketone: \"0.33 mmol/L\",\r\n        blood_ketone_value: \"0.33\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Blood Ketone\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    icon: Assets.VitalLipid,\r\n    name: \"Lipid Profile\",\r\n    category: \"Metabolic And Biochemical Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [\r\n      { label: \"Total Cholesterol: 180 mg/dL \", color: \"success\" },\r\n      { label: \"LDL: 100 mg/dL\", color: \"error\" },\r\n      { label: \"HDL: 50 mg/dL \", color: \"error\" },\r\n      // { label: \"TG: Optimal\", color: \"error\" },\r\n      { label: \"Triglycerides: 150 mg/dL\", color: \"success\" },\r\n    ],\r\n    chartLabel1: \"LDL (mg/dL\",\r\n    chartLabel2: \"HDL (mg/dL\",\r\n    chartLabel3: \"VLDL (mg/dL\",\r\n    chartLabel4: \"LDL/HDL (mg/dL\",\r\n    chartLabel5: \"Triglycerides (mg/dL\",\r\n    chartLabel6: \"Total Cholesterol (mg/dL\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"LDL(mg/dL)\" },\r\n      { id: 4, label: \"HDL(mg/dL)\" },\r\n      { id: 5, label: \"VLDL(mg/dL)\" },\r\n      { id: 6, label: \"LDL/HDL(mg/dL)\" },\r\n      { id: 7, label: \"Triglycerides(mg/dL)\" },\r\n      { id: 8, label: \"Total Cholesterol(mg/dL)\" },\r\n      { id: 9, label: \"DATE\" },\r\n      { id: 10, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        \"ldl(mg/dl)\": \"60 mg/dL\",\r\n        \"hdl(mg/dl)\": \"50 mg/dL\",\r\n        \"vldl(mg/dl)\": \"5 mg/dL\",\r\n        \"ldl/hdl(mg/dl)\": \"1\",\r\n        \"triglycerides(mg/dl)\": \"140 mg/dL\",\r\n        \"total_cholesterol(mg/dl)\": \"180 mg/dL\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Lipid Profile\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        \"ldl(mg/dl)\": \"60 mg/dL\",\r\n        \"hdl(mg/dl)\": \"50 mg/dL\",\r\n        \"vldl(mg/dl)\": \"5 mg/dL\",\r\n        \"ldl/hdl(mg/dl)\": \"1\",\r\n        \"triglycerides(mg/dl)\": \"140 mg/dL\",\r\n        \"total_cholesterol(mg/dl)\": \"180 mg/dL\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Lipid Profile\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    icon: Assets.VitalRespi,\r\n    slug: \"respiration\",\r\n    name: \"Respiration Rate\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"16 bpm\", color: \"error\" }],\r\n    chartLabel1: \"Respiration Rate (BPM)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Respiration Rate (BPM)\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"error\", name: \"High\" },\r\n        \"respiration_rate_(bpm)\": \"44\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Respiration Rate\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        \"respiration_rate_(bpm)\": \"18\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Respiration Rate\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 10,\r\n    icon: Assets.SpO2,\r\n    slug: \"spO2\",\r\n    name: \"SpO2\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"92%\", color: \"success\" }],\r\n    chartLabel1: \"SpO2 (%)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      // { id: 3, label: \"Pulse Rate (BPM)\" },\r\n      { id: 3, label: \"SpO2\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"error\", name: \"Abnormal\" },\r\n        \"pulse_rate_(bpm)\": \"120\",\r\n        spo2: \"99%\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"SpO2\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        spo2: \"90%\",\r\n        \"pulse_rate_(bpm)\": \"70\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"SpO2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 11,\r\n    icon: Assets.Temp,\r\n    slug: \"temperature\",\r\n    name: \"Temperature\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [\r\n      { label: \"36.6*C\", color: \"success\" },\r\n      { label: \"96.80 ° F\", color: \"success\" },\r\n    ],\r\n    chartLabel1: \"Temperature (°F) \",\r\n    chartLabel2: \"Temperature (°C)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Temperature\" },\r\n      { id: 4, label: \"Method\" },\r\n      { id: 5, label: \"DATE\" },\r\n      { id: 6, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        // temperature_fahrenheit: \"96.80 ° F\",\r\n        // temperature_celsius: \"36 ° C\",\r\n        method: \"Oral\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Temperature\",\r\n        temperature: \"96\",\r\n        unit: \"Celsius\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        // temperature_fahrenheit: \"96.80 ° F\",\r\n        // temperature_celsius: \"36 ° C\",\r\n        method: \"Oral\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Temperature\",\r\n        temperature: \"36\",\r\n        unit: \"Celsius\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 12,\r\n    icon: Assets.LFT,\r\n    slug: \"spirometer\",\r\n    name: \"Lung Function Test (LFT)\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    category: \"Primary Vitals\",\r\n    chartLabel1: \"FVC (%)\",\r\n    chartLabel2: \"FEV1 (%)\",\r\n    chartLabel4: \"FEV1/FVC Ratio (%)\",\r\n    chartLabel3: \"PEF (%)\",\r\n    badge: [\r\n      { label: \"FEV1 (%): 1L\", color: \"error\" },\r\n      { label: \"FVC (%): 1L\", color: \"error\" },\r\n      { label: \"FEV1/FVC Ratio (%): 49\", color: \"error\" },\r\n      { label: \"PEF (%): 1L/min\", color: \"error\" },\r\n    ],\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"Result\" },\r\n      { id: 3, label: \"FVC (L)\" },\r\n      { id: 4, label: \"FEV1 (L)\" },\r\n      { id: 5, label: \"PEF (L/s)\" },\r\n      { id: 6, label: \"FEV1/FVC (%)\" },\r\n      { id: 7, label: \"DATE\" },\r\n      { id: 8, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        \"fvc_(l)\": \"5.94\",\r\n        \"fev1_(l)\": \"12.45\",\r\n        \"fev1/fvc_(%)\": \"41\",\r\n        \"pef_(l/s)\": \"2.62\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Lung Function Test (LFT)\",\r\n        result: \"Lorem Ipsum\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        \"fvc_(l)\": \"6.94\",\r\n        \"fev1_(l)\": \"2.45\",\r\n        \"fev1/fvc_(%)\": \"41\",\r\n        \"pef_(l/s)\": \"2.62\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Lung Function Test (LFT)\",\r\n        result: \"Lorem Ipsum\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 13,\r\n    icon: Assets.BUAcid,\r\n    name: \"Blood Uric Acid\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"6 mg/dL\", color: \"error\" }],\r\n    chartLabel1: \"Blood Uric Acid (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BLOOD URIC ACID\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        blood_uric_acid: \"5 mg/dL\",\r\n        blood_uric_acid_value: \"5\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Uric Acid\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        blood_uric_acid: \"5 mg/dL\",\r\n        blood_uric_acid_value: \"5\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Blood Uric Acid\",\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   id: 14,\r\n  //   icon: Assets.Urinalysis,\r\n  //   name: \"Urinalysis\",\r\n  //   category: \"Renal and Metabolic Markers\",\r\n  //   date: \"Recently Added 27-03-2024\",\r\n  //   badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n  //   chartLabel1: \"Urine (μmol/kg/d)\",\r\n  //   chartLabel2: \"ph\",\r\n  //   columnsData: [\r\n  //     { id: 1, label: \"NO.\" },\r\n  //     { id: 2, label: \"RESULT\" },\r\n  //     { id: 3, label: \"URINE\" },\r\n  //     { id: 4, label: \"PH\" },\r\n  //     { id: 5, label: \"SUGAR\" },\r\n  //     { id: 6, label: \"PROTEIN\" },\r\n  //     { id: 7, label: \"LEUKOCYTES\" },\r\n  //     { id: 8, label: \"RBC\" },\r\n  //     { id: 9, label: \"DATE\" },\r\n  //     { id: 10, label: \"ACTION\" },\r\n  //   ],\r\n  //   tableData: [\r\n  //     {\r\n  //       \"no.\": 1,\r\n  //       result: { status: \"success\", name: \"Normal\" },\r\n  //       urine: \"100 μmol/kg/d\",\r\n  //       chartValue: \"100\",\r\n  //       ph: \"17.5\",\r\n  //       sugar: \"0.8 mmol/L\",\r\n  //       protein: \"None\",\r\n  //       leukocytes: \"None\",\r\n  //       rbc: \"None\",\r\n  //       date: \"06-24-2024 10:15\",\r\n  //       action: [{ type: \"warning\" }],\r\n  //       name: \"Urinalysis\",\r\n  //     },\r\n  //     {\r\n  //       \"no.\": 2,\r\n  //       result: {\r\n  //         status: \"success\",\r\n  //         name: \"Normal\",\r\n  //       },\r\n  //       urine: \"110 μmol/kg/d\",\r\n  //       chartValue: \"110\",\r\n  //       ph: \"6.5\",\r\n  //       sugar: \"0.8 mmol/L\",\r\n  //       protein: \"None\",\r\n  //       leukocytes: \"None\",\r\n  //       rbc: \"None\",\r\n  //       date: \"05-24-2024 10:15\",\r\n  //       action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n  //       name: \"Urinalysis\",\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    id: 14,\r\n    icon: Assets.Urinalysis,\r\n    name: \"Urinalysis\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    // badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n    badge: [\r\n      { label: \"Color: Straw \", color: \"success\" },\r\n      { label: \"Clarity: Clear\", color: \"success\" },\r\n      { label: \"Specific Gravity: 1.008 \", color: \"success\" },\r\n      { label: \"PH: Normal (6-7)\", color: \"success\" },\r\n      { label: \"Protein: Trace\", color: \"success\" },\r\n      { label: \"Glucose: Negative\", color: \"success\" },\r\n    ],\r\n    chartLabel1: \"Specific gravity\",\r\n    chartLabel2: \"PH\",\r\n    chartLabel3: \"Urobilinogen\",\r\n    chartLabel4: \"Red Blood Cells\",\r\n    chartLabel5: \"White Blood Cells\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"Color\" },\r\n      { id: 3, label: \"Clarity\" },\r\n      { id: 4, label: \"PH\" },\r\n      { id: 5, label: \"Protein\" },\r\n      { id: 6, label: \"Glucose\" },\r\n      { id: 7, label: \"Leukocyte\" },\r\n      { id: 8, label: \"Bilirubin\" },\r\n      { id: 9, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        color: \"Straw\",\r\n        specific_gravity: \"1.308\",\r\n        ph: \"7\",\r\n        clarity: \"Clear\",\r\n        protein: \"Trace\",\r\n        glucose: \"Negative\",\r\n        leukocyte: \"79\",\r\n        bilirubin: \"120\",\r\n        urobilinogen: \"70\",\r\n        red_blood_cells: \"120\",\r\n        white_blood_cells: \"110\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Urinalysis\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        color: \"Straw\",\r\n        specific_gravity: \"1.308\",\r\n        ph: \"7\",\r\n        clarity: \"Clear\",\r\n        protein: \"Trace\",\r\n        glucose: \"Negative\",\r\n        leukocyte: \"79\",\r\n        bilirubin: \"120\",\r\n        urobilinogen: \"70\",\r\n        red_blood_cells: \"120\",\r\n        white_blood_cells: \"110\",\r\n\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Urinalysis\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 15,\r\n    icon: Assets.Urea,\r\n    name: \"Urea\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    badge: [{ label: \"32mg/dl\", color: \"error\" }],\r\n    chartLabel1: \"Urea (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"UREA\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        urea: \"20 mg/dL\",\r\n        urea_value: \"20\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Urea\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        urea: \"20 mg/dL\",\r\n        urea_value: \"20\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Urea\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 16,\r\n    icon: Assets.Creatinine,\r\n    name: \"Creatinine\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"1.7 mg/dL\", color: \"error\" }],\r\n    chartLabel1: \"Creatinine (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"CREATININE\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        creatinine: \"1.2 mg/dL\",\r\n        creatinine_value: \"1.2\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Creatinine\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        creatinine: \"1.2 mg/dL\",\r\n        creatinine_value: \"1.2\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Creatinine\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 17,\r\n    icon: Assets.GFR,\r\n    name: \"GFR\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"55 mL/min/1.73m²\", color: \"error\" }],\r\n    chartLabel1: \"GFR (mL/min/1.73m²)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"GFR\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        gfr: \"92 mL/min/1.73m²\",\r\n        gfr_value: \"92\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"GFR\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        gfr: \"90 mL/min/1.73m²\",\r\n        gfr_value: \"90\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"GFR\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../../AssessmentTool/Psychiatric/PsychiatricForm\";\r\n\r\nconst Neurological = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"NIH Stroke Scale/Score (NIHSS)\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Level of consciousness\",\r\n          options: [\r\n            \"Alert, keenly responsive\",\r\n            \"Arouses to minor stimulation\",\r\n            \"Requires repeated stimulation to arouse\",\r\n            \"Movements to pain\",\r\n            \"Postures or unresponsive\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"2. Ask month and age\",\r\n          options: [\r\n            \"Both questions right\",\r\n            \"1 question right\",\r\n            \"0 questions right\",\r\n            \"Dysarthric/intubated/trauma/language barrier\",\r\n            \"Aphasic\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"3. Blink eyes & squeeze hands\",\r\n          options: [\r\n            \"Performs both tasks\",\r\n            \"Performs 1 task\",\r\n            \"Performs 0 tasks\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"4. Horizontal extraocular movements\",\r\n          options: [\r\n            \"Normal\",\r\n            \"Partial gaze palsy: can be overcome\",\r\n            \"Partial gaze palsy: corrects with oculocephalic reflex\",\r\n            \"Forced gaze palsy: cannot be overcome\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"5. Visual fields\",\r\n          options: [\r\n            \"No visual loss\",\r\n            \"Partial hemianopia\",\r\n            \"Complete hemianopia\",\r\n            \"Patient is bilaterally blind\",\r\n            \"Bilateral hemianopia\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Facial palsy\",\r\n          options: [\r\n            \"Normal symmetry\",\r\n            \"Minor paralysis (flat nasolabial fold, smile asymmetry)\",\r\n            \"Partial paralysis (lower face)\",\r\n            \"Unilateral complete paralysis (upper/lower face)\",\r\n            \"Bilateral complete paralysis (upper/lower face)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"7. Left arm motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"No effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"8. Right arm motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"No effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"9. Left leg motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"Some effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"10. Right leg motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"No effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"11. Limb Ataxia\",\r\n          options: [\r\n            \"No ataxia\",\r\n            \"Ataxia in 1 Limb\",\r\n            \"Ataxia in 2 Limbs\",\r\n            \"Does not understand\",\r\n            \"Paralyzed\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"12. Sensation\",\r\n          options: [\r\n            \"Normal: no sensory loss\",\r\n            \"Mild-moderate loss: less sharp/more dull\",\r\n            \"Mild-moderate loss: can sense being touched\",\r\n            \"Complete loss: cannot sense being touched at all\",\r\n            \"No response and quadriplegic\",\r\n            \"Coma/unresponsive\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"13. Language/aphasia\",\r\n          options: [\r\n            \"Normal: no aphasia\",\r\n            \"Mild-moderate aphasia: some obvious changes, without significant limitation\",\r\n            \"Severe aphasia: fragmentary expression, inference needed, cannot identify materials\",\r\n            \"Mute/global aphasia: no usable speech/auditory comprehension\",\r\n            \"Coma/unresponsive\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"14. Dysarthria\",\r\n          options: [\r\n            \"Normal\",\r\n            \"Mild-moderate dysarthria: slurring but can be understood\",\r\n            \"Severe dysarthria: unintelligible slurring or out of proportion to dysphasia\",\r\n            \"Mute/anarthric\",\r\n            \"Intubated/unable to test\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"15. Extinction/inattention\",\r\n          options: [\r\n            \"No abnormality\",\r\n            \"Visual/tactile/auditory/spatial/personal inattention\",\r\n            \"Extinction to bilateral simultaneous stimulation\",\r\n            \"Profound hemi-inattention (ex: does not recognize own hand)\",\r\n            \"Extinction to >1 modality\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const formTitle = \"NIH Stroke Scale/Score (NIHSS)\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n\r\n            {/* <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow> */}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Neurological;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../Psychiatric/PsychiatricForm\";\r\n\r\nconst Ophthalmic = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"Vision Symptoms\",\r\n      date: \"26-07-2024 \",\r\n      result: \"6 Score Medium\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. As a teacher or parent are you concerned with this student’s vision?\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"2. Tilts head, squints, closes or covers one eye when reading?\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"3. Gaze issues, eyes turn in or out, crossed eyes, eyes wander\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"4. Different size pupils or eyes\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"5. Watery eyes, eyes appear hazy or clouded\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"6. Words float, move, or jump around when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"7. Complains of headaches, dizziness, or nausea when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"8. Complains of itching, burning, or scratchy eyes\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"9. Complains of blurred or double vision, unusual sensitivity to light, or difficulty seeing\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"10. History of head injury with vision complaints\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"11. Loses place when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"12. Skips over or leaves out small words when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"13. Writes uphill or downhill; difficulty writing in a straight line\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"14. Has difficulty copying from the board\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"15. Avoids near work, such as reading or writing\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"16. Has difficulty lining up numbers when doing math\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"17. Has difficulty finishing assignments on time\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"18. Holds books too close; leans too close to a computer screen\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"19. Clumsy; bumps into things; knocks things over\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const formTitle = \"Vision Symptoms\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ophthalmic;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../Psychiatric/PsychiatricForm\";\r\n\r\nconst Peadiatric = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"APGAR Score\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Activity (muscle tone)\",\r\n          options: [\"Absent\", \"Flex arms and legs\", \"Active\"],\r\n        },\r\n        {\r\n          label: \"2. Pulse\",\r\n          options: [\"Absent\", \"Below 100 bpm\", \"Over 100 bpm\"],\r\n        },\r\n        {\r\n          label: \"3. Grimace (reflex irritability)\",\r\n          options: [\r\n            \"Floppy\",\r\n            \"Minimal response to stimulation\",\r\n            \"Prompt response to stimulation\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"4. Appearance (skin color)\",\r\n          options: [\"Blue, Pale\", \"Pink body, Blue Extremities\", \"Pink\"],\r\n        },\r\n        {\r\n          label: \"5. Respiration\",\r\n          options: [\"Absent\", \"Slow and irregular\", \"Vigorous cry\"],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const formTitle = \"APGAR Score\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Peadiatric;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"./PsychiatricForm\";\r\n\r\nconst Psychiatric = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"Physical Symptoms\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Stomach pain\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"2. Back pain\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"3. Pain in your arms, legs, or joints (knees, hips, etc.)\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"4. Menstrual cramps or other problems with your periods WOMEN ONLY\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"5. Headaches\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Chest pain\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"7. Dizziness\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"8. Fainting spells\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"9. Feeling your heart pound or race\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"10. Shortness of breath\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"11. Pain or problems during sexual intercourse\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"12. Constipation, loose bowels, or diarrhea\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"13. Nausea, gas, or indigestion\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"14. Feeling tired or having low energy\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"15. Trouble sleeping\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Anger\",\r\n      questions: [\r\n        {\r\n          label: \"1. I was irritated more than people knew\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"2. I felt angry\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"3. I felt like I was ready to explode\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"4. I was grouchy\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"5. I felt annoyed\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Anxiety\",\r\n      questions: [\r\n        {\r\n          label: \"1. I felt fearful\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"2. I felt anxious\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"3. I felt worried\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label:\r\n            \"4. I found it hard to focus on anything other than my anxiety\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"5. I felt nervous\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"6. I felt uneasy\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"7. I felt tense\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Depression\",\r\n      questions: [\r\n        {\r\n          label: \"1. I felt worthless\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"2. I felt that I had nothing to look forward to\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"3. I felt helpless\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"4. I felt sad\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"5. I felt like a failure\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"6. I felt depressed\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"7. I felt unhappy\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"8. I felt hopeless\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Mania\",\r\n      questions: [\r\n        {\r\n          label: \"Question 1\",\r\n          options: [\r\n            \"I do not feel happier or more cheerful than usual\",\r\n            \"I occasionally feel happier or more cheerful than usual\",\r\n            \"I often feel happier or more cheerful than usual\",\r\n            \"I feel happier or more cheerful than usual most of the time\",\r\n            \"I feel happier of more cheerful than usual all of the time\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 2\",\r\n          options: [\r\n            \"I do not feel more self-confident than usual\",\r\n            \"I occasionally feel more self-confident than usual\",\r\n            \"I often feel more self-confident than usual\",\r\n            \"I frequently feel more self-confident than usual\",\r\n            \"I feel extremely self-confident all of the time\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 3\",\r\n          options: [\r\n            \"I do not need less sleep than usual\",\r\n            \"I occasionally need less sleep than usual\",\r\n            \"I often need less sleep than usual\",\r\n            \"I frequently need less sleep than usual\",\r\n            \"I can go all day and all night without any sleep and still not feel tired\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 4\",\r\n          options: [\r\n            \"I do not talk more than usual\",\r\n            \"I occasionally talk more than usual\",\r\n            \"I often talk more than usual\",\r\n            \"I frequently talk more than usual\",\r\n            \"I talk constantly and cannot be interrupted\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 5\",\r\n          options: [\r\n            \"I have not been more active (either socially, sexually, at work, home, or school) than usual\",\r\n            \"I have occasionally been more active than usual\",\r\n            \"I have often been more active than usual\",\r\n            \"I have frequently been more active than usual\",\r\n            \"I am constantly more active or on the go all the time\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Autism Spectrum Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Autism Spectrum Disorder problems that are present for this individual\",\r\n          options: [\r\n            \"None\",\r\n            \"Mild Requiring support (i.e., Rituals and repetitive behaviors [RRBs] cause significant interference with functioning in one or more contexts. Resists attempts by others to interrupt RRBs or to be redirected from fixated interest.)\",\r\n            \"Moderate Requiring SUBSTANTIAL support (i.e., RRBs and/or preoccupations and/or fixated interests appear frequently enough to be obvious to the casual observer and interfere with functioning in a variety of contexts. Distress or frustration is apparent when RRBs are interrupted; difficult to redirect from fixated interest.)\",\r\n            \"Severe Requiring VERY SUBSTANTIAL support (i.e., Preoccupations, fixed rituals and/or repetitive behaviors markedly interfere with functioning in all spheres. Marked distress when rituals or routines are interrupted; very difficult to redirect from fixated interest or returns to it quickly.)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Social Communication Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Social Communication Disorder problems that are present for this individual\",\r\n          options: [\r\n            \"None\",\r\n            \"Mild Requiring support (i.e., Without supports in place, deficits in social communication cause noticeable impairments. Has difficulty initiating social interactions and demonstrates clear examples of atypical or unsuccessful responses to social overtures of others. May appear to have decreased interest in social interactions.)\",\r\n            \"Moderate Requiring SUBSTANTIAL support (i.e., Marked deficits in verbal and nonverbal social communication skills; social impairments apparent even with supports in place; limited initiation of social interactions and reduced or abnormal response to social overtures from others.)\",\r\n            \"Severe Requiring VERY SUBSTANTIAL support (i.e., Severe deficits in verbal and nonverbal social communication skills cause severe impairments in functioning; very limited initiation of social interactions and minimal response to social overtures from others.)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Dimensions Of Psychosis Symptom Severity\",\r\n      questions: [\r\n        {\r\n          label: \"1. Hallucinations\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered psychosis)\",\r\n            \"Present, but mild (little pressure to act upon voices, not very bothered by voices)\",\r\n            \"Present and moderate (some pressure to respond to voices, or is somewhat bothered by voices)\",\r\n            \"Present and severe (severe pressure to respond to voices, or is very bothered by voices)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"2. Delusions\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered psychosis)\",\r\n            \"Present, but mild (little pressure to act upon delusional beliefs, not very bothered by beliefs)\",\r\n            \"Present and moderate (some pressure to act upon beliefs, or is somewhat bothered by beliefs)\",\r\n            \"Present and severe (severe pressure to act upon beliefs, or is very bothered by beliefs)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"3. Disorganized speech\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered disorganization)\",\r\n            \"Present, but mild (some difficulty following speech)\",\r\n            \"Present and moderate (speech often difficult to follow)\",\r\n            \"Present and severe (speech almost impossible to follow)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"4. Abnormal psychomotor behavior\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered abnormal psychomotor behavior)\",\r\n            \"Present, but mild (occasional abnormal or bizarre motor behavior or catatonia)\",\r\n            \"Present and moderate (frequent abnormal or bizarre motor behavior or catatonia)\",\r\n            \"Present and severe (abnormal or bizarre motor behavior or catatonia almost constant)\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"5. Negative symptoms (restricted emotional expression or avolition)\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n            \"Present, but mild decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n            \"Present and moderate decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n            \"Present and severe decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Impaired cognition\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (cognitive function not clearly outside the range expected for age or SES; i.e., within 0.5 SD of mean)\",\r\n            \"Present, but mild (some reduction in cognitive function; below expected for age and SES, 0.5–1 SD from mean)\",\r\n            \"Present and moderate (clear reduction in cognitive function; below expected for age and SES, 1–2 SD from mean)\",\r\n            \"Present and severe (severe reduction in cognitive function; below expected for age and SES, > 2 SD from mean)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"7. Depression\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (occasionally feels sad, down, depressed, or hopeless; concerned about having failed someone or at something but not preoccupied)\",\r\n            \"Present, but mild (frequent periods of feeling very sad, down, moderately depressed, or hopeless; concerned about having failed someone or at something, with some preoccupation)\",\r\n            \"Present and moderate (frequent periods of deep depression or hopelessness; preoccupation with guilt, having done wrong)\",\r\n            \"Present and severe (deeply depressed or hopeless daily; delusional guilt or unreasonable self-reproach grossly out of proportion to circumstances)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"8. Mania\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (occasional elevated, expansive, or irritable mood or some restlessness)\",\r\n            \"Present, but mild (frequent periods of somewhat elevated, expansive, or irritable mood or restlessness)\",\r\n            \"Present and moderate (frequent periods of extensively elevated, expansive, or irritable mood or restlessness)\",\r\n            \"Present and severe (daily and extensively elevated, expansive, or irritable mood or restlessness)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Conduct Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the conduct problems that are present for this individual\",\r\n          options: [\r\n            \"None (No conduct problems)\",\r\n            \"Mild (Few if any conduct problems in excess of those required to make the diagnosis are present, and conduct problems cause relatively minor harm to others [e.g., lying, truancy, staying out after dark without permission, or other rule breaking])\",\r\n            \"Moderate (The number of conduct problems and the effect on others are intermediate between “mild” and “severe” [e.g., stealing without confronting a victim, vandalism])\",\r\n            \"Severe (Many conduct problems in excess of those required to make the diagnosis are present, or conduct problems cause considerable harm to others [e.g., forced sex, physical cruelty, use of a weapon, stealing while confronting a victim, breaking and entering])\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Nonsuicidal Self-Injury\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Nonsuicidal Self-injury problems that are present for this individual\",\r\n          options: [\r\n            \"None (No NSSI acts or NSSI acts on fewer than 3 days AND no urge to self- injure again.)\",\r\n            \"Subthreshold (NSSI acts on 2-4 days OR has self- injured in the past on 5 or more days and has reported urges to self-injure again.)\",\r\n            \"Mild (NSSI acts on 5–7 days using a single method and not requiring surgical treatment [other than cosmetic].)\",\r\n            \"Moderate (NSSI acts on 8–11 days using a single method and not requiring surgical treatment [other than cosmetic] OR NSSI acts on 5–7 days using more than one method.)\",\r\n            \"Severe (At least 1 NSSI act that required surgical treatment [other than cosmetic] OR NSSI acts on 12 or more days using a single method OR NSSI acts on 8 or more days using more than one method.)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"Oppositional Defiant Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Oppositional Defiant problems that are present for this individual\",\r\n          options: [\r\n            \"None (No oppositional defiant symptoms)\",\r\n            \"Mild (Symptoms are confined to only one setting [e.g., at home, at school, at work, with peers])\",\r\n            \"Moderate (Some symptoms are present in at least two settings)\",\r\n            \"Severe (Some symptoms are present in three or more settings)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Somatic Symptom Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Does the individual have or show disproportionate and persistent concerns about the medical seriousness of his/her symptoms?\",\r\n          options: [\r\n            \"Not at all\",\r\n            \"A little bit\",\r\n            \"Somewhat\",\r\n            \"Quite a bit\",\r\n            \"Very much\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"2. Does the individual have or show a high level of health-related anxiety?\",\r\n          options: [\r\n            \"Not at all\",\r\n            \"A little bit\",\r\n            \"Somewhat\",\r\n            \"Quite a bit\",\r\n            \"Very much\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"3. Does the individual spend excessive time and energy devoted to these symptoms or health concerns?\",\r\n          options: [\r\n            \"Not at all\",\r\n            \"A little bit\",\r\n            \"Somewhat\",\r\n            \"Quite a bit\",\r\n            \"Very much\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [formTitle, setFormTitle] = useState(\"\"); // State for form title\r\n\r\n  const itemsPerPage = 12; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    setFormTitle(data?.name); // Set form title based on selected data\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n\r\n            {/* <CRow className=\"mb-3\">\r\n                            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                                <Pagination\r\n                                    currentPage={currentPage}\r\n                                    onPageChange={onPageChange}\r\n                                    totalItems={rowData?.length}\r\n                                    itemsPerPage={itemsPerPage}\r\n                                />\r\n                            </CCol>\r\n                        </CRow> */}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Psychiatric;\r\n","import { CCol, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\n\r\nconst PsychiatricForm = ({ back, defaultValues, questions,formTitle }) => {\r\n    const [formData, setFormData] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(formData);\r\n        // Add your submit logic here\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <h3>{formTitle}</h3>\r\n                <hr />\r\n                {questions?.map((question, index) => (\r\n                    <CRow key={index} className=\"mb-3\">\r\n                        <CCol>\r\n                            <h5>{question?.label}</h5>\r\n                            {question?.options.map((option, cIndex) => (\r\n                                <CFormCheck\r\n                                    key={cIndex}\r\n                                    type=\"radio\"\r\n                                    name={`question${index + 1}`}\r\n                                    id={`question${index + 1}_choice${cIndex + 1}`}\r\n                                    value={option}\r\n                                    label={option}\r\n                                    onChange={handleChange}\r\n                                    checked={formData[`question${index + 1}`] === option}\r\n                                />\r\n                            ))}\r\n                        </CCol>\r\n                    </CRow>\r\n                ))}\r\n            </form>\r\n            <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PsychiatricForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst DiagnosisTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.condition}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.treatment}</CTableDataCell>\r\n              {/* <CTableDataCell>{dt?.remark}</CTableDataCell> */}\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\n\r\nconst DiagnosisForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const [disableText, setDisableText] = useState(false);\r\n  const gravidaoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n  const findgravidaIndex =\r\n    defaultValues?.condition &&\r\n    gravidaoptions?.indexOf(defaultValues?.condition);\r\n  const getSelectedGravida = (data) => {\r\n    console.log(data);\r\n    setDisableText(true);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.condition}\r\n              /> */}\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                  dateFormat={DATE_FORMAT}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.condition}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Description\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                // placeholder=\"Enter\"\r\n                disabled\r\n                defaultValue={defaultValues?.treatment}\r\n                value={\r\n                  disableText\r\n                    ? \"Type 2 diabetes mellitus without complications\"\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisForm;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DiagnosisTable from \"../../../../../Tables/DiagnosisTable\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DiagnosisForm from \"./DiagnosisForm\";\r\nimport DateSearch from \"../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Diagnosis = ({ onClose, from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"ICD CODE\" },\r\n    { id: 4, label: \"Description\" },\r\n    { id: 5, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024\",\r\n      condition: \"E11.8\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"07-06-2024\",\r\n      condition: \"E12.1\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"08-07-2024\",\r\n      condition: \"E12.0\",\r\n      treatment: \"Type 4 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-09-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from !== \"Consult\" && (\r\n        <CRow className=\"mb-0\">\r\n          <CCol md={4} className=\"mb-2\">\r\n            <div className=\"d-flex gap-2\">\r\n              <img\r\n                alt=\"BackBtn\"\r\n                src={Assets.BackBtn}\r\n                style={{ width: \"35px\" }}\r\n                onClick={onClose}\r\n                className=\"cursor\"\r\n              />\r\n              <span className=\"Obj-name d-flex align-items-center\">\r\n                Diagnosis (Including ICD)\r\n              </span>\r\n            </div>\r\n          </CCol>\r\n          <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n            <div className=\"d-flex mt-2\">\r\n              <Breadcrumb\r\n                paths={[\r\n                  { label: \"Home\", to: \"/patients\" },\r\n                  { label: \"Patient List\", to: \"/patients\" },\r\n                  { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                  {\r\n                    label: \"Diagnosis (Including ICD)\",\r\n                    to: \"/patients/history\",\r\n                  },\r\n                ]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <DiagnosisTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n                from={from}\r\n              />\r\n            </CRow>\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <DiagnosisForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Diagnosis;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ImmunizationForm = ({ back, defaultValues }) => {\r\n  console.log(\"first\", defaultValues);\r\n  const [date, setDate] = useState(null);\r\n  const [takendate, setTakenDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.dosage_date;\r\n    const defaultDateString1 = defaultValues?.taken_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.dosage_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n    const defaultDate1 = defaultValues?.taken_date\r\n      ? parseDateString(defaultDateString1)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setTakenDate(defaultDate1);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Vaccine *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.vaccine}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Period *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.period}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Status *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.status}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Dosage Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Taken Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={takendate}\r\n                onChange={(date) => setTakenDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImmunizationForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImmunizationTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.vaccine}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.period}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  {!dt.taken_date ? (\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.vaccined}\r\n                      className=\"cursor\"\r\n                      style={{ width: \"40px\" }}\r\n                      onClick={() => {\r\n                        if (from !== \"Consult\") {\r\n                          selectedData(dt, \"delete\");\r\n                        }\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      alt=\"delete\"\r\n                      style={{ width: \"40px\" }}\r\n                      src={Assets?.colorVaccined}\r\n                      className=\"cursor\"\r\n                      // onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.dosage_date}</CTableDataCell>\r\n              <CTableDataCell>{dt?.taken_date}</CTableDataCell>\r\n              {/* <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImmunizationTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport ImmunizationForm from \"./ImmunizationForm\";\r\nimport ImmunizationTable from \"../../../../../Tables/ImmunizationTable\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\n\r\nconst Immunization = ({ onClose, from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"VACCINE\" },\r\n    { id: 3, label: \"PERIOD\" },\r\n    { id: 4, label: \"STATUS\" },\r\n    { id: 5, label: \"DOSAGE DATE\" },\r\n    { id: 6, label: \"TAKEN DATE\" },\r\n    // { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 2,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 3,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"\",\r\n    },\r\n    {\r\n      id: 5,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 6,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 7,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 8,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 9,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"\",\r\n    },\r\n    {\r\n      id: 10,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [tkDate, setTkDate] = useState(new Date());\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n  const options = [\"Severity\", \"Option 2\", \"Option 3\"]; // Example options\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ImmunizationTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          <CRow className=\"mb-0\">\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Immunization Status\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Immunization Status\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                {/* <DateSelector /> */}\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  {/* <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div> */}\r\n                  <div>\r\n                    {/* onClick={() => addFormPage()} */}\r\n                    <PrimaryButton>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <ImmunizationTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ImmunizationForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure taken this Vaccine ?</h5>\r\n\r\n                    <div style={{ width: \"100%\" }} className=\"mb-3\">\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Taken Date *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            showIcon\r\n                            selected={tkDate}\r\n                            onChange={(date) => setTkDate(date)}\r\n                            maxDate={today}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Immunization;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./MedicalProfile.css\";\r\n\r\nconst MedicalTab = ({ tabs, getCurrentTab, defaultTab }) => {\r\n  const [currentTab, setCurrentTab] = useState(tabs[defaultTab]);\r\n\r\n  const switchTab = (data) => {\r\n    setCurrentTab(data);\r\n    getCurrentTab(data.id);\r\n  };\r\n  return (\r\n    <CCard className=\"medical-tabs\">\r\n      <CCardBody className=\"medical-tabs-container\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`medical-tab-items ${\r\n              data.id === currentTab?.id ? \"medical-tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <span\r\n              className={\r\n                data.id === currentTab?.id\r\n                  ? \"medical-tab-title-active\"\r\n                  : \"medical-tab-title\"\r\n              }\r\n            >\r\n              {data.title}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default MedicalTab;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BKetone = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{2})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{2})\\.(\\d{2}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Ketone(mmol/L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                 defaultValue={extractNum(defaultData?.blood_ketone)}\r\n               onInput={numWithDecimal}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BKetone;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\n\r\nconst BMI = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{2})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{2})\\.(\\d{2}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n  };\r\n  const [height, setHeight] = useState(defaultData?.[\"height_(cm)\"] || \"\");\r\n  const [weight, setWeight] = useState(defaultData?.[\"weight_(kg)\"] || \"\");\r\n  const [heightUnit, setHeightUnit] = useState(\r\n    defaultData?.height_unit || \"cm\"\r\n  );\r\n  const [weightUnit, setWeightUnit] = useState(\r\n    defaultData?.weight_unit || \"kg\"\r\n  );\r\n  const [bmi, setBmi] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!height || isNaN(height) || height <= 0) {\r\n      currentErrors.height = \"Height is required\";\r\n      isValid = false;\r\n    }\r\n    if (!weight || isNaN(weight) || weight <= 0) {\r\n      currentErrors.weight = \"Weight is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    // if (!heightUnit) {\r\n    //   currentErrors.heightUnit = \"Height Unit is required\";\r\n    //   isValid = false;\r\n    // }\r\n    // if (!weightUnit) {\r\n    //   currentErrors.weightUnit = \"Weight Unit is required\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  // Function to handle BMI calculation\r\n  const calculateBMI = () => {\r\n    if (height && weight) {\r\n      const heightInMeters = height / 100;\r\n      const calculatedBMI = weight / (heightInMeters * heightInMeters);\r\n      setBmi(calculatedBMI.toFixed(2));\r\n    } else {\r\n      setBmi(\"\"); // Handle invalid input\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          height_unit: heightUnit,\r\n          height: height,\r\n          bmi: bmi,\r\n          weight_unit: weightUnit,\r\n          weight: weight,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"bmi\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          height_unit: heightUnit,\r\n          height: height,\r\n          bmi: bmi,\r\n          weight_unit: weightUnit,\r\n          weight: weight,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"bmi\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateBMI();\r\n  }, [weight, height]);\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Height) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                value={heightUnit}\r\n                onChange={(e) => setHeightUnit(e.target.value)}\r\n              />\r\n              {errors.heightUnit && (\r\n                <div className=\"error-text\">{errors.heightUnit}</div>\r\n              )}\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Height (cm) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.height)}\r\n                maxLength={3}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n                value={height}\r\n                onChange={(e) =>\r\n                  setHeight(e.target.value.replace(/[^0-9]/g, \"\"))\r\n                }\r\n              />\r\n              {errors.height && (\r\n                <div className=\"error-text\">{errors.height}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Weight)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={\"kg\"}\r\n                value={weightUnit}\r\n                onChange={(e) => setWeightUnit(e.target.value)}\r\n              />\r\n              {errors.weightUnit && (\r\n                <div className=\"error-text\">{errors.weightUnit}</div>\r\n              )}\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Weight (Kg) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.weight)}\r\n                maxLength={3}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n                value={weight}\r\n                onChange={(e) => {\r\n                  setWeight(e.target.value.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.weight && (\r\n                <div className=\"error-text\">{errors.weight}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                BMI (Kgm2) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.bmi}\r\n                defaultValue={bmi}\r\n                onInput={numWithDecimal}\r\n                disabled\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\"></CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BMI;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\n\r\nconst BPForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [systolic, setSystolic] = useState(\r\n    (defaultData?.systolic || \"\").toString()\r\n  );\r\n  const [diastolic, setDiastolic] = useState(\r\n    (defaultData?.diastolic || \"\").toString()\r\n  );\r\n  const [pulse, setPulse] = useState(\r\n    (defaultData?.[\"pulse_(in_bpm)\"] || \"\").toString()\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const convertISOToTime = (isoString) => {\r\n    // Parse the ISO string into a Date object\r\n    const date = new Date(isoString);\r\n\r\n    // Ensure the Date object is valid\r\n    if (isNaN(date.getTime())) {\r\n      throw new Error(\"Invalid ISO string\");\r\n    }\r\n\r\n    // Extract hours and minutes\r\n    const hours = String(date.getUTCHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getUTCMinutes()).padStart(2, \"0\");\r\n\r\n    // Return the formatted time\r\n    return `${hours}:${minutes}`;\r\n  };\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n\r\n  console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     return new Date(year, month - 1, day, hours, minutes);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultData?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultData\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString1 = defaultData?.time;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate1 = defaultData ? defaultDateString1 : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setSelectedDate(defaultDate);\r\n  //   // setSelectedTime(defaultDate1);\r\n  // }, [defaultData]);\r\n\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!systolic?.trim()) {\r\n      newErrors.systolic = \"Systolic is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(systolic)) {\r\n      newErrors.systolic = \"Systolic must be a number.\";\r\n      isValid = false;\r\n    }\r\n    if (!diastolic?.trim()) {\r\n      newErrors.diastolic = \"Diastolic is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(diastolic)) {\r\n      newErrors.diastolic = \"Diastolic must be a number.\";\r\n      isValid = false;\r\n    }\r\n    if (!pulse?.trim()) {\r\n      newErrors.pulse = \"Pulse is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(pulse)) {\r\n      newErrors.pulse = \"Pulse must be a number.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          systolic: Number(systolic),\r\n          diastolic: Number(diastolic),\r\n          pulse: Number(pulse),\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"blood-pressure\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          systolic: Number(systolic),\r\n          diastolic: Number(diastolic),\r\n          pulse: Number(pulse),\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"blood-pressure\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Systolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"systolic\"\r\n                value={systolic}\r\n                onChange={(e) => setSystolic(e.target.value)}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n              />\r\n              {errors.systolic && (\r\n                <div className=\"error-text\">{errors.systolic}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Diastolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"diastolic\"\r\n                value={diastolic}\r\n                onChange={(e) => setDiastolic(e.target.value)}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n              />\r\n              {errors.diastolic && (\r\n                <div className=\"error-text\">{errors.diastolic}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse (in BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"pulse\"\r\n                value={pulse}\r\n                onChange={(e) => setPulse(e.target.value)}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n              />\r\n              {errors.pulse && <div className=\"error-text\">{errors.pulse}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BPForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { findItemIndex } from \"../../../../../../Utils/commonUtils\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\n\r\nconst BSugar = ({ addBack, defaultData, getTableDatas }) => {\r\n  console.log(\"first\", defaultData);\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [type, setType] = useState(defaultData?.type || \"\");\r\n  const [bloodSugar, setBloodSugar] = useState(defaultData?.blood_sugar || \"\");\r\n\r\n  const [errors, setErrors] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    type: \"\",\r\n    bloodSugar: \"\",\r\n  });\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n  console.log(\"time\", getCurrentTime());\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const options = [\"Fasting\", \"Random\", \"Post Prandial \"];\r\n\r\n  const getSelectedValue = (data) => {\r\n    setType(data);\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{4})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{4})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n  };\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!type) {\r\n      currentErrors.type = \"Type is required\";\r\n      isValid = false;\r\n    }\r\n    if (!bloodSugar) {\r\n      currentErrors.bloodSugar = \"Blood Sugar is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          type: type,\r\n          blood_sugar: bloodSugar,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"blood-sugar\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          type: type,\r\n          blood_sugar: bloodSugar,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"blood-sugar\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultData?.type\r\n                      ? options[findItemIndex(options, defaultData?.type)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.type && <div className=\"error-text\">{errors.type}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'mg/dL'}\r\n              />\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Sugar (mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.blood_sugar}\r\n                onInput={numWithDecimal}\r\n                value={bloodSugar}\r\n                onChange={(e) => setBloodSugar(e.target.value)}\r\n              />\r\n              {errors.bloodSugar && (\r\n                <div className=\"error-text\">{errors.bloodSugar}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BSugar;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BUricAcid = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  \r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{2})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{2})\\.(\\d{2}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Uric Acid(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                 defaultValue={extractNum(defaultData?.blood_uric_acid)}\r\n                onInput={numWithDecimal}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BUricAcid;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Creatinine = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{1})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{1})\\.(\\d{1}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Creatinine(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.creatinine)}\r\n                onInput={numWithDecimal}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Creatinine;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst GFR = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{3})\\.(\\d{2}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                GFR(mL/min/1.73m²) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                 defaultValue={extractNum(defaultData?.gfr)}\r\n                onInput={numWithDecimal}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GFR;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst HCT = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{3})\\.(\\d{1}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HCT(%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"hct_%\"])}\r\n               onInput={numWithDecimal}\r\n               \r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HCT;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport {\r\n  findItemIndex,\r\n  getFileTypeFromMime,\r\n  openFile,\r\n} from \"../../../../../../Utils/commonUtils\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\n\r\nconst HeartRate = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [type, setType] = useState(defaultData?.type || null);\r\n  const [interpretation, setInterpretation] = useState(\r\n    defaultData?.interpretation === \"-\"\r\n      ? \"\"\r\n      : defaultData?.interpretation || null\r\n  );\r\n  const [ecgFile, setEcgFile] = useState({\r\n    name: \"\",\r\n    link: \"\",\r\n    contentType: \"\",\r\n  });\r\n  const [hr, setHr] = useState(defaultData?.[\"hr_(bpm)\"] || null);\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const options = [\r\n    \"1 Lead ECG\",\r\n    \"3 Lead ECG\",\r\n    \"12 Lead ECG\",\r\n    \"Auscultation\",\r\n    \"Cardiac Function Test\",\r\n  ];\r\n\r\n  const getSelectedValue = (data) => {\r\n    setType(data);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files) {\r\n      handleUpload(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (file) => {\r\n    if (file) {\r\n      // const fileType = getFileTypeFromMime(file.type);\r\n      setEcgFile({ name: file.name, link: \"\", contentType: file.type });\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        // Convert file to base64 string\r\n        const base64 = reader.result.split(\",\")[1]; // Remove the data URL part\r\n        setEcgFile((prevState) => ({\r\n          ...prevState,\r\n          link: base64,\r\n        }));\r\n      };\r\n\r\n      // Read the file as a data URL\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const [errors, setErrors] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    type: \"\",\r\n    hr: \"\",\r\n  });\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!type) {\r\n      currentErrors.type = \"ECG Type is required\";\r\n      isValid = false;\r\n    }\r\n    if (!hr) {\r\n      currentErrors.hr = \"Heart Rate is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"Bpm\",\r\n          heart: Number(hr),\r\n          type: type,\r\n          interpretation: interpretation,\r\n          // result_file: ecgFile,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"heart-rate\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"Bpm\",\r\n          heart: Number(hr),\r\n          type: type,\r\n          interpretation: interpretation,\r\n          // result_file: ecgFile,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"heart-rate\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const openInNewTab = () => {\r\n    if (ecgFile.link && ecgFile.contentType) {\r\n      const dataUrl = `data:${ecgFile.contentType};base64,${ecgFile.link}`;\r\n      window.open(dataUrl, \"_blank\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultData?.type\r\n                      ? options[findItemIndex(options, defaultData?.type)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.type && <div className=\"error-text\">{errors.type}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HR (in bpm) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.hr}\r\n                value={hr}\r\n                onChange={(e) => {\r\n                  setHr(e.target.value.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n                maxLength={3}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n              />\r\n              {errors.hr && <div className=\"error-text\">{errors.hr}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG\r\n              </label>\r\n              <input id=\"file\" type=\"file\" onChange={handleFileChange} />\r\n              <label htmlFor=\"file\">Choose file</label>\r\n\r\n              <div class=\"d-flex flex-column gap-1 justify-content-center h-100\">\r\n                {ecgFile?.link !== \"\" ? (\r\n                  <span className=\"cursor\" onClick={() => openInNewTab()}>\r\n                    ECG.{getFileTypeFromMime(ecgFile?.contentType)}\r\n                  </span>\r\n                ) : (\r\n                  <span className=\"\">No File Chosen</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Interpretation\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.interpretation}\r\n                value={interpretation}\r\n                onChange={(e) => {\r\n                  setInterpretation(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeartRate;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Hemogloin = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{2})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{2})\\.(\\d{1}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Hemogloin(g/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hemoglobin)}\r\n               onInput={numWithDecimal}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hemogloin;\r\n","import { CCol, CContainer, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\n\r\nconst LFTForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  console.log(\"first\", defaultData);\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [fvcL, setFvcL] = useState(defaultData?.[\"fvc_(l)\"] || \"\");\r\n  const [fvcPercent, setFvcPercent] = useState(defaultData?.fvcPercent || \"\");\r\n  const [fev1L, setFev1L] = useState(defaultData?.[\"fev1_(l)\"] || \"\");\r\n  const [fev1Percent, setFev1Percent] = useState(\r\n    defaultData?.fev1Percent || \"\"\r\n  );\r\n  const [pefL, setPefL] = useState(defaultData?.[\"pef_(l/s)\"] || \"\");\r\n  const [pefPercent, setPefPercent] = useState(defaultData?.pefPercent || \"\");\r\n  const [fev1FvcPercent, setFev1FvcPercent] = useState(\r\n    defaultData?.[\"fev1/fvc_(%)\"] || \"\"\r\n  );\r\n  const [fef25L, setFef25L] = useState(defaultData?.fef25 || \"\");\r\n  const [fef25Percent, setFef25Percent] = useState(\r\n    defaultData?.fef25Percent || \"\"\r\n  );\r\n  const [fef50L, setFef50L] = useState(defaultData?.fef50 || \"\");\r\n  const [fef50Percent, setFef50Percent] = useState(\r\n    defaultData?.fef50Percent || \"\"\r\n  );\r\n  const [fef75L, setFef75L] = useState(defaultData?.fef75 || \"\");\r\n  const [fef75Percent, setFef75Percent] = useState(\r\n    defaultData?.fef75Percent || \"\"\r\n  );\r\n  const [fef2575L, setFef2575L] = useState(defaultData?.fef2575 || \"\");\r\n  const [fef2575Percent, setFef2575Percent] = useState(\r\n    defaultData?.fef2575Percent || \"\"\r\n  );\r\n  const [notes, setNotes] = useState(defaultData?.notes || \"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{2})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{2})\\.(\\d{2}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n  };\r\n\r\n  const convertNum = (e) => {\r\n    e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n  };\r\n  // Validate inputs\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    let isValid = true;\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    // if (!notes) {\r\n    //   newErrors.notes = \"Notes is required\";\r\n    //   isValid = false;\r\n    // }\r\n    // Check required numerical fields\r\n    const fields = [\r\n      {\r\n        name: \"fvcL\",\r\n        value: fvcL,\r\n        maxLength: 5,\r\n        required: true,\r\n        label: \"FVC (L)\",\r\n      },\r\n      {\r\n        name: \"fvcPercent\",\r\n        value: fvcPercent,\r\n        maxLength: 2,\r\n        required: true,\r\n        label: \"FVC (%)\",\r\n      },\r\n      {\r\n        name: \"fev1L\",\r\n        value: fev1L,\r\n        maxLength: 5,\r\n        required: true,\r\n        label: \"FEV1 (L)\",\r\n      },\r\n      {\r\n        name: \"fev1Percent\",\r\n        value: fev1Percent,\r\n        maxLength: 2,\r\n        required: true,\r\n        label: \"FEV1 (%)\",\r\n      },\r\n      // {\r\n      //   name: \"pefL\",\r\n      //   value: pefL,\r\n      //   maxLength: 5,\r\n      //   required: true,\r\n      //   label: \"PEF (L/s)\",\r\n      // },\r\n      // {\r\n      //   name: \"pefPercent\",\r\n      //   value: pefPercent,\r\n      //   maxLength: 2,\r\n      //   required: true,\r\n      //   label: \"PEF (%)\",\r\n      // },\r\n      {\r\n        name: \"fev1FvcPercent\",\r\n        value: fev1FvcPercent,\r\n        maxLength: 2,\r\n        required: true,\r\n        label: \"FEV1/FVC (%)\",\r\n      },\r\n    ];\r\n\r\n    fields?.forEach((field) => {\r\n      if (field?.required && !field?.value) {\r\n        newErrors[field?.name] = `${field?.label} is required`;\r\n        isValid = false;\r\n      } else if (field?.maxLength && field?.value?.length > field?.maxLength) {\r\n        newErrors[\r\n          field.name\r\n        ] = `Maximum length is ${field.maxLength} characters`;\r\n        isValid = false;\r\n      } else if (isNaN(field.value)) {\r\n        newErrors[field.name] = \"Must be a number\";\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateForm()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          fvc: Number(fvcL),\r\n          fvcPercent: Number(fvcPercent),\r\n          fev1: Number(fev1L),\r\n          fev1Percent: Number(fev1Percent),\r\n          fev1_fvc: Number(fev1FvcPercent),\r\n          pef: Number(pefL),\r\n          pefPercent: Number(pefPercent),\r\n          fef25: Number(fef25L),\r\n          fef25Percent: Number(fef25Percent),\r\n          fef50: Number(fef50L),\r\n          fef50Percent: Number(fef50Percent),\r\n          fef75: Number(fef75L),\r\n          fef75Percent: Number(fef75Percent),\r\n          fef2575: Number(fef2575L),\r\n          fef2575Percent: Number(fef2575Percent),\r\n          notes: notes,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"spirometer\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          fvc: Number(fvcL),\r\n          fvcPercent: Number(fvcPercent),\r\n          fev1: Number(fev1L),\r\n          fev1Percent: Number(fev1Percent),\r\n          fev1_fvc: Number(fev1FvcPercent),\r\n          pef: Number(pefL),\r\n          pefPercent: Number(pefPercent),\r\n          fef25: Number(fef25L),\r\n          fef25Percent: Number(fef25Percent),\r\n          fef50: Number(fef50L),\r\n          fef50Percent: Number(fef50Percent),\r\n          fef75: Number(fef75L),\r\n          fef75Percent: Number(fef75Percent),\r\n          fef2575: Number(fef2575L),\r\n          fef2575Percent: Number(fef2575Percent),\r\n          notes: notes,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"spirometer\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FVC (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fvc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fvcL}\r\n                onChange={(e) => setFvcL(e.target.value)}\r\n              />\r\n              {errors.fvcL && <div className=\"error-text\">{errors.fvcL}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FVC (%)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fvc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fvcPercent}\r\n                onChange={(e) => setFvcPercent(e.target.value)}\r\n              />\r\n              {errors.fvcPercent && (\r\n                <div className=\"error-text\">{errors.fvcPercent}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1 (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fev1_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fev1L}\r\n                onChange={(e) => setFev1L(e.target.value)}\r\n              />\r\n              {errors.fev1L && <div className=\"error-text\">{errors.fev1L}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1 (%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fev1_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fev1Percent}\r\n                onChange={(e) => setFev1Percent(e.target.value)}\r\n              />\r\n              {errors.fev1Percent && (\r\n                <div className=\"error-text\">{errors.fev1Percent}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                PEF (L/s) \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"pef_(l/min)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={pefL}\r\n                onChange={(e) => setPefL(e.target.value)}\r\n              />\r\n              {errors.pefL && <div className=\"error-text\">{errors.pefL}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                PEF (%) \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"pef_(l/min)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={pefPercent}\r\n                onChange={(e) => setPefPercent(e.target.value)}\r\n              />\r\n              {errors.pefPercent && (\r\n                <div className=\"error-text\">{errors.pefPercent}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1/FVC (%)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fev1/fvc\"]}\r\n                maxLength={2}\r\n                onInput={numWithDecimal}\r\n                value={fev1FvcPercent}\r\n                onChange={(e) => setFev1FvcPercent(e.target.value)}\r\n              />\r\n              {errors.fev1FvcPercent && (\r\n                <div className=\"error-text\">{errors.fev1FvcPercent}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF25 (L/s)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fef25L}\r\n                onChange={(e) => setFef25L(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF25 (%)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fef25Percent}\r\n                onChange={(e) => setFef25Percent(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF50 (L/s)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fef50L}\r\n                onChange={(e) => setFef50L(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF50 (%)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fef50Percent}\r\n                onChange={(e) => setFef50Percent(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF75 (L/s)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fef75L}\r\n                onChange={(e) => setFef75L(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF75 (%)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fef75Percent}\r\n                onChange={(e) => setFef75Percent(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF2575 (L/s)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fef2575L}\r\n                onChange={(e) => setFef2575L(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF2575 (%)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fef2575Percent}\r\n                onChange={(e) => setFef2575Percent(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={8}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes \r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                rows={3}\r\n                value={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n              />\r\n              {errors.notes && <div className=\"error-text\">{errors.notes}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LFTForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst LipidProfileForm = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const convertNum = (e) => {\r\n    e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              LDL(mg/dL) * \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.totalOnly}\r\n                maxLength={3}\r\n                onInput={convertNum}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n         \r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              HDL(mg/dL) * \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.totalOnly}\r\n                maxLength={3}\r\n                onInput={convertNum}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              VLDL(mg/dL) * \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.totalOnly}\r\n                maxLength={3}\r\n                onInput={convertNum}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              LDL/HDL(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.totalOnly}\r\n                maxLength={3}\r\n                onInput={convertNum}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        \r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Triglycerides(mg/dL) * \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                 defaultValue={extractNum(defaultData?.triglycerides)}\r\n                maxLength={3}\r\n                onInput={convertNum}\r\n              />\r\n            </div>\r\n          </CCol>\r\n         \r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Total Cholesterol(mg/dL) * \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                 defaultValue={extractNum(defaultData?.hdl)}\r\n                maxLength={3}\r\n                onInput={convertNum}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        {/* <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (LDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.ldl)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL/HDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"ldl/hdl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (VLDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                VLDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"vldl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow> */}\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LipidProfileForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\n\r\nconst RespirationRateForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [respiration, setRespiration] = useState(\r\n    defaultData?.[\"respiration_rate_(bpm)\"] || \"\"\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!respiration) {\r\n      currentErrors.respiration = \"Respiration rate is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          respiration: respiration,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"respiration\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          respiration: respiration,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"respiration\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Respiration Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"respiration_rate_(bpm)\"]}\r\n                value={respiration}\r\n                onChange={(e) =>\r\n                  setRespiration(e.target.value.replace(/[^0-9]/g, \"\"))\r\n                }\r\n                maxLength={2}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n              />\r\n              {errors.respiration && (\r\n                <div className=\"error-text\">{errors.respiration}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RespirationRateForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\n\r\nconst Spo2 = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [spO2, setSpO2] = useState(defaultData?.spo2 || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!spO2) {\r\n      currentErrors.spO2 = \"SpO2 is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          spo2: Number(spO2),\r\n          unit: \"%\",\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"spO2\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          spo2: Number(spO2),\r\n          unit: \"%\",\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"spO2\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"pulse_rate_(bpm)\"]}\r\n              />\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                SpO2 (%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.spo2)}\r\n                maxLength={3}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n                value={spO2}\r\n                onChange={(e) => setSpO2(e.target.value.replace(/[^0-9]/g, \"\"))}\r\n              />\r\n              {errors.spO2 && <div className=\"error-text\">{errors.spO2}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spo2;\r\n","import { CCol, CContainer, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { toast } from \"react-toastify\";\r\nimport { extractNum, findItemIndex } from \"../../../../../../Utils/commonUtils\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\n\r\nconst Temperature = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [selectedMethod, setSelectedMethod] = useState(\r\n    defaultData?.method || null\r\n  );\r\n  const [selectedUnit, setSelectedUnit] = useState(defaultData?.unit || null);\r\n  const [temperature, setTemperature] = useState(\r\n    extractNum(defaultData?.temperature) || \"\"\r\n  );\r\n\r\n  const [errors, setErrors] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    method: \"\",\r\n    unit: \"\",\r\n    temperature: \"\",\r\n  });\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedMethod) {\r\n      currentErrors.method = \"Method is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedUnit) {\r\n      currentErrors.unit = \"Unit is required\";\r\n      isValid = false;\r\n    }\r\n    if (!temperature || isNaN(temperature)) {\r\n      currentErrors.temperature =\r\n        \"Temperature is required and must be a number\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n  const options = [\r\n    \"Oral\",\r\n    \"Rectal\",\r\n    \"Axillary\",\r\n    \"Tympanic\",\r\n    \"Temporal\",\r\n    \"Skin\",\r\n  ];\r\n\r\n  const getSelectedValue = (data) => {\r\n    setSelectedMethod(data);\r\n  };\r\n  const handleUnitChange = (e) => {\r\n    setSelectedUnit(e.target.value);\r\n  };\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          type: selectedMethod,\r\n          unit: selectedUnit,\r\n          temperature: Number(temperature),\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"temperature\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          type: selectedMethod,\r\n          unit: selectedUnit,\r\n          temperature: Number(extractNum(temperature)),\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"temperature\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const nums = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{3})\\.(\\d{3}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setTemperature(nums);\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Method *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultData?.method\r\n                      ? options[findItemIndex(options, defaultData?.method)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n            {errors.method && <div className=\"error-text\">{errors.method}</div>}\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            {/* <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'F'}\r\n              />\r\n            </div> */}\r\n\r\n            <p className=\"radio-label\">Unit *</p>\r\n            <div className=\"d-flex align-items-end w-100\">\r\n              <div\r\n                style={{\r\n                  boxSizing: \"border-box\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"1px solid #17171D33\",\r\n                  padding: \"10px\",\r\n                }}\r\n              >\r\n                <CFormCheck\r\n                  className=\"mb-0\"\r\n                  inline\r\n                  type=\"radio\"\r\n                  id=\"activityYes\"\r\n                  value=\"Celsius\"\r\n                  label={<label className=\"form-label mb-0\">Celsius</label>}\r\n                  name=\"unit\"\r\n                  checked={selectedUnit === \"Celsius\"} // Set the checked attribute\r\n                  onChange={handleUnitChange} // Handle the change event\r\n                />\r\n                <CFormCheck\r\n                  className=\"mb-0\"\r\n                  inline\r\n                  type=\"radio\"\r\n                  id=\"activityNo\"\r\n                  value=\"Fahrenheit\"\r\n                  label={<label className=\"form-label mb-0\">Fahrenheit</label>}\r\n                  name=\"unit\"\r\n                  checked={selectedUnit === \"Fahrenheit\"} // Set the checked attribute\r\n                  onChange={handleUnitChange} // Handle the change event\r\n                />\r\n              </div>\r\n            </div>\r\n            {errors.unit && <div className=\"error-text\">{errors.unit}</div>}\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Temperature *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                value={temperature}\r\n                onChange={numWithDecimal}\r\n              />\r\n              {errors.temperature && (\r\n                <div className=\"error-text\">{errors.temperature}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Urea = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{3})\\.(\\d{2}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urea(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                 defaultValue={extractNum(defaultData?.urea)}\r\n                onInput={numWithDecimal}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urea;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Urinalysis = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [cell, setCell] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     return new Date(year, month - 1, day, hours, minutes);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultData?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultData\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setSelectedDate(defaultDate);\r\n  //   setSelectedTime(defaultDate);\r\n  // }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n\r\n  const oneNumWithOneDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{1})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{1})\\.(\\d{1}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n  \r\n  const oneNumWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{1})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{1})\\.(\\d{3}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n  const twoNumWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{2})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{2})\\.(\\d{2}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n  const threeNumWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{3})\\.(\\d{2}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n  \r\n  const wholeNumber = (e) => {\r\n    e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        {/* <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (μmol/kg/d)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.urine)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (pH)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Sugar (mg/dL)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.sugar}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.protein}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocytes*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.leukocytes}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                RBC*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.rbc}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow> */}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Color *\r\n              </label>\r\n              <select class=\"form-select\" aria-label=\"Disabled select example\">\r\n                <option>Select</option>\r\n                <option value=\"straw\">Straw</option>\r\n                <option value=\"yellow\">Yellow</option>\r\n                <option value=\"amber\">Amber</option>\r\n                <option value=\"red\">Red</option>\r\n                <option value=\"brown\">Brown</option>\r\n                <option value=\"green\">Green</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Clarity *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"clear\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"clear\">Clear</option>\r\n                <option value=\"slightly cloudy\">Slightly Cloudy</option>\r\n                <option value=\"cloudy\">Cloudy</option>\r\n                <option value=\"turbid\">Turbid</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Specific Gravity \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.specific_gravity}\r\n                placeholder=\"Enter\"\r\n                onInput={oneNumWithDecimal}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            {/* <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                pH *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Normal\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Normal (6-7)\">Normal (6-7)</option>\r\n                <option value=\"Acidic(<6)\">Acidic ({\"<\"}6)</option>\r\n                <option value=\"Alkaline(>7)\">Alkaline ({\">\"}7)</option>\r\n              </select>\r\n            </div> */}\r\n             <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              pH *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n                onInput={twoNumWithDecimal}\r\n              />\r\n            </div>\r\n\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Trace\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"1+ (30 mg/dL)\">1+ (30 mg/dL)</option>\r\n                <option value=\"2+ (100 mg/dL)\">2+ (100 mg/dL)</option>\r\n                <option value=\"3+ (300 mg/dL)\">3+ (300 mg/dL)</option>\r\n                <option value=\"4+ (>2000 mg/dL)\">4+ ({\">\"}2000 mg/dL)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Glucose *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"1+ (100 mg/dL)\">1+ (100 mg/dL)</option>\r\n                <option value=\"2+ (250 mg/dL)\">2+ (250 mg/dL)</option>\r\n                <option value=\"3+ (500 mg/dL)\">3+ (500 mg/dL)</option>\r\n                <option value=\"4+ (1000 mg/dL)\">4+ (1000 mg/dL)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Ketones *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+) mg/dL\">Small (1+) mg/dL</option>\r\n                <option value=\"Moderate (2+) mg/dL\">Moderate (2+) mg/dL</option>\r\n                <option value=\"Large (3+) mg/dL\">Large (3+) mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood in Urine *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+) mg/dL\">Small (1+) mg/dL</option>\r\n                <option value=\"Moderate (2+) mg/dL\">Moderate (2+) mg/dL</option>\r\n                <option value=\"Large (3+) mg/dL\">Large (3+) mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocyte Esterase *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+) mg/dL\">Small (1+) mg/dL</option>\r\n                <option value=\"Moderate (2+) mg/dL\">Moderate (2+) mg/dL</option>\r\n                <option value=\"Large (3+) mg/dL\">Large (3+) mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Nitrites *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Positive\">Positive</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urobilinogen *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n                onInput={oneNumWithOneDecimal}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Bilirubin *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Positive\">Positive</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"vertical-line mb-3\"></div>\r\n        <CRow>\r\n        <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Red Blood Cells\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n                maxLength={2}\r\n                onInput={wholeNumber}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              White Blood Cells\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n                maxLength={2}\r\n                onInput={wholeNumber}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Epithelial Cells \r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Red Blood Cell\"}\r\n                // onChange={(e) => setCell(e.target.value)}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Red Blood Cell\">Squamous Epithelial Cells</option>\r\n                <option value=\"White Blood Cell\">Transitional Epithelial Cells</option>\r\n                <option value=\"Epithelial Cell\">Renal Tubular Epithelial Cells</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n         \r\n          {/* {cell === \"Epithelial Cell\" && (\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Epithelial Cells *\r\n                </label>\r\n                <select\r\n                  class=\"form-select\"\r\n                  aria-label=\"Disabled select example\"\r\n                  // defaultValue={\"Squamous Epithelial Cells\"}\r\n                >\r\n                  <option>Select</option>\r\n\r\n                  <option value=\"Squamous Epithelial Cells\">\r\n                    Squamous Epithelial Cells\r\n                  </option>\r\n                  <option value=\"Transitional Epithelial Cells\">\r\n                    Transitional Epithelial Cells\r\n                  </option>\r\n                  <option value=\"Renal Tubular Epithelial Cells\">\r\n                    Renal Tubular Epithelial Cells\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </CCol>\r\n          )} */}\r\n        </CRow>\r\n        <CRow className=\"mb-3\"> \r\n        <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Crystals \r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Uric Acid Crystals\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Uric Acid Crystals\">Uric Acid Crystals</option>\r\n                <option value=\"Calcium Oxalate Crystals\">\r\n                  Calcium Oxalate Crystals\r\n                </option>\r\n                <option value=\"Struvite Crystals\">Struvite Crystals</option>\r\n                <option value=\"Cystine Crystals \">Cystine Crystals </option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Microorganisms \r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Bacteria\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Bacteria\">Bacteria</option>\r\n                <option value=\"Yeast\">Yeast</option>\r\n                <option value=\"Parasites\">Parasites</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urinalysis;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst LabForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lab Test Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Upload Results / Image (pdf, jpg, jpeg, png)\r\n              </label>\r\n              <div class=\"input-file-container\">\r\n                <input class=\"input-file\" id=\"my-file\" type=\"file\" />\r\n                <label\r\n                  tabindex=\"0\"\r\n                  for=\"my-file\"\r\n                  className=\"input-file-trigger\"\r\n                >\r\n                  <img alt=\"upload\" src={Assets.Export} />\r\n                  <span>Choose File</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol className=\"d-flex align-items-center\">\r\n          <span className=\"fs-18 fw-400\">No Files Chosen</span>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DateCards from \"../../../../../DateCards/DateCards\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst PhysicalExam = ({ onClose, from }) => {\r\n  const dateCards = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    { id: 9, date: \"06-07-2024\" },\r\n    { id: 10, date: \"06-07-2024\" },\r\n    { id: 11, date: \"06-07-2024\" },\r\n    { id: 12, date: \"06-07-2024\" },\r\n    { id: 13, date: \"06-07-2024\" },\r\n    { id: 14, date: \"06-07-2024\" },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(true);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [skinselectedOptions, setSkinSelectedOptions] = useState([]);\r\n\r\n  const [labelName1, setLabelname1] = useState(\"\");\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState(\r\n    from === \"Consult\" ? dateCards[1] : {}\r\n  );\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const [labelName, setLabelname] = useState(selectedData?.ga?.status || \"\");\r\n  const [editView, setEditView] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setEditView(true);\r\n  }, [from]);\r\n\r\n  const options = [\r\n    \"Appearance (well, ill, distressed, etc.)\",\r\n    \"Level of Consciousness (alert, drowsy, unresponsive, etc.)\",\r\n    \"Posture and Gait\",\r\n  ];\r\n\r\n  const skinoptions = [\r\n    \"Appearance (well, ill, distressed, etc.)\",\r\n    \"Level of Consciousness (alert, drowsy, unresponsive, etc.)\",\r\n    \"Posture and Gait\",\r\n  ];\r\n\r\n  const itemsPerPage = 9; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return dateCards?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const handleSelect = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    } else {\r\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const handleSelectSkin = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSkinSelectedOptions([...skinselectedOptions, option]);\r\n    } else {\r\n      setSkinSelectedOptions(\r\n        skinselectedOptions.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const [nutritionOpen, setNutritionOpen] = useState(false);\r\n  const [constiOpen, setConstiOpen] = useState(false);\r\n  const [generalOpen, setGeneralOpen] = useState(false);\r\n  const [heentOpen, setHeentOpen] = useState(false);\r\n\r\n  const nutritionTabOpen = () => {\r\n    setNutritionOpen(true);\r\n  };\r\n\r\n  const nutritionTabClose = () => {\r\n    setNutritionOpen(false);\r\n  };\r\n\r\n  const constiTabOpen = () => {\r\n    setConstiOpen(true);\r\n  };\r\n\r\n  const constiTabClose = () => {\r\n    setConstiOpen(false);\r\n  };\r\n\r\n  const generalTabOpen = () => {\r\n    setGeneralOpen(true);\r\n  };\r\n\r\n  const generalTabClose = () => {\r\n    setGeneralOpen(false);\r\n  };\r\n\r\n  const heentTabOpen = () => {\r\n    setHeentOpen(true);\r\n  };\r\n\r\n  const heentTabClose = () => {\r\n    setHeentOpen(false);\r\n  };\r\n\r\n  const toggleSelected = (label) => {\r\n    setIsSelected(!isSelected);\r\n    setLabelname(label);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editView) {\r\n      setLabelname(selectedData?.ga?.status);\r\n      setLabelname1(selectedData?.skin?.status);\r\n      setSelectedOptions(selectedData?.ga?.select);\r\n      setSkinSelectedOptions(selectedData?.skin?.select);\r\n      if (selectedData?.ga?.status === \"Abnormal\") {\r\n        setGeneralOpen(true);\r\n      }\r\n      if (selectedData?.skin?.status === \"Abnormal\") {\r\n        setHeentOpen(true);\r\n      }\r\n    } else {\r\n      setLabelname(\"\");\r\n      setLabelname1(\"\");\r\n      setGeneralOpen(false);\r\n      setHeentOpen(false);\r\n      setSelectedOptions([]);\r\n    }\r\n  }, [editView]);\r\n\r\n  const getselected = (data, method) => {\r\n    setSelectedData(data);\r\n    if (method === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (method === \"edit\") {\r\n      addFormPage();\r\n      setEditView(true);\r\n    }\r\n  };\r\n\r\n  const toggleSelected1 = (label) => {\r\n    setLabelname1(label);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <CRow className=\"mb-2\">\r\n              <CCol className=\"d-flex align-items-center gap-2\">\r\n                <span>Date</span>\r\n                <SingleDatePicker defaultDate={selectedData?.date} />\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">General Appearance</span>\r\n              </CCol>\r\n              <CRow>\r\n                <CCol>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <label class=\"form-label\">Status:</label>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected(\"Normal\");\r\n                        setGeneralOpen(false);\r\n                      }}\r\n                    >\r\n                      {\"Normal\"}\r\n                    </div>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName === \"Abnormal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected(\"Abnormal\");\r\n                        setGeneralOpen(true);\r\n                      }}\r\n                    >\r\n                      {\"Abnormal\"}\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              {generalOpen && (\r\n                <>\r\n                  {labelName === \"Abnormal\" && (\r\n                    <CRow>\r\n                      {options?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelect}\r\n                            selected={selectedOptions.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={heentTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={heentTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Skin</span>\r\n              </CCol>\r\n              <CRow>\r\n                <CCol>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <label class=\"form-label\">Status:</label>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected1(\"Normal\");\r\n                        setHeentOpen(false);\r\n                      }}\r\n                    >\r\n                      {\"Normal\"}\r\n                    </div>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName1 === \"Abnormal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected1(\"Abnormal\");\r\n                        setHeentOpen(true);\r\n                      }}\r\n                    >\r\n                      {\"Abnormal\"}\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              {heentOpen && (\r\n                <>\r\n                  {/* <CRow>\r\n            <CCol>\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <label class=\"form-label\">Status:</label>\r\n                <div\r\n                  className={`option-item ${\r\n                    labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                  }`}\r\n                  onClick={() => toggleSelected1(\"Normal\")}\r\n                >\r\n                  {\"Normal\"}\r\n                </div>\r\n                <div\r\n                  className={`option-item ${\r\n                    labelName1 === \"Abnormal\"\r\n                      ? \"selected primary-bg\"\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => toggleSelected1(\"Abnormal\")}\r\n                >\r\n                  {\"Abnormal\"}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow> */}\r\n                  {labelName1 === \"Abnormal\" && (\r\n                    <>\r\n                      <CRow>\r\n                        {skinoptions?.map((option, index) => (\r\n                          <CCol lg={\"auto\"}>\r\n                            <OptionItem\r\n                              key={index}\r\n                              label={option}\r\n                              onSelect={handleSelectSkin}\r\n                              selected={skinselectedOptions?.includes(option)}\r\n                              disabled={editView}\r\n                            />\r\n                          </CCol>\r\n                        ))}\r\n                      </CRow>\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            disabled={editView}\r\n                            defaultValue={selectedData?.skin?.notes}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          <CRow className=\"mb-0\">\r\n            <CCol md={6} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Physical Exam\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Physical Exam\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton\r\n                      onClick={() => {\r\n                        addFormPage();\r\n                        setSelectedData({});\r\n                      }}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  {getCurrentPageItems()?.map((item, i) => (\r\n                    <CCol lg={4} className=\"mb-3\" key={i}>\r\n                      <DateCards data={item} onClick={getselected} />\r\n                    </CCol>\r\n                  ))}\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={dateCards?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <CRow className=\"mb-2\">\r\n                  <CCol className=\"d-flex align-items-center gap-2\">\r\n                    <span>Date</span>\r\n                    <SingleDatePicker defaultDate={selectedData?.date} />\r\n                  </CCol>\r\n                  <CCol className=\"d-flex justify-content-end\">\r\n                    <div style={{ width: \"120px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => {\r\n                          setAddFormView(false);\r\n                          setEditView(false);\r\n                          setSelectedData({});\r\n                        }}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets?.listview} alt=\"close\" />\r\n                          <span>List View</span>\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <div className=\"vertical-line mb-3\"></div>\r\n                {/* <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!nutritionOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={nutritionTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {nutritionOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={nutritionTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Nutritional</span>\r\n              </CCol>\r\n              {nutritionOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!constiOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={constiTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {constiOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={constiTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Constitutional</span>\r\n              </CCol>\r\n              {constiOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div> */}\r\n                <CRow className=\"mb-2\">\r\n                  <CCol\r\n                    lg={12}\r\n                    className=\"d-flex align-items-center gap-2 mb-1\"\r\n                  >\r\n                    {!generalOpen && (\r\n                      <img\r\n                        alt=\"plus\"\r\n                        src={Assets?.PlusIcon}\r\n                        // onClick={generalTabOpen}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                    {generalOpen && (\r\n                      <img\r\n                        alt=\"plus\"\r\n                        src={Assets?.MinusIcon}\r\n                        // onClick={generalTabClose}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                    <span className=\"fs-16 fw-600\">General Appearance</span>\r\n                  </CCol>\r\n                  <CRow>\r\n                    <CCol>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <label class=\"form-label\">Status:</label>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                          } ${editView ? \"disabled\" : \"\"}`}\r\n                          onClick={() => {\r\n                            toggleSelected(\"Normal\");\r\n                            setGeneralOpen(false);\r\n                          }}\r\n                        >\r\n                          {\"Normal\"}\r\n                        </div>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName === \"Abnormal\"\r\n                              ? \"selected primary-bg\"\r\n                              : \"\"\r\n                          } ${editView ? \"disabled\" : \"\"}`}\r\n                          onClick={() => {\r\n                            toggleSelected(\"Abnormal\");\r\n                            setGeneralOpen(true);\r\n                          }}\r\n                        >\r\n                          {\"Abnormal\"}\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  {generalOpen && (\r\n                    <>\r\n                      {labelName === \"Abnormal\" && (\r\n                        <CRow>\r\n                          {options?.map((option, index) => (\r\n                            <CCol lg={\"auto\"}>\r\n                              <OptionItem\r\n                                key={index}\r\n                                label={option}\r\n                                onSelect={handleSelect}\r\n                                selected={selectedOptions.includes(option)}\r\n                                disabled={editView}\r\n                              />\r\n                            </CCol>\r\n                          ))}\r\n                          <CCol lg={12} className=\"mb-2\">\r\n                            <div class=\"position-relative\">\r\n                              <label\r\n                                for=\"validationTooltip01\"\r\n                                class=\"form-label\"\r\n                              >\r\n                                Notes\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                defaultValue={selectedData?.ga?.notes}\r\n                                disabled={editView}\r\n                              />\r\n                            </div>\r\n                          </CCol>\r\n                        </CRow>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </CRow>\r\n                <div className=\"vertical-line mt-2 mb-3\"></div>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol\r\n                    lg={12}\r\n                    className=\"d-flex align-items-center gap-2 mb-1\"\r\n                  >\r\n                    {!heentOpen && (\r\n                      <img\r\n                        alt=\"plus\"\r\n                        src={Assets?.PlusIcon}\r\n                        // onClick={heentTabOpen}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                    {heentOpen && (\r\n                      <img\r\n                        alt=\"plus\"\r\n                        src={Assets?.MinusIcon}\r\n                        // onClick={heentTabClose}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                    <span className=\"fs-16 fw-600\">Skin</span>\r\n                  </CCol>\r\n                  <CRow>\r\n                    <CCol>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <label class=\"form-label\">Status:</label>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                          } ${editView ? \"disabled\" : \"\"}`}\r\n                          onClick={() => {\r\n                            toggleSelected1(\"Normal\");\r\n                            setHeentOpen(false);\r\n                          }}\r\n                        >\r\n                          {\"Normal\"}\r\n                        </div>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Abnormal\"\r\n                              ? \"selected primary-bg\"\r\n                              : \"\"\r\n                          } ${editView ? \"disabled\" : \"\"}`}\r\n                          onClick={() => {\r\n                            toggleSelected1(\"Abnormal\");\r\n                            setHeentOpen(true);\r\n                          }}\r\n                        >\r\n                          {\"Abnormal\"}\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  {heentOpen && (\r\n                    <>\r\n                      {/* <CRow>\r\n                    <CCol>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <label class=\"form-label\">Status:</label>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                          }`}\r\n                          onClick={() => toggleSelected1(\"Normal\")}\r\n                        >\r\n                          {\"Normal\"}\r\n                        </div>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Abnormal\"\r\n                              ? \"selected primary-bg\"\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => toggleSelected1(\"Abnormal\")}\r\n                        >\r\n                          {\"Abnormal\"}\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow> */}\r\n                      {labelName1 === \"Abnormal\" && (\r\n                        <>\r\n                          <CRow>\r\n                            {skinoptions?.map((option, index) => (\r\n                              <CCol lg={\"auto\"}>\r\n                                <OptionItem\r\n                                  key={index}\r\n                                  label={option}\r\n                                  onSelect={handleSelectSkin}\r\n                                  selected={skinselectedOptions?.includes(\r\n                                    option\r\n                                  )}\r\n                                  disabled={editView}\r\n                                />\r\n                              </CCol>\r\n                            ))}\r\n                          </CRow>\r\n                          <CCol lg={12} className=\"mb-2\">\r\n                            <div class=\"position-relative\">\r\n                              <label\r\n                                for=\"validationTooltip01\"\r\n                                class=\"form-label\"\r\n                              >\r\n                                Notes\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                disabled={editView}\r\n                                defaultValue={selectedData?.skin?.notes}\r\n                              />\r\n                            </div>\r\n                          </CCol>\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </CRow>\r\n                {!editView && (\r\n                  <>\r\n                    <div className=\"vertical-line mt-2 mb-3\"></div>\r\n                    <CRow className=\"mb-1\">\r\n                      <div style={{ width: \"128px\" }}>\r\n                        <PrimaryButton>SAVE</PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"128px\" }}>\r\n                        <SecondaryButton\r\n                          onClick={() => {\r\n                            setAddFormView(false);\r\n                            setEditView(false);\r\n                          }}\r\n                        >\r\n                          CANCEL\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </CRow>\r\n                  </>\r\n                )}\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhysicalExam;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst NextAppointmentTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.provider_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.reason}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextAppointmentTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst NextAppointmentForm = ({ back, defaultValues }) => {\r\n\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  \r\n    const options = [\"one\", \"Two\",\"Three\"];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Provider Name *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Reason *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"Enter\"\r\n              defaultValue={defaultValues?.reason}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NextAppointmentForm","import React, { useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PatientEducationForm from \"../../PatientEducation/PatientEducationTab/PatientEducationForm\";\r\nimport NextAppointmentTable from \"../../../../../../Tables/NextAppointmentTable\";\r\nimport NextAppointmentForm from \"./NextAppointmentForm\";\r\n\r\nconst NextAppointmentTab = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No\" },\r\n    { id: 2, label: \"Date & Time\" },\r\n    { id: 3, label: \"Provider Name\" },\r\n    { id: 3, label: \"Reason\" },\r\n    { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <NextAppointmentTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <NextAppointmentTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <NextAppointmentForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextAppointmentTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PatientEducationTab from \"./NextAppointmentTab/NextAppointmentTab\";\r\n\r\nconst NextAppointment = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Next Appointment\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Next Appointment\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <PatientEducationTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextAppointment;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst ImagingOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Raj Scan 1\", \"Raj Scan 2\", \"Raj Scan 3\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getbtnNames = () => {\r\n    console.log(\"getbtnNames\");\r\n  };\r\n  const eoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd_code}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={eoptions}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Imaging Order Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Scan Center *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"250px\" }}>\r\n          {/* <PrimaryButton>SEND TO LAB</PrimaryButton> */}\r\n          <DropdownButton\r\n            buttonName2={\"SEND TO SCAN CENTER\"}\r\n            getbtnNames={getbtnNames}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ImagingOrderForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\n\r\nconst ImagingOrder = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"NAME\" },\r\n    { id: 4, label: \"FILES\" },\r\n    // { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"SCAN CENTER & STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"01-01-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Accepted\",\r\n      scan_name: \"Raj Scan 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Prescribed\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ImagingOrderTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <ImagingOrderTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ImagingOrderForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"lg\"\r\n              >\r\n                <CModalBody className=\"p-5\">\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12}>\r\n                      <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.date}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Scan Name\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          ICD Code\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Scan Center\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.scan_name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                        <div\r\n                          className=\"w-100\"\r\n                          // style={{\r\n                          //   border: \"1px solid #17171D33\",\r\n                          //   borderRadius: \"5px\",\r\n                          // }}\r\n                        >\r\n                          {/* <Dropdown\r\n                        options={options}\r\n                        getSelectedValue={getSelectedValue}\r\n                      /> */}\r\n                          <CFormSelect\r\n                            aria-label=\"Default select example\"\r\n                            disabled={\r\n                              selectedData.scan_status === \"Uploaded\" ||\r\n                              (selectedData.scan_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          >\r\n                            <option>Select</option>\r\n                            <option value=\"Morning\">Morning</option>\r\n                            <option value=\"Afternoon\">Afternoon</option>\r\n                            <option value=\"Evening\">Evening</option>\r\n                            <option value=\"Night\">Night</option>\r\n                          </CFormSelect>\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <PrimaryButton>SAVE</PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <SecondaryButton onClick={() => setDetailView(false)}>\r\n                        CANCEL\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </CRow>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrder;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst LabOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Raj Scan 1\", \"Raj Scan 2\", \"Raj Scan 3\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getbtnNames = () => {\r\n    console.log(\"getbtnNames\");\r\n  };\r\n  const eoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd_code}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={eoptions}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lab Test Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Lab *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"250px\" }}>\r\n          {/* <PrimaryButton>SEND TO LAB</PrimaryButton> */}\r\n          <DropdownButton\r\n            buttonName2={\"SEND TO LAB\"}\r\n            getbtnNames={getbtnNames}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrderForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport LabOrderForm from \"./LabOrderForm\";\r\n\r\nconst LabOrder = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"NAME\" },\r\n    { id: 4, label: \"FILE\" },\r\n    // { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"LAB & STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Accepted\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <LabOrderTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <LabOrderTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <LabOrderForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"lg\"\r\n              >\r\n                <CModalBody className=\"p-5\">\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12}>\r\n                      <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.date}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Test Name\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          ICD Code\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Lab/Scan Center\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.lab_name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                        <div\r\n                          className=\"w-100\"\r\n                          // style={{\r\n                          //   border: \"1px solid #17171D33\",\r\n                          //   borderRadius: \"5px\",\r\n                          // }}\r\n                        >\r\n                          {/* <Dropdown\r\n                        options={options}\r\n                        getSelectedValue={getSelectedValue}\r\n                      /> */}\r\n                          <CFormSelect\r\n                            aria-label=\"Default select example\"\r\n                            disabled={\r\n                              selectedData.lab_status === \"Uploaded\" ||\r\n                              (selectedData.lab_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          >\r\n                            <option>Select</option>\r\n                            <option value=\"Morning\">Morning</option>\r\n                            <option value=\"Afternoon\">Afternoon</option>\r\n                            <option value=\"Evening\">Evening</option>\r\n                            <option value=\"Night\">Night</option>\r\n                          </CFormSelect>\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Test Type\r\n                        </span>\r\n                        <div>\r\n                          <CFormCheck\r\n                            inline\r\n                            type=\"radio\"\r\n                            name=\"inlineRadioOptions\"\r\n                            id=\"inlineCheckbox1\"\r\n                            value=\"Lab Test\"\r\n                            label=\"Lab Test\"\r\n                            defaultChecked\r\n                            disabled={\r\n                              selectedData.lab_status === \"Uploaded\" ||\r\n                              (selectedData.lab_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          />\r\n                          <CFormCheck\r\n                            inline\r\n                            type=\"radio\"\r\n                            name=\"inlineRadioOptions\"\r\n                            id=\"inlineCheckbox2\"\r\n                            value=\"Home Test\"\r\n                            label=\"Home Test\"\r\n                            disabled={\r\n                              selectedData.lab_status === \"Uploaded\" ||\r\n                              (selectedData.lab_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <PrimaryButton>SAVE</PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <SecondaryButton onClick={() => setDetailView(false)}>\r\n                        CANCEL\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </CRow>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrder;\r\n","import {\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst MedicationOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState(\r\n    defaultValues.medicines\r\n      ? defaultValues.medicines\r\n      : [\r\n          {\r\n            id: 1,\r\n            type: \"\",\r\n            name: \"\",\r\n            strength: \"\",\r\n            strengthMeasurement: \"\",\r\n            days: \"\",\r\n            totalQty: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            instruction: \"\",\r\n            reason: \"\",\r\n            status: \"\",\r\n            m: 0,\r\n            a: 0,\r\n            e: 0,\r\n            n: 0,\r\n            food: \"bf\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, value, fieldName) => {\r\n    console.log(fieldName, value);\r\n    const newValue = value?.replace(/[^0-9]/g, \"\");\r\n    const processedValue =\r\n      fieldName === \"startDate\" || fieldName === \"endDate\"\r\n        ? value\r\n          ? value.toISOString()\r\n          : \"\" // Convert date to ISO string\r\n        : fieldName === \"strength\"\r\n        ? newValue\r\n        : fieldName === \"totalQty\"\r\n        ? newValue\r\n        : fieldName === \"days\"\r\n        ? newValue\r\n        : value;\r\n\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [fieldName]: processedValue };\r\n      }\r\n      return medicine;\r\n    });\r\n\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  console.log(\"first\", medicines);\r\n  const [btnValue, setBtnValue] = useState();\r\n  const [btnView, setBtnView] = useState(false);\r\n\r\n  const getbtnNames = (data) => {\r\n    setBtnValue(data);\r\n    if (data === \"SEND TO PHARMACY\") {\r\n      setBtnView(true);\r\n    }\r\n  };\r\n  console.log(btnValue, \"SEND TO PHARMACY\");\r\n\r\n  const [strength, setStrength] = useState(defaultValues?.strength || \"\");\r\n  const [qty, setQty] = useState(defaultValues?.strength || \"\");\r\n  const [timeTaken, setTimeTaken] = useState(defaultValues?.strength || \"\");\r\n\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newValue = input.replace(/[^0-9]/g, \"\");\r\n    if (name === \"strength\") {\r\n      setStrength(newValue);\r\n    }\r\n    if (name === \"totalQty\") {\r\n      setQty(newValue);\r\n    }\r\n    if (name === \"days\") {\r\n      setTimeTaken(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">\r\n              {defaultValues?.medicines?.length >= 1 ? \"Edit \" : \"Add \"} New\r\n              Medicine\r\n            </span>\r\n          </CCol>\r\n\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3 h-100 d-flex align-items-center justify-content-between\">\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              <CCol\r\n                lg={8}\r\n                className=\"mt-4 d-flex justify-content-between\"\r\n                style={{ width: \"42%\" }}\r\n              >\r\n                <CRow className=\"mb-3\">\r\n                  <div style={{ width: \"250px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                    {/* <DropdownButton /> */}\r\n                  </div>\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                  </div>\r\n                </CRow>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ) : null}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine, index) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\" key={index}>\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"type\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"Brand\">Brand</option>\r\n                          <option value=\"Generic\">Generic</option>\r\n                        </CFormSelect>\r\n                        {/* <input\r\n                          name=\"type\"\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"name\"\r\n                          defaultValue={medicine?.name}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"strength\"\r\n                          value={medicine?.strength}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Route of administration\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strengthMeasurement\"\r\n                          defaultValue={medicine?.strengthMeasurement}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"days\"\r\n                          value={medicine?.days}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"totalQty\"\r\n                          value={medicine?.totalQty}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"startDate\"\r\n                          defaultValue={medicine?.startDate}\r\n                          onChange={(e) => handleMedicineInputChange(medicine?.id, e.target.value, e.target.name)}\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : defaultValues?.medicines?.length >= 1\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            name=\"startDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.startDate\r\n                                ? new Date(medicine?.startDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"startDate\"\r\n                              )\r\n                            }\r\n                            dateFormat={DATE_FORMAT}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"endDate\"\r\n                          defaultValue={medicine?.endDate}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : defaultValues?.medicines?.length >= 1\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            name=\"endDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.endDate\r\n                                ? new Date(medicine?.endDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"endDate\"\r\n                              )\r\n                            }\r\n                            dateFormat={DATE_FORMAT}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"m\"\r\n                          defaultValue={medicine?.m}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"a\"\r\n                          defaultValue={medicine?.a}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"e\"\r\n                          defaultValue={medicine?.e}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"n\"\r\n                          defaultValue={medicine?.n}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          key={index}\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"bf\"\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"bf\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"af\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"af\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"instruction\"\r\n                          defaultValue={medicine?.instruction}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"reason\"\r\n                          defaultValue={medicine?.reason}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              {defaultValues?.medicines?.length >= 1 ? (\r\n                defaultValues?.lab_status === \"Prescribed\" &&\r\n                (medicine?.id === 1 ? null : (\r\n                  <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => handleRemoveMedicine(medicine.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                ))\r\n              ) : medicine.id === 1 ? null : (\r\n                <CCol lg={1}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton\r\n                      onClick={() => handleRemoveMedicine(medicine.id)}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteDel} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              )}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          defaultValues?.lab_status === \"Prescribed\" && (\r\n            <>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton onClick={handleAddMedicine}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteAdd} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div className=\"vertical-line\"></div>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddMedicine}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? null : (\r\n          <>\r\n            <CRow>\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"250px\" }}>\r\n                {/* <PrimaryButton>SEND TO PHARMACY</PrimaryButton> */}\r\n                <DropdownButton\r\n                  buttonName2={\"SEND TO PHARMACY\"}\r\n                  getbtnNames={getbtnNames}\r\n                />\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {btnView && (\r\n          <BlurBackground>\r\n            <CModal\r\n              alignment=\"center\"\r\n              visible={btnView}\r\n              onClose={() => setBtnView(false)}\r\n              aria-labelledby=\"VerticallyCenteredExample\"\r\n              size=\"md\"\r\n            >\r\n              <CModalBody className=\"p-3\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Select a Pharmacy\r\n                </label>\r\n                <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                  <CFormSelect\r\n                    size=\"lg\"\r\n                    className=\"mb-3\"\r\n                    aria-label=\"Large select example\"\r\n                    name=\"strength\"\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"1\">One</option>\r\n                    <option value=\"2\">Two</option>\r\n                    <option value=\"3\">Three</option>\r\n                  </CFormSelect>\r\n                  <div className=\"d-flex gap-2 mt-2\">\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <PrimaryButton onClick={() => setBtnView(false)}>\r\n                        Save\r\n                      </PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <SecondaryButton onClick={() => setBtnView(false)}>\r\n                        Cancel\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CModalBody>\r\n            </CModal>\r\n          </BlurBackground>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrderForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport Badge from \"../../../../../../Badge/Badge\";\r\n\r\nconst DetailsTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"detailsTable\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.rx}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.frequency[0]}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.qty}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {i === 0 && (\r\n                <CTableDataCell\r\n                  style={{ height: \"10px\" }}\r\n                  rowSpan={rowData.length}\r\n                >\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.TickCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.PlusCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                        style={{transform:'rotate(45deg)'}}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsTable;\r\n","import { CCol, CFormCheck, CFormSelect, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\n\r\nconst MedicationCompleted = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState(\r\n    defaultValues.medicines\r\n      ? defaultValues.medicines\r\n      : [\r\n          {\r\n            id: 1,\r\n            type: \"\",\r\n            name: \"\",\r\n            strength: \"\",\r\n            strengthMeasurement: \"\",\r\n            days: \"\",\r\n            totalQty: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            instruction: \"\",\r\n            reason: \"\",\r\n            status: \"\",\r\n            m: 0,\r\n            a: 0,\r\n            e: 0,\r\n            n: 0,\r\n            food: \"bf\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, value, fieldName) => {\r\n    // Handle date values differently\r\n    const processedValue =\r\n      fieldName === \"startDate\" || fieldName === \"endDate\"\r\n        ? value\r\n          ? value.toISOString()\r\n          : \"\" // Convert date to ISO string\r\n        : value; // For non-date fields, just use the value directly\r\n\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [fieldName]: processedValue };\r\n      }\r\n      return medicine;\r\n    });\r\n\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  console.log(\"first\", medicines);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">View Medicine</span>\r\n          </CCol>\r\n\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine, index) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\" key={index}>\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <input\r\n                          name=\"type\"\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"name\"\r\n                          defaultValue={medicine?.name}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Route of administration\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strengthMeasurement\"\r\n                          defaultValue={medicine?.strengthMeasurement}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"days\"\r\n                          defaultValue={medicine?.days}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"totalQty\"\r\n                          defaultValue={medicine?.totalQty}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"startDate\"\r\n                          defaultValue={medicine?.startDate}\r\n                          onChange={(e) => handleMedicineInputChange(medicine?.id, e.target.value, e.target.name)}\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                            name=\"startDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.startDate\r\n                                ? new Date(medicine?.startDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"startDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"endDate\"\r\n                          defaultValue={medicine?.endDate}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                            name=\"endDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.endDate\r\n                                ? new Date(medicine?.endDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"endDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"m\"\r\n                          defaultValue={medicine?.m}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"a\"\r\n                          defaultValue={medicine?.a}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"e\"\r\n                          defaultValue={medicine?.e}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"n\"\r\n                          defaultValue={medicine?.n}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          key={index}\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"bf\"\r\n                          disabled={true}\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"bf\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"af\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                          disabled={true}\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"af\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"instruction\"\r\n                          defaultValue={medicine?.instruction}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"reason\"\r\n                          defaultValue={medicine?.reason}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              {defaultValues?.medicines?.length >= 1 ? (\r\n                defaultValues?.lab_status === \"Prescribed\" && (\r\n                  <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => handleRemoveMedicine(medicine.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                )\r\n              ) : (\r\n                <CCol lg={1}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton\r\n                      onClick={() => handleRemoveMedicine(medicine.id)}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteDel} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              )}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          defaultValues?.lab_status === \"Prescribed\" && (\r\n            <>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton onClick={handleAddMedicine}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteAdd} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div className=\"vertical-line\"></div>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddMedicine}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? null : (\r\n          <>\r\n            <CRow>\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"250px\" }}>\r\n                {/* <PrimaryButton>SEND TO PHARMACY</PrimaryButton> */}\r\n                <DropdownButton />\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationCompleted;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicationOrderForm from \"./MedicationOrderForm\";\r\nimport MedicationOrderTable from \"../../../../../../Tables/MedicationOrderTable\";\r\nimport DetailsTable from \"./DetailsTable\";\r\nimport MedicationCompleted from \"./MedicationCompleted\";\r\n\r\nconst MedicationOrder = ({ from }) => {\r\n  const detailsData = [\r\n    { id: 1, label: \"\" },\r\n    { id: 2, label: \"RX\" },\r\n    { id: 3, label: \"FREQUENCY\" },\r\n    { id: 4, label: \"DURATION\" },\r\n    { id: 5, label: \"QTY/TAKEN\" },\r\n    { id: 6, label: \"ACTIONS​\" },\r\n  ];\r\n\r\n  const detailsValue = [\r\n    {\r\n      id: 1,\r\n      name: \"Prescribed\",\r\n      rx: \"Medicine 1\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Alternative\",\r\n      rx: \"Medicine 2\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n  ];\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"MEDICATION DATE\" },\r\n    { id: 3, label: \"MEDICATION NAME\" },\r\n    { id: 4, label: \"Strength & Dosage\" },\r\n    { id: 5, label: \"M | A | E | N\" },\r\n    { id: 6, label: \"BF/AF\" },\r\n    { id: 7, label: \"Pharmacy & STATUS\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Received\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine A\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine C\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Waiting For Approval\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine D\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine A\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine AB\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine J\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1,\r\n          n: 1,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [completedView, setCompletedView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (type === \"completed\") {\r\n      setCompletedView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <MedicationOrderTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          <>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSelector />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"mb-2\">\r\n              <CRow>\r\n                <MedicationOrderTable\r\n                  rowData={getCurrentPageItems()}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            </div>\r\n          </>\r\n          {addFormView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={addFormView}\r\n                onClose={() => setAddFormView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"xl\"\r\n              >\r\n                <CModalBody className=\"p-0\">\r\n                  <div\r\n                    className=\"close-modal\"\r\n                    onClick={() => {\r\n                      setAddFormView(false);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={Assets.CloseBtn}\r\n                      alt=\"close-btn\"\r\n                      style={{ width: \"100%\" }}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <MedicationOrderForm\r\n                    back={() => {\r\n                      setAddFormView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                    defaultValues={selectedData}\r\n                  />\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n\r\n          {completedView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={completedView}\r\n                onClose={() => setCompletedView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"xl\"\r\n              >\r\n                <CModalBody className=\"p-0\">\r\n                  <div\r\n                    className=\"close-modal\"\r\n                    onClick={() => {\r\n                      setCompletedView(false);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={Assets.CloseBtn}\r\n                      alt=\"close-btn\"\r\n                      style={{ width: \"100%\" }}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <MedicationCompleted\r\n                    back={() => {\r\n                      setCompletedView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                    defaultValues={selectedData}\r\n                  />\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"lg\"\r\n              >\r\n                <CModalBody className=\"p-0\">\r\n                  <div\r\n                    className=\"close-modal\"\r\n                    onClick={() => setDetailView(false)}\r\n                  >\r\n                    <img\r\n                      src={Assets.CloseBtn}\r\n                      alt=\"close-btn\"\r\n                      style={{ width: \"100%\" }}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <DetailsTable\r\n                    rowData={detailsValue}\r\n                    columns={detailsData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrder;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { format, parse } from \"date-fns\";\r\n\r\nconst PatientEducationTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  const formattedDate = (dateStr) => {\r\n    const parsedDate = parse(dateStr, \"yyyy-MM-dd\", new Date());\r\n    return format(parsedDate, \"dd-MM-yyyy\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{formattedDate(dt?.date)}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.time}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.title}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.notes}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducationTable;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PatientEducationTable from \"../../../../../../Tables/PatientEducationTable\";\r\nimport PatientEducationForm from \"./PatientEducationForm\";\r\n\r\nconst PatientEducationTab = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Time\" },\r\n    { id: 4, label: \"Title\" },\r\n    { id: 5, label: \"Notes\" },\r\n    { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"2024-08-16\",\r\n      time: \"12:30\",\r\n      title: \"Lorem ipsum\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"2024-08-16\",\r\n      time: \"12:20\",\r\n      title: \"Lorem ipsum\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"2024-08-16\",\r\n      time: \"15:30\",\r\n      title: \"Lorem ipsum\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"2024-08-16\",\r\n      time: \"12:30\",\r\n      title: \"Lorem ipsum\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"2024-08-16\",\r\n      time: \"12:30\",\r\n      title: \"Lorem ipsum\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <PatientEducationTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <PatientEducationTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <PatientEducationForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducationTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PatientEducationTab from \"./PatientEducationTab/PatientEducationTab\";\r\n\r\nconst PatientEducation = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Patient Education\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Patient Education\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <PatientEducationTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducation;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { isValid, parse } from \"date-fns\";\r\n\r\nconst PatientEducationForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [time, setTime] = useState(null);\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultValues?.time || \"00:00\";\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setDate(date);\r\n    setTime(date);\r\n  }, [defaultDate, defaultTime]);\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(date || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setDate(updatedDateTime); // Optionally update date as well\r\n      setTime(time);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={time}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Title *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.title}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n                rows={3}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducationForm;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { isValid, parse } from \"date-fns\";\r\n\r\nconst ProcedureForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [time, setTime] = useState(null);\r\n\r\n  const [disableText, setDisableText] = useState(false);\r\n  const gravidaoptions = [\"93000\", \"93009\", \"93001\", \"93002\", \"93003\"];\r\n  const findgravidaIndex =\r\n    defaultValues?.id &&\r\n    gravidaoptions?.indexOf(defaultValues?.id);\r\n  const getSelectedGravida = (data) => {\r\n    console.log(data);\r\n    setDisableText(true);\r\n  };\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultValues?.time || \"00:00\";\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setDate(date);\r\n    setTime(date);\r\n  }, [defaultDate, defaultTime]);\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(date || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setDate(updatedDateTime); // Optionally update date as well\r\n      setTime(time);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                  dateFormat={DATE_FORMAT}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={time}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                CPT Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.treatment}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Description *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                // defaultValue={defaultValues?.remark}\r\n                disabled\r\n                defaultValue={defaultValues?.description}\r\n                value={\r\n                  disableText\r\n                    ? \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\"\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ProcedurerTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.no}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.time}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.description}</CTableDataCell>\r\n              {/* <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.visibleEye}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"details\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell> */}\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedurerTable;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport ProcedureForm from \"./ProcedureForm\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ProcedurerTable from \"../../../../../../Tables/ProcedurerTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst ProcedureTab = ({ onClose, from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"TIME\" },\r\n    { id: 4, label: \"CPT Code\" },\r\n    { id: 5, label: \"DESCRIPTION\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      no: 1,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      time: \"12:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 2,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 3,\r\n      date: \"06-07-2024\",\r\n      id: \"93008\",\r\n      time: \"19:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 4,\r\n      date: \"06-07-2024\",\r\n      id: \"93006\",\r\n      time: \"18:43\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 5,\r\n      date: \"06-07-2024\",\r\n      id: \"93005\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 6,\r\n      date: \"06-07-2024\",\r\n      id: \"93002\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 7,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 8,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 9,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 10,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    // {\r\n    //   no: 11,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12321\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n    // {\r\n    //   no: 12,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12322\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n    // {\r\n    //   no: 13,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12323\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ProcedurerTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <ProcedurerTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ProcedureForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport ProcedureTab from \"./ProcedureTab/ProcedureTab\";\r\n\r\nconst Cpt = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Procedure (CPT Code)\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Procedure (CPT Code)\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <ProcedureTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cpt;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst TherapiesTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date_time}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.therapy_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.therapist_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.duration}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TherapiesTable;\r\n","import { CCol, CFormCheck, CFormSelect, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst TherapiesForm = ({ back, defaultValues }) => {\r\n\r\n\r\n    const [date, setDate] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n        const parseDateString = (dateString) => {\r\n            const parts = dateString?.split(\" \");\r\n            const datePart = parts[0];\r\n            const timePart = parts[1];\r\n            const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n            const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n            const date = new Date(year, month - 1, day, hours, minutes);\r\n            return date;\r\n        };\r\n\r\n        // Example default date string\r\n        const defaultDateString = defaultValues?.date;\r\n\r\n        // Parse default date string to Date object\r\n        const defaultDate = defaultValues?.date\r\n            ? parseDateString(defaultDateString)\r\n            : new Date();\r\n\r\n        // Set default date in state\r\n        setDate(defaultDate);\r\n    }, [defaultValues]);\r\n\r\n    const options = [\"Physical\", \"Occupational\", \"Speech\", \"Psychotherapy\", \"Others\"];\r\n\r\n    const getSelectedValue = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={4}>\r\n                    <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Date *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={date}\r\n                                onChange={(date) => setDate(date)}\r\n                                dateFormat={DATE_FORMAT}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                    <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Time *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={date}\r\n                                onChange={(date) => setDate(date)}\r\n                                showTimeSelect\r\n                                showTimeSelectOnly\r\n                                timeIntervals={15}\r\n                                timeCaption=\"Time\"\r\n                                dateFormat=\"h:mm aa\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div class=\"position-relative\">\r\n                            <label for=\"validationTooltip01\" class=\"form-label\">\r\n                                Type *\r\n                            </label>\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{\r\n                                    border: \"1px solid #17171D33\",\r\n                                    borderRadius: \"5px\",\r\n                                }}\r\n                            >\r\n                                <Dropdown\r\n                                    options={options}\r\n                                    getSelectedValue={getSelectedValue}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n            <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                            Therapy Name *\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                defaultValue={defaultValues?.therapy_name}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                            Therapist Name \r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                defaultValue={defaultValues?.therapist_name}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                                Duration (in days)\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"00\"\r\n                                defaultValue={defaultValues?.duration}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                                Notes\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                defaultValue={defaultValues?.notes}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n\r\n\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TherapiesForm","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport TherapiesTable from \"../../../../../../Tables/TherapiesTable\";\r\nimport TherapiesForm from \"./TherapiesForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst TherapiesTab = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date & Time\" },\r\n    { id: 3, label: \"Type\" },\r\n    { id: 4, label: \"Therapy Name\" },\r\n    { id: 5, label: \"Therapist Name\" },\r\n    { id: 6, label: \"Duration (in days)\" },\r\n    { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date_time: \"06-07-2024 12:15\",\r\n      type: \"Physical\",\r\n      therapy_name: \"Lorem ipsum\",\r\n      therapist_name: \"Lorem ipsum\",\r\n      duration: \"5\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date_time: \"06-07-2024 12:15\",\r\n      type: \"Occupational\",\r\n      therapy_name: \"Lorem ipsum\",\r\n      therapist_name: \"Lorem ipsum\",\r\n      duration: \"5\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <TherapiesTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <TherapiesTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <TherapiesForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TherapiesTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport TherapiesTab from \"./TherapiesTab/TherapiesTab\";\r\n\r\nconst Therapies = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            {\" \"}\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Therapies\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Therapies\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <TherapiesTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Therapies;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport { tableDateTime } from \"../../../Utils/dateUtils\";\r\n\r\nconst ChiefComplaintTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data,id, type) => {\r\n\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {dt?.addition_info?.date ? dt?.addition_info?.date : \"-\"}\r\n                  {\" \"}\r\n                </span>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {dt?.addition_info?.time ? dt?.addition_info?.time : \"-\"}\r\n                </span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.addition_info?.title ? dt?.addition_info?.title :'-'}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.addition_info?.notes ? dt?.addition_info?.notes : '-'}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaintTable;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState,useCallback } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format } from \"date-fns\";\r\nimport moment  from \"moment\";\r\n\r\nconst parseDate = (dateString) => {\r\n  if (!dateString) return null;\r\n  const [day, month, year] = dateString.split('-').map(Number);\r\n  return new Date(year, month - 1, day);\r\n};\r\n\r\nconst parseTime = (timeString) => {\r\n  if (!timeString) return null;\r\n  const [hours, minutes] = timeString.split(':').map(Number);\r\n  const now = new Date();\r\n  now.setHours(hours, minutes, 0, 0);\r\n  return now;\r\n};\r\n\r\nconst ChiefComplaintsForm = ({ back,setAddFormView,getChiefComplaints, defaultValues }) => {\r\n\r\n  const { loading, error, post,clearCache } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(\r\n  );\r\n  const [selectedDate, setSelectedDate] = useState(\r\n  );\r\n  const [complaints, setComplaints] = useState(\r\n  );\r\n  const [notes, setNotes] = useState(defaultValues?.addition_info?.notes || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  useEffect(() => {\r\n    // Initialize the state with default values if available\r\n    if (defaultValues?.addition_info) {\r\n      setSelectedDate(parseDate(defaultValues.addition_info.date));\r\n      setSelectedTime(parseTime(defaultValues.addition_info.time));\r\n      setComplaints(defaultValues.addition_info.title || \"\");\r\n      setNotes(defaultValues.addition_info.notes || \"\");\r\n    }\r\n  }, [defaultValues]);\r\n\r\n  // const handleDateChange = (date) => {\r\n  //   setSelectedDate(date);\r\n  //   if (date && selectedTime) {\r\n  //     const updatedDateTime = new Date(date);\r\n  //     updatedDateTime.setHours(selectedTime.getHours(), selectedTime.getMinutes(), 0, 0);\r\n  //     setSelectedTime(updatedDateTime);\r\n  //   }\r\n  // };\r\n\r\n  // const handleTimeChange = (time) => {\r\n  //   if (time) {\r\n  //     const updatedDateTime = new Date(selectedDate || time);\r\n  //     updatedDateTime.setHours(time.getHours(), time.getMinutes(), 0, 0);\r\n  //     setSelectedDate(updatedDateTime);\r\n  //     setSelectedTime(updatedDateTime);\r\n  //   }\r\n  // };\r\n\r\n  const handleDateChange = (date) => {\r\n    if (date) {\r\n      // const formattedDate = format(date, \"dd-MM-yyyy\");\r\n      setSelectedDate(date);\r\n    } else {\r\n      setSelectedDate(null);\r\n    }\r\n  };\r\n  \r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      // console.log(\"Time-----\",moment(time).format(\"hh:mm \"))\r\n      // const formattedTime = moment(time).format(\"hh:mm\");\r\n      setSelectedTime(time);\r\n    } else {\r\n      setSelectedTime(null);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  // Validate the form\r\n  const validate = () => {\r\n    let valid = true;\r\n    let newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      console.log(\"Validate\");\r\n      newErrors.date = \"Date is required\";\r\n      valid = false;\r\n    }\r\n\r\n    if (!selectedTime) {\r\n      console.log(\"Validate\");\r\n      newErrors.time = \"Time is required\";\r\n      valid = false;\r\n    }\r\n\r\n    if (!complaints?.trim()) {\r\n      console.log(\"Validate\");\r\n      newErrors.complaints = \"Chief Complaints is required\";\r\n      valid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return valid;\r\n  };\r\n\r\n\r\n  const addChiefComplaints = async () => {\r\n    const formattedDate = format(selectedDate, \"dd-MM-yyyy\");\r\n    const formattedTime = moment(selectedTime).format(\"hh:mm\");\r\n    try {\r\n      const body = {\r\n        addition_info: {\r\n          date:formattedDate,\r\n          time:formattedTime,\r\n          title:complaints,\r\n          notes:notes,\r\n        },\r\n        user_id: \"10\",\r\n        document_source: \"chief-complaints\",\r\n      };\r\n  \r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/docs`, body);\r\n  \r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await getChiefComplaints();\r\n        setAddFormView(false);\r\n         \r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n \r\n\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultValues.id !== undefined) {\r\n        console.log(\"Edit clicked\");\r\n      \r\n      }\r\n      if (defaultValues.id === undefined) {\r\n        console.log(\"Add clicked\");\r\n        addChiefComplaints();\r\n        \r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative d-flex flex-column gap-1\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <DatePicker\r\n              showIcon\r\n              selected={selectedDate}\r\n              onChange={handleDateChange}\r\n              isClearable\r\n              closeOnScroll={true}\r\n              wrapperClassName=\"date-picker-wrapper\"\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n            {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative d-flex flex-column gap-1\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <DatePicker\r\n              showIcon\r\n              selected={selectedTime}\r\n              onChange={handleTimeChange}\r\n              showTimeSelect\r\n              showTimeSelectOnly\r\n              isClearable\r\n              closeOnScroll={true}\r\n              timeIntervals={5}\r\n              dateFormat=\"h:mm aa\"\r\n            />\r\n            {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Chief Complaints *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                // defaultValue={defaultValues?.complaints}\r\n                value={complaints}\r\n                onChange={(e) => setComplaints(e.target.value)}\r\n              />\r\n              {errors.complaints && (\r\n                <div className=\"error-text\">{errors.complaints}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                // defaultValue={defaultValues?.notes}\r\n                value={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n                rows={3}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaintsForm;\r\n","// import React from \"react\";\r\n// import Table from \"../../../../../Tables/Table\";\r\n// import { Assets } from \"../../../../../../assets/Assets\";\r\n// import { CCol, CRow } from \"@coreui/react\";\r\n// import Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\n// import ChiefComplaintTable from \"../../../../../Tables/Subjective/ChiefComplaintTable\";\r\n\r\n// const ChiefComplaints = ({ OnClose }) => {\r\n//   const columns = [\r\n//     { label: \"No.\" },\r\n//     { label: \"Complaints\" },\r\n//     { label: \"Notes\" },\r\n//     { label: \"Actions\" },\r\n//   ];\r\n\r\n//   const data = {\r\n//     columnsData: columns,\r\n//     tableData: [\r\n//       {\r\n//         no_: 1,\r\n//         complaints:\r\n//           \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n//         notes: \"Taking dole\",\r\n//         action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n//       },\r\n//     ],\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <CRow>\r\n//         <CCol md={6} className=\"mb-2\">\r\n//           <div className=\"d-flex gap-2\">\r\n//             <img\r\n//               alt=\"BackBtn\"\r\n//               src={Assets.BackBtn}\r\n//               style={{ width: \"35px\" }}\r\n//               onClick={OnClose}\r\n//               className=\"cursor\"\r\n//             />\r\n//             <span className=\"Obj-name d-flex align-items-center\">\r\n//               Chief Complaints\r\n//             </span>\r\n//           </div>\r\n//         </CCol>\r\n//         <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n//           <div className=\"d-flex mt-2\">\r\n//             <Breadcrumb\r\n//               paths={[\r\n//                 { label: \"Home\", to: \"/patients\" },\r\n//                 { label: \"Patient List\", to: \"/patients\" },\r\n//                 { label: \"Medical Profile\", to: \"/patients/history\" },\r\n//                 { label: \"Chief Complaints\", to: \"/patients/history\" },\r\n//               ]}\r\n//             />\r\n//           </div>\r\n//         </CCol>\r\n//       </CRow>\r\n//       <CRow>\r\n//         <CCol md={6} xl={6} className=\"mb-3 chief-complaints\">\r\n//           <div className=\"search-bar\">\r\n//             <input type=\"text\" placeholder=\"Search\" />\r\n//             <button type=\"submit\">\r\n//               <i className=\"fas fa-search\"></i>\r\n//             </button>\r\n//           </div>\r\n//         </CCol>\r\n//         <CCol\r\n//           md={6}\r\n//           xl={6}\r\n//           className=\"mb-3 d-flex justify-content-end align-items-center gap-15\"\r\n//         >\r\n//           <div className=\"patient-adding\">\r\n//             <button>+ ADD</button>\r\n//           </div>\r\n//           <div className=\"patient-adding\">\r\n//             <button>\r\n//               <img src={Assets.ThreeDots} alt=\"settings\" />\r\n//             </button>\r\n//           </div>\r\n//         </CCol>\r\n//       </CRow>\r\n//       <Table columns={columns} data={data} />\r\n//       <ChiefComplaintTable/>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ChiefComplaints;\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ChiefComplaintTable from \"../../../../../Tables/Subjective/ChiefComplaintTable\";\r\nimport ChiefComplaintsForm from \"./ChiefComplaintsForm\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\n\r\nconst ChiefComplaints = ({ OnClose, from }) => {\r\n  const columnData = [\r\n    { label: \"No.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Complaints\" },\r\n    { label: \"Notes\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-07-05 17:52\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-07-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 03:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 6,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 7,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 8,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  // ];\r\n\r\n  const { loading, error, get,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data,id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id);\r\n      detailPage();\r\n      \r\n    }\r\n  };\r\n\r\n  const getChiefComplaints = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/docs?limit=${itemsPerPage}&page=${currentPage}&searchkey=&order_by=created_at&dir=2&slug=chief-complaints&user_id=10&scanOrdersOnly=&scanstatus=`\r\n      );\r\n      if (response.code === 200) {\r\n        console.log(response.data.docs);\r\n        setRowData(response.data.docs);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage,addFormView]);\r\n\r\n  useEffect(() => {\r\n    getChiefComplaints();\r\n  }, [getChiefComplaints]);\r\n\r\n  \r\n  const deleteChiefComplaints = async () => {\r\n    try {\r\n      const response = await del(`resource/docs/${id}`);\r\n  \r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        getChiefComplaints();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {from !== \"Consult\" && (\r\n        <CRow>\r\n          <CCol md={6} className=\"mb-2\">\r\n            <div className=\"d-flex gap-2\">\r\n              <img\r\n                alt=\"BackBtn\"\r\n                src={Assets.BackBtn}\r\n                style={{ width: \"35px\" }}\r\n                onClick={() => {\r\n                  OnClose();\r\n                }}\r\n                className=\"cursor\"\r\n              />\r\n              <span className=\"Obj-name d-flex align-items-center\">\r\n                Chief Complaints\r\n              </span>\r\n            </div>\r\n          </CCol>\r\n          <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n            <div className=\"d-flex mt-2\">\r\n              <Breadcrumb\r\n                paths={[\r\n                  { label: \"Home\", to: \"/patients\" },\r\n                  { label: \"Patient List\", to: \"/patients\" },\r\n                  { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                  { label: \"Chief Complaints\", to: \"/patients/history\" },\r\n                ]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow>\r\n              <CCol md={7} xl={7} className=\"mb-3 chief-complaints\">\r\n                {/* <div className=\"search-bar\">\r\n                <input type=\"text\" placeholder=\"Search\" />\r\n                <button type=\"submit\">\r\n                  <i className=\"fas fa-search\"></i>\r\n                </button>\r\n              </div> */}\r\n                <DateSelector />\r\n              </CCol>\r\n              <CCol\r\n                md={5}\r\n                xl={5}\r\n                className=\"mb-3 d-flex justify-content-end align-items-center gap-15\"\r\n              >\r\n                <div className=\"patient-adding\" onClick={() => addFormPage()}>\r\n                  <button>+ ADD</button>\r\n                </div>\r\n                <div className=\"patient-adding\">\r\n                  <button>\r\n                    <img src={Assets.ThreeDots} alt=\"settings\" />\r\n                  </button>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <ChiefComplaintTable\r\n              rowData={rowData}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={pagination?.total}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ChiefComplaintsForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              setAddFormView={setAddFormView}\r\n              getChiefComplaints={getChiefComplaints}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => deleteChiefComplaints()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaints;\r\n","import {\r\n  CFormCheck,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst FamilyHistoryTable = ({\r\n  columns,\r\n  rowData,\r\n  getselectedData,\r\n  addFormView,\r\n}) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.disease}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.grandparents === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.father === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.mother === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Brother === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Sister === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Daughter === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Son === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyHistoryTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport FamilyHistoryTable from \"../../../../../../Tables/Subjective/FamilyHistoryTable\";\r\n\r\nconst FamilyHistory = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Disease\" },\r\n    { id: 3, label: \"Grandparents\" },\r\n    { id: 4, label: \"Father\" },\r\n    { id: 5, label: \"Mother\" },\r\n    { id: 6, label: \"Brother(s)\" },\r\n    { id: 7, label: \"Sister(s)\" },\r\n    { id: 8, label: \"Daughter(s)\" },\r\n    { id: 9, label: \"Son(s)\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      disease: \"Migraine\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"yes\",\r\n      Daughter: \"yes\",\r\n      Son: \"no\",\r\n    },\r\n    {\r\n      id: 2,\r\n      disease: \"Stroke\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"no\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 3,\r\n      disease: \"Thyroid Disease\",\r\n      grandparents: \"no\",\r\n      father: \"no\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 4,\r\n      disease: \"Sinus\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"yes\",\r\n      Brother: \"no\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 5,\r\n      disease: \"Tuberculosis\",\r\n      grandparents: \"no\",\r\n      father: \"no\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"no\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        {from !== \"Consult\" && (\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                {!addFormView ? (\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.EditPencil} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Edit</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                ) : (\r\n                  <div style={{ width: \"100px\" }}>\r\n                    <PrimaryButton onClick={() => setAddFormView(false)}>\r\n                      <div className=\"d-flex justify-content-center gap-2 w-100\">\r\n                        <span className=\"fs-16 fw-600\">Save</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n        )}\r\n        <div className=\"mb-2\">\r\n          <FamilyHistoryTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            addFormView={addFormView}\r\n          />\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n        </div>\r\n      </>\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyHistory;\r\n","import { CCol, CFormCheck, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst MedHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.onset;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.onset\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Yes\", \"No\"];\r\n  const findIndex = defaultValues?.prev_illness\r\n    ? options?.indexOf(defaultValues?.prev_illness)\r\n    : 0;\r\n\r\n  const findIndex1 = defaultValues?.chronic\r\n    ? options?.indexOf(defaultValues?.chronic)\r\n    : 0;\r\n\r\n  const icdoptions = [\r\n    \"E11.5 - Type 2 diabetes mellitus without complications\",\r\n    \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n    \"E11.7 - Type 2 diabetes mellitus without complications\",\r\n  ];\r\n\r\n  const findIndex2 = defaultValues?.icd10\r\n    ? icdoptions?.indexOf(defaultValues?.icd10)\r\n    : 0;\r\n\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Onset Date *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                  isClearable\r\n                  closeOnScroll={true}\r\n                  wrapperClassName=\"date-picker-wrapper\"\r\n                  dateFormat={DATE_FORMAT}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Conditions *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.conditions}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd10}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={icdoptions}\r\n                  defaultValue={\r\n                    defaultValues?.icd10 ? icdoptions[findIndex2] : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Chronic\r\n              </label>\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={defaultValues?.chronic === \"Yes\"}\r\n                // onChange={handleChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={defaultValues?.chronic === \"No\"}\r\n              />\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.chronic}\r\n              /> */}\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultValues?.chronic ? options[findIndex1] : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Previous Illness\r\n              </label>\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault1\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={defaultValues?.prev_illness === \"Yes\"}\r\n                // onChange={handleChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={defaultValues?.prev_illness === \"No\"}\r\n              />\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.prev_illness}\r\n              /> */}\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultValues?.prev_illness ? options[findIndex] : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedHistoryForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedHistoryForm from \"./MedHistoryForm\";\r\nimport MedicalHistoryTable from \"../../../../../../Tables/Subjective/MedicalHistoryTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst MedicalHistory = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"ONSET DATE\" },\r\n    { id: 3, label: \"CONDITIONS\" },\r\n    { id: 4, label: \"ICD\" },\r\n    { id: 5, label: \"Chronic\" },\r\n    { id: 6, label: \"Previous Illness\" },\r\n    // { id: 7, label: \"Notes\" },\r\n    { id: 7, label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"No\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      onset: \"01-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"No\",\r\n      prev_illness: \"No\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      onset: \"01-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"No\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"No\",\r\n      prev_illness: \"No\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      onset: \"12-03-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      onset: \"02-03-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <MedicalHistoryTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MedHistoryForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistory;\r\n","import { CCol, CFormCheck, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst ObstericHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  const [fert_treatment, setFert_treatment] = useState(\r\n    defaultValues?.fert_treatment || \"No\"\r\n  );\r\n  const [para, setPara] = useState(\"\");\r\n  const [lacating, setLacating] = useState(\"\");\r\n  const [gravida, setGravida] = useState(\"\");\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedTrimster = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getSelectedGravida = (data) => {\r\n    setGravida(data);\r\n  };\r\n  const getSelectedLacating = (data) => {\r\n    setLacating(data);\r\n  };\r\n  const getSelectedPara = (data) => {\r\n    setPara(data);\r\n  };\r\n  const getSelectedFertValue = (data) => {\r\n    setFert_treatment(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.lmp_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.lmp_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.ed_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.ed_date\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n  }, [defaultValues]);\r\n  const options = [\"First\", \"Second\", \"Third\"];\r\n  const findIndex = defaultValues?.trimster\r\n    ? options?.indexOf(defaultValues?.trimster)\r\n    : 0;\r\n\r\n  const lacatingoptions = [\"Yes\", \"No\"];\r\n  const findlacatingIndex = defaultValues?.lacating\r\n    ? lacatingoptions?.indexOf(defaultValues?.lacating)\r\n    : 1;\r\n  const findtreatmentIndex = defaultValues?.fert_treatment\r\n    ? lacatingoptions?.indexOf(defaultValues?.fert_treatment)\r\n    : 1;\r\n  const gravidaoptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n  const findgravidaIndex = defaultValues?.gravida\r\n    ? gravidaoptions?.indexOf(defaultValues?.gravida)\r\n    : 0;\r\n  const findparaIndex = defaultValues?.para\r\n    ? gravidaoptions?.indexOf(defaultValues?.para)\r\n    : 0;\r\n  const findingIndex5 = defaultValues?.lacating\r\n    ? lacatingoptions?.indexOf(defaultValues?.lacating)\r\n    : 1;\r\n  const getSelectedValue5 = (data) => {\r\n    console.log(data);\r\n  };\r\n  const [bad, setBad] = useState(\"No\");\r\n  const findingIndex6 = defaultValues?.bad\r\n    ? lacatingoptions?.indexOf(defaultValues?.bad)\r\n    : 1;\r\n  const getSelectedValue6 = (data) => {\r\n    setBad(data);\r\n  };\r\n\r\n  const [preg, setPreg] = useState(defaultValues?.pregnant || \"No\");\r\n  const [fertTreat, setFertTreat] = useState(\r\n    defaultValues?.fert_treatment || \"No\"\r\n  );\r\n  const [lact, setLact] = useState(defaultValues?.lacating || \"No\");\r\n  const [cesarean, setCesarean] = useState(defaultValues?.cesarean || \"No\");\r\n  const [obstetric, setObsteric] = useState(defaultValues?.obstetric || \"No\");\r\n\r\n  const handleChangeObste = (e) => {\r\n    setObsteric(e.target.value);\r\n  };\r\n\r\n  const handleChangeCesa = (e) => {\r\n    setCesarean(e.target.value);\r\n  };\r\n  const handleChangeLact = (e) => {\r\n    setLact(e.target.value);\r\n  };\r\n  const handleChangeFert = (e) => {\r\n    setFertTreat(e.target.value);\r\n  };\r\n  const findingIndex7 = defaultValues?.bad\r\n    ? lacatingoptions?.indexOf(defaultValues?.bad)\r\n    : 1;\r\n  const getSelectedValue7 = (data) => {\r\n    setPreg(data);\r\n  };\r\n  const handleChange = (e) => {\r\n    setPreg(e.target.value);\r\n  };\r\n  const [gravidaValue, setGravidaValue] = useState(\r\n    defaultValues?.gravida || \"\"\r\n  );\r\n  const [paraValue, setParaValue] = useState(defaultValues?.para || \"\");\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newstrValue = input.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (name === \"gravida\") {\r\n      setGravidaValue(newstrValue);\r\n    }\r\n    if (name === \"para\") {\r\n      setParaValue(newstrValue);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pregnant *\r\n              </label>\r\n\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"exampleRadios\"\r\n                id=\"exampleRadios1\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={preg === \"Yes\"}\r\n                onChange={handleChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={preg === \"No\"}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {preg === \"Yes\" && (\r\n          <>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  LMP Date *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date}\r\n                    onChange={(date) => setDate(date)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  ED Date\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date2}\r\n                    onChange={(date) => setDate2(date)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Trimester *\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.trimster}\r\n              /> */}\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={options}\r\n                      defaultValue={options[findIndex]}\r\n                      getSelectedValue={getSelectedTrimster}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Gravida *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    name=\"gravida\"\r\n                    placeholder=\"00\"\r\n                    defaultValue={defaultValues?.gravida}\r\n                    value={gravidaValue}\r\n                    onChange={numCheck}\r\n                  />\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedGravida}\r\n                      options={gravidaoptions}\r\n                      defaultValue={gravidaoptions[findgravidaIndex]}\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Para *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"00\"\r\n                    defaultValue={defaultValues?.para}\r\n                    name=\"para\"\r\n                    value={paraValue}\r\n                    onChange={numCheck}\r\n                  />\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedPara}\r\n                      options={gravidaoptions}\r\n                      defaultValue={gravidaoptions[findparaIndex]}\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Fertility Treament\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.fert_treatment}\r\n              /> */}\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={lacatingoptions}\r\n                      defaultValue={lacatingoptions[findtreatmentIndex]}\r\n                      getSelectedValue={getSelectedFertValue}\r\n                    />\r\n                  </div> */}\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"Yes\"\r\n                    value=\"Yes\"\r\n                    checked={fertTreat === \"Yes\"}\r\n                    onChange={handleChangeFert}\r\n                  />\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"No\"\r\n                    value=\"No\"\r\n                    checked={fertTreat === \"No\"}\r\n                    onChange={handleChangeFert}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            {fertTreat === \"Yes\" && (\r\n              <CCol lg={4} className=\"mb-3\">\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Treament Description*\r\n                    </label>\r\n                    <CFormTextarea\r\n                      type=\"text\"\r\n                      class=\"form-control  pad-10\"\r\n                      id=\"validationTooltip01\"\r\n                      placeholder=\"Enter\"\r\n                      // defaultValue={defaultValues?.fert_treatment}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            )}\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Lacatating\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.lacating}\r\n              /> */}\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedLacating}\r\n                      options={lacatingoptions}\r\n                      defaultValue={lacatingoptions[findlacatingIndex]}\r\n                    />\r\n                  </div> */}\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"Yes\"\r\n                    value=\"Yes\"\r\n                    checked={lact === \"Yes\"}\r\n                    onChange={handleChangeLact}\r\n                  />\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"No\"\r\n                    value=\"No\"\r\n                    checked={lact === \"No\"}\r\n                    onChange={handleChangeLact}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n      </CRow>\r\n      <CRow>\r\n        <CCol lg={6} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Previous Cesarean Sections\r\n              </label>\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={lacatingoptions}\r\n                  defaultValue={lacatingoptions[findingIndex5]}\r\n                  getSelectedValue={getSelectedValue5}\r\n                />\r\n              </div> */}\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={cesarean === \"Yes\"}\r\n                onChange={handleChangeCesa}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={cesarean === \"No\"}\r\n                onChange={handleChangeCesa}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol lg={6} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Bad Obstetric History\r\n              </label>\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={lacatingoptions}\r\n                  defaultValue={lacatingoptions[findingIndex6]}\r\n                  getSelectedValue={getSelectedValue6}\r\n                />\r\n              </div> */}\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={obstetric === \"Yes\"}\r\n                onChange={handleChangeObste}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={obstetric === \"No\"}\r\n                onChange={handleChangeObste}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {obstetric === \"Yes\" && (\r\n          <CCol lg={6} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Bad Obstetric History Description*\r\n                </label>\r\n                <CFormTextarea\r\n                  type=\"text\"\r\n                  class=\"form-control  pad-10\"\r\n                  id=\"validationTooltip01\"\r\n                  placeholder=\"Enter\"\r\n                  // defaultValue={defaultValues?.fert_treatment}\r\n                />\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"130px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObstericHistoryForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst ObstetricHistoryTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.lmp_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.ed_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.trimster}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.gravida}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.para}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.boh}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lacating}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObstetricHistoryTable;\r\n","import { CCol, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst MensturalHistoryForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.lmp;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.lmp\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.ed_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.ed_date\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n  }, [defaultValues]);\r\n\r\n  const options = [\"Yes\", \"No\"];\r\n  const flow_duration = [\"2-7 days\", \"< 2 Days\", \"> 7 Days\"];\r\n  const flow_type = [\"Less\", \"Moderate\", \"Severe\"];\r\n\r\n  const findIndex = defaultValues?.trimster\r\n    ? options?.indexOf(defaultValues?.trimster)\r\n    : 1;\r\n\r\n  const [menopause, setMenopause] = useState(defaultValues.menopause || \"No\");\r\n\r\n  const handleClick = (event) => {\r\n    setMenopause(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n  const getSelected = (data) => {\r\n    console.log(data);\r\n    setMenopause(data);\r\n  };\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedBleeding = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedCycle = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedDysmen = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const [value, setValue] = useState(\r\n    defaultValues?.age ? defaultValues?.age : \"\"\r\n  );\r\n  const [value1, setValue1] = useState(\r\n    defaultValues?.age ? defaultValues?.age : \"\"\r\n  );\r\n  const [value2, setValue2] = useState(\r\n    defaultValues?.cycle_per_year ? defaultValues?.cycle_per_year : \"\"\r\n  );\r\n  const [value3, setValue3] = useState(\r\n    defaultValues?.cycle_in_days ? defaultValues?.cycle_in_days : \"\"\r\n  );\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const input = e.target.value;\r\n\r\n    // Remove non-digit characters and limit to two digits\r\n    const newValue = input.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (input.length > 2 && newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      if (e.target.name === \"MenopauseAge\") {\r\n        setValue(newValue);\r\n      } else if (e.target.name === \"MenarcheAge\") {\r\n        setValue1(newValue);\r\n      } else if (e.target.name === \"cycle_per_year\") {\r\n        setValue2(newValue);\r\n      } else if (e.target.name === \"cycle_in_days\") {\r\n        setValue3(newValue);\r\n      }\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const paste = e.clipboardData.getData(\"text\");\r\n    const newValue = paste.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      if (e.target.name === \"MenopauseAge\") {\r\n        setValue(newValue);\r\n      } else if (e.target.name === \"MenarcheAge\") {\r\n        setValue1(newValue);\r\n      } else if (e.target.name === \"cycle_per_year\") {\r\n        setValue2(newValue);\r\n      } else if (e.target.name === \"cycle_in_days\") {\r\n        setValue3(newValue);\r\n      }\r\n      setError(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Menarche Age *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={}\r\n                name=\"MenarcheAge\"\r\n                value={value1}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycles per Year {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={defaultValues?.cycle_per_year}\r\n                name=\"cycle_per_year\"\r\n                value={value2}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycle Length in days {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={defaultValues?.cycle_in_days}\r\n                name=\"cycle_in_days\"\r\n                value={value3}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Flow Duration {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={flow_duration}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Flow Type {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={flow_type}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\"> InterMenstrual Bleeding </p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menstrualYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"menstrual\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menstrualNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"menstrual\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\"> Cycle Irregularity </p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"irregularityYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"irregularity\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"irregularityNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"irregularity\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">Dysmenorrhea</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"dysmenorrheaYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"dysmenorrhea\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"dysmenorrheaNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"dysmenorrhea\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              LMP Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">Menopause</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menopauseYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"menopause\"\r\n                checked={menopause === \"Yes\"}\r\n                onChange={handleClick}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menopauseNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"menopause\"\r\n                checked={menopause === \"No\"}\r\n                onChange={handleClick}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {menopause === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Menopause Age\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control  pad-10\"\r\n                  id=\"validationTooltip01\"\r\n                  placeholder=\"00\"\r\n                  // defaultValue={defaultValues?.age}\r\n                  name=\"MenopauseAge\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  onPaste={handlePaste}\r\n                  disabled={from === \"Consult-Gynaec\" ? true : false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n\r\n      {from !== \"Consult-Gynaec\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"130px\" }}>\r\n            <PrimaryButton>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MensturalHistoryForm;\r\n","import { CCol, CFormTextarea, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst ScreeningHistoryForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  const [date3, setDate3] = useState(null);\r\n  const [abnormalStatus, setAbnormalStatus] = useState(\r\n    defaultValues?.history_of_abnormal || \"No\"\r\n  );\r\n  const [mamogramStatus, setMamogramStatus] = useState(\r\n    defaultValues?.history_of_mamogram || \"No\"\r\n  );\r\n  const [breastStatus, setBreastStatus] = useState(\r\n    defaultValues?.history_of_breast || \"No\"\r\n  );\r\n\r\n  const handleAbnormalStatus = (event) => {\r\n    setAbnormalStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  const handleMamogramStatus = (event) => {\r\n    setMamogramStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  const handleBreastStatus = (event) => {\r\n    setBreastStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date_of_last_pap;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date_of_last_pap\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.date_of_last_mamogram;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.date_of_last_mamogram\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString3 = defaultValues?.date_of_last_breast;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate3 = defaultValues?.date_of_last_breast\r\n      ? parseDateString(defaultDateString3)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n    setDate3(defaultDate3);\r\n  }, [defaultValues]);\r\n  const options = [\"Yes\", \"No\"];\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    setAbnormalStatus(data);\r\n  };\r\n\r\n  const findIndex = defaultValues?.history_of_abnormal\r\n    ? options?.indexOf(defaultValues?.history_of_abnormal)\r\n    : 1;\r\n\r\n  const getSelectedValue3 = (data) => {\r\n    setMamogramStatus(data);\r\n  };\r\n\r\n  const getSelectedValue4 = (data) => {\r\n    setBreastStatus(data);\r\n  };\r\n\r\n  const findIndex3 = defaultValues?.history_of_mamogram\r\n    ? options?.indexOf(defaultValues?.history_of_mamogram)\r\n    : 1;\r\n\r\n  const findIndex4 = defaultValues?.history_of_breast\r\n    ? options?.indexOf(defaultValues?.history_of_breast)\r\n    : 1;\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last pap smear\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">History of abnormal pap smear</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"abnormalYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"abnormal\"\r\n                checked={abnormalStatus === \"Yes\"}\r\n                onChange={handleAbnormalStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"abnormalNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"abnormal\"\r\n                checked={abnormalStatus === \"No\"}\r\n                onChange={handleAbnormalStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {abnormalStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Abnormal pap smear details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult-Screen\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last mamogram\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date2}\r\n                onChange={(date) => setDate2(date)}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">History of mamogram</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"mamogramYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"mamogram\"\r\n                checked={mamogramStatus === \"Yes\"}\r\n                onChange={handleMamogramStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"mamogramNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"mamogram\"\r\n                checked={mamogramStatus === \"No\"}\r\n                onChange={handleMamogramStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {mamogramStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Mamogram details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult-Screen\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last breast exam\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date3}\r\n                onChange={(date) => setDate3(date)}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">History of breast exam</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"breastYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"breast\"\r\n                checked={breastStatus === \"Yes\"}\r\n                onChange={handleBreastStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"breastNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"breast\"\r\n                checked={breastStatus === \"No\"}\r\n                onChange={handleBreastStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {breastStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Breast exam details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult-Screen\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n\r\n      {from !== \"Consult-Screen\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"130px\" }}>\r\n            <PrimaryButton>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScreeningHistoryForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ObstericHistoryForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\nimport MedicalTab from \"../../../MedicalTab\";\r\nimport ObstetricHistoryTable from \"../../../../../../Tables/Subjective/ObstetricHistoryTable\";\r\nimport GynaecHistoryTable from \"../../../../../../Tables/Subjective/GynaecHistoryTable\";\r\nimport ScreeningHistory from \"../../../../../../Tables/Subjective/ScreeningHistory\";\r\nimport MensturalHistoryForm from \"./MensturalHistoryForm\";\r\nimport ScreeningHistoryForm from \"./ScreeningHistoryForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst OGHistory = ({ from, back }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"LMP Date\" },\r\n    { id: 3, label: \"ED Date\" },\r\n    { id: 4, label: \"Trimester\" },\r\n    { id: 5, label: \"Gravida\" },\r\n    { id: 6, label: \"Para\" },\r\n    { id: 7, label: \"Bad Obstetric History\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 3,\r\n      para: 5,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      pregnant: \"Yes\",\r\n      cesarean: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      cesarean: \"Yes\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 3,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"No\",\r\n      lacating: \"Yes\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 4,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"No\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 5,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"No\",\r\n      lacating: \"No\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 6,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 7,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 8,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 9,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 10,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n  ];\r\n\r\n  const MensuralcolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 3, label: \"Menarche Age\" },\r\n    // { id: 3, label: \"Cycles per Year\" },\r\n    // { id: 4, label: \"Cycle Length in days\" },\r\n    // { id: 5, label: \"Flow Duration\" },\r\n    // { id: 6, label: \"Flow Type\" },\r\n    // { id: 7, label: \"InterMenstrual Bleeding\" },\r\n    { id: 3, label: \"cycle irregularity\" },\r\n    { id: 4, label: \"dysmenorrhea\" },\r\n    { id: 5, label: \"LMP\" },\r\n    { id: 2, label: \"Menopause\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const MenstrualrowData = [\r\n    {\r\n      id: 1,\r\n      age: \"18\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"20\",\r\n      cycle_in_days: \"30\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 2,\r\n      age: \"25\",\r\n      menopause: \"No\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 3,\r\n      age: \"25\",\r\n      menopause: \"No\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 4,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 5,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 6,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 7,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 8,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 9,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 10,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n  ];\r\n\r\n  const ScreeningcolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"date of last pap smear\" },\r\n    { id: 3, label: \"History of abnormal pap smear\" },\r\n    { id: 4, label: \"date of last mamogram\" },\r\n    { id: 5, label: \"History of mamogram\" },\r\n    { id: 6, label: \"date of last Breast Exam\" },\r\n    { id: 7, label: \"History of Breast Exam\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const ScreeningrowData = [\r\n    {\r\n      id: 1,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"08-06-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-07-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentMenstrualPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return MenstrualrowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentScreeningItem = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return ScreeningrowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Yes\", \"No\"];\r\n  const PatientSubMenu4 = localStorage.getItem(\"PatientSubMenu-4\");\r\n  const ParsedPatientSubMenu = PatientSubMenu4\r\n    ? JSON.parse(PatientSubMenu4)\r\n    : 1;\r\n  const tabs = [\r\n    { id: 1, title: \"Obstetric History\" },\r\n    { id: 2, title: \"Gynaec History\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n\r\n  const PatientSubMenu5 = localStorage.getItem(\"PatientSubMenu-5\");\r\n  const ParsedPatientSubMenu5 = PatientSubMenu5\r\n    ? JSON.parse(PatientSubMenu5)\r\n    : 1;\r\n  const [currentHistoryTab, setCurrentHistoryTab] = useState(\r\n    ParsedPatientSubMenu5\r\n  );\r\n\r\n  const GynaecTabs = [\r\n    { id: 1, title: \"Menstrual History\" },\r\n    { id: 2, title: \"Screening and Diagnostic History\" },\r\n  ];\r\n\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n    setAddFormView(false);\r\n  };\r\n\r\n  const getHistoryCurrentTab = (data) => {\r\n    setCurrentHistoryTab(data);\r\n    setAddFormView(false);\r\n  };\r\n\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedValue1 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ObstetricHistoryTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from === \"Consult-Gynaec\" && (\r\n        <CRow>\r\n          <CCard className=\"p-2 cursor-default mb-5\">\r\n            <CCardBody className=\"mb-3\">\r\n              <MensturalHistoryForm\r\n                back={back}\r\n                defaultValues={selectedData}\r\n                from={from}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CRow>\r\n      )}\r\n      {from === \"Consult-Screen\" && (\r\n        <CRow>\r\n          <CCard className=\"p-2 cursor-default mb-5\">\r\n            <CCardBody className=\"mb-3\">\r\n              <ScreeningHistoryForm\r\n                back={back}\r\n                defaultValues={selectedData}\r\n                from={from}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CRow>\r\n      )}\r\n      {from === \"\" && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={5} className=\"\">\r\n              <MedicalTab\r\n                tabs={tabs}\r\n                getCurrentTab={getCurrentTab}\r\n                defaultTab={currentTab - 1}\r\n              />\r\n            </CCol>\r\n            <CCol lg={7}>\r\n              {currentTab === 1 && (\r\n                // <CRow>\r\n                //   <CCol lg={4}>\r\n                //     <div style={{ width: \"100%\" }}>\r\n                //       <div class=\"position-relative\">\r\n                //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n                //           Pregnant\r\n                //         </label>\r\n                //         <div\r\n                //           className=\"w-100\"\r\n                //           style={{\r\n                //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                //           }}\r\n                //         >\r\n                //           <Dropdown\r\n                //             options={options}\r\n                //             defaultValue={options[0]}\r\n                //             getSelectedValue={getSelectedValue}\r\n                //           />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   </CCol>\r\n                //   <CCol lg={4}>\r\n                //     <div style={{ width: \"100%\" }}>\r\n                //       <div class=\"position-relative\">\r\n                //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n                //           Previous Cesarean Sections\r\n                //         </label>\r\n                //         <div\r\n                //           className=\"w-100\"\r\n                //           style={{\r\n                //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                //           }}\r\n                //         >\r\n                //           <Dropdown\r\n                //             options={options}\r\n                //             defaultValue={options[1]}\r\n                //             getSelectedValue={getSelectedValue1}\r\n                //           />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   </CCol>\r\n                //   <CCol lg={4}>\r\n                //     <div style={{ width: \"100%\" }}>\r\n                //       <div class=\"position-relative\">\r\n                //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n                //           Bad Obstetric History\r\n                //         </label>\r\n                //         <div\r\n                //           className=\"w-100\"\r\n                //           style={{\r\n                //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                //           }}\r\n                //         >\r\n                //           <Dropdown\r\n                //             options={options}\r\n                //             defaultValue={options[1]}\r\n                //             getSelectedValue={getSelectedValue2}\r\n                //           />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   </CCol>\r\n                // </CRow>\r\n                <></>\r\n              )}\r\n              {currentTab === 2 && (\r\n                <MedicalTab\r\n                  tabs={GynaecTabs}\r\n                  getCurrentTab={getHistoryCurrentTab}\r\n                  defaultTab={currentHistoryTab - 1}\r\n                />\r\n              )}\r\n            </CCol>\r\n          </CRow>\r\n\r\n          {!addFormView && currentTab === 1 && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <div className=\"mb-2\">\r\n                {currentTab === 1 && (\r\n                  <>\r\n                    <CRow>\r\n                      <ObstetricHistoryTable\r\n                        rowData={getCurrentPageItems()}\r\n                        columns={columnData}\r\n                        getselectedData={getselectedData}\r\n                        from={from}\r\n                      />\r\n                    </CRow>\r\n\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={rowData?.length}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                )}\r\n                {/* {currentTab === 2 && currentHistoryTab === 1 && (\r\n                  <>\r\n                    <CRow>\r\n                      <GynaecHistoryTable\r\n                        rowData={getCurrentMenstrualPageItems()}\r\n                        columns={MensuralcolumnData}\r\n                        getselectedData={getselectedData}\r\n                      />\r\n                    </CRow>\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={rowData?.length}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                )}\r\n                {currentTab === 2 && currentHistoryTab === 2 && (\r\n                  <>\r\n                    <CRow>\r\n                      <ScreeningHistory\r\n                        rowData={getCurrentScreeningItem()}\r\n                        columns={ScreeningcolumnData}\r\n                        getselectedData={getselectedData}\r\n                      />\r\n                    </CRow>\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={rowData?.length}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                )} */}\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {from === \"\" && (\r\n        <>\r\n          {addFormView && (\r\n            <CRow className=\"mb-2\">\r\n              <CCard className=\"p-2 cursor-default mb-5\">\r\n                <CCardBody className=\"mb-3\">\r\n                  {currentTab === 1 && (\r\n                    <ImagingOrderForm\r\n                      back={() => {\r\n                        setAddFormView(false);\r\n                        setSelectedData({});\r\n                      }}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                  {/* {currentTab === 2 && currentHistoryTab === 1 && (\r\n                <MensturalHistoryForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )}\r\n              {currentTab === 2 && currentHistoryTab === 2 && (\r\n                <ScreeningHistoryForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )} */}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CRow>\r\n          )}\r\n\r\n          {currentTab !== 1 && (\r\n            <CRow className=\"mb-2\">\r\n              <CCard className=\"p-2 cursor-default mb-5\">\r\n                <CCardBody className=\"mb-3\">\r\n                  {currentTab === 2 && currentHistoryTab === 1 && (\r\n                    <MensturalHistoryForm\r\n                      back={back}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                  {currentTab === 2 && currentHistoryTab === 2 && (\r\n                    <ScreeningHistoryForm\r\n                      back={back}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CRow>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OGHistory;\r\n","import { CCol, CFormTextarea, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst MedHistoryForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [smokingStatus, setSmokingStatus] = useState(\r\n    defaultValues?.smoking || \"No\"\r\n  );\r\n\r\n  const [alcoholStatus, setAlcoholStatus] = useState(\r\n    defaultValues?.alcohol || \"No\"\r\n  );\r\n\r\n  const [drugStatus, setDrugStatus] = useState(defaultValues?.drugs || \"No\");\r\n\r\n  const handleSmokingStatus = (event) => {\r\n    setSmokingStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  const handleAlcoholStatus = (event) => {\r\n    setAlcoholStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  const handleDrugStatus = (event) => {\r\n    setDrugStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.onset;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.onset\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Yes\", \"No\"];\r\n\r\n  const getSelectedValue1 = (data) => {\r\n    setSmokingStatus(data);\r\n  };\r\n\r\n  const findIndex = defaultValues?.smoking\r\n    ? options?.indexOf(defaultValues?.smoking)\r\n    : 1;\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    setAlcoholStatus(data);\r\n  };\r\n\r\n  const findIndex2 = defaultValues?.alcohol\r\n    ? options?.indexOf(defaultValues?.alcohol)\r\n    : 1;\r\n\r\n  const getSelectedValue3 = (data) => {\r\n    setDrugStatus(data);\r\n  };\r\n\r\n  const findIndex3 = defaultValues?.drugs\r\n    ? options?.indexOf(defaultValues?.drugs)\r\n    : 1;\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <p className=\"radio-label\">Smoking</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"smokingYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"smoking\"\r\n                checked={smokingStatus === \"Yes\"}\r\n                onChange={handleSmokingStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"smokingNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"smoking\"\r\n                checked={smokingStatus === \"No\"}\r\n                onChange={handleSmokingStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {smokingStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Smoking details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4}>\r\n          <p className=\"radio-label\">Alcohol</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"alcoholYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"alcohol\"\r\n                checked={alcoholStatus === \"Yes\"}\r\n                onChange={handleAlcoholStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"alcoholNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"alcohol\"\r\n                checked={alcoholStatus === \"No\"}\r\n                onChange={handleAlcoholStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {alcoholStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Alcohol details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4}>\r\n          <p className=\"radio-label\">Drugs</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"drugsYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"drugs\"\r\n                checked={drugStatus === \"Yes\"}\r\n                onChange={handleDrugStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"drugsNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"drugs\"\r\n                checked={drugStatus === \"No\"}\r\n                onChange={handleDrugStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {drugStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Drugs details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 4-20 words long.\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n      {from !== \"Consult\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedHistoryForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SocialHistoryTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.smoking}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.alcohol}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.drugs}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialHistoryTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedHistoryForm from \"./MedHistoryForm\";\r\nimport MedicalHistoryTable from \"../../../../../../Tables/Subjective/MedicalHistoryTable\";\r\nimport SocialHistoryTable from \"../../../../../../Tables/Subjective/SocialHistoryTable\";\r\n\r\nconst SocialHistory = ({ from, back }) => {\r\n  const Data = {\r\n    id: 1,\r\n    smoking: \"No\",\r\n    alcohol: \"No\",\r\n    drugs: \"No\",\r\n  };\r\n  return (\r\n    <>\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <MedHistoryForm back={back} defaultValues={Data} from={from} />\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialHistory;\r\n","import { CCol, CRow ,CFormTextarea} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst SurgicalForm = ({ back, defaultValues }) => {\r\n\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  const gravidaoptions = [\"Lorem Ipsum\", \"Lorem Ipsum\"];\r\n  const findgravidaIndex = defaultValues?.gravida\r\n    ? gravidaoptions?.indexOf(defaultValues?.gravida)\r\n    : 0;\r\n  const getSelectedGravida = (data) => {\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeCaption=\"Time\"\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Surgery Name *\r\n              </label>\r\n\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  // defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Surgery Reason *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code\r\n              </label>\r\n\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  // defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Performed by Doctor *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Referred by Doctor\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Hospital *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n      <CCol lg={6}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Notes\r\n            </label>\r\n            <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3} >\r\n                \r\n                </CFormTextarea>\r\n          </div>\r\n        </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SurgicalTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.icd_code}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.Performed_by}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.hospital}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SurgicalForm from \"./SurgicalForm\";\r\nimport MedicationTable from \"../../../../../../Tables/Subjective/MedicationTable\";\r\nimport SurgicalTable from \"../../../../../../Tables/Subjective/SurgicalTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst SurgicalHistory = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Surgery Name\" },\r\n    { id: 4, label: \" ICD Code\" },\r\n    { id: 5, label: \"Performed by\" },\r\n    { id: 5, label: \"Hospital\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <SurgicalTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <SurgicalForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalHistory;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicationForm from \"./MedicationForm\";\r\nimport MedicationTable from \"../../../../../../Tables/Subjective/MedicationTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Medication = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Medication Name\" },\r\n    // { id: 3, label: \"Strength\" },\r\n    // { id: 4, label: \" strength measurement\" },\r\n    // { id: 5, label: \"dosage \" },\r\n    { id: 6, label: \"M | A | E | N \" },\r\n    { id: 7, label: \"BF/AF\" },\r\n    { id: 8, label: \"Quantity\" },\r\n    { id: 9, label: \" start date\" },\r\n    { id: 10, label: \"Status\" },\r\n    { id: 11, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"bf\",\r\n      m: 0,\r\n      a: 0.5,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 2,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 3,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 4,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 5,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 6,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 7,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 8,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 9,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 10,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <MedicationTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MedicationForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Medication;\r\n","import { CCol, CFormCheck, CFormSelect,CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst MedicationForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date1, setDate1] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.start_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.start_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.end_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.end_date\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate1(defaultDate2);\r\n  }, [defaultValues]);\r\n\r\n  const options = [\"Taking\", \"Not Taking\", \"Discontinued\", \"Status Unknown\"];\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const options1 = [\"Brand\", \"Generic\"];\r\n  const getSelectedValue1 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const options2 = [\r\n    \"Tablet\",\r\n    \"Chewable tablet\",\r\n    \"Sublingual tablet\",\r\n    \"Buccal tablet\",\r\n    \"Capsule\",\r\n    \"Hard capsule\",\r\n    \"Soft gelatin capsule\",\r\n    \"Powder\",\r\n    \"Oral powder\",\r\n    \"Topical powder\",\r\n    \"Liquid\",\r\n    \"Syrup\",\r\n    \"Elixir\",\r\n    \"Suspension\",\r\n    \"Solution\",\r\n    \"Tincture\",\r\n    \"Ointment\",\r\n    \"Cream\",\r\n    \"Gel\",\r\n    \"Paste\",\r\n    \"Suppository\",\r\n    \"Patch\",\r\n    \"Inhaler\",\r\n    \"Metered-dose inhaler (MDI)\",\r\n    \"Dry powder inhaler (DPI)\",\r\n    \"Nasal Spray\",\r\n    \"Eye Drop\",\r\n    \"Ear Drop\",\r\n    \"Intravenous (IV) solution\",\r\n    \"Intramuscular (IM) injection\",\r\n    \"Subcutaneous (SC) injection\",\r\n    \"Intradermal (ID) injection\",\r\n    \"Implant\",\r\n  ];\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const [strength, setStrength] = useState(defaultValues?.strength || \"\");\r\n  const [qty, setQty] = useState(defaultValues?.qty || \"\");\r\n  const [timeTaken, setTimeTaken] = useState(defaultValues?.time_taken || \"\");\r\n\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newDaysValue = input.replace(/[^0-9]/g, \"\").slice(0, 3);\r\n    const newstrValue = input.replace(/[^0-9]/g, \"\").slice(0, 4);\r\n    const newQtyValue = input.replace(/[^0-9]/g, \"\").slice(0, 4);\r\n\r\n    if (name === \"str&dos\") {\r\n      setStrength(newstrValue);\r\n    }\r\n    if (name === \"totalQty\") {\r\n      setQty(newQtyValue);\r\n    }\r\n    if (name === \"days\") {\r\n      setTimeTaken(newDaysValue);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (date && timeTaken) {\r\n      // Convert numDays to an integer\r\n      const days = parseInt(timeTaken, 10);\r\n\r\n      if (!isNaN(days)) {\r\n        // Calculate the end date\r\n        const end = new Date(date);\r\n        end.setDate(end.getDate() + days);\r\n        setDate1(end);\r\n      } else {\r\n        setDate1(null);\r\n      }\r\n    } else {\r\n      setDate1(null);\r\n    }\r\n  }, [date, timeTaken]);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Medication Type *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options1}\r\n                  // defaultValue={options[1]}\r\n                  getSelectedValue={getSelectedValue1}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Medication Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Dosage *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options2}\r\n                  // defaultValue={options[1]}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Strength *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                name=\"str&dos\"\r\n                // defaultValue={defaultValues?.strength}\r\n                value={strength}\r\n                onChange={numCheck}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Strength measurement *\r\n              </label>\r\n              <CFormSelect\r\n                size=\"lg\"\r\n                className=\"mb-3\"\r\n                aria-label=\"Large select example\"\r\n                name=\"strength\"\r\n                defaultValue={'mg'}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"cfu/ml\">\r\n                  Colony forming units per milliliter (cfu/ml)\r\n                </option>\r\n                <option value=\"iu\">International unit (iu) </option>\r\n                <option value=\"meq/ml\">\r\n                  Milliequivalent per liter (meq/ml)\r\n                </option>\r\n                <option value=\"meq\">Milliequivalent(meq)</option>\r\n                <option value=\"Milligram per milliliter\">\r\n                  Milligram per milliliter{\" \"}\r\n                </option>\r\n                <option value=\"mg\">Milligram(mg)</option>{\" \"}\r\n                <option value=\"ml\">milliliter(ml)</option>\r\n                <option value=\"%\">percentage(%) </option>\r\n                <option value=\"unt\">Unit (unt)</option>\r\n                <option value=\"unt/ml\">Unit per milliliter (unt/ml)</option>\r\n                <option value=\"kg\">Kilogram (kg) </option>\r\n                <option value=\"mcg\">Microgram (mcg)</option>\r\n              </CFormSelect>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Total Qty / Taken *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                name=\"totalQty\"\r\n                value={qty}\r\n                onChange={numCheck}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Route of administration *\r\n              </label>\r\n              <CFormSelect\r\n                size=\"lg\"\r\n                className=\"mb-3\"\r\n                aria-label=\"Large select example\"\r\n                name=\"strengthMeasurement\"\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Oral\">Oral</option>{\" \"}\r\n                <option value=\"Sublingual\">Sublingual</option>\r\n                <option value=\"Buccal\">Buccal </option>\r\n                <option value=\"Intravenous\">Intravenous </option>\r\n                <option value=\"Intramuscular\">Intramuscular</option>\r\n                <option value=\"Subcutaneous\">Subcutaneous</option>\r\n                <option value=\"Intradermal\">Intradermal</option>\r\n                <option value=\"Topical\">Topical</option>{\" \"}\r\n                <option value=\"Transdermal\">Transdermal</option>\r\n                <option value=\"Ocular\">Ocular </option>\r\n                <option value=\"Otic\">Otic </option>\r\n                <option value=\"Nasal\">Nasal</option>\r\n                <option value=\"Inhalation\">Inhalation</option>\r\n                <option value=\"Rectal\">Rectal</option>\r\n                <option value=\"Vaginal\">Vaginal </option>\r\n                <option value=\"Implant\">Implant </option>\r\n                <option value=\"Intrathecal\">Intrathecal</option>\r\n                <option value=\"Epidural\">Epidural</option>\r\n              </CFormSelect>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Start Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                No. of Day(s) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"000\"\r\n                name=\"days\"\r\n                value={timeTaken}\r\n                onChange={numCheck}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              End Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date1}\r\n                onChange={(date) => setDate1(date)}\r\n                dateFormat={DATE_FORMAT}\r\n                \r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\" style={{ paddingRight: \"0\" }}>\r\n          <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                M\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"m\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                A\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"a\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                E\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"e\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                N\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"n\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3} className=\"mb-3\">\r\n          <div className=\"h-100 d-flex align-items-end w-100 justify-content-start\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"inlineCheckbox1\"\r\n                value=\"bf\"\r\n                disabled={\r\n                  defaultValues?.lab_status === \"Prescribed\"\r\n                    ? false\r\n                    : defaultValues?.medicines?.length >= 1\r\n                    ? true\r\n                    : false\r\n                }\r\n                label={\r\n                  <label for=\"validationTooltip01\" class=\"form-label mb-0\">\r\n                    BF\r\n                  </label>\r\n                }\r\n                name=\"food\"\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"inlineCheckbox2\"\r\n                value=\"af\"\r\n                label={\r\n                  <label for=\"validationTooltip01\" class=\"form-label mb-0\">\r\n                    AF\r\n                  </label>\r\n                }\r\n                name=\"food\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={5} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  rows={3} >\r\n                </CFormTextarea>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {/* <CCol lg={7} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Reason for medication\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                name=\"reason\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol> */}\r\n        <CCol lg={5} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Status *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[1]}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationForm;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { toast } from \"react-toastify\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { isValid, parse } from \"date-fns\";\r\nimport { duration } from \"moment\";\r\n\r\nconst SignsSymptomsForm = ({ back, defaultValues }) => {\r\n\r\n  const [date, setDate] = useState(new Date());\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date and Time objects\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n\r\n      // Create Date and Time objects\r\n      const parsedDate = new Date(year, month - 1, day);\r\n      const parsedTime = new Date();\r\n      parsedTime.setHours(hours, minutes, 0, 0);\r\n\r\n      return { parsedDate, parsedTime };\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date and Time objects\r\n    const { parsedDate, parsedTime } = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : { parsedDate: new Date(), parsedTime: new Date() };\r\n\r\n    // Set default date and time in state\r\n    setDate(parsedDate);\r\n    setTime(parsedTime);\r\n  }, [defaultValues]);\r\n\r\n  const today = new Date();\r\n  const todayStart = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0);\r\n  const todayEnd = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 23, 59, 59);\r\n\r\n\r\n\r\n\r\n  const options = [\r\n    \"Normal\",\r\n    \"Mild\",\r\n    \"Moderate\",\r\n    \"Severe\",\r\n    \"Very Severe\",\r\n    \"Worst\",\r\n  ];\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n  const options1 = [\"Headache\", \"Fracture\", \"Fever\"];\r\n  const getSelectedValue1 = (data) => {\r\n    console.log(data);\r\n  };\r\n  const [value3, setValue3] = useState(defaultValues?.duration_days || \"\");\r\n  const [error, setError] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    const input = e.target.value;\r\n\r\n    // Remove non-digit characters and limit to two digits\r\n    const newValue = input.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n    const newValueDuration = input.replace(/[^0-9]/g, \"\").slice(0, 4);\r\n\r\n    if (\r\n      e.target.name === \"dur_in_days\" &&\r\n      input.length > 4 &&\r\n      newValueDuration.length > 4\r\n    ) {\r\n      setError(\"Input should not exceed 4 digits.\");\r\n    } else {\r\n      setValue3(newValueDuration);\r\n      setError(\"\");\r\n    }\r\n\r\n    if (input.length > 2 && newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      // if (e.target.name === \"dur_in_days\") {\r\n      //   setValue3(newValue);\r\n      // }\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const paste = e.clipboardData.getData(\"text\");\r\n    const newValue = paste.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      if (e.target.name === \"dur_in_days\") {\r\n        setValue3(newValue);\r\n      }\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={3}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat=\"MM-dd-yyyy\"\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                 showIcon\r\n                 selected={time}\r\n                 onChange={(time) => setTime(time)}\r\n                 showTimeSelect\r\n                 showTimeSelectOnly\r\n                 timeIntervals={15}\r\n                 timeCaption=\"Time\"\r\n                 dateFormat=\"h:mm aa\"\r\n                 \r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Location *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.location}\r\n                // value={location}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Duration in Days *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                // defaultValue={defaultValues?.duration_days}\r\n                name=\"dur_in_days\"\r\n                value={duration}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Symptoms *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.characteristics}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options1}\r\n                  // defaultValue={options1[1]}\r\n                  getSelectedValue={getSelectedValue1}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Aggravating factors\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.aggravating}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Relieving factors\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.relieving}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Temporal factors\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.temporal}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Severity *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[1]}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignsSymptomsForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SymtomsTable = ({ columns, rowData, getselectedData, from }) => {\r\n\r\n  const selectedData = (data,id, type) => {\r\n\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {dt?.values?.date ? dt?.values?.date : \"-\"}\r\n                  {\" \"}\r\n                </span>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {dt?.values?.time ? dt?.values?.time : \"-\"}\r\n                </span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.location ? dt?.values?.location : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.values?.symptoms ? dt?.values?.symptoms : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.values?.duration ? dt?.values?.duration : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.aggravating}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.relieving}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.temporal}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.values?.severity ? dt?.values?.severity : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SymtomsTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState,useCallback,useEffect } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SignsSymptomsForm from \"./SignsSymptomsForm\";\r\nimport MedicationOrderTable from \"../../../../../../Tables/MedicationOrderTable\";\r\nimport SymtomsTable from \"../../../../../../Tables/Subjective/SymtomsTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\n\r\nconst SignsSymptoms = ({ from }) => {\r\n  const detailsData = [\r\n    { id: 1, label: \"\" },\r\n    { id: 2, label: \"RX\" },\r\n    { id: 3, label: \"FREQUENCY\" },\r\n    { id: 4, label: \"DURATION\" },\r\n    { id: 5, label: \"QTY/TAKEN\" },\r\n    { id: 6, label: \"ACTIONS​\" },\r\n  ];\r\n\r\n  const detailsValue = [\r\n    {\r\n      id: 1,\r\n      name: \"Prescribed\",\r\n      rx: \"Medicine 1\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Alternative\",\r\n      rx: \"Medicine 2\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n  ];\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"LOCATION\" },\r\n    { id: 5, label: \"Symptoms\" },\r\n    { id: 4, label: \"DURATION IN DAYS\" },\r\n    // { id: 6, label: \"aggravating factors\" },\r\n    // { id: 7, label: \"Relieving factors\" },\r\n    // { id: 8, label: \"Temporal factors\" },\r\n    { id: 6, label: \"Severity\" },\r\n    // { id: 10, label: \"Notes\" },\r\n    { id: 6, label: \"Actions\" },\r\n  ];\r\n\r\n\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     onset: \"2024-07-15 03:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     onset: \"2024-08-15 10:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"150\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Mild\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     onset: \"2024-07-18 20:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"120\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Moderate\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Worst\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 6,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Severe\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 7,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 8,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 9,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 10,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  // ];\r\n\r\n  const { loading, error, get,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };  \r\n\r\n\r\n\r\n  \r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data,id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id)\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  \r\n  const fetchSignsSymptoms = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHealth?slug=hpi&user_id=261&limit=${itemsPerPage}&page=${currentPage}&order_by=values->date&dir=2`\r\n      );\r\n      if (response.code === 200) {\r\n        console.log(response.data.patient_healths);\r\n        setRowData(response.data.patient_healths);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage]);\r\n\r\n  useEffect(() => {\r\n    fetchSignsSymptoms();\r\n  }, [fetchSignsSymptoms]);\r\n\r\n  // Delte Signs Symptoms\r\n  const deleteSignsSymptoms = async () => {\r\n    try {\r\n      const response = await del(`resource/patientHealth/${id}`);\r\n  \r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        fetchSignsSymptoms();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <SymtomsTable\r\n              rowData={rowData}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={pagination?.total}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <SignsSymptomsForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => deleteSignsSymptoms()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignsSymptoms;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst ExcerciseHabitForm = ({ back, defaultValues }) => {\r\n  const [exercises, setExercises] = useState([\r\n    {\r\n      id: 1,\r\n      type: \"\",\r\n      date:  new Date(),\r\n      time: new Date(),\r\n      duration: \"\",\r\n      intensity: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleAddExercise = () => {\r\n    const newExercises = [\r\n      ...exercises,\r\n      {\r\n        id: exercises.length + 1,\r\n        type: \"\",\r\n        date: new Date(),\r\n        time: new Date(),\r\n        duration: \"\",\r\n        intensity: \"\",\r\n      },\r\n    ];\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  const handleRemoveExercise = (id) => {\r\n    const newExercises = exercises.filter((exercise) => exercise.id !== id);\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  const handleChange = (id, updatedData) => {\r\n    const newExercises = exercises.map((ex) =>\r\n      ex.id === id ? { ...ex, ...updatedData } : ex\r\n    );\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {exercises.map((exercise, index) => (\r\n        <div key={index}>\r\n          <CRow className=\"mb-3\">\r\n             <CCol lg={12}>\r\n               <div className=\"vertical-line\"></div>\r\n             </CCol>\r\n           </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={4}>\r\n              <div className=\"position-relative\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Date *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={exercise.date}\r\n                    onChange={(date) => handleChange(exercise.id, { date })}\r\n                    dateFormat={DATE_FORMAT}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4}>\r\n              <div className=\"position-relative\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Time *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={exercise.date}\r\n                    onChange={(date) => handleChange(exercise.id, { date })}\r\n                    showTimeSelect\r\n                    showTimeSelectOnly\r\n                    timeIntervals={15}\r\n                    timeCaption=\"Time\"\r\n                    dateFormat=\"h:mm aa\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Type *\r\n                  </label>\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={[\"One\", \"Two\"]}\r\n                      defaultValue={exercise.type}\r\n                      getSelectedValue={(value) =>\r\n                        handleChange(exercise.id, { type: value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Duration (in minutes)\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"000\"\r\n                    maxLength={3}\r\n                    defaultValue={defaultValues?.duration}\r\n                    onInput={(e) => {\r\n                      e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Intensity *\r\n                  </label>\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={[\"One\", \"Two\"]}\r\n                      defaultValue={exercise.intensity}\r\n                      getSelectedValue={(value) =>\r\n                        handleChange(exercise.id, { intensity: value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {index > 0 && (\r\n            <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton hgdf\r\n                        onClick={() => handleRemoveExercise(exercise.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n            </CRow>\r\n           </>\r\n            \r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddExercise}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExcerciseHabitForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExerciseHabitTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/ExerciseHabitTable\";\r\nimport ExcerciseHabitForm from \"./ExcerciseHabitForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst ExerciseHabit = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Type\" },\r\n    { label: \"DURATION\" },\r\n    { label: \"INTENSITY\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration: \"30\",\r\n      intensity: \"Moderate\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration: \"30\",\r\n      intensity: \"Moderate\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration: \"30\",\r\n      intensity: \"Moderate\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration: \"30\",\r\n      intensity: \"Moderate\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration: \"30\",\r\n      intensity: \"Moderate\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration: \"30\",\r\n      intensity: \"Moderate\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <ExerciseHabitTable\r\n          rowData={getCurrentPageItems()}\r\n          columns={columnData}\r\n          getselectedData={getselectedData}\r\n          from={from}\r\n        />\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <ExerciseHabitTable\r\n                  rowData={getCurrentPageItems()}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ExcerciseHabitForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExerciseHabit;\r\n","import { CCol, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\n\r\nconst MoodForm = ({ back, defaultValues }) => {\r\n\r\n    const [date, setDate] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n        const parseDateString = (dateString) => {\r\n            const parts = dateString?.split(\" \");\r\n            const datePart = parts[0];\r\n            const timePart = parts[1];\r\n            const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n            const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n            const date = new Date(year, month - 1, day, hours, minutes);\r\n            return date;\r\n        };\r\n\r\n        // Example default date string\r\n        const defaultDateString = defaultValues?.date;\r\n\r\n        // Parse default date string to Date object\r\n        const defaultDate = defaultValues?.date\r\n            ? parseDateString(defaultDateString)\r\n            : new Date();\r\n\r\n        // Set default date in state\r\n        setDate(defaultDate);\r\n    }, [defaultValues]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Date *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={date}\r\n                                onChange={(date) => setDate(date)}\r\n                                dateFormat={DATE_FORMAT}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Time *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={date}\r\n                                onChange={(date) => setDate(date)}\r\n                                showTimeSelect\r\n                                showTimeSelectOnly\r\n                                timeIntervals={15}\r\n                                timeCaption=\"Time\"\r\n                                dateFormat=\"h:mm aa\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n                <p className=\"radio-label\">Type *</p>\r\n                <CCol lg={12}>\r\n\r\n                    <div className=\"h-100 d-flex align-items-end w-100 \">\r\n\r\n                        <div\r\n                            style={{\r\n                                boxSizing: \"border-box\",\r\n                                borderRadius: \"5px\",\r\n                                border: \"1px solid #17171D33\",\r\n                                padding: \"10px\",\r\n                            }}\r\n                        >\r\n                            <CFormCheck\r\n\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox1\"\r\n                                value=\"bf\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Happy\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox2\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Sad\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox3\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Angry\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox4\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Relaxed\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox5\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Excited\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox6\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Anxious\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox7\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Content\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox8\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Frustrated\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox9\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Surprised\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox10\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Confident\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MoodForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport MoodTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/MoodTable\";\r\nimport MoodForm from \"./MoodForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Mood = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Type\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <MoodTable\r\n          rowData={getCurrentPageItems()}\r\n          columns={columnData}\r\n          getselectedData={getselectedData}\r\n          from={from}\r\n        />\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <MoodTable\r\n                  rowData={getCurrentPageItems()}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <MoodForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  //  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mood;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst NutritionDietTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type_of_diet}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NutritionDietTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst NutritionFluidTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult-Intake\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.intake}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult-Intake\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NutritionFluidTable;\r\n","import { CCol, CRow,CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst DietForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  \r\n    const options = [\"Veg\", \"Non-Veg\",\"Others\"];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type of Diet * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Notes\r\n            </label>\r\n            <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default DietForm","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst FluidIntakeForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n    const options = [\"Water\", \"Oral Rehydration Solutions\",\"Clear Broth\", \"Milk\",\"Fruit Juices\",\"Herbal Teas\",\"Coffee\",\"Tea\",\"Sports Drinks\",\"Soft Drinks\",\r\n        \"Energy Drinks\",\"Coconut Water\",\"Infused Water\",\"Soup\",\"Electrolyte Solutions\",\"Alcoholic Beverages\",];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Intake (ml)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"0000\"\r\n              maxLength={4}\r\n              defaultValue={defaultValues?.name}\r\n              onInput={(e) => {\r\n                e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default FluidIntakeForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicalTab from \"../../../MedicalTab\";\r\nimport ExerciseHabitTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/ExerciseHabitTable\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport NutritionDietTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/NutritionDietTable\";\r\nimport NutritionFluidTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/NutritionFluidTable\";\r\nimport DietForm from \"./DietForm\";\r\nimport FluidIntakeForm from \"./FluidIntakeForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Nutrition = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Type of Diet\" },\r\n    { id: 4, label: \"Notes\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type_of_diet: \"Non-Veg\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type_of_diet: \"Non-Veg\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type_of_diet: \"Non-Veg\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n\r\n  const FluidIntakecolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 3, label: \"Date\" },\r\n    { id: 3, label: \"Type\" },\r\n    { id: 4, label: \"INTAKE (ML)\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const FluidIntakerowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Water\",\r\n      intake: \"1500\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Water\",\r\n      intake: \"1500\",\r\n    },\r\n  ];\r\n\r\n  const tabs = [\r\n    { id: 1, title: \"Diet\" },\r\n    { id: 2, title: \"Fluid Intake\" },\r\n  ];\r\n\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-4\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 1;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentFluidPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return FluidIntakerowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <NutritionDietTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from === \"Consult-Intake\" && (\r\n        <CRow>\r\n          <NutritionFluidTable\r\n            rowData={getCurrentFluidPageItems()}\r\n            columns={FluidIntakecolumnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && from !== \"Consult-Intake\" && (\r\n        <>\r\n          <>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"\">\r\n                <MedicalTab\r\n                  tabs={tabs}\r\n                  getCurrentTab={getCurrentTab}\r\n                  defaultTab={ParsedPatientSubMenu - 1}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n            {!addFormView && (\r\n              <>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={8} className=\"\">\r\n                    <DateSearch />\r\n                  </CCol>\r\n                  <CCol\r\n                    lg={4}\r\n                    className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                  >\r\n                    <div>\r\n                      <PrimaryButton onClick={() => addFormPage()}>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.Add} alt=\"add\" />\r\n                          <span className=\"fs-16 fw-600\">Add</span>\r\n                        </div>\r\n                      </PrimaryButton>\r\n                    </div>\r\n                    <div>\r\n                      <PrimaryButton onClick={() => addFormPage()}>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                        </div>\r\n                      </PrimaryButton>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <div className=\"mb-2\">\r\n                  {currentTab === 1 && (\r\n                    <>\r\n                      <CRow>\r\n                        <NutritionDietTable\r\n                          rowData={getCurrentPageItems()}\r\n                          columns={columnData}\r\n                          getselectedData={getselectedData}\r\n                        />\r\n                      </CRow>\r\n                      <CRow className=\"mb-3\">\r\n                        <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                          <Pagination\r\n                            currentPage={currentPage}\r\n                            onPageChange={onPageChange}\r\n                            totalItems={rowData?.length}\r\n                            itemsPerPage={itemsPerPage}\r\n                          />\r\n                        </CCol>\r\n                      </CRow>\r\n                    </>\r\n                  )}\r\n                  {currentTab === 2 && (\r\n                    <>\r\n                      <CRow>\r\n                        <NutritionFluidTable\r\n                          rowData={getCurrentFluidPageItems()}\r\n                          columns={FluidIntakecolumnData}\r\n                          getselectedData={getselectedData}\r\n                        />\r\n                      </CRow>\r\n                      <CRow className=\"mb-3\">\r\n                        <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                          <Pagination\r\n                            currentPage={currentPage}\r\n                            onPageChange={onPageChange}\r\n                            totalItems={rowData?.length}\r\n                            itemsPerPage={itemsPerPage}\r\n                          />\r\n                        </CCol>\r\n                      </CRow>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n\r\n          {addFormView && (\r\n            <CRow className=\"mb-2\">\r\n              <CCard className=\"p-2 cursor-default mb-5\">\r\n                <CCardBody className=\"mb-3\">\r\n                  {currentTab === 1 && (\r\n                    <DietForm\r\n                      back={() => {\r\n                        setAddFormView(false);\r\n                        setSelectedData({});\r\n                      }}\r\n                      // defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                  {currentTab === 2 && (\r\n                    <FluidIntakeForm\r\n                      back={() => {\r\n                        setAddFormView(false);\r\n                        setSelectedData({});\r\n                      }}\r\n                      // defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CRow>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nutrition;\r\n","import { CCol, CRow, CFormCheck, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst SexualStatusForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [historySti, setHistorySti] = useState(false);\r\n  const [currentSti, setCurrentSti] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    const defaultDateString = defaultValues?.date;\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  const handleHistoryStiClick = (event) => {\r\n    setHistorySti(event.target.value === \"yes\");\r\n  };\r\n\r\n  const handleCurrentStiClick = (event) => {\r\n    setCurrentSti(event.target.value === \"positive\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <p className=\"radio-label\">Sexual Activity</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"activityYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"activity\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"activityNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"activity\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol lg={6}>\r\n          <p className=\"radio-label\">History of STI</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"historyYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"sti\"\r\n                checked={historySti === true}\r\n                onChange={handleHistoryStiClick}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"historyNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"sti\"\r\n                checked={historySti === false}\r\n                onChange={handleHistoryStiClick}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      {historySti && (\r\n        <>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <div className=\"position-relative\">\r\n                <label className=\"form-label\">Last STI Screening Date *</label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date}\r\n                    onChange={(date) => setDate(date)}\r\n                    dateFormat={DATE_FORMAT}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label className=\"form-label\">STI History Notes</label>\r\n                  <CFormTextarea\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"Enter\"\r\n                    defaultValue={defaultValues?.sti_current_notes}\r\n                    disabled={from === \"Consult\" ? true : false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <p className=\"radio-label\">Current STI Status</p>\r\n              <div className=\"d-flex align-items-end w-100\">\r\n                <div\r\n                  style={{\r\n                    boxSizing: \"border-box\",\r\n                    borderRadius: \"5px\",\r\n                    border: \"1px solid #17171D33\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <CFormCheck\r\n                    className=\"mb-0\"\r\n                    inline\r\n                    type=\"radio\"\r\n                    id=\"statusPositive\"\r\n                    value=\"positive\"\r\n                    label={<label className=\"form-label mb-0\">Positive</label>}\r\n                    name=\"sti_status\"\r\n                    checked={currentSti === true}\r\n                    onChange={handleCurrentStiClick}\r\n                    disabled={from === \"Consult\" ? true : false}\r\n                  />\r\n                  <CFormCheck\r\n                    className=\"mb-0\"\r\n                    inline\r\n                    type=\"radio\"\r\n                    id=\"statusNegative\"\r\n                    value=\"negative\"\r\n                    label={<label className=\"form-label mb-0\">Negative</label>}\r\n                    name=\"sti_status\"\r\n                    checked={currentSti === false}\r\n                    onChange={handleCurrentStiClick}\r\n                    disabled={from === \"Consult\" ? true : false}\r\n                  />\r\n                  <CFormCheck\r\n                    className=\"mb-0\"\r\n                    inline\r\n                    type=\"radio\"\r\n                    id=\"statusUnknown\"\r\n                    value=\"unknown\"\r\n                    label={<label className=\"form-label mb-0\">Unknown</label>}\r\n                    name=\"sti_status\"\r\n                    checked={currentSti === false}\r\n                    onChange={handleCurrentStiClick}\r\n                    disabled={from === \"Consult\" ? true : false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            {currentSti && (\r\n              <CCol lg={6}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div className=\"position-relative\">\r\n                    <label className=\"form-label\">Current STI Notes</label>\r\n                    <CFormTextarea\r\n                      type=\"text\"\r\n                      class=\"form-control  pad-10\"\r\n                      id=\"validationTooltip01\"\r\n                      placeholder=\"Enter\"\r\n                      defaultValue={defaultValues?.name}\r\n                      disabled={from === \"Consult\" ? true : false}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            )}\r\n          </CRow>\r\n        </>\r\n      )}\r\n\r\n      {from !== \"Consult\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SexualStatusForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport MoodTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/MoodTable\";\r\nimport SexualStatusTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/SexualStatusTable\";\r\nimport SexualStatusForm from \"./SexualStatusForm\";\r\n\r\nconst SexualStatus = ({ back, from }) => {\r\n  const Data = {\r\n    id: 1,\r\n    sexual_activity: \"Active\",\r\n    history: \"Yes \",\r\n    screening_date: \"06-06-2024 \",\r\n    current_status: \"Active \",\r\n    sti_current_notes: \"lorem\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <SexualStatusForm back={back} defaultValues={Data} from={from} />\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SexualStatus;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst SleepTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SleepTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst SleepForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  \r\n    const options = [\"Disturbed\", \"Undisturbed\",\"Excess Dreams\",];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n           Duration (mins)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"0000\"\r\n              maxLength={4}\r\n              defaultValue={defaultValues?.name}\r\n              onInput={(e) => {\r\n                e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default SleepForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport SleepTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/SleepTable\";\r\nimport SleepForm from \"./SleepForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Sleep = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Type\" },\r\n    { label: \"DURATION (IN MINS)\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <SleepTable\r\n          rowData={getCurrentPageItems()}\r\n          columns={columnData}\r\n          getselectedData={getselectedData}\r\n          from={from}\r\n        />\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <SleepTable\r\n                  rowData={getCurrentPageItems()}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <SleepForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  // defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sleep;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst DateCards = ({ data, onClick }) => {\r\n  return (\r\n    <>\r\n      <CCard className=\"date-card cursor-default\">\r\n        <CCardBody>\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <div onClick={() => onClick(data, \"edit\")} className=\"cursor\">\r\n              <span className=\"fs-20 fw-600\">\r\n                {format(data?.date, \"dd-MM-yyyy\")}\r\n              </span>\r\n            </div>\r\n            <div onClick={() => onClick(data, \"delete\")}>\r\n              <img src={Assets.deleteorg} alt=\"Del\" className=\"cursor\" />\r\n            </div>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateCards;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst DateSearch = () => {\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n  \r\n    // Get today's date\r\n    const today = new Date();\r\n\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-2\">\r\n      <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n        <span className=\"fs-18 fw-400 label-color\">Start Date *</span>\r\n        <div style={{ width: \"100%\" }}>\r\n          <DatePicker\r\n            showIcon\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n            className=\"date-range-selector\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n        <span className=\"fs-18 fw-400 label-color\">End Date *</span>\r\n        <div style={{ width: \"100%\" }}>\r\n          <DatePicker\r\n            showIcon\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            className=\"date-range-selector\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol\r\n       md={3}\r\n        className=\"d-flex flex-column gap-1 justify-content-end\"\r\n      >\r\n      <div className=\"search-bar\"  style={{ width: \"100%\",borderRadius: \"10px\" }}>\r\n            <input type=\"text\" placeholder=\"Search\" style={{ padding: \"7px\" }} />\r\n          </div>\r\n      </CCol>\r\n      <CCol\r\n        md={3}\r\n        className=\"d-flex flex-column gap-1 justify-content-end\"\r\n        style={{ width: \"60px\" }}\r\n      >\r\n        <PrimaryButton>\r\n          <div className=\"d-flex align-items-center gap-2\">\r\n            <img src={Assets.search} alt=\"close\" />\r\n          </div>\r\n        </PrimaryButton>\r\n      </CCol>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default DateSearch","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst DateSelector = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span className=\"fs-18 fw-400 label-color\">Start Date *</span>\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span className=\"fs-18 fw-400 label-color\">End Date *</span>\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={endDate}\r\n              onChange={(date) => setEndDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateSelector;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst SingleDatePicker = ({ defaultDate }) => {\r\n  const [startDate, setStartDate] = useState(\r\n    defaultDate ? new Date(defaultDate) : new Date()\r\n  );\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={12} className=\"d-flex flex-column gap-1\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleDatePicker;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst Dropdown = ({ options, defaultValue, getSelectedValue }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\r\n    defaultValue || \"Select\" || options[0]\r\n  );\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    setSelectedOption(option);\r\n    setIsOpen(false); // Close the dropdown after selecting an option\r\n    getSelectedValue(option);\r\n  };\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Attach the event listener for clicks outside\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    \r\n    // Cleanup event listener on component unmount\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"dropdown-container\" ref={dropdownRef}>\r\n      <div className=\"dropdown-header\" onClick={toggleDropdown}>\r\n        <span>{selectedOption || \"Select an option\"}</span>\r\n        <span className={`arrow ${isOpen ? \"open\" : \"\"}`}></span>\r\n      </div>\r\n      {isOpen && (\r\n        <ul className=\"dropdown-list\">\r\n          {options.map((option, index) => (\r\n            <li key={index} onClick={() => handleOptionClick(option)}>\r\n              {option}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst OptionItem = ({ label, onSelect, selected, disabled }) => {\r\n  const [isSelected, setIsSelected] = useState(selected);\r\n  useEffect(() => {\r\n    setIsSelected(selected);\r\n  }, [selected]);\r\n  const toggleSelected = () => {\r\n    setIsSelected(!isSelected);\r\n    onSelect(label, !isSelected); // Notify parent component of selection change\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`option-item ${isSelected ? \"selected\" : \"\"} ${\r\n        disabled ? \"disabled\" : \"\"\r\n      }`}\r\n      onClick={toggleSelected}\r\n    >\r\n      {label}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../assets/Css/PaginationHome.css\";\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  totalItems,\r\n  onPageChange,\r\n  itemsPerPage,\r\n}) => {\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // Calculate total pages based on totalItems and itemsPerPage\r\n    const pagesCount = Math.ceil(totalItems / itemsPerPage);\r\n    setTotalPages(pagesCount);\r\n  }, [totalItems, itemsPerPage]);\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      onPageChange(page);\r\n    }\r\n  };\r\n\r\n  const getPageNumbers = () => {\r\n    const pageNumbers = [];\r\n    const range = 1; // Number of pages to show around the current page\r\n\r\n    if (totalPages <= 5) {\r\n      // Less than or equal to 5 pages, show all\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n    } else {\r\n      // More than 5 pages, use ellipses\r\n      if (currentPage <= 3) {\r\n        // Show first few pages and the last page\r\n        for (let i = 1; i <= 3; i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n        pageNumbers.push(\"...\");\r\n        pageNumbers.push(totalPages);\r\n      } else if (currentPage >= totalPages - 2) {\r\n        // Show last few pages and the first page\r\n        pageNumbers.push(1);\r\n        pageNumbers.push(\"...\");\r\n        for (let i = totalPages - 2; i <= totalPages; i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n      } else {\r\n        // Show a range around the current page\r\n        pageNumbers.push(1);\r\n        pageNumbers.push(\"...\");\r\n        for (let i = currentPage - range; i <= currentPage + range; i++) {\r\n          if (i > 0 && i <= totalPages) {\r\n            pageNumbers.push(i);\r\n          }\r\n        }\r\n        pageNumbers.push(\"...\");\r\n        pageNumbers.push(totalPages);\r\n      }\r\n    }\r\n\r\n    // Remove duplicate ellipses\r\n    return pageNumbers.filter(\r\n      (item, index, arr) =>\r\n        item !== \"...\" || (index > 0 && arr[index - 1] !== \"...\")\r\n    );\r\n  };\r\n\r\n  const pageNumbers = getPageNumbers();\r\n\r\n  return (\r\n    <div className=\"pagination-home\">\r\n      <div\r\n        onClick={() => handlePageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n        aria-label=\"Previous\"\r\n      >\r\n        &lt;\r\n      </div>\r\n      {pageNumbers.map((number, index) => (\r\n        <div\r\n          key={index}\r\n          onClick={() => {\r\n            if (number !== \"...\") {\r\n              handlePageChange(number);\r\n            }\r\n          }}\r\n          className={number === currentPage ? \"active-home-page\" : \"\"}\r\n          disabled={number === \"...\"}\r\n          aria-current={number === currentPage ? \"page\" : undefined}\r\n        >\r\n          {number}\r\n        </div>\r\n      ))}\r\n      <div\r\n        onClick={() => handlePageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n        aria-label=\"Next\"\r\n      >\r\n        &gt;\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst SearchBar = () => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={6} className=\"d-flex flex-column gap-1\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Search\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst PsychiatricTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{dt?.result}</span>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <Badge label={dt?.result} color={dt?.result ? \"error\" : \"\"} />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={\r\n                        i === 0 ? Assets?.testSubIcon : Assets?.testUnSubIcon\r\n                      }\r\n                      className=\"cursor\"\r\n                    />\r\n                    {i === 0 && (\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.testViewIcon}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"view\")}\r\n                    />\r\n                     )} \r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PsychiatricTable;\r\n","import React, { useState } from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { CModal, CModalBody, CModalHeader } from \"@coreui/react\";\r\nimport BlurBackground from \"../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../Buttons/SecondaryButton/SecondaryButton\";\r\nimport RespirationRateForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm\";\r\nimport Spo2 from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2\";\r\nimport Temperature from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature\";\r\nimport LFTForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm\";\r\nimport HeartRate from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate\";\r\nimport BSugar from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar\";\r\nimport LipidProfileForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm\";\r\nimport HCT from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT\";\r\nimport Hemogloin from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin\";\r\nimport BKetone from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone\";\r\nimport BUricAcid from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid\";\r\nimport GFR from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR\";\r\nimport Creatinine from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine\";\r\nimport Urea from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea\";\r\nimport Urinalysis from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis\";\r\nimport BMI from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI\";\r\nimport BPForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm\";\r\nimport useApi from \"../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\n\r\nconst DynamicTable = ({\r\n  columnsData,\r\n  tableData,\r\n  getTableDatas,\r\n  from,\r\n  render,\r\n}) => {\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [selectedData, setSelectedData] = useState(\"\");\r\n  const { loading, del, clearCache } = useApi();\r\n\r\n  const deleteData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setDeleteModal(true);\r\n    }\r\n  };\r\n\r\n  const editData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setEditModal(true);\r\n    }\r\n  };\r\n\r\n  const onDelete = async () => {\r\n    try {\r\n      const url = `resource/vitals/${selectedData?.id}`; // Replace with your API endpoint\r\n      await del(url);\r\n      await getTableDatas(selectedData);\r\n      toast.success(\"Deleted successfully\");\r\n      setDeleteModal(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"responsive-table-container\">\r\n        <table\r\n          class=\"responsive-table\"\r\n          style={{ background: from === \"Consult\" ? \"white\" : \"transparent\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              {columnsData?.map(\r\n                (data, i) =>\r\n                  from === \"Consult\" && i === columnsData.length - 1 ? null : (\r\n                    <th key={i}>{data?.label}</th>\r\n                  )\r\n                // <th key={column.id}>{column.label}</th>\r\n              )}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableData?.length <= 0 ? (\r\n              <tr>\r\n                <td colSpan={columnsData.length} className=\"no-data-message\">\r\n                  No data available\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              tableData?.map((row, rowIndex) => (\r\n                <tr key={rowIndex}>\r\n                  {columnsData.map((column, i) =>\r\n                    from === \"Consult\" &&\r\n                    i === columnsData.length - 1 ? null : (\r\n                      <td key={`${rowIndex}-${column?.id}`}>\r\n                        {renderCell(row, column)}\r\n                      </td>\r\n                    )\r\n                  )}\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Delete Modal */}\r\n      {deleteModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteModal}\r\n            onClose={() => setDeleteModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => onDelete()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteModal(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {/* Edit Modal */}\r\n      {editModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={editModal}\r\n            onClose={() => setEditModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalHeader>\r\n              <h4 className=\"fw-600\">Edit {selectedData?.name}</h4>\r\n            </CModalHeader>\r\n            <CModalBody className=\"p-3\">\r\n              {selectedData?.name === \"BMI\" && (\r\n                <BMI\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Pressure\" && (\r\n                <BPForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Respiration Rate\" && (\r\n                <RespirationRateForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"SpO2\" && (\r\n                <Spo2\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Temperature\" && (\r\n                <Temperature\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Lung Function Test (LFT)\" && (\r\n                <LFTForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Heart\" && (\r\n                <HeartRate\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Sugar\" && (\r\n                <BSugar\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Lipid Profile\" && (\r\n                <LipidProfileForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Hematocrit (HCT)\" && (\r\n                <HCT\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Hemoglobin\" && (\r\n                <Hemogloin\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Ketone\" && (\r\n                <BKetone\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Uric Acid\" && (\r\n                <BUricAcid\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"GFR\" && (\r\n                <GFR\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Creatinine\" && (\r\n                <Creatinine\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urea\" && (\r\n                <Urea\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urinalysis\" && (\r\n                <Urinalysis\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const renderImage = (contentUrl) => {\r\n    return (\r\n      <img\r\n        src={contentUrl}\r\n        alt=\"Image\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  function renderCell(row, column) {\r\n    const columnKey = getColumnKey(column?.label);\r\n    const value = row[columnKey];\r\n\r\n    if (columnKey === \"result_file\") {\r\n      // Function to render PDF content\r\n      const renderPdf = (contentUrl) => {\r\n        window.open(contentUrl, \"_blank\");\r\n      };\r\n      return (\r\n        <div style={{ width: \"80px\" }} onClick={() => renderPdf(value.link)}>\r\n          <span className=\"hyperlink\">{value.name}</span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"result\") {\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          {value?.name ? (\r\n            <Badge label={value?.name} color={value?.status} />\r\n          ) : (\r\n            <span>{value}</span>\r\n          )}\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"date\") {\r\n      // Function to format date-time string\r\n      const formatDateTime = (dateTimeString) => {\r\n        if (!dateTimeString) {\r\n          return \"Invalid date-time\"; // Handle empty or invalid input\r\n        }\r\n\r\n        // Parse the date and time string\r\n        const parsedDate = parse(\r\n          dateTimeString,\r\n          \"yyyy-MM-dd HH:mm\",\r\n          new Date()\r\n        );\r\n\r\n        // Check if the parsed date is valid\r\n        if (!isValid(parsedDate)) {\r\n          return \"Invalid date-time\"; // Handle invalid date\r\n        }\r\n\r\n        // Format the date and time into 'dd-MM-yyyy HH:mm'\r\n        return format(parsedDate, \"dd-MM-yyyy HH:mm\");\r\n      };\r\n\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          <span>{formatDateTime(value)} </span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"action\") {\r\n      return (\r\n        <div className=\"d-flex gap-2\">\r\n          {value.map((data, i) => (\r\n            <div key={i} className=\"d-flex\">\r\n              {renderActionButton(data, row)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      // Default rendering for regular data\r\n      return <span className=\"fs-16 fw-500\">{value}</span>;\r\n    }\r\n  }\r\n\r\n  function renderActionButton(data, row) {\r\n    switch (data.type) {\r\n      case \"warning\":\r\n        return <img src={Assets.Warning} alt=\"warn\" className=\"cursor\" />;\r\n      case \"edit\":\r\n        return (\r\n          <img\r\n            src={Assets.EditPencil}\r\n            alt=\"edit\"\r\n            className=\"cursor\"\r\n            onClick={() => editData(row)}\r\n          />\r\n        );\r\n      case \"delete\":\r\n        return (\r\n          <img\r\n            src={Assets.Delete}\r\n            alt=\"delete\"\r\n            className=\"cursor\"\r\n            onClick={() => deleteData(row)}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function getColumnKey(columnLabel) {\r\n    // Convert label to a key format used in your data object\r\n    // Example: \"Heart Rate (BPM)\" -> \"heart_rate_(bpm)\"\r\n    return columnLabel.toLowerCase().replace(/\\s+/g, \"_\");\r\n  }\r\n};\r\n\r\nexport default DynamicTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImagingOrderTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.file !== \"-\" ? (\r\n                    <Badge label={dt?.file} color={\"primary\"} />\r\n                  ) : (\r\n                    \"-\"\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.notes}\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.link}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.icd_code}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.scan_name}</span>\r\n                  <Badge\r\n                    label={dt?.scan_status}\r\n                    color={\r\n                      dt?.scan_status === \"Accepted\"\r\n                        ? \"yellow\"\r\n                        : dt?.scan_status === \"Uploaded\"\r\n                        ? \"success\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                    >\r\n                      {dt?.scan_status === \"Accepted\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.Approve}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.scan_status === \"Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.scan_status === \"Not Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.EditPencil}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                          />\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.TableDelete}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"delete\")}\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                    }}\r\n                    className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                  >\r\n                    {dt?.scan_status === \"Accepted\" && (\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.Accept}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                      />\r\n                    )}\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst LabOrderTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.file !== \"-\" ? (\r\n                    <Badge label={dt?.file} color={\"primary\"} />\r\n                  ) : (\r\n                    \"-\"\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.notes}\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.link}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.icd_code}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lab_name}</span>\r\n                  <Badge\r\n                    label={dt?.lab_status}\r\n                    color={\r\n                      dt?.lab_status === \"Accepted\"\r\n                        ? \"yellow\"\r\n                        : dt?.lab_status === \"Uploaded\"\r\n                        ? \"success\"\r\n                        : dt?.lab_status === \"Prescribed\"\r\n                        ? \"warning\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                    >\r\n                      {dt?.lab_status === \"Accepted\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.Approve}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.lab_status === \"Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.lab_status === \"Not Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.EditPencil}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                          />\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.TableDelete}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"delete\")}\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst LabTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <Badge label={dt?.file} color={\"primary\"} />\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.notes}</CTableDataCell>\r\n              <CTableDataCell>{dt?.link}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst MedicationOrderTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  console.log(\"first\", rowData[0]);\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span className=\"fs-16 fw-500\">{dat?.name}</span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span className=\"fs-16 fw-500\">{dat?.strength} mg</span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span className=\"fs-16 fw-500\">\r\n                        {dat?.m} | {dat?.a} | {dat?.e} | {dat?.n}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span\r\n                        className=\"fs-16 fw-500\"\r\n                        style={{\r\n                          textTransform: \"capitalize\",\r\n                        }}\r\n                      >\r\n                        {dat?.food}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lab_name}</span>\r\n                  <Badge\r\n                    label={dt?.lab_status}\r\n                    color={\r\n                      dt?.lab_status === \"Received\"\r\n                        ? \"primary\"\r\n                        : dt?.lab_status === \"Delivered\"\r\n                        ? \"success\"\r\n                        : dt?.lab_status === \"Prescribed\"\r\n                        ? \"warning\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                    >\r\n                      {dt?.lab_status === \"Waiting For Approval\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          // src={Assets?.UpdateIcon}\r\n                          src={Assets?.Approve}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.lab_status === \"Prescribed\" ? (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.EditPencil}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                          />\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.TableDelete}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"delete\")}\r\n                          />\r\n                        </>\r\n                      ) : dt?.lab_status === \"Received\" ? (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.UStatus}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                            style={{ width: \"35px\" }}\r\n                          />\r\n                        </>\r\n                      ) : dt?.lab_status === \"Delivered\" ? (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.visibleEye}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"completed\")}\r\n                            style={{ width: \"30px\" }}\r\n                          />\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n                    {/* <div\r\n                    style={{\r\n                      width: dt?.lab_status === \"Accepted\" ? \"50%\" : \"100%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.visibleEye}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div> */}\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst MedicalHistoryTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.onset}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.conditions}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.icd10}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.chronic}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.prev_illness}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistoryTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst MedicationTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100 flex-column\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                  <small>\r\n                    {dt?.strength} {dt?.strength_measurement} {dt?.dosage}\r\n                  </small>\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.strength}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">\r\n                    {dt?.strength_measurement}\r\n                  </span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.dosage}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">\r\n                    {dt?.m} | {dt?.a} | {dt?.e} | {dt?.n}\r\n                  </span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.food_times}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.qty}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.start_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\"> {dt?.status} </span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nfunction ExerciseHabitTable({ columns, rowData, getselectedData, from }) {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.intensity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExerciseHabitTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst MoodTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"20%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"20%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoodTable;\r\n","// Define your constants\r\nconst DATE_FORMAT = \"dd-MM-yyyy\";\r\n\r\nexport { DATE_FORMAT };\r\n","export const findItemIndex = (options, value) => {\r\n  // Use findIndex to get the index of the item with the specified id\r\n  const index = options.findIndex((item) => item === value);\r\n  return index;\r\n};\r\n\r\nexport const extractNum = (data) => {\r\n  const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n  return numbers || \"\";\r\n};\r\n\r\nexport const getFileTypeFromMime = (mimeType) => {\r\n  const mimeTypes = {\r\n    'application/pdf': 'pdf',\r\n    'image/jpeg': 'jpg',\r\n    'image/png': 'png',\r\n    'text/plain': 'txt',\r\n    // Add more MIME types as needed\r\n  };\r\n\r\n  return mimeTypes[mimeType] || 'unknown';\r\n};\r\n\r\nexport const openFile = (contentUrl) => {\r\n  window.open(contentUrl, \"_blank\");\r\n};","import { format, isValid, parse } from \"date-fns\";\r\n\r\n// Function to format date as DD-MM-YYYY HH:mm AM/PM\r\nexport function formatDateTime(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n\r\n  const options = {\r\n    day: \"2-digit\",\r\n    month: \"2-digit\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  };\r\n\r\n  return date.toLocaleString(\"en-GB\", options).replace(\",\", \"\");\r\n}\r\n\r\n// Function to format date as DD-MM-YYYY\r\nexport function formatDate(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are zero-indexed\r\n  const year = date.getFullYear();\r\n\r\n  return `${day}-${month}-${year}`;\r\n}\r\n\r\n// Function to format time as HH:mm AM/PM\r\nexport function formatTime(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n  const options = {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  };\r\n\r\n  return date.toLocaleTimeString(\"en-GB\", options);\r\n}\r\n\r\nexport function tableDateTime(dateTimeString) {\r\n  if (!dateTimeString) {\r\n    return \"Invalid date-time\"; // Handle empty or invalid input\r\n  }\r\n\r\n  // Parse the date and time string\r\n  const parsedDate = parse(dateTimeString, \"yyyy-MM-dd HH:mm\", new Date());\r\n\r\n  // Check if the parsed date is valid\r\n  if (!isValid(parsedDate)) {\r\n    return \"Invalid date-time\"; // Handle invalid date\r\n  }\r\n\r\n  // Format the date and time into 'dd-MM-yyyy HH:mm'\r\n  return format(parsedDate, \"dd-MM-yyyy HH:mm\");\r\n}\r\n\r\nexport function getCurrentTime() {\r\n  const now = new Date();\r\n  const hours = now.getHours().toString().padStart(2, \"0\");\r\n  const minutes = now.getMinutes().toString().padStart(2, \"0\");\r\n  return `${hours}:${minutes}`;\r\n}\r\n"],"names":["useApi","apiUrl","process","apiKey","loading","setLoading","useState","error","setError","cache","useRef","fetchData","useCallback","async","url","options","current","startsWith","response","fetch","ok","Error","concat","statusText","data","json","message","get","method","headers","Authorization","sessionStorage","getItem","post","body","JSON","stringify","patch","del","clearCache","_ref","label","color","_jsx","className","children","paths","lastIndex","length","_Fragment","CBreadcrumb","map","index","CBreadcrumbItem","href","to","onClick","buttonName2","getbtnNames","buttonText","setButtonText","isOpen","setIsOpen","handleItemClick","text","_jsxs","toggleDropdown","src","Assets","cUp","alt","cDown","ObjectiveDatas","id","icon","VitalBP","slug","name","date","category","badge","columnsData","tableData","result","status","systolic","diastolic","chartLabel1","action","type","VitalBs","blood_sugar","blood_sugar_value","VitalBMI","bmi","height","weight","VitalHCT","VitalHBeat","interpretation","result_file","contentType","link","ecgSample","VitalHae","hemoglobin","hemoglobinValue","BKetone","blood_ketone","blood_ketone_value","VitalLipid","chartLabel2","chartLabel3","chartLabel4","chartLabel5","chartLabel6","VitalRespi","SpO2","spo2","Temp","temperature","unit","LFT","BUAcid","blood_uric_acid","blood_uric_acid_value","Urinalysis","specific_gravity","ph","clarity","protein","glucose","leukocyte","bilirubin","urobilinogen","red_blood_cells","white_blood_cells","Urea","urea","urea_value","Creatinine","creatinine","creatinine_value","GFR","gfr","gfr_value","from","rowData","questions","addFormView","setAddFormView","currentPage","setCurrentPage","selectedData","setSelectedData","PsychiatricTable","getCurrentPageItems","startIndex","endIndex","slice","columns","getselectedData","console","log","CCard","CCardBody","PsychiatricForm","back","defaultValues","formTitle","setFormTitle","formData","setFormData","handleChange","e","value","target","prevState","onSubmit","preventDefault","question","CRow","CCol","option","cIndex","CFormCheck","onChange","checked","style","width","PrimaryButton","SecondaryButton","CTable","CTableHead","CTableRow","i","CTableHeaderCell","CTableBody","dt","CTableDataCell","condition","treatment","TableEdit","TableDelete","setDate","useEffect","defaultDateString","defaultDate","dateString","_datePart$split","datePart","split","month","day","year","Number","Date","parseDateString","disableText","setDisableText","gravidaoptions","findgravidaIndex","indexOf","lg","class","for","DatePicker","showIcon","selected","dateFormat","DATE_FORMAT","border","borderRadius","Dropdown","getSelectedValue","defaultValue","disabled","onClose","remark","deleteView","setDeleteView","addFormPage","md","BackBtn","Breadcrumb","DateSearch","Add","OptionsIcon","DiagnosisTable","Pagination","onPageChange","pageNumber","totalItems","itemsPerPage","DiagnosisForm","BlurBackground","CModal","alignment","visible","CModalBody","takendate","setTakenDate","dosage_date","defaultDateString1","taken_date","defaultDate1","placeholder","vaccine","period","colorVaccined","vaccined","columnData","startDate","setStartDate","endDate","setEndDate","tkDate","setTkDate","today","ImmunizationTable","ImmunizationForm","maxDate","tabs","getCurrentTab","defaultTab","currentTab","setCurrentTab","switchTab","title","addBack","defaultData","selectedTime","setSelectedTime","selectedDate","setSelectedDate","_timePart$split","parts","timePart","hours","minutes","CContainer","isClearable","closeOnScroll","wrapperClassName","showTimeSelect","showTimeSelectOnly","timeIntervals","parseFloat","match","onInput","replace","xs","getTableDatas","defaultDateTime","defaultTime","getCurrentTime","parsedDate","parse","isValid","setHours","setMinutes","setSeconds","extractNum","setHeight","setWeight","heightUnit","setHeightUnit","height_unit","weightUnit","setWeightUnit","weight_unit","setBmi","errors","setErrors","validateInputs","currentErrors","time","isNaN","onEdit","onAdd","details","format","user_id","toast","success","calculateBMI","heightInMeters","toFixed","updatedDateTime","getHours","getMinutes","maxLength","setSystolic","toString","setDiastolic","pulse","setPulse","formattedDate","String","getDate","padStart","getMonth","getFullYear","getFormattedDate","validate","newErrors","trim","setType","bloodSugar","setBloodSugar","findItemIndex","setInterpretation","ecgFile","setEcgFile","hr","setHr","handleUpload","file","reader","FileReader","onloadend","base64","readAsDataURL","heart","files","htmlFor","openInNewTab","dataUrl","window","open","getFileTypeFromMime","fvcL","setFvcL","fvcPercent","setFvcPercent","fev1L","setFev1L","fev1Percent","setFev1Percent","pefL","setPefL","pefPercent","setPefPercent","fev1FvcPercent","setFev1FvcPercent","fef25L","setFef25L","fef25","fef25Percent","setFef25Percent","fef50L","setFef50L","fef50","fef50Percent","setFef50Percent","fef75L","setFef75L","fef75","fef75Percent","setFef75Percent","fef2575L","setFef2575L","fef2575","fef2575Percent","setFef2575Percent","notes","setNotes","numWithDecimal","convertNum","validateForm","fields","required","forEach","field","_field$value","fvc","fev1","fev1_fvc","pef","CFormTextarea","rows","totalOnly","triglycerides","hdl","respiration","setRespiration","spO2","setSpO2","selectedMethod","setSelectedMethod","selectedUnit","setSelectedUnit","setTemperature","handleUnitChange","boxSizing","padding","inline","nums","cell","setCell","wholeNumber","tabindex","Export","_selectedData$ga","_selectedData$ga5","_selectedData$skin4","_getCurrentPageItems","_selectedData$ga6","_selectedData$skin5","dateCards","ga","select","skin","selectedOptions","setSelectedOptions","skinselectedOptions","setSkinSelectedOptions","labelName1","setLabelname1","isSelected","setIsSelected","labelName","setLabelname","editView","setEditView","skinoptions","handleSelect","filter","item","handleSelectSkin","nutritionOpen","setNutritionOpen","constiOpen","setConstiOpen","generalOpen","setGeneralOpen","heentOpen","setHeentOpen","toggleSelected","_selectedData$ga2","_selectedData$skin","_selectedData$ga3","_selectedData$skin2","_selectedData$ga4","_selectedData$skin3","getselected","toggleSelected1","SingleDatePicker","PlusIcon","MinusIcon","OptionItem","onSelect","includes","DateSelector","DateCards","ActiveButton","listview","provider_name","reason","findIndex","prev_illness","timeCaption","NextAppointmentTable","NextAppointmentForm","PatientEducationTab","trimester","setTrimester","DropdownButton","icd_code","scan_status","scan_name","detailView","setDetailView","ImagingOrderTable","ImagingOrderForm","size","CFormSelect","lab_status","lab_name","LabOrderTable","LabOrderForm","defaultChecked","_defaultValues$medici","_defaultValues$medici2","_defaultValues$medici21","_defaultValues$medici22","medicines","setMedicines","strength","strengthMeasurement","days","totalQty","instruction","m","a","n","food","handleAddMedicine","newMedicines","push","handleRemoveMedicine","medicine","handleMedicineInputChange","fieldName","newValue","processedValue","toISOString","btnValue","setBtnValue","btnView","setBtnView","setStrength","qty","setQty","timeTaken","setTimeTaken","_defaultValues$medici3","_defaultValues$medici4","_defaultValues$medici5","_defaultValues$medici6","_defaultValues$medici7","_defaultValues$medici8","_defaultValues$medici9","_defaultValues$medici10","_defaultValues$medici11","_defaultValues$medici12","_defaultValues$medici13","_defaultValues$medici14","_defaultValues$medici15","_defaultValues$medici16","_defaultValues$medici17","_defaultValues$medici18","_defaultValues$medici19","_defaultValues$medici20","paddingRight","whiteDel","whiteAdd","rx","frequency","duration","rowSpan","TickCircle","display","justifyContent","PlusCircle","transform","completedView","setCompletedView","MedicationOrderTable","CloseBtn","MedicationOrderForm","MedicationCompleted","DetailsTable","dateStr","PatientEducationTable","PatientEducationForm","setTime","description","no","ProcedurerTable","ProcedureForm","ProcedureTab","date_time","therapy_name","therapist_name","TherapiesTable","TherapiesForm","TherapiesTab","_dt$addition_info","_dt$addition_info2","_dt$addition_info3","_dt$addition_info4","_dt$addition_info5","_dt$addition_info6","_dt$addition_info7","_dt$addition_info8","addition_info","EditPencil","Delete","_defaultValues$additi","getChiefComplaints","complaints","setComplaints","parseDate","timeString","now","parseTime","valid","undefined","formattedTime","moment","document_source","code","addChiefComplaints","OnClose","setRowData","pagination","setPagination","setId","docs","xl","ThreeDots","ChiefComplaintTable","total","ChiefComplaintsForm","deleteChiefComplaints","disease","grandparents","father","mother","Brother","Sister","Daughter","Son","FamilyHistoryTable","onset","icdoptions","chronic","findIndex2","icd10","conditions","MedicalHistoryTable","MedHistoryForm","date2","setDate2","fert_treatment","setFert_treatment","para","setPara","lacating","setLacating","gravida","setGravida","lmp_date","defaultDateString2","ed_date","defaultDate2","trimster","lacatingoptions","bad","setBad","preg","setPreg","pregnant","fertTreat","setFertTreat","lact","setLact","cesarean","setCesarean","obstetric","setObsteric","handleChangeObste","handleChangeCesa","handleChangeLact","handleChangeFert","gravidaValue","setGravidaValue","paraValue","setParaValue","numCheck","input","newstrValue","boh","lmp","menopause","setMenopause","handleClick","event","getSelectedValue2","setValue","age","value1","setValue1","value2","setValue2","cycle_per_year","value3","setValue3","cycle_in_days","handlePaste","clipboardData","getData","onPaste","date3","setDate3","abnormalStatus","setAbnormalStatus","history_of_abnormal","mamogramStatus","setMamogramStatus","history_of_mamogram","breastStatus","setBreastStatus","history_of_breast","handleAbnormalStatus","handleMamogramStatus","handleBreastStatus","date_of_last_pap","date_of_last_mamogram","defaultDateString3","date_of_last_breast","defaultDate3","PatientSubMenu4","localStorage","ParsedPatientSubMenu","PatientSubMenu5","ParsedPatientSubMenu5","currentHistoryTab","setCurrentHistoryTab","ObstetricHistoryTable","MensturalHistoryForm","ScreeningHistoryForm","MedicalTab","smokingStatus","setSmokingStatus","smoking","alcoholStatus","setAlcoholStatus","alcohol","drugStatus","setDrugStatus","drugs","handleSmokingStatus","handleAlcoholStatus","handleDrugStatus","getSelectedGravida","Performed_by","hospital","SurgicalTable","SurgicalForm","start_date","end_date","strength_measurement","dosage","time_taken","food_times","MedicationTable","MedicationForm","date1","setDate1","newDaysValue","newQtyValue","parseInt","end","parsedTime","duration_days","location","newValueDuration","aggravating","relieving","temporal","_dt$values","_dt$values2","_dt$values3","_dt$values4","_dt$values5","_dt$values6","_dt$values7","_dt$values8","_dt$values9","_dt$values10","_dt$values11","_dt$values12","values","symptoms","severity","fetchSignsSymptoms","patient_healths","SymtomsTable","SignsSymptomsForm","deleteSignsSymptoms","exercises","setExercises","intensity","updatedData","newExercises","ex","exercise","hgdf","handleRemoveExercise","handleAddExercise","ExerciseHabitTable","ExcerciseHabitForm","MoodTable","MoodForm","type_of_diet","intake","FluidIntakecolumnData","FluidIntakerowData","PatientSubMenu2","getCurrentFluidPageItems","NutritionDietTable","NutritionFluidTable","DietForm","FluidIntakeForm","historySti","setHistorySti","currentSti","setCurrentSti","handleHistoryStiClick","handleCurrentStiClick","sti_current_notes","SexualStatusForm","sexual_activity","history","screening_date","current_status","SleepTable","SleepForm","deleteorg","search","dropdownRef","selectedOption","setSelectedOption","handleClickOutside","contains","document","addEventListener","removeEventListener","ref","handleOptionClick","totalPages","setTotalPages","pagesCount","Math","ceil","handlePageChange","page","pageNumbers","getPageNumbers","arr","number","SearchBar","Badge","testSubIcon","testUnSubIcon","testViewIcon","render","deleteModal","setDeleteModal","editModal","setEditModal","deleteData","editData","background","colSpan","row","rowIndex","column","renderCell","onDelete","CModalHeader","BMI","BPForm","RespirationRateForm","Spo2","Temperature","LFTForm","HeartRate","BSugar","LipidProfileForm","HCT","Hemogloin","BUricAcid","columnKey","toLowerCase","renderPdf","contentUrl","formatDateTime","dateTimeString","renderActionButton","Warning","Approve","visibleEye","_dt$medicines","_dt$medicines2","_dt$medicines3","_dt$medicines4","dat","textTransform","UStatus","mimeType","originalDateStr","toLocaleString","hour","minute","hour12","formatDate"],"sourceRoot":""}