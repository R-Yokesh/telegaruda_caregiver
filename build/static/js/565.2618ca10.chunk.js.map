{"version":3,"file":"static/js/565.2618ca10.chunk.js","mappings":"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","sources":["Components/Breadcrumb/Breadcrumb.jsx","Components/PatientCard/PatientCard.jsx","Views/ExistingPatient/ExistingPatientView.jsx","../node_modules/@coreui/react/src/components/breadcrumb/CBreadcrumb.tsx","../node_modules/@coreui/react/src/components/breadcrumb/CBreadcrumbItem.tsx","../node_modules/@coreui/react/src/components/link/CLink.tsx"],"sourcesContent":["import { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./Breadcrumb.css\";\r\n\r\nconst Breadcrumb = ({ paths }) => {\r\n  const lastIndex = paths.length - 1;\r\n  const url = \"/telegaruda-caregiver\";\r\n  return (\r\n    <>\r\n      <CBreadcrumb>\r\n        {paths.map((data, index) => (\r\n          <CBreadcrumbItem\r\n            href={url + data?.to}\r\n            className={`breadcrumb-item-custom ${\r\n              lastIndex === index && \"black\"\r\n            }`}\r\n          >\r\n            <span className=\"breadcrumb-label\">{data.label}</span>\r\n          </CBreadcrumbItem>\r\n        ))}\r\n      </CBreadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction PatientCard({ PatientDetail }) {\r\n  const navigate = useNavigate();\r\n\r\n  const goTo = () => {\r\n    navigate(\"/patients/history\");\r\n  };\r\n  return (\r\n    <div className=\"card-sec\">\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"profile col-4\">\r\n          <img src={PatientDetail.profile} alt=\"Patient-image\" />\r\n        </div>\r\n        <div className=\"patient-details col-8\">\r\n          <h5>{PatientDetail.name}</h5>\r\n          <p className=\"flex-sec-wrap gap-sec\">\r\n            <small className=\"fs-10 fw-500\">{PatientDetail.email}</small>\r\n            <small className=\"fs-10 fw-500\">|</small>\r\n            <small className=\"fs-10 fw-500\">{PatientDetail.mobile}</small>\r\n          </p>\r\n          <p className=\"flex-sec-wrap gap-sec\">\r\n            <small className=\"fs-10 fw-600\">MRN: {PatientDetail.mrn}</small>\r\n            <small className=\"fs-10 fw-600\">|</small>\r\n            <small className=\"fs-10 fw-600\">{PatientDetail.age}</small>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <img\r\n        src={Assets.Edit}\r\n        className=\"edit-icon cursor\"\r\n        alt=\"edit-icon\"\r\n        onClick={goTo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientCard;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../Components/Breadcrumb/Breadcrumb\";\r\nimport PatientCard from \"../../Components/PatientCard/PatientCard\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nfunction ExistingPatientView() {\r\n  const navigate = useNavigate();\r\n\r\n  const PatientDetail = [\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n  ];\r\n\r\n  const DetailSec = () => {\r\n    localStorage.removeItem(\"patiendDetailTab\");\r\n    navigate(\"/patients/history\");\r\n  };\r\n\r\n  return (\r\n    <section className=\"existing-patient\">\r\n      <div className=\"flex-sec top-sec\">\r\n        <div className=\"bread-crumbs\">\r\n          <p>\r\n            <Link to=\"/patients\">Patient</Link> /{\" \"}\r\n            <Link to=\"/patients\" className=\"active\">\r\n              Existing Patient\r\n            </Link>\r\n          </p>\r\n        </div>\r\n        <div className=\"patient-adding\">\r\n          <button>+ ADD Patient</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {PatientDetail.map((data, i) => (\r\n          <div className=\"col-4\" onClick={() => DetailSec()}>\r\n            <Link\r\n              //   to={\"/patients/history\"}\r\n              className=\"card-link\"\r\n            >\r\n              <PatientCard PatientDetail={data} />\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ExistingPatientView;\r\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CBreadcrumbProps extends HTMLAttributes<HTMLOListElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CBreadcrumb = forwardRef<HTMLOListElement, CBreadcrumbProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <nav aria-label=\"breadcrumb\">\n        <ol className={classNames('breadcrumb', className)} {...rest} ref={ref}>\n          {children}\n        </ol>\n      </nav>\n    )\n  },\n)\n\nCBreadcrumb.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCBreadcrumb.displayName = 'CBreadcrumb'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CLink } from '../link/CLink'\n\nexport interface CBreadcrumbItemProps extends HTMLAttributes<HTMLLIElement> {\n  /**\n   * Toggle the active state for the component.\n   */\n  active?: boolean\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * The `href` attribute for the inner `<CLink>` component.\n   */\n  href?: string\n}\n\nexport const CBreadcrumbItem = forwardRef<HTMLLIElement, CBreadcrumbItemProps>(\n  ({ children, active, className, href, ...rest }, ref) => {\n    return (\n      <li\n        className={classNames(\n          'breadcrumb-item',\n          {\n            active: active,\n          },\n          className,\n        )}\n        {...(active && { 'aria-current': 'page' })}\n        {...rest}\n        ref={ref}\n      >\n        {href ? <CLink href={href}>{children}</CLink> : children}\n      </li>\n    )\n  },\n)\n\nCBreadcrumbItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  href: PropTypes.string,\n}\n\nCBreadcrumbItem.displayName = 'CBreadcrumbItem'\n","import React, { AllHTMLAttributes, ElementType, forwardRef, MouseEvent } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CLinkProps\n  extends Omit<AllHTMLAttributes<HTMLButtonElement | HTMLAnchorElement>, 'as'> {\n  /**\n   * Toggle the active state for the component.\n   */\n  active?: boolean\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * The href attribute specifies the URL of the page the link goes to.\n   */\n  href?: string\n}\n\nexport const CLink: PolymorphicRefForwardingComponent<'a', CLinkProps> = forwardRef<\n  HTMLButtonElement | HTMLAnchorElement,\n  CLinkProps\n>(({ children, active, as: Component = 'a', className, disabled, ...rest }, ref) => {\n  return (\n    <Component\n      // TODO: remove duplicated classes ex. `active active` in `<CListGroupItem>`\n      className={classNames(className, { active, disabled })}\n      {...(active && { 'aria-current': 'page' })}\n      {...(Component === 'a' && disabled && { 'aria-disabled': true, tabIndex: -1 })}\n      {...((Component === 'a' || Component === 'button') && {\n        onClick: (event: MouseEvent<HTMLButtonElement | HTMLAnchorElement>) => {\n          event.preventDefault\n          !disabled && rest.onClick && rest.onClick(event)\n        },\n      })}\n      disabled={disabled}\n      {...rest}\n      ref={ref}\n    >\n      {children}\n    </Component>\n  )\n})\n\nCLink.propTypes = {\n  active: PropTypes.bool,\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n}\n\nCLink.displayName = 'CLink'\n"],"names":["_ref","paths","lastIndex","length","_jsx","_Fragment","children","CBreadcrumb","map","data","index","CBreadcrumbItem","href","to","className","concat","label","PatientDetail","navigate","useNavigate","_jsxs","src","profile","alt","name","email","mobile","mrn","age","Assets","Edit","onClick","goTo","Patient","Link","i","localStorage","removeItem","PatientCard","forwardRef","_a","ref","rest","__rest","React","__assign","classNames","propTypes","PropTypes","displayName","active","CLink","_b","as","Component","disabled","tabIndex","event","preventDefault"],"sourceRoot":""}