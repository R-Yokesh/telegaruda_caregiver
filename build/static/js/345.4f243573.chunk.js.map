{"version":3,"file":"static/js/345.4f243573.chunk.js","mappings":"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","sources":["ApiServices/useApi.jsx","Components/Badge/Badge.jsx","Components/BlurBackground/BlurBackground.jsx","Components/Breadcrumb/Breadcrumb.jsx","Components/Buttons/ActiveButton/ActiveButton.jsx","Components/Buttons/DropDownButton/DropDownButton.jsx","Components/Buttons/PrimaryButton/PrimaryButton.jsx","Components/Consultant/TableColumnsJson/ObjectiveJson.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Neurological/NeurologicalForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Neurological/Neurological.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Ophthalmic/Ophthalmic.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Peadiatric/PeadiatricForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Peadiatric/Peadiatric.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Psychiatric/Psychiatric.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Psychiatric/PsychiatricForm.jsx","Components/Tables/DiagnosisTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Diagnosis/DiagnosisForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Diagnosis/Diagnosis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Immunization/ImmunizationForm.jsx","Components/Tables/ImmunizationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Immunization/Immunization.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Lab/LabForm.jsx","Components/OptionItems/ExamOptions.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/PhysicalExam/PhysicalExam.jsx","Components/Tables/NextAppointmentTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointmentTab/NextAppointmentForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointmentTab/NextAppointmentTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointment.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/DetailsTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationCompleted.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrder.jsx","Components/Tables/PatientEducationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducationTab/PatientEducationTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducation.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducationTab/PatientEducationForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureForm.jsx","Components/Tables/ProcedurerTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/Cpt.jsx","Components/Tables/TherapiesTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/TherapiesTab/TherapiesForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/TherapiesTab/TherapiesTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/Therapies.jsx","Components/Tables/Subjective/ChiefComplaintTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Chief Complaints/ChiefComplaintsForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Chief Complaints/ChiefComplaints.jsx","Components/Tables/Subjective/FamilyHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Family History/FamilyHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Medical History/MedHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Medical History/MedicalHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/ObstericHistoryForm.jsx","Components/Tables/Subjective/ObstetricHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/MensturalHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/ScreeningHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/OGHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Social History/MedHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Social History/SocialHistory.jsx","Components/Dropdown/ICDDrop.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Surgical History/SurgicalForm.jsx","Components/Tables/Subjective/SurgicalTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Surgical History/SurgicalHistory.jsx","Components/Tables/Subjective/MedicationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Medication/Medication.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Medication/MedicationForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Signs And Symptoms/SignsSymptomsForm.jsx","Components/Tables/Subjective/SymtomsTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Signs And Symptoms/SignsSymptoms.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/ExerciseHabit/ExcerciseHabitForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/ExerciseHabit/ExerciseHabit.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Mood/MoodForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Mood/Mood.jsx","Components/Tables/Subjective/WellnessProfileTable/NutritionDietTable.jsx","Components/Tables/Subjective/WellnessProfileTable/NutritionFluidTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/DietForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/FluidIntakeForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/Nutrition.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/SexualStatus/SexualStatusForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/SexualStatus/SexualStatus.jsx","Components/Tables/Subjective/WellnessProfileTable/SleepTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Sleep/SleepForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Sleep/Sleep.jsx","Components/DateCards/DateCards.jsx","Components/DateRangePicker/DateRangePicker.jsx","Components/DateRangePicker/DateSearch.jsx","Components/DateRangePicker/DateSelector.jsx","Components/DateRangePicker/SingleDatePicker.jsx","Components/Dropdown/Dropdown.jsx","Components/Input/SearchInput.jsx","Components/OptionItems/OptionItem.jsx","Components/Pagination/Pagination.jsx","Components/SearchBar/SearchBar.jsx","Components/Tables/AssessmentTools/PsychiatricTable.jsx","Components/Tables/DynamicTable.jsx","Components/Tables/ImagingOrderTable.jsx","Components/Tables/LabOrderTable.jsx","Components/Tables/LabTable.jsx","Components/Tables/MedicationOrderTable.jsx","Components/Tables/Subjective/MedicalHistoryTable.jsx","Components/Tables/Subjective/WellnessProfileTable/ExerciseHabitTable.jsx","Components/Tables/Subjective/WellnessProfileTable/MoodTable.jsx","Config/config.jsx","Utils/commonUtils.jsx","Utils/dateUtils.jsx"],"sourcesContent":["import { useState, useCallback, useRef } from \"react\";\r\n\r\nconst useApi = () => {\r\n  const apiUrl = process.env.REACT_APP_API_URL;\r\n  const apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const cache = useRef({});\r\n\r\n  const fetchData = useCallback(\r\n    async (url, options) => {\r\n      setLoading(true);\r\n\r\n      if (cache?.current[url] && url.startsWith(\"resource/vitals\")) {\r\n        setLoading(true);\r\n        cache.current = {};\r\n      }\r\n      if (cache?.current[url]) {\r\n        setLoading(false);\r\n        return cache.current[url];\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(apiUrl + url, options);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch ${url}: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        cache.current[url] = data;\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(`Error: ${error.message}`);\r\n        throw error;\r\n      }\r\n    },\r\n    [apiUrl]\r\n  );\r\n\r\n  const get = useCallback(\r\n    async (url) => {\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData, apiKey]\r\n  );\r\n\r\n  const post = useCallback(\r\n    async (url, body) => {\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n        body: JSON.stringify(body),\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData]\r\n  );\r\n\r\n  const patch = useCallback(\r\n    async (url, body) => {\r\n      const options = {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n        body: JSON.stringify(body),\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData]\r\n  );\r\n\r\n  const del = useCallback(\r\n    async (url) => {\r\n      const options = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n      };\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(apiUrl + url, options);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch ${url}: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(`Error: ${error.message}`);\r\n        throw error;\r\n      }\r\n    },\r\n    [apiKey, apiUrl]\r\n  );\r\n\r\n  // Function to clear all cache entries\r\n  const clearCache = useCallback(() => {\r\n    cache.current = {}; // Clear all entries from cache\r\n  }, []);\r\n  return {\r\n    loading,\r\n    error,\r\n    get,\r\n    post,\r\n    patch,\r\n    del,\r\n    clearCache,\r\n  };\r\n};\r\n\r\nexport default useApi;\r\n","import React from \"react\";\r\n\r\nconst Badge = ({ label, color }) => {\r\n  return <div className={`badge badge-${color} fs-14 fw-500`}>{label}</div>;\r\n};\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\n\r\nconst BlurBackground = ({ children }) => {\r\n  return <div className=\"blur-background\">{children}</div>;\r\n};\r\n\r\nexport default BlurBackground;\r\n","import { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./Breadcrumb.css\";\r\n\r\nconst Breadcrumb = ({ paths }) => {\r\n  const lastIndex = paths.length - 1;\r\n  const url = \"/telegaruda-caregiver\";\r\n  return (\r\n    <>\r\n      <CBreadcrumb>\r\n        {paths.map((data, index) => (\r\n          <CBreadcrumbItem\r\n            href={url + data?.to}\r\n            className={`breadcrumb-item-custom ${\r\n              lastIndex === index && \"black\"\r\n            }`}\r\n          >\r\n            <span className=\"breadcrumb-label\">{data.label}</span>\r\n          </CBreadcrumbItem>\r\n        ))}\r\n      </CBreadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from \"react\";\r\nimport \"./ActiveButton.css\";\r\n\r\nconst ActiveButton = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"act-button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ActiveButton;\r\n","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst DropdownButton = ({ buttonName2, getbtnNames }) => {\r\n  const [buttonText, setButtonText] = useState(\"SAVE\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleItemClick = (text) => {\r\n    setButtonText(text);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button className=\"dropdown-button button\">\r\n        <div className=\"d-flex align-items-center justify-content-between\" onClick={() => getbtnNames(buttonText)}>\r\n          <div className=\"w-100\" >\r\n            <span className=\"fs-16 fw-600\">{buttonText}</span>\r\n          </div>\r\n          <div onClick={toggleDropdown}>\r\n            {!isOpen ? (\r\n              <img src={Assets.cDown} alt=\"down\" />\r\n            ) : (\r\n              <img src={Assets.cUp} alt=\"up\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"dropdown-content\">\r\n          {buttonText === buttonName2 && (\r\n            <span\r\n              onClick={() => handleItemClick(\"SAVE\")}\r\n              className=\"fs-14 fw-600\"\r\n            >\r\n              SAVE\r\n            </span>\r\n          )}\r\n          {buttonText === \"SAVE\" && (\r\n            <span\r\n              onClick={() => handleItemClick(buttonName2)}\r\n              className=\"fs-14 fw-600\"\r\n            >\r\n              {buttonName2}\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownButton;\r\n","import React from \"react\";\r\nimport \"./PrimaryButton.css\";\r\n\r\nconst PrimaryButton = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import { Assets } from \"../../../assets/Assets\";\r\n\r\nexport const ObjectiveDatas = [\r\n  {\r\n    id: 1,\r\n    icon: Assets.VitalBP,\r\n    slug: \"blood-pressure\",\r\n    name: \"Blood Pressure\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    category: \"Primary Vitals\",\r\n    badge: [\r\n      { label: \"120/80 mm Hg\", color: \"success\" },\r\n      // { label: \"DIA : 71\", color: \"success\" },\r\n      // { label: \"Pulse : 89\", color: \"success\" },\r\n    ],\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"SYSTOLIC\" },\r\n      { id: 4, label: \"DIASTOLIC\" },\r\n      { id: 5, label: \"PULSE (IN BPM)\" },\r\n      { id: 6, label: \"DATE\" },\r\n      { id: 7, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        systolic: \"112\",\r\n        diastolic: \"25\",\r\n        \"pulse_(in_bpm)\": \"89\",\r\n        chartLabel1: \"PULSE (IN BPM)\",\r\n        date: \"02-04-2024 12:13\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Pressure\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"error\",\r\n          name: \"High Blood Pressure (Hypertension) Stage 1\",\r\n        },\r\n        systolic: \"112\",\r\n        diastolic: \"25\",\r\n        \"pulse_(in_bpm)\": \"125\",\r\n        date: \"05-04-2024 13:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Pressure\",\r\n      },\r\n    ],\r\n    chartLabel1: \"PULSE (IN BPM)\",\r\n  },\r\n  {\r\n    id: 2,\r\n    icon: Assets.VitalBs,\r\n    slug: \"blood-sugar\",\r\n    name: \"Blood Sugar\",\r\n    category: \"Metabolic And Biochemical Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"110 mg/dL\", color: \"success\" }],\r\n    chartLabel1: \"Blood Sugar (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Blood Sugar (mg/dL)\" },\r\n      { id: 4, label: \"Type\" },\r\n      { id: 5, label: \"DATE\" },\r\n      { id: 6, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        blood_sugar: \"110 mg/dL\",\r\n        blood_sugar_value: \"110\",\r\n        type: \"Random\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Sugar\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        blood_sugar: \"110 mg/dL\",\r\n        blood_sugar_value: \"110\",\r\n        type: \"Random\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Blood Sugar\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    icon: Assets.VitalBMI,\r\n    slug: \"bmi\",\r\n    name: \"BMI\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"24.5 kg/m²\", color: \"success\" }],\r\n    chartLabel1: \"BMI (kg/m²)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BMI (kg/m²)\" },\r\n      { id: 4, label: \"Height (cm)\" },\r\n      { id: 5, label: \"Weight (kg)\" },\r\n      { id: 6, label: \"DATE\" },\r\n      { id: 7, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        bmi: \"24.13\",\r\n        height: \"159cm\",\r\n        weight: \"61kg\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"BMI\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"error\",\r\n          name: \"Overweight\",\r\n        },\r\n        bmi: \"27.01\",\r\n        height: \"180cm\",\r\n        weight: \"87.5kg\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"BMI\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    icon: Assets.VitalHCT,\r\n    slug: \"hct\",\r\n    name: \"Hematocrit (HCT)\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"23%\", color: \"error\" }],\r\n    chartLabel1: \"HCT (%)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"HCT %\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        \"hct_%\": \"42%\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Hematocrit (HCT)\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        \"hct_%\": \"45%\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Hematocrit (HCT)\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    icon: Assets.VitalHBeat,\r\n    slug: \"heart-rate\",\r\n    name: \"Heart\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"1 bpm\", color: \"success\" }],\r\n    chartLabel1: \"Heart Rate (bpm)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"Result\" },\r\n      { id: 3, label: \"HR (bpm)\" },\r\n      { id: 4, label: \"Type\" },\r\n      { id: 5, label: \"Result File\" },\r\n      { id: 6, label: \"Interpretation\" },\r\n      { id: 7, label: \"DATE\" },\r\n      { id: 8, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"error\", name: \"Abnormal Heart Rate\" },\r\n        // ecg: {\r\n        //   contentType: \"image\",\r\n        //   link: Assets.ecgSample,\r\n        // },\r\n        \"hr_(bpm)\": \"120\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Heart Rate\",\r\n        interpretation: \"ECG Interpretation\",\r\n        type: \"3 Lead\",\r\n        // result_file: \"heart.png\",\r\n        result_file: {\r\n          contentType: \"image\",\r\n          link: Assets.ecgSample,\r\n          name: \"heart.png\",\r\n        },\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        // ecg: {\r\n        //   contentType: \"pdf\",\r\n        //   link: \"https://www.orimi.com/pdf-test.pdf\",\r\n        // },\r\n        \"hr_(bpm)\": \"80\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Heart Rate\",\r\n        interpretation: \"ECG Interpretation\",\r\n        type: \"3 Lead\",\r\n        // result_file: \"heart.pdf\",\r\n        result_file: {\r\n          contentType: \"pdf\",\r\n          link: \"https://www.orimi.com/pdf-test.pdf\",\r\n          name: \"heart.pdf\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    icon: Assets.VitalHae,\r\n    slug: \"hemoglobin\",\r\n    name: \"Hemoglobin\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"14 g/dL\", color: \"error\" }],\r\n    chartLabel1: \"Hemoglobin (g/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Hemoglobin (g/dL)\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        'hemoglobin_(g/dl)': \"15\",\r\n        hemoglobinValue: \"15\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Hemoglobin\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        'hemoglobin_(g/dl)': \"15\",\r\n        hemoglobinValue: \"15\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Hemoglobin\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    icon: Assets.BKetone,\r\n    slug: \"keytone\",\r\n    name: \"Blood Ketone\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"0.5 mmol/L\", color: \"error\" }],\r\n    chartLabel1: \"Blood Ketone (mmol/L)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BLOOD KETONE (mmol/L)\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        \"blood_ketone_(mmol/l)\": \"0.33 mmol/L\",\r\n        blood_ketone_value: \"0.33\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Ketone\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        \"blood_ketone_(mmol/l)\": \"0.33 mmol/L\",\r\n        blood_ketone_value: \"0.33\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Blood Ketone\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    icon: Assets.VitalLipid,\r\n    slug: \"lipid-profile\",\r\n    name: \"Lipid Profile\",\r\n    category: \"Metabolic And Biochemical Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [\r\n      { label: \"Total Cholesterol: 180 mg/dL \", color: \"success\" },\r\n      { label: \"LDL: 100 mg/dL\", color: \"error\" },\r\n      { label: \"HDL: 50 mg/dL \", color: \"error\" },\r\n      // { label: \"TG: Optimal\", color: \"error\" },\r\n      { label: \"Triglycerides: 150 mg/dL\", color: \"success\" },\r\n    ],\r\n    chartLabel1: \"LDL (mg/dL)\",\r\n    chartLabel2: \"HDL (mg/dL)\",\r\n    chartLabel3: \"VLDL (mg/dL)\",\r\n    chartLabel4: \"LDL/HDL (mg/dL)\",\r\n    chartLabel5: \"Triglycerides (mg/dL)\",\r\n    chartLabel6: \"Total Cholesterol (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"LDL(mg/dL)\" },\r\n      { id: 4, label: \"HDL(mg/dL)\" },\r\n      { id: 5, label: \"VLDL(mg/dL)\" },\r\n      { id: 6, label: \"LDL/HDL(mg/dL)\" },\r\n      { id: 7, label: \"Triglycerides(mg/dL)\" },\r\n      { id: 8, label: \"Total Cholesterol(mg/dL)\" },\r\n      { id: 9, label: \"DATE\" },\r\n      { id: 10, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        \"ldl(mg/dl)\": \"60 mg/dL\",\r\n        \"hdl(mg/dl)\": \"50 mg/dL\",\r\n        \"vldl(mg/dl)\": \"5 mg/dL\",\r\n        \"ldl/hdl(mg/dl)\": \"1\",\r\n        \"triglycerides(mg/dl)\": \"140 mg/dL\",\r\n        \"total_cholesterol(mg/dl)\": \"180 mg/dL\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Lipid Profile\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        \"ldl(mg/dl)\": \"60 mg/dL\",\r\n        \"hdl(mg/dl)\": \"50 mg/dL\",\r\n        \"vldl(mg/dl)\": \"5 mg/dL\",\r\n        \"ldl/hdl(mg/dl)\": \"1\",\r\n        \"triglycerides(mg/dl)\": \"140 mg/dL\",\r\n        \"total_cholesterol(mg/dl)\": \"180 mg/dL\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Lipid Profile\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    icon: Assets.VitalRespi,\r\n    slug: \"respiration\",\r\n    name: \"Respiration Rate\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"16 bpm\", color: \"error\" }],\r\n    chartLabel1: \"Respiration Rate (BPM)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Respiration Rate (BPM)\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"error\", name: \"High\" },\r\n        \"respiration_rate_(bpm)\": \"44\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Respiration Rate\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        \"respiration_rate_(bpm)\": \"18\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Respiration Rate\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 10,\r\n    icon: Assets.SpO2,\r\n    slug: \"spO2\",\r\n    name: \"SpO2\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"92%\", color: \"success\" }],\r\n    chartLabel1: \"SpO2 (%)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      // { id: 3, label: \"Pulse Rate (BPM)\" },\r\n      { id: 3, label: \"SpO2\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"error\", name: \"Abnormal\" },\r\n        \"pulse_rate_(bpm)\": \"120\",\r\n        spo2: \"99%\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"SpO2\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        spo2: \"90%\",\r\n        \"pulse_rate_(bpm)\": \"70\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"SpO2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 11,\r\n    icon: Assets.Temp,\r\n    slug: \"temperature\",\r\n    name: \"Temperature\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [\r\n      { label: \"36.6*C\", color: \"success\" },\r\n      { label: \"96.80 ° F\", color: \"success\" },\r\n    ],\r\n    chartLabel1: \"Temperature (°F) \",\r\n    chartLabel2: \"Temperature (°C)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Temperature\" },\r\n      { id: 4, label: \"Method\" },\r\n      { id: 5, label: \"DATE\" },\r\n      { id: 6, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        // temperature_fahrenheit: \"96.80 ° F\",\r\n        // temperature_celsius: \"36 ° C\",\r\n        method: \"Oral\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Temperature\",\r\n        temperature: \"96\",\r\n        unit: \"Celsius\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        // temperature_fahrenheit: \"96.80 ° F\",\r\n        // temperature_celsius: \"36 ° C\",\r\n        method: \"Oral\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Temperature\",\r\n        temperature: \"36\",\r\n        unit: \"Celsius\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 12,\r\n    icon: Assets.LFT,\r\n    slug: \"spirometer\",\r\n    name: \"Lung Function Test (LFT)\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    category: \"Primary Vitals\",\r\n    chartLabel1: \"FVC (%)\",\r\n    chartLabel2: \"FEV1 (%)\",\r\n    chartLabel4: \"FEV1/FVC Ratio (%)\",\r\n    chartLabel3: \"PEF (%)\",\r\n    badge: [\r\n      { label: \"FEV1 (%): 1L\", color: \"error\" },\r\n      { label: \"FVC (%): 1L\", color: \"error\" },\r\n      { label: \"FEV1/FVC Ratio (%): 49\", color: \"error\" },\r\n      { label: \"PEF (%): 1L/min\", color: \"error\" },\r\n    ],\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"Result\" },\r\n      { id: 3, label: \"FVC (L)\" },\r\n      { id: 4, label: \"FEV1 (L)\" },\r\n      { id: 5, label: \"PEF (L/s)\" },\r\n      { id: 6, label: \"FEV1/FVC (%)\" },\r\n      { id: 7, label: \"DATE\" },\r\n      { id: 8, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        \"fvc_(l)\": \"5.94\",\r\n        \"fev1_(l)\": \"12.45\",\r\n        \"fev1/fvc_(%)\": \"41\",\r\n        \"pef_(l/s)\": \"2.62\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Lung Function Test (LFT)\",\r\n        result: \"Lorem Ipsum\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        \"fvc_(l)\": \"6.94\",\r\n        \"fev1_(l)\": \"2.45\",\r\n        \"fev1/fvc_(%)\": \"41\",\r\n        \"pef_(l/s)\": \"2.62\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Lung Function Test (LFT)\",\r\n        result: \"Lorem Ipsum\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 13,\r\n    icon: Assets.BUAcid,\r\n    slug: \"uric_acid\",\r\n    name: \"Blood Uric Acid\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"6 mg/dL\", color: \"error\" }],\r\n    chartLabel1: \"Blood Uric Acid (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BLOOD URIC ACID (mg/dL)\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        \"blood_uric_acid_(mg/dl)\": \"5 mg/dL\",\r\n        blood_uric_acid_value: \"5\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Uric Acid\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        \"blood_uric_acid_(mg/dl)\": \"5 mg/dL\",\r\n        blood_uric_acid_value: \"5\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Blood Uric Acid\",\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   id: 14,\r\n  //   icon: Assets.Urinalysis,\r\n  //   name: \"Urinalysis\",\r\n  //   category: \"Renal and Metabolic Markers\",\r\n  //   date: \"Recently Added 27-03-2024\",\r\n  //   badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n  //   chartLabel1: \"Urine (μmol/kg/d)\",\r\n  //   chartLabel2: \"ph\",\r\n  //   columnsData: [\r\n  //     { id: 1, label: \"NO.\" },\r\n  //     { id: 2, label: \"RESULT\" },\r\n  //     { id: 3, label: \"URINE\" },\r\n  //     { id: 4, label: \"PH\" },\r\n  //     { id: 5, label: \"SUGAR\" },\r\n  //     { id: 6, label: \"PROTEIN\" },\r\n  //     { id: 7, label: \"LEUKOCYTES\" },\r\n  //     { id: 8, label: \"RBC\" },\r\n  //     { id: 9, label: \"DATE\" },\r\n  //     { id: 10, label: \"ACTION\" },\r\n  //   ],\r\n  //   tableData: [\r\n  //     {\r\n  //       \"no.\": 1,\r\n  //       result: { status: \"success\", name: \"Normal\" },\r\n  //       urine: \"100 μmol/kg/d\",\r\n  //       chartValue: \"100\",\r\n  //       ph: \"17.5\",\r\n  //       sugar: \"0.8 mmol/L\",\r\n  //       protein: \"None\",\r\n  //       leukocytes: \"None\",\r\n  //       rbc: \"None\",\r\n  //       date: \"06-24-2024 10:15\",\r\n  //       action: [{ type: \"warning\" }],\r\n  //       name: \"Urinalysis\",\r\n  //     },\r\n  //     {\r\n  //       \"no.\": 2,\r\n  //       result: {\r\n  //         status: \"success\",\r\n  //         name: \"Normal\",\r\n  //       },\r\n  //       urine: \"110 μmol/kg/d\",\r\n  //       chartValue: \"110\",\r\n  //       ph: \"6.5\",\r\n  //       sugar: \"0.8 mmol/L\",\r\n  //       protein: \"None\",\r\n  //       leukocytes: \"None\",\r\n  //       rbc: \"None\",\r\n  //       date: \"05-24-2024 10:15\",\r\n  //       action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n  //       name: \"Urinalysis\",\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    id: 14,\r\n    icon: Assets.Urinalysis,\r\n    slug: \"urine\",\r\n    name: \"Urinalysis\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    // badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n    badge: [\r\n      { label: \"Color: Straw \", color: \"success\" },\r\n      { label: \"Clarity: Clear\", color: \"success\" },\r\n      { label: \"Specific Gravity: 1.008 \", color: \"success\" },\r\n      { label: \"PH: Normal (6-7)\", color: \"success\" },\r\n      { label: \"Protein: Trace\", color: \"success\" },\r\n      { label: \"Glucose: Negative\", color: \"success\" },\r\n    ],\r\n    chartLabel1: \"Specific gravity\",\r\n    chartLabel2: \"PH\",\r\n    chartLabel3: \"Urobilinogen\",\r\n    chartLabel4: \"Red Blood Cells\",\r\n    chartLabel5: \"White Blood Cells\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"Color\" },\r\n      { id: 3, label: \"Clarity\" },\r\n      { id: 4, label: \"PH\" },\r\n      { id: 5, label: \"Protein\" },\r\n      { id: 6, label: \"Glucose\" },\r\n      { id: 7, label: \"Leukocyte\" },\r\n      { id: 8, label: \"Bilirubin\" },\r\n      { id: 9, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        color: \"Straw\",\r\n        specific_gravity: \"1.308\",\r\n        ph: \"7\",\r\n        clarity: \"Clear\",\r\n        protein: \"Trace\",\r\n        glucose: \"Negative\",\r\n        leukocyte: \"79\",\r\n        bilirubin: \"120\",\r\n        urobilinogen: \"70\",\r\n        red_blood_cells: \"120\",\r\n        white_blood_cells: \"110\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Urinalysis\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        color: \"Straw\",\r\n        specific_gravity: \"1.308\",\r\n        ph: \"7\",\r\n        clarity: \"Clear\",\r\n        protein: \"Trace\",\r\n        glucose: \"Negative\",\r\n        leukocyte: \"79\",\r\n        bilirubin: \"120\",\r\n        urobilinogen: \"70\",\r\n        red_blood_cells: \"120\",\r\n        white_blood_cells: \"110\",\r\n\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Urinalysis\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 15,\r\n    icon: Assets.Urea,\r\n    slug: \"urea\",\r\n    name: \"Urea\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    badge: [{ label: \"32mg/dl\", color: \"error\" }],\r\n    chartLabel1: \"Urea (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"UREA (mg/dL)\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        urea: \"20 mg/dL\",\r\n        urea_value: \"20\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Urea\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        urea: \"20 mg/dL\",\r\n        urea_value: \"20\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Urea\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 16,\r\n    icon: Assets.Creatinine,\r\n    name: \"Creatinine\",\r\n    slug: \"creatinine\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"1.7 mg/dL\", color: \"error\" }],\r\n    chartLabel1: \"Creatinine (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"CREATININE (mg/dL)\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        \"creatinine_(mg/dl)\": \"1.2 mg/dL\",\r\n        creatinine_value: \"1.2\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Creatinine\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        \"creatinine_(mg/dl)\": \"1.2 mg/dL\",\r\n        creatinine_value: \"1.2\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Creatinine\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 17,\r\n    icon: Assets.GFR,\r\n    slug: \"gfr\",\r\n    name: \"GFR\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"55 mL/min/1.73m²\", color: \"error\" }],\r\n    chartLabel1: \"GFR (mL/min/1.73m²)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"GFR (mL/min/1.73m²)\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        \"gfr_(ml/min/1.73m²)\": \"92 mL/min/1.73m²\",\r\n        gfr_value: \"92\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"GFR\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        \"gfr_(ml/min/1.73m²)\": \"90 mL/min/1.73m²\",\r\n        gfr_value: \"90\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"GFR\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { CCol, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { capitalizeFirstLetter } from \"../../../../../../../Utils/commonUtils\";\r\n\r\nconst NeurologicalForm = ({\r\n  back,\r\n  defaultValues,\r\n  questions,\r\n  formTitle,\r\n  onAdd,\r\n  latest_form_submission,\r\n  isEditMode,\r\n}) => {\r\n  const [formData, setFormData] = useState({});\r\n  // Initialize formData with latest_form_submission\r\n  useEffect(() => {\r\n    if (latest_form_submission?.answers) {\r\n      const initializedData = {};\r\n      Object.keys(latest_form_submission.answers).forEach((key) => {\r\n        const answer = latest_form_submission.answers[key];\r\n        initializedData[key] = { answer: answer };\r\n      });\r\n      setFormData(initializedData);\r\n    }\r\n  }, [latest_form_submission]);\r\n  const handleChange = (event, question) => {\r\n    const { name, value } = event.target;\r\n    const questionId = parseInt(name, 10);\r\n\r\n    // Find the selected option object\r\n    const selectedOption = question?.answers?.find(\r\n      (answer) => answer.answer.name === value\r\n    );\r\n\r\n    // Update formData with the selected option object\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [questionId]: selectedOption || null,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    // Add your submit logic here\r\n    onAdd(formData);\r\n  };\r\n  return (\r\n    <>\r\n      <form>\r\n        <div className=\"d-flex align-items-center justify-content-between\">\r\n          <h3>{capitalizeFirstLetter(formTitle)}</h3>\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton onClick={back}>BACK</PrimaryButton>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        {!defaultValues || !defaultValues.questions ? (\r\n          <>\r\n            <p>No questions available</p>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {defaultValues?.questions?.map((question, index) => (\r\n              <CRow key={index} className=\"mb-3\">\r\n                <CCol>\r\n                  <h5>\r\n                    {index + 1}. {question?.question?.name}\r\n                  </h5>\r\n                  {question?.answers?.map((option, cIndex) => (\r\n                    <CFormCheck\r\n                      key={cIndex}\r\n                      type=\"radio\"\r\n                      name={question?.question?.id} // Use question ID as the name\r\n                      id={`question${question?.question?.id}_choice${option?.id}`}\r\n                      // name={`question${index + 1}`}\r\n                      // id={`question${index + 1}_choice${cIndex + 1}`}\r\n                      value={option?.answer?.name}\r\n                      label={option?.answer?.name}\r\n                      onChange={(e) => handleChange(e, question)}\r\n                      checked={\r\n                        formData[question?.question?.id]?.answer?.name ===\r\n                        option?.answer?.name\r\n                      }\r\n                      disabled={isEditMode}\r\n                    />\r\n                  ))}\r\n                </CCol>\r\n              </CRow>\r\n            ))}\r\n          </>\r\n        )}\r\n      </form>\r\n      {isEditMode ? null : (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton onClick={handleSubmit}>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NeurologicalForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../../AssessmentTool/Psychiatric/PsychiatricForm\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport NeurologicalForm from \"./NeurologicalForm\";\r\n\r\nconst Neurological = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"NIH Stroke Scale/Score (NIHSS)\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Level of consciousness\",\r\n          options: [\r\n            \"Alert, keenly responsive\",\r\n            \"Arouses to minor stimulation\",\r\n            \"Requires repeated stimulation to arouse\",\r\n            \"Movements to pain\",\r\n            \"Postures or unresponsive\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"2. Ask month and age\",\r\n          options: [\r\n            \"Both questions right\",\r\n            \"1 question right\",\r\n            \"0 questions right\",\r\n            \"Dysarthric/intubated/trauma/language barrier\",\r\n            \"Aphasic\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"3. Blink eyes & squeeze hands\",\r\n          options: [\r\n            \"Performs both tasks\",\r\n            \"Performs 1 task\",\r\n            \"Performs 0 tasks\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"4. Horizontal extraocular movements\",\r\n          options: [\r\n            \"Normal\",\r\n            \"Partial gaze palsy: can be overcome\",\r\n            \"Partial gaze palsy: corrects with oculocephalic reflex\",\r\n            \"Forced gaze palsy: cannot be overcome\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"5. Visual fields\",\r\n          options: [\r\n            \"No visual loss\",\r\n            \"Partial hemianopia\",\r\n            \"Complete hemianopia\",\r\n            \"Patient is bilaterally blind\",\r\n            \"Bilateral hemianopia\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Facial palsy\",\r\n          options: [\r\n            \"Normal symmetry\",\r\n            \"Minor paralysis (flat nasolabial fold, smile asymmetry)\",\r\n            \"Partial paralysis (lower face)\",\r\n            \"Unilateral complete paralysis (upper/lower face)\",\r\n            \"Bilateral complete paralysis (upper/lower face)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"7. Left arm motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"No effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"8. Right arm motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"No effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"9. Left leg motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"Some effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"10. Right leg motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"No effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"11. Limb Ataxia\",\r\n          options: [\r\n            \"No ataxia\",\r\n            \"Ataxia in 1 Limb\",\r\n            \"Ataxia in 2 Limbs\",\r\n            \"Does not understand\",\r\n            \"Paralyzed\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"12. Sensation\",\r\n          options: [\r\n            \"Normal: no sensory loss\",\r\n            \"Mild-moderate loss: less sharp/more dull\",\r\n            \"Mild-moderate loss: can sense being touched\",\r\n            \"Complete loss: cannot sense being touched at all\",\r\n            \"No response and quadriplegic\",\r\n            \"Coma/unresponsive\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"13. Language/aphasia\",\r\n          options: [\r\n            \"Normal: no aphasia\",\r\n            \"Mild-moderate aphasia: some obvious changes, without significant limitation\",\r\n            \"Severe aphasia: fragmentary expression, inference needed, cannot identify materials\",\r\n            \"Mute/global aphasia: no usable speech/auditory comprehension\",\r\n            \"Coma/unresponsive\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"14. Dysarthria\",\r\n          options: [\r\n            \"Normal\",\r\n            \"Mild-moderate dysarthria: slurring but can be understood\",\r\n            \"Severe dysarthria: unintelligible slurring or out of proportion to dysphasia\",\r\n            \"Mute/anarthric\",\r\n            \"Intubated/unable to test\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"15. Extinction/inattention\",\r\n          options: [\r\n            \"No abnormality\",\r\n            \"Visual/tactile/auditory/spatial/personal inattention\",\r\n            \"Extinction to bilateral simultaneous stimulation\",\r\n            \"Profound hemi-inattention (ex: does not recognize own hand)\",\r\n            \"Extinction to >1 modality\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const { get, post, clearCache } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [qName, setQName] = useState();\r\n  const [qPagi, setQPagi] = useState();\r\n  const [edit, setEdit] = useState(false);\r\n  const [formTitle, setFormTitle] = useState(\"\");\r\n  // const formTitle = \"NIH Stroke Scale/Score (NIHSS)\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    setFormTitle(data?.name);\r\n    setSelectedData(data);\r\n    if (type === \"add\") {\r\n      viewFormPage();\r\n      setEdit(false);\r\n    }\r\n    if (type === \"view\") {\r\n      setAddFormView(true);\r\n      setEdit(true);\r\n    }\r\n  };\r\n\r\n  const onAdd = async (answerDatas) => {\r\n    console.log(\"first hello\", selectedData);\r\n    try {\r\n      const url = `resource/form_submitted_answers`; // Replace with your API endpoint\r\n      const body = {\r\n        answers: answerDatas,\r\n        patient_id: data?.user_id,\r\n        form_id: selectedData?.id,\r\n        form_name: selectedData?.name,\r\n      };\r\n      await post(url, body);\r\n      clearCache();\r\n      await getTableLists();\r\n      toast.success(\"Added successfully\");\r\n      setAddFormView(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const getTableLists = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/form?limit=${itemsPerPage}&page=${currentPage}&slug=stroke-scale&searchkey=&order_by=id&dir=1&user_id=${data?.user_id}` //\r\n      );\r\n      const listData = response?.data?.forms; //pagination\r\n      setQName(listData);\r\n      setQPagi(response?.data?.pagination);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get, addFormView, currentPage]);\r\n\r\n  useEffect(() => {\r\n    getTableLists();\r\n  }, [getTableLists]);\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={qName}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n              currentPage={currentPage || 1}\r\n              itemsPerPage={itemsPerPage || 5}\r\n            />\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={qPagi?.total || 0}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <NeurologicalForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n              onAdd={onAdd}\r\n              latest_form_submission={\r\n                edit ? selectedData?.latest_form_submisson : null\r\n              }\r\n              isEditMode={edit}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Neurological;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../Psychiatric/PsychiatricForm\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Ophthalmic = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"Vision Symptoms\",\r\n      date: \"26-07-2024 \",\r\n      result: \"6 Score Medium\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. As a teacher or parent are you concerned with this student’s vision?\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"2. Tilts head, squints, closes or covers one eye when reading?\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"3. Gaze issues, eyes turn in or out, crossed eyes, eyes wander\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"4. Different size pupils or eyes\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"5. Watery eyes, eyes appear hazy or clouded\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"6. Words float, move, or jump around when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"7. Complains of headaches, dizziness, or nausea when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"8. Complains of itching, burning, or scratchy eyes\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"9. Complains of blurred or double vision, unusual sensitivity to light, or difficulty seeing\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"10. History of head injury with vision complaints\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"11. Loses place when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"12. Skips over or leaves out small words when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"13. Writes uphill or downhill; difficulty writing in a straight line\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"14. Has difficulty copying from the board\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"15. Avoids near work, such as reading or writing\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"16. Has difficulty lining up numbers when doing math\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"17. Has difficulty finishing assignments on time\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"18. Holds books too close; leans too close to a computer screen\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"19. Clumsy; bumps into things; knocks things over\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const { get, post, clearCache } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [qName, setQName] = useState();\r\n  const [qPagi, setQPagi] = useState();\r\n  const [edit, setEdit] = useState(false);\r\n  const [formTitle, setFormTitle] = useState(\"\");\r\n\r\n  // const formTitle = \"Vision Symptoms\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    setFormTitle(data?.name);\r\n    setSelectedData(data);\r\n    if (type === \"add\") {\r\n      viewFormPage();\r\n      setEdit(false);\r\n    }\r\n    if (type === \"view\") {\r\n      setAddFormView(true);\r\n      setEdit(true);\r\n    }\r\n  };\r\n\r\n  const onAdd = async (answerDatas) => {\r\n    console.log(\"first hello\", selectedData);\r\n    try {\r\n      const url = `resource/form_submitted_answers`; // Replace with your API endpoint\r\n      const body = {\r\n        answers: answerDatas,\r\n        patient_id: data?.user_id,\r\n        form_id: selectedData?.id,\r\n        form_name: selectedData?.name,\r\n      };\r\n      await post(url, body);\r\n      clearCache();\r\n      await getTableLists();\r\n      toast.success(\"Added successfully\");\r\n      setAddFormView(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const getTableLists = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/form?limit=${itemsPerPage}&page=${currentPage}&slug=vision&searchkey=&order_by=id&dir=1&user_id=${data?.user_id}` //\r\n      );\r\n      const listData = response?.data?.forms; //pagination\r\n      setQName(listData);\r\n      setQPagi(response?.data?.pagination);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get, addFormView, currentPage]);\r\n\r\n  useEffect(() => {\r\n    getTableLists();\r\n  }, [getTableLists]);\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={qName}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n              currentPage={currentPage || 1}\r\n              itemsPerPage={itemsPerPage || 5}\r\n            />\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={qPagi?.total || 0}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ophthalmic;\r\n","import { CCol, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { capitalizeFirstLetter } from \"../../../../../../../Utils/commonUtils\";\r\n\r\nconst PeadiatricForm = ({\r\n  back,\r\n  defaultValues,\r\n  questions,\r\n  formTitle,\r\n  onAdd,\r\n  latest_form_submission,\r\n  isEditMode,\r\n}) => {\r\n  const [formData, setFormData] = useState({});\r\n  // Initialize formData with latest_form_submission\r\n  useEffect(() => {\r\n    if (latest_form_submission?.answers) {\r\n      const initializedData = {};\r\n      Object.keys(latest_form_submission.answers).forEach((key) => {\r\n        const answer = latest_form_submission.answers[key];\r\n        initializedData[key] = { answer: answer };\r\n      });\r\n      setFormData(initializedData);\r\n    }\r\n  }, [latest_form_submission]);\r\n  const handleChange = (event, question) => {\r\n    const { name, value } = event.target;\r\n    const questionId = parseInt(name, 10);\r\n\r\n    // Find the selected option object\r\n    const selectedOption = question?.answers?.find(\r\n      (answer) => answer.answer.name === value\r\n    );\r\n\r\n    // Update formData with the selected option object\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [questionId]: selectedOption || null,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    // Add your submit logic here\r\n    onAdd(formData);\r\n  };\r\n  return (\r\n    <>\r\n      <form>\r\n        <div className=\"d-flex align-items-center justify-content-between\">\r\n          <h3>{capitalizeFirstLetter(formTitle)}</h3>\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton onClick={back}>BACK</PrimaryButton>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        {!defaultValues || !defaultValues.questions ? (\r\n          <>\r\n            <p>No questions available</p>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {defaultValues?.questions?.map((question, index) => (\r\n              <CRow key={index} className=\"mb-3\">\r\n                <CCol>\r\n                  <h5>\r\n                    {index + 1}. {question?.question?.name}\r\n                  </h5>\r\n                  {question?.answers?.map((option, cIndex) => (\r\n                    <CFormCheck\r\n                      key={cIndex}\r\n                      type=\"radio\"\r\n                      name={question?.question?.id} // Use question ID as the name\r\n                      id={`question${question?.question?.id}_choice${option?.id}`}\r\n                      // name={`question${index + 1}`}\r\n                      // id={`question${index + 1}_choice${cIndex + 1}`}\r\n                      value={option?.answer?.name}\r\n                      label={option?.answer?.name}\r\n                      onChange={(e) => handleChange(e, question)}\r\n                      checked={\r\n                        formData[question?.question?.id]?.answer?.name ===\r\n                        option?.answer?.name\r\n                      }\r\n                      disabled={isEditMode}\r\n                    />\r\n                  ))}\r\n                </CCol>\r\n              </CRow>\r\n            ))}\r\n          </>\r\n        )}\r\n      </form>\r\n      {isEditMode ? null : (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton onClick={handleSubmit}>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PeadiatricForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../Psychiatric/PsychiatricForm\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport PeadiatricForm from \"./PeadiatricForm\";\r\n\r\nconst Peadiatric = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"APGAR Score\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Activity (muscle tone)\",\r\n          options: [\"Absent\", \"Flex arms and legs\", \"Active\"],\r\n        },\r\n        {\r\n          label: \"2. Pulse\",\r\n          options: [\"Absent\", \"Below 100 bpm\", \"Over 100 bpm\"],\r\n        },\r\n        {\r\n          label: \"3. Grimace (reflex irritability)\",\r\n          options: [\r\n            \"Floppy\",\r\n            \"Minimal response to stimulation\",\r\n            \"Prompt response to stimulation\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"4. Appearance (skin color)\",\r\n          options: [\"Blue, Pale\", \"Pink body, Blue Extremities\", \"Pink\"],\r\n        },\r\n        {\r\n          label: \"5. Respiration\",\r\n          options: [\"Absent\", \"Slow and irregular\", \"Vigorous cry\"],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const { get, post, clearCache } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [qName, setQName] = useState();\r\n  const [qPagi, setQPagi] = useState();\r\n  const [edit, setEdit] = useState(false);\r\n  const [formTitle, setFormTitle] = useState(\"\");\r\n\r\n  // const formTitle = \"APGAR Score\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    setFormTitle(data?.name);\r\n    setSelectedData(data);\r\n    if (type === \"add\") {\r\n      viewFormPage();\r\n      setEdit(false);\r\n    }\r\n    if (type === \"view\") {\r\n      setAddFormView(true);\r\n      setEdit(true);\r\n    }\r\n  };\r\n\r\n  const onAdd = async (answerDatas) => {\r\n    console.log(\"first hello\", selectedData);\r\n    try {\r\n      const url = `resource/form_submitted_answers`; // Replace with your API endpoint\r\n      const body = {\r\n        answers: answerDatas,\r\n        patient_id: data?.user_id,\r\n        form_id: selectedData?.id,\r\n        form_name: selectedData?.name,\r\n      };\r\n      await post(url, body);\r\n      clearCache();\r\n      await getTableLists();\r\n      toast.success(\"Added successfully\");\r\n      setAddFormView(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const getTableLists = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/form?limit=${itemsPerPage}&page=${currentPage}&slug=apgar&searchkey=&order_by=id&dir=1&user_id=${data?.user_id}` //\r\n      );\r\n      const listData = response?.data?.forms; //pagination\r\n      setQName(listData);\r\n      setQPagi(response?.data?.pagination);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get, addFormView, currentPage]);\r\n\r\n  useEffect(() => {\r\n    getTableLists();\r\n  }, [getTableLists]);\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={qName}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n              currentPage={currentPage || 1}\r\n              itemsPerPage={itemsPerPage || 5}\r\n            />\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={qPagi?.total || 0}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PeadiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n              onAdd={onAdd}\r\n              latest_form_submission={\r\n                edit ? selectedData?.latest_form_submisson : null\r\n              }\r\n              isEditMode={edit}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Peadiatric;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"./PsychiatricForm\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Psychiatric = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"Physical Symptoms\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Stomach pain\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"2. Back pain\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"3. Pain in your arms, legs, or joints (knees, hips, etc.)\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"4. Menstrual cramps or other problems with your periods WOMEN ONLY\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"5. Headaches\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Chest pain\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"7. Dizziness\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"8. Fainting spells\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"9. Feeling your heart pound or race\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"10. Shortness of breath\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"11. Pain or problems during sexual intercourse\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"12. Constipation, loose bowels, or diarrhea\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"13. Nausea, gas, or indigestion\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"14. Feeling tired or having low energy\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"15. Trouble sleeping\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Anger\",\r\n      questions: [\r\n        {\r\n          label: \"1. I was irritated more than people knew\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"2. I felt angry\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"3. I felt like I was ready to explode\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"4. I was grouchy\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"5. I felt annoyed\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Anxiety\",\r\n      questions: [\r\n        {\r\n          label: \"1. I felt fearful\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"2. I felt anxious\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"3. I felt worried\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label:\r\n            \"4. I found it hard to focus on anything other than my anxiety\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"5. I felt nervous\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"6. I felt uneasy\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"7. I felt tense\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Depression\",\r\n      questions: [\r\n        {\r\n          label: \"1. I felt worthless\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"2. I felt that I had nothing to look forward to\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"3. I felt helpless\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"4. I felt sad\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"5. I felt like a failure\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"6. I felt depressed\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"7. I felt unhappy\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"8. I felt hopeless\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Mania\",\r\n      questions: [\r\n        {\r\n          label: \"Question 1\",\r\n          options: [\r\n            \"I do not feel happier or more cheerful than usual\",\r\n            \"I occasionally feel happier or more cheerful than usual\",\r\n            \"I often feel happier or more cheerful than usual\",\r\n            \"I feel happier or more cheerful than usual most of the time\",\r\n            \"I feel happier of more cheerful than usual all of the time\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 2\",\r\n          options: [\r\n            \"I do not feel more self-confident than usual\",\r\n            \"I occasionally feel more self-confident than usual\",\r\n            \"I often feel more self-confident than usual\",\r\n            \"I frequently feel more self-confident than usual\",\r\n            \"I feel extremely self-confident all of the time\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 3\",\r\n          options: [\r\n            \"I do not need less sleep than usual\",\r\n            \"I occasionally need less sleep than usual\",\r\n            \"I often need less sleep than usual\",\r\n            \"I frequently need less sleep than usual\",\r\n            \"I can go all day and all night without any sleep and still not feel tired\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 4\",\r\n          options: [\r\n            \"I do not talk more than usual\",\r\n            \"I occasionally talk more than usual\",\r\n            \"I often talk more than usual\",\r\n            \"I frequently talk more than usual\",\r\n            \"I talk constantly and cannot be interrupted\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 5\",\r\n          options: [\r\n            \"I have not been more active (either socially, sexually, at work, home, or school) than usual\",\r\n            \"I have occasionally been more active than usual\",\r\n            \"I have often been more active than usual\",\r\n            \"I have frequently been more active than usual\",\r\n            \"I am constantly more active or on the go all the time\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Autism Spectrum Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Autism Spectrum Disorder problems that are present for this individual\",\r\n          options: [\r\n            \"None\",\r\n            \"Mild Requiring support (i.e., Rituals and repetitive behaviors [RRBs] cause significant interference with functioning in one or more contexts. Resists attempts by others to interrupt RRBs or to be redirected from fixated interest.)\",\r\n            \"Moderate Requiring SUBSTANTIAL support (i.e., RRBs and/or preoccupations and/or fixated interests appear frequently enough to be obvious to the casual observer and interfere with functioning in a variety of contexts. Distress or frustration is apparent when RRBs are interrupted; difficult to redirect from fixated interest.)\",\r\n            \"Severe Requiring VERY SUBSTANTIAL support (i.e., Preoccupations, fixed rituals and/or repetitive behaviors markedly interfere with functioning in all spheres. Marked distress when rituals or routines are interrupted; very difficult to redirect from fixated interest or returns to it quickly.)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Social Communication Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Social Communication Disorder problems that are present for this individual\",\r\n          options: [\r\n            \"None\",\r\n            \"Mild Requiring support (i.e., Without supports in place, deficits in social communication cause noticeable impairments. Has difficulty initiating social interactions and demonstrates clear examples of atypical or unsuccessful responses to social overtures of others. May appear to have decreased interest in social interactions.)\",\r\n            \"Moderate Requiring SUBSTANTIAL support (i.e., Marked deficits in verbal and nonverbal social communication skills; social impairments apparent even with supports in place; limited initiation of social interactions and reduced or abnormal response to social overtures from others.)\",\r\n            \"Severe Requiring VERY SUBSTANTIAL support (i.e., Severe deficits in verbal and nonverbal social communication skills cause severe impairments in functioning; very limited initiation of social interactions and minimal response to social overtures from others.)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Dimensions Of Psychosis Symptom Severity\",\r\n      questions: [\r\n        {\r\n          label: \"1. Hallucinations\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered psychosis)\",\r\n            \"Present, but mild (little pressure to act upon voices, not very bothered by voices)\",\r\n            \"Present and moderate (some pressure to respond to voices, or is somewhat bothered by voices)\",\r\n            \"Present and severe (severe pressure to respond to voices, or is very bothered by voices)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"2. Delusions\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered psychosis)\",\r\n            \"Present, but mild (little pressure to act upon delusional beliefs, not very bothered by beliefs)\",\r\n            \"Present and moderate (some pressure to act upon beliefs, or is somewhat bothered by beliefs)\",\r\n            \"Present and severe (severe pressure to act upon beliefs, or is very bothered by beliefs)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"3. Disorganized speech\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered disorganization)\",\r\n            \"Present, but mild (some difficulty following speech)\",\r\n            \"Present and moderate (speech often difficult to follow)\",\r\n            \"Present and severe (speech almost impossible to follow)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"4. Abnormal psychomotor behavior\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered abnormal psychomotor behavior)\",\r\n            \"Present, but mild (occasional abnormal or bizarre motor behavior or catatonia)\",\r\n            \"Present and moderate (frequent abnormal or bizarre motor behavior or catatonia)\",\r\n            \"Present and severe (abnormal or bizarre motor behavior or catatonia almost constant)\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"5. Negative symptoms (restricted emotional expression or avolition)\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n            \"Present, but mild decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n            \"Present and moderate decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n            \"Present and severe decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Impaired cognition\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (cognitive function not clearly outside the range expected for age or SES; i.e., within 0.5 SD of mean)\",\r\n            \"Present, but mild (some reduction in cognitive function; below expected for age and SES, 0.5–1 SD from mean)\",\r\n            \"Present and moderate (clear reduction in cognitive function; below expected for age and SES, 1–2 SD from mean)\",\r\n            \"Present and severe (severe reduction in cognitive function; below expected for age and SES, > 2 SD from mean)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"7. Depression\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (occasionally feels sad, down, depressed, or hopeless; concerned about having failed someone or at something but not preoccupied)\",\r\n            \"Present, but mild (frequent periods of feeling very sad, down, moderately depressed, or hopeless; concerned about having failed someone or at something, with some preoccupation)\",\r\n            \"Present and moderate (frequent periods of deep depression or hopelessness; preoccupation with guilt, having done wrong)\",\r\n            \"Present and severe (deeply depressed or hopeless daily; delusional guilt or unreasonable self-reproach grossly out of proportion to circumstances)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"8. Mania\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (occasional elevated, expansive, or irritable mood or some restlessness)\",\r\n            \"Present, but mild (frequent periods of somewhat elevated, expansive, or irritable mood or restlessness)\",\r\n            \"Present and moderate (frequent periods of extensively elevated, expansive, or irritable mood or restlessness)\",\r\n            \"Present and severe (daily and extensively elevated, expansive, or irritable mood or restlessness)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Conduct Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the conduct problems that are present for this individual\",\r\n          options: [\r\n            \"None (No conduct problems)\",\r\n            \"Mild (Few if any conduct problems in excess of those required to make the diagnosis are present, and conduct problems cause relatively minor harm to others [e.g., lying, truancy, staying out after dark without permission, or other rule breaking])\",\r\n            \"Moderate (The number of conduct problems and the effect on others are intermediate between “mild” and “severe” [e.g., stealing without confronting a victim, vandalism])\",\r\n            \"Severe (Many conduct problems in excess of those required to make the diagnosis are present, or conduct problems cause considerable harm to others [e.g., forced sex, physical cruelty, use of a weapon, stealing while confronting a victim, breaking and entering])\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Nonsuicidal Self-Injury\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Nonsuicidal Self-injury problems that are present for this individual\",\r\n          options: [\r\n            \"None (No NSSI acts or NSSI acts on fewer than 3 days AND no urge to self- injure again.)\",\r\n            \"Subthreshold (NSSI acts on 2-4 days OR has self- injured in the past on 5 or more days and has reported urges to self-injure again.)\",\r\n            \"Mild (NSSI acts on 5–7 days using a single method and not requiring surgical treatment [other than cosmetic].)\",\r\n            \"Moderate (NSSI acts on 8–11 days using a single method and not requiring surgical treatment [other than cosmetic] OR NSSI acts on 5–7 days using more than one method.)\",\r\n            \"Severe (At least 1 NSSI act that required surgical treatment [other than cosmetic] OR NSSI acts on 12 or more days using a single method OR NSSI acts on 8 or more days using more than one method.)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"Oppositional Defiant Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Oppositional Defiant problems that are present for this individual\",\r\n          options: [\r\n            \"None (No oppositional defiant symptoms)\",\r\n            \"Mild (Symptoms are confined to only one setting [e.g., at home, at school, at work, with peers])\",\r\n            \"Moderate (Some symptoms are present in at least two settings)\",\r\n            \"Severe (Some symptoms are present in three or more settings)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Somatic Symptom Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Does the individual have or show disproportionate and persistent concerns about the medical seriousness of his/her symptoms?\",\r\n          options: [\r\n            \"Not at all\",\r\n            \"A little bit\",\r\n            \"Somewhat\",\r\n            \"Quite a bit\",\r\n            \"Very much\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"2. Does the individual have or show a high level of health-related anxiety?\",\r\n          options: [\r\n            \"Not at all\",\r\n            \"A little bit\",\r\n            \"Somewhat\",\r\n            \"Quite a bit\",\r\n            \"Very much\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"3. Does the individual spend excessive time and energy devoted to these symptoms or health concerns?\",\r\n          options: [\r\n            \"Not at all\",\r\n            \"A little bit\",\r\n            \"Somewhat\",\r\n            \"Quite a bit\",\r\n            \"Very much\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const { get, post, clearCache, del } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [qName, setQName] = useState();\r\n  const [qPagi, setQPagi] = useState();\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [formTitle, setFormTitle] = useState(\"\"); // State for form title\r\n  const [edit, setEdit] = useState(false);\r\n  const itemsPerPage = 6; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    setFormTitle(data?.name); // Set form title based on selected data\r\n    if (type === \"add\") {\r\n      viewFormPage();\r\n      setEdit(false);\r\n    }\r\n    if (type === \"view\") {\r\n      setAddFormView(true);\r\n      setEdit(true);\r\n    }\r\n  };\r\n\r\n  const onAdd = async (answerDatas) => {\r\n    console.log(\"first hello\", selectedData);\r\n    try {\r\n      const url = `resource/form_submitted_answers`; // Replace with your API endpoint\r\n      const body = {\r\n        answers: answerDatas,\r\n        patient_id: data?.user_id,\r\n        form_id: selectedData?.id,\r\n        form_name: selectedData?.name,\r\n      };\r\n      await post(url, body);\r\n      clearCache();\r\n      await getTableLists();\r\n      toast.success(\"Added successfully\");\r\n      setAddFormView(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const getTableLists = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/form?limit=${itemsPerPage}&page=${currentPage}&slug=psychiatric-exam&searchkey=&order_by=id&dir=1&user_id=${data?.user_id}` //\r\n      );\r\n      const listData = response?.data?.forms; //pagination\r\n      setQName(listData);\r\n      setQPagi(response?.data?.pagination);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get, addFormView, currentPage]);\r\n\r\n  useEffect(() => {\r\n    getTableLists();\r\n  }, [getTableLists]);\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={qName}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n              currentPage={currentPage || 1}\r\n              itemsPerPage={itemsPerPage || 5}\r\n            />\r\n\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={qPagi?.total || 0}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n              onAdd={onAdd}\r\n              latest_form_submission={\r\n                edit ? selectedData?.latest_form_submisson : null\r\n              }\r\n              isEditMode={edit}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Psychiatric;\r\n","import { CCol, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { capitalizeFirstLetter } from \"../../../../../../../Utils/commonUtils\";\r\n\r\nconst PsychiatricForm = ({\r\n  back,\r\n  defaultValues,\r\n  questions,\r\n  formTitle,\r\n  onAdd,\r\n  latest_form_submission,\r\n  isEditMode,\r\n}) => {\r\n  const [formData, setFormData] = useState({});\r\n  // Initialize formData with latest_form_submission\r\n  useEffect(() => {\r\n    if (latest_form_submission?.answers) {\r\n      const initializedData = {};\r\n      Object.keys(latest_form_submission.answers).forEach((key) => {\r\n        const answer = latest_form_submission.answers[key];\r\n        console.log(\"first\", answer);\r\n        initializedData[key] = { answer: answer };\r\n      });\r\n      setFormData(initializedData);\r\n    }\r\n  }, [latest_form_submission]);\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const questionId = parseInt(name, 10);\r\n\r\n    // Find the selected option object\r\n    const selectedOption = defaultValues.questions[0].answers.find(\r\n      (answer) => answer.answer.name === value\r\n    );\r\n\r\n    // Update formData with the selected option object\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [questionId]: selectedOption || null,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    // Add your submit logic here\r\n    onAdd(formData);\r\n  };\r\n  return (\r\n    <>\r\n      <form>\r\n        <div className=\"d-flex align-items-center justify-content-between\">\r\n          <h3>{capitalizeFirstLetter(formTitle)}</h3>\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton onClick={back}>BACK</PrimaryButton>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        {!defaultValues ||\r\n        !defaultValues.questions[0].question.sub_questions ? (\r\n          <>\r\n            <p>No questions available</p>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h4 className=\"mb-3\">{defaultValues?.questions[0]?.question?.name}</h4>\r\n            {defaultValues?.questions[0]?.question.sub_questions?.map(\r\n              (question, index) => (\r\n                <CRow key={index} className=\"mb-3\">\r\n                  <CCol>\r\n                    <h5>{index + 1}. {question?.name}</h5>\r\n                    {defaultValues?.questions[0]?.answers?.map(\r\n                      (option, cIndex) => (\r\n                        <CFormCheck\r\n                          key={cIndex}\r\n                          type=\"radio\"\r\n                          name={question.id} // Use question ID as the name\r\n                          id={`question${question.id}_choice${option?.id}`}\r\n                          // name={`question${index + 1}`}\r\n                          // id={`question${index + 1}_choice${cIndex + 1}`}\r\n                          value={option?.answer?.name}\r\n                          label={option?.answer?.name}\r\n                          onChange={handleChange}\r\n                          checked={\r\n                            formData[question.id]?.answer?.name ===\r\n                            option?.answer?.name\r\n                          }\r\n                          disabled={isEditMode}\r\n                        />\r\n                      )\r\n                    )}\r\n                  </CCol>\r\n                </CRow>\r\n              )\r\n            )}\r\n          </>\r\n        )}\r\n      </form>\r\n      {isEditMode ? null : (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton onClick={handleSubmit}>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PsychiatricForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst DiagnosisTable = ({ columns, rowData, getselectedData, from }) => {\r\n \r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id ? dt?.id : \"-\"}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.addition_info?.date ? dt?.addition_info?.date : \"-\"}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.addition_info?.title ? dt?.addition_info?.title : \"-\"}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.addition_info?.notes ? dt?.addition_info?.notes : \"-\"}</CTableDataCell>\r\n              {/* <CTableDataCell>{dt?.remark}</CTableDataCell> */}\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst DiagnosisForm = ({ back, defaultValues, setAddFormView, fetchDiagnosis }) => {\r\n\r\n  const { loading, error, get, post, clearCache, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [icd, setIcd] = useState([]);\r\n  const [Description, setDescription] = useState([defaultValues?.addition_info?.notes || null])\r\n  const [searchTerm, setSearchTerm] = useState([defaultValues?.addition_info?.title || null]);\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n\r\n  // console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!searchTerm) {\r\n      newErrors.searchTerm = \"ICD Code is required.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n\r\n  const onSubmit = () => {\r\n\r\n    if (validate()) {\r\n      if (defaultValues.id !== undefined) {\r\n        console.log(\"Edit clicked\");\r\n        editDiagnosis()\r\n\r\n      }\r\n      if (defaultValues.id === undefined) {\r\n        console.log(\"Add clicked\");\r\n        addDiagnosis();\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  //api integration of ICD Code list\r\n  useEffect(() => {\r\n    const getIcdCode = async () => {\r\n      if (searchTerm) {\r\n        try {\r\n          const response = await get(\r\n            `resource/masters?slug=procedure&searchkey=${searchTerm}&limit=50&country=undefine`\r\n          );\r\n          if (response.code === 200) {\r\n            setIcd(response.data.masters);\r\n          } else {\r\n            console.error(\"Failed to fetch data:\", response.message);\r\n            setIcd([]);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n          setIcd([]);\r\n        }\r\n      } else {\r\n        setIcd([]);\r\n      }\r\n    };\r\n\r\n    getIcdCode();\r\n  }, [searchTerm, get]);\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  // Add API \r\n  const addDiagnosis = async () => {\r\n\r\n    try {\r\n      const body = {\r\n        user_id: \"10\",\r\n        document_source: \"icd\",\r\n        addition_info: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          title: searchTerm,\r\n          notes: Description,\r\n        },\r\n      };\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/docs`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchDiagnosis();\r\n        setAddFormView(false);\r\n        toast.success(\"Added successfully\");\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  // Edit API\r\n  const editDiagnosis = async () => {\r\n    try {\r\n      const body = {\r\n        user_id: \"10\",\r\n        document_source: \"icd\",\r\n        addition_info: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          title: searchTerm,\r\n          notes: Description,\r\n        },\r\n      };\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await patch(`resource/docs/${defaultValues.id}`, body);\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchDiagnosis();\r\n        setAddFormView(false);\r\n        toast.success(\"Updated successfully\");\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.condition}\r\n              /> */}\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  dateFormat=\"MM-dd-yyyy\"\r\n                />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative dropdown-container\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={searchTerm}\r\n                onChange={handleInputChange}\r\n              />\r\n              {loading ? (\r\n                <p>Loading...</p>\r\n              ) : error ? (\r\n                <p>{error}</p>\r\n              ) : icd?.length > 0 ? (\r\n                <ul className=\"dropdown-list\">\r\n                  {icd?.map((icd) => (\r\n                    <li\r\n                      key={icd?.id}\r\n                      className=\"list-group-item\"\r\n                      onClick={() => {\r\n                        setSearchTerm(icd?.slug);\r\n                        setIcd([]);\r\n                        setDescription(icd?.name)\r\n                      }}\r\n                    >\r\n                      {icd?.slug}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : null}\r\n              {errors.searchTerm && <div className=\"error-text\">{errors.searchTerm}</div>}\r\n\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Description\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                // placeholder=\"Enter\"\r\n                disabled\r\n                // defaultValue={defaultValues?.treatment}\r\n                value={Description}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisForm;\r\n","import React, { useState,useEffect,useCallback } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DiagnosisTable from \"../../../../../Tables/DiagnosisTable\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DiagnosisForm from \"./DiagnosisForm\";\r\nimport DateSearch from \"../../../../../DateRangePicker/DateSearch\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../DateRangePicker/DateRangePicker\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst Diagnosis = ({ onClose, from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"ICD CODE\" },\r\n    { id: 4, label: \"Description\" },\r\n    { id: 5, label: \"ACTIONS\" },\r\n  ];\r\n\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     date: \"06-07-2024\",\r\n  //     condition: \"E11.9\",\r\n  //     treatment: \"Type 2 diabetes mellitus without complications\",\r\n  //     remark: \"Lorem Ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     date: \"02-04-2024\",\r\n  //     condition: \"E11.8\",\r\n  //     treatment: \"Type 2 diabetes mellitus without complications\",\r\n  //     remark: \"Lorem Ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     date: \"07-06-2024\",\r\n  //     condition: \"E12.1\",\r\n  //     treatment: \"Type 2 diabetes mellitus without complications\",\r\n  //     remark: \"Lorem Ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     date: \"08-07-2024\",\r\n  //     condition: \"E12.0\",\r\n  //     treatment: \"Type 4 diabetes mellitus without complications\",\r\n  //     remark: \"Lorem Ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     date: \"06-07-2024\",\r\n  //     condition: \"E11.9\",\r\n  //     treatment: \"Type 2 diabetes mellitus without complications\",\r\n  //     remark: \"Lorem Ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 6,\r\n  //     date: \"06-07-2024\",\r\n  //     condition: \"E11.9\",\r\n  //     treatment: \"Type 2 diabetes mellitus without complications\",\r\n  //     remark: \"Lorem Ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 7,\r\n  //     date: \"06-07-2024\",\r\n  //     condition: \"E11.9\",\r\n  //     treatment: \"Type 2 diabetes mellitus without complications\",\r\n  //     remark: \"Lorem Ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 8,\r\n  //     date: \"06-07-2024\",\r\n  //     condition: \"E11.9\",\r\n  //     treatment: \"Type 2 diabetes mellitus without complications\",\r\n  //     remark: \"Lorem Ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 9,\r\n  //     date: \"06-09-2024\",\r\n  //     condition: \"E11.9\",\r\n  //     treatment: \"Type 2 diabetes mellitus without complications\",\r\n  //     remark: \"Lorem Ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 10,\r\n  //     date: \"06-07-2024\",\r\n  //     condition: \"E11.9\",\r\n  //     treatment: \"Type 2 diabetes mellitus without complications\",\r\n  //     remark: \"Lorem Ipsum\",\r\n  //   },\r\n  // ];\r\n\r\n  const { loading, error, get,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n   const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n   \r\n  };\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };  \r\n\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data,id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id)\r\n      detailPage();\r\n    }\r\n  };\r\n    \r\n    \r\n  const fetchDiagnosis = useCallback(async () => {\r\n    try {\r\n      // clearCache();\r\n      const response = await get(\r\n        `resource/docs?limit=${itemsPerPage}&page=${currentPage}&from=${startDate ?? \"\"}&to=${endDate ?? \"\"}&searchkey=${searchValue ?? \"\"}&order_by=created_at&dir=2&slug=icd&user_id=10&scanOrdersOnly=&scanstatus=`\r\n      );\r\n      if (response.code === 200) {\r\n        setRowData(response?.data?.docs);\r\n        setPagination(response?.data?.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage,startDate,endDate,searchValue,addFormView]);\r\n\r\n  useEffect(() => {\r\n    fetchDiagnosis();\r\n  }, [fetchDiagnosis,addFormView]);\r\n\r\n  // Delte Allergies\r\n  const deleteDiagnosis = async () => {\r\n    try {\r\n      const response = await del(`resource/docs/${id}`);\r\n  \r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n\r\n        fetchDiagnosis();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      {from !== \"Consult\" && (\r\n        <CRow className=\"mb-0\">\r\n          <CCol md={4} className=\"mb-2\">\r\n            <div className=\"d-flex gap-2\">\r\n              <img\r\n                alt=\"BackBtn\"\r\n                src={Assets.BackBtn}\r\n                style={{ width: \"35px\" }}\r\n                onClick={onClose}\r\n                className=\"cursor\"\r\n              />\r\n              <span className=\"Obj-name d-flex align-items-center\">\r\n                Diagnosis (Including ICD)\r\n              </span>\r\n            </div>\r\n          </CCol>\r\n          <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n            <div className=\"d-flex mt-2\">\r\n              <Breadcrumb\r\n                paths={[\r\n                  { label: \"Home\", to: \"/patients\" },\r\n                  { label: \"Patient List\", to: \"/patients\" },\r\n                  { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                  {\r\n                    label: \"Diagnosis (Including ICD)\",\r\n                    to: \"/patients/history\",\r\n                  },\r\n                ]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n              <DateRangePicker getFilterValues={getFilterValues} />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <DiagnosisTable\r\n                rowData={rowData}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n                from={from}\r\n              />\r\n            </CRow>\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                     currentPage={currentPage}\r\n                     onPageChange={onPageChange}\r\n                     totalItems={pagination?.total}\r\n                     itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <DiagnosisForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              fetchDiagnosis={fetchDiagnosis}\r\n              setAddFormView={setAddFormView}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => deleteDiagnosis()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Diagnosis;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ImmunizationForm = ({ back, defaultValues }) => {\r\n  console.log(\"first\", defaultValues);\r\n  const [date, setDate] = useState(null);\r\n  const [takendate, setTakenDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.dosage_date;\r\n    const defaultDateString1 = defaultValues?.taken_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.dosage_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n    const defaultDate1 = defaultValues?.taken_date\r\n      ? parseDateString(defaultDateString1)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setTakenDate(defaultDate1);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Vaccine *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.vaccine}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Period *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.period}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Status *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.status}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Dosage Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Taken Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={takendate}\r\n                onChange={(date) => setTakenDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImmunizationForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\n// Add this CSS styling\r\nconst tableCellStyle = {\r\n  borderRight: \"1px solid #ccc\", // Light grey vertical line\r\n  padding: \"8px\",\r\n};\r\n\r\n// Helper function to format date to dd-MM-yyyy\r\nconst formatDate = (dateString) => {\r\n  const parsedDate = Date.parse(dateString);\r\n  if (isNaN(parsedDate)) return \"N/A\"; // Return \"N/A\" if the date is invalid\r\n\r\n  const date = new Date(parsedDate);\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed, so add 1\r\n  const year = date.getFullYear();\r\n\r\n  return `${day}-${month}-${year}`; // Format as dd-MM-yyyy\r\n};\r\n\r\n\r\nconst ImmunizationTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, slug, type) => {\r\n    getselectedData(data, slug, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={tableCellStyle}>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={tableCellStyle}>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={tableCellStyle}>\r\n                <div>\r\n                  {dt?.attributes?.values.map((value, index) => (\r\n                    <div key={index} className=\"fs-16 fw-500\">\r\n                      {value?.periods}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={tableCellStyle}>\r\n                {dt?.attributes?.values.map((value, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className=\"d-flex align-items-center justify-content-center gap-2\"\r\n                  >\r\n                    {!value.taken_at ? (\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.vaccined}\r\n                        className=\"cursor\"\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={() => {\r\n                          if (from !== \"Consult\") {\r\n                            selectedData(value, dt?.slug, \"delete\");\r\n                          }\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        alt=\"delete\"\r\n                        style={{ width: \"25px\" }}\r\n                        src={Assets?.colorVaccined}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={tableCellStyle}>\r\n                <div>\r\n                  {dt?.attributes?.values.map((value, index) => (\r\n                    <div key={index} className=\"fs-16 fw-500\">\r\n                      {formatDate(value?.dosage_date)}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={tableCellStyle}>\r\n                <div>\r\n                  {dt?.attributes?.values.map((value, index) => (\r\n                    <div key={index} className=\"fs-16 fw-500\">\r\n                      {formatDate(value?.taken_at)}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImmunizationTable;\r\n","import React, { useState,useEffect,useCallback } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport ImmunizationForm from \"./ImmunizationForm\";\r\nimport ImmunizationTable from \"../../../../../Tables/ImmunizationTable\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../DateRangePicker/DateRangePicker\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Immunization = ({ onClose, from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"VACCINE\" },\r\n    { id: 3, label: \"PERIOD\" },\r\n    { id: 4, label: \"STATUS\" },\r\n    { id: 5, label: \"DOSAGE DATE\" },\r\n    { id: 6, label: \"TAKEN DATE\" },\r\n    // { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     vaccine: \"Lorem Ipsum\",\r\n  //     period: \"Lorem Ipsum\",\r\n  //     status: \"Lorem Ipsum\",\r\n  //     dosage_date: \"06-07-2024\",\r\n  //     taken_date: \"06-07-2024\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     vaccine: \"Lorem Ipsum\",\r\n  //     period: \"Lorem Ipsum\",\r\n  //     status: \"Lorem Ipsum\",\r\n  //     dosage_date: \"06-07-2024\",\r\n  //     taken_date: \"06-07-2024\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     vaccine: \"Lorem Ipsum\",\r\n  //     period: \"Lorem Ipsum\",\r\n  //     status: \"Lorem Ipsum\",\r\n  //     dosage_date: \"06-07-2024\",\r\n  //     taken_date: \"\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     vaccine: \"Lorem Ipsum\",\r\n  //     period: \"Lorem Ipsum\",\r\n  //     status: \"Lorem Ipsum\",\r\n  //     dosage_date: \"06-07-2024\",\r\n  //     taken_date: \"\",\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     vaccine: \"Lorem Ipsum\",\r\n  //     period: \"Lorem Ipsum\",\r\n  //     status: \"Lorem Ipsum\",\r\n  //     dosage_date: \"06-07-2024\",\r\n  //     taken_date: \"06-07-2024\",\r\n  //   },\r\n  //   {\r\n  //     id: 6,\r\n  //     vaccine: \"Lorem Ipsum\",\r\n  //     period: \"Lorem Ipsum\",\r\n  //     status: \"Lorem Ipsum\",\r\n  //     dosage_date: \"06-07-2024\",\r\n  //     taken_date: \"06-07-2024\",\r\n  //   },\r\n  //   {\r\n  //     id: 7,\r\n  //     vaccine: \"Lorem Ipsum\",\r\n  //     period: \"Lorem Ipsum\",\r\n  //     status: \"Lorem Ipsum\",\r\n  //     dosage_date: \"06-07-2024\",\r\n  //     taken_date: \"06-07-2024\",\r\n  //   },\r\n  //   {\r\n  //     id: 8,\r\n  //     vaccine: \"Lorem Ipsum\",\r\n  //     period: \"Lorem Ipsum\",\r\n  //     status: \"Lorem Ipsum\",\r\n  //     dosage_date: \"06-07-2024\",\r\n  //     taken_date: \"06-07-2024\",\r\n  //   },\r\n  //   {\r\n  //     id: 9,\r\n  //     vaccine: \"Lorem Ipsum\",\r\n  //     period: \"Lorem Ipsum\",\r\n  //     status: \"Lorem Ipsum\",\r\n  //     dosage_date: \"06-07-2024\",\r\n  //     taken_date: \"\",\r\n  //   },\r\n  //   {\r\n  //     id: 10,\r\n  //     vaccine: \"Lorem Ipsum\",\r\n  //     period: \"Lorem Ipsum\",\r\n  //     status: \"Lorem Ipsum\",\r\n  //     dosage_date: \"06-07-2024\",\r\n  //     taken_date: \"06-07-2024\",\r\n  //   },\r\n  // ];\r\n    \r\n  const { loading, error, get,post,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [tkDate, setTkDate] = useState(new Date());\r\n  const [slug, setSlug] = useState(\"\");\r\n  \r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n   \r\n  };\r\n\r\n  \r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n\r\n  const getselectedData = (data,slug, type) => {\r\n    setSelectedData(data);\r\n    setSlug(slug)\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n  console.log(\"selectedData111\",selectedData,slug)\r\n    \r\n  const fetchImmunization = useCallback(async () => {\r\n    try {\r\n      // clearCache();\r\n      const response = await get(\r\n        `resource/masters/all?slug=immunisation&order_by=id&dir=1&patient_id=${data?.user_id}`\r\n      );\r\n      if (response.code === 200) {\r\n        setRowData(response?.data?.masters);\r\n        setPagination(response?.data?.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get]);\r\n\r\n  useEffect(() => {\r\n    fetchImmunization();\r\n  }, [fetchImmunization]);\r\n\r\n\r\n   // Add API \r\n   const addImmunization = async () => {\r\n\r\n    try {\r\n      const body = {\r\n        slug: slug,\r\n        details: selectedData.periods,\r\n        patient_id: data?.user_id,\r\n        status: selectedData.status,\r\n        taken_at: format(tkDate, \"yyyy-MM-dd\"),\r\n      };\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/immunisation`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchImmunization();\r\n        setDeleteView(false)\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ImmunizationTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          <CRow className=\"mb-0\">\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Immunization Status\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Immunization Status\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                {/* <DateRangePicker getFilterValues={getFilterValues} /> */}\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  {/* <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div> */}\r\n                  <div>\r\n                    {/* onClick={() => addFormPage()} */}\r\n                    <PrimaryButton>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <ImmunizationTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ImmunizationForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure taken this Vaccine ?</h5>\r\n\r\n                    <div style={{ width: \"100%\" }} className=\"mb-3\">\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Taken Date *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            showIcon\r\n                            selected={tkDate}\r\n                            onChange={(date) => setTkDate(date)}\r\n                            maxDate={today}\r\n                            dateFormat=\"dd-MM-yyyy\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => addImmunization()}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Immunization;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./MedicalProfile.css\";\r\n\r\nconst MedicalTab = ({ tabs, getCurrentTab, defaultTab }) => {\r\n  const [currentTab, setCurrentTab] = useState(tabs[defaultTab]);\r\n\r\n  const switchTab = (data) => {\r\n    setCurrentTab(data);\r\n    getCurrentTab(data.id);\r\n  };\r\n  return (\r\n    <CCard className=\"medical-tabs\">\r\n      <CCardBody className=\"medical-tabs-container\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`medical-tab-items ${\r\n              data.id === currentTab?.id ? \"medical-tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <span\r\n              className={\r\n                data.id === currentTab?.id\r\n                  ? \"medical-tab-title-active\"\r\n                  : \"medical-tab-title\"\r\n              }\r\n            >\r\n              {data.title}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default MedicalTab;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst BKetone = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [keytone, setKeytone] = useState(defaultData?.blood_ketone || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!keytone) {\r\n      currentErrors.keytone = \"Blood keytone is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          keytone: Number(keytone),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"keytone\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          keytone: Number(keytone),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"keytone\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const deciNum = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{3})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setKeytone(deciNum);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Ketone (mmol/L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.blood_ketone)}\r\n                // onInput={numWithDecimal}\r\n                value={keytone}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n              {errors.keytone && (\r\n                <div className=\"error-text\">{errors.keytone}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BKetone;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst BMI = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{2})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{2})\\.(\\d{2}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n  };\r\n  const [height, setHeight] = useState(defaultData?.[\"height_(cm)\"] || \"\");\r\n  const [weight, setWeight] = useState(defaultData?.[\"weight_(kg)\"] || \"\");\r\n  const [heightUnit, setHeightUnit] = useState(\r\n    defaultData?.height_unit || \"cm\"\r\n  );\r\n  const [weightUnit, setWeightUnit] = useState(\r\n    defaultData?.weight_unit || \"kg\"\r\n  );\r\n  const [bmi, setBmi] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!height || isNaN(height) || height <= 0) {\r\n      currentErrors.height = \"Height is required\";\r\n      isValid = false;\r\n    }\r\n    if (!weight || isNaN(weight) || weight <= 0) {\r\n      currentErrors.weight = \"Weight is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    // if (!heightUnit) {\r\n    //   currentErrors.heightUnit = \"Height Unit is required\";\r\n    //   isValid = false;\r\n    // }\r\n    // if (!weightUnit) {\r\n    //   currentErrors.weightUnit = \"Weight Unit is required\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  // Function to handle BMI calculation\r\n  const calculateBMI = () => {\r\n    if (height && weight) {\r\n      const heightInMeters = height / 100;\r\n      const calculatedBMI = weight / (heightInMeters * heightInMeters);\r\n      setBmi(calculatedBMI.toFixed(2));\r\n    } else {\r\n      setBmi(\"\"); // Handle invalid input\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          height_unit: heightUnit,\r\n          height: height,\r\n          bmi: bmi,\r\n          weight_unit: weightUnit,\r\n          weight: weight,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"bmi\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          height_unit: heightUnit,\r\n          height: height,\r\n          bmi: bmi,\r\n          weight_unit: weightUnit,\r\n          weight: weight,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"bmi\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateBMI();\r\n  }, [weight, height]);\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Height) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                value={heightUnit}\r\n                onChange={(e) => setHeightUnit(e.target.value)}\r\n              />\r\n              {errors.heightUnit && (\r\n                <div className=\"error-text\">{errors.heightUnit}</div>\r\n              )}\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Height (cm) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.height)}\r\n                maxLength={3}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n                value={height}\r\n                onChange={(e) =>\r\n                  setHeight(e.target.value.replace(/[^0-9]/g, \"\"))\r\n                }\r\n              />\r\n              {errors.height && (\r\n                <div className=\"error-text\">{errors.height}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Weight)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={\"kg\"}\r\n                value={weightUnit}\r\n                onChange={(e) => setWeightUnit(e.target.value)}\r\n              />\r\n              {errors.weightUnit && (\r\n                <div className=\"error-text\">{errors.weightUnit}</div>\r\n              )}\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Weight (Kg) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.weight)}\r\n                maxLength={3}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n                value={weight}\r\n                onChange={(e) => {\r\n                  setWeight(e.target.value.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.weight && (\r\n                <div className=\"error-text\">{errors.weight}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                BMI (Kgm2) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.bmi}\r\n                defaultValue={bmi}\r\n                onInput={numWithDecimal}\r\n                disabled\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\"></CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BMI;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst BPForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [systolic, setSystolic] = useState(\r\n    (defaultData?.systolic || \"\").toString()\r\n  );\r\n  const [diastolic, setDiastolic] = useState(\r\n    (defaultData?.diastolic || \"\").toString()\r\n  );\r\n  const [pulse, setPulse] = useState(\r\n    (defaultData?.[\"pulse_(in_bpm)\"] || \"\").toString()\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n\r\n\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     return new Date(year, month - 1, day, hours, minutes);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultData?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultData\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString1 = defaultData?.time;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate1 = defaultData ? defaultDateString1 : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setSelectedDate(defaultDate);\r\n  //   // setSelectedTime(defaultDate1);\r\n  // }, [defaultData]);\r\n\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!systolic?.trim()) {\r\n      newErrors.systolic = \"Systolic is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(systolic)) {\r\n      newErrors.systolic = \"Systolic must be a number.\";\r\n      isValid = false;\r\n    }\r\n    if (!diastolic?.trim()) {\r\n      newErrors.diastolic = \"Diastolic is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(diastolic)) {\r\n      newErrors.diastolic = \"Diastolic must be a number.\";\r\n      isValid = false;\r\n    }\r\n    if (!pulse?.trim()) {\r\n      newErrors.pulse = \"Pulse is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(pulse)) {\r\n      newErrors.pulse = \"Pulse must be a number.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          systolic: Number(systolic),\r\n          diastolic: Number(diastolic),\r\n          pulse: Number(pulse),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"blood-pressure\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          systolic: Number(systolic),\r\n          diastolic: Number(diastolic),\r\n          pulse: Number(pulse),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"blood-pressure\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Systolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"systolic\"\r\n                value={systolic}\r\n                onChange={(e) => setSystolic(e.target.value)}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n              />\r\n              {errors.systolic && (\r\n                <div className=\"error-text\">{errors.systolic}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Diastolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"diastolic\"\r\n                value={diastolic}\r\n                onChange={(e) => setDiastolic(e.target.value)}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n              />\r\n              {errors.diastolic && (\r\n                <div className=\"error-text\">{errors.diastolic}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse (in BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"pulse\"\r\n                value={pulse}\r\n                onChange={(e) => setPulse(e.target.value)}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n              />\r\n              {errors.pulse && <div className=\"error-text\">{errors.pulse}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BPForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { findItemIndex } from \"../../../../../../Utils/commonUtils\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst BSugar = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [type, setType] = useState(defaultData?.type || \"\");\r\n  const [bloodSugar, setBloodSugar] = useState(defaultData?.blood_sugar || \"\");\r\n\r\n  const [errors, setErrors] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    type: \"\",\r\n    bloodSugar: \"\",\r\n  });\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n  console.log(\"time\", getCurrentTime());\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const options = [\"Fasting\", \"Random\", \"Post Prandial \"];\r\n\r\n  const getSelectedValue = (data) => {\r\n    setType(data);\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{4})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{4})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n  };\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!type) {\r\n      currentErrors.type = \"Type is required\";\r\n      isValid = false;\r\n    }\r\n    if (!bloodSugar) {\r\n      currentErrors.bloodSugar = \"Blood Sugar is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          type: type,\r\n          blood_sugar: bloodSugar,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"blood-sugar\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          type: type,\r\n          blood_sugar: bloodSugar,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"blood-sugar\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultData?.type\r\n                      ? options[findItemIndex(options, defaultData?.type)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.type && <div className=\"error-text\">{errors.type}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'mg/dL'}\r\n              />\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Sugar (mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.blood_sugar}\r\n                onInput={numWithDecimal}\r\n                value={bloodSugar}\r\n                onChange={(e) => setBloodSugar(e.target.value)}\r\n              />\r\n              {errors.bloodSugar && (\r\n                <div className=\"error-text\">{errors.bloodSugar}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BSugar;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst BUricAcid = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [uricAcid, setUricAcid] = useState(defaultData?.blood_uric_acid || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!uricAcid) {\r\n      currentErrors.uricAcid = \"Blood Uric Acid is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          uric_acid: Number(uricAcid),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"uric_acid\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          uric_acid: Number(uricAcid),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"uric_acid\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const deciNum = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{3})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setUricAcid(deciNum);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Uric Acid (mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.blood_uric_acid)}\r\n                // onInput={numWithDecimal}\r\n                value={uricAcid}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n              {errors.uricAcid && <div className=\"error-text\">{errors.uricAcid}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BUricAcid;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Creatinine = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [creatinine, setCreatinine] = useState(defaultData?.creatinine || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!creatinine) {\r\n      currentErrors.creatinine = \"Creatinine is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          creatinine: Number(creatinine),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"creatinine\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          creatinine: Number(creatinine),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"creatinine\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const deciNum = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{1})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{1})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setCreatinine(deciNum);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Creatinine (mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.creatinine)}\r\n                // onInput={numWithDecimal}\r\n                value={creatinine}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n              {errors.creatinine && <div className=\"error-text\">{errors.creatinine}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Creatinine;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst GFR = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [gfr, setGfr] = useState(defaultData?.gfr || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!gfr) {\r\n      currentErrors.gfr = \"gfr is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mL/min/1.73 m²\",\r\n          gfr: Number(gfr),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"gfr\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mL/min/1.73 m²\",\r\n          gfr: Number(gfr),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"gfr\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  // const numWithDecimal = (e) => {\r\n  //   const deciNum = e.target.value\r\n  //     .replace(/[^0-9.]/g, \"\")\r\n  //     .replace(/^(\\d{1})\\d*$/, \"$1\")\r\n  //     .replace(/^(\\d{1})\\.(\\d{1}).*$/, \"$1.$2\")\r\n  //     .replace(/(\\..*)\\./g, \"$1\");\r\n  //   setGfr(deciNum);\r\n  // };\r\n\r\n  const numWithDecimal = (e) => {\r\n    // Extract the input value\r\n    const value = e.target.value;\r\n\r\n    // Remove all non-numeric characters except for the decimal point\r\n    let formattedValue = value.replace(/[^0-9.]/g, \"\");\r\n\r\n    // Ensure there is only one decimal point\r\n    if (formattedValue.split(\".\").length > 2) {\r\n      formattedValue = formattedValue.replace(/\\.+$/, \"\"); // Remove trailing decimal points\r\n      formattedValue = formattedValue.replace(/(\\..*)\\./g, \"$1\"); // Remove extra decimal points\r\n    }\r\n\r\n    // Limit the number of digits before the decimal point to 3\r\n    const parts = formattedValue.split(\".\");\r\n    if (parts[0].length > 3) {\r\n      parts[0] = parts[0].slice(0, 3);\r\n    }\r\n\r\n    // Limit the number of digits after the decimal point to 2\r\n    if (parts[1]) {\r\n      parts[1] = parts[1].slice(0, 2);\r\n    }\r\n\r\n    // Reassemble the parts\r\n    formattedValue = parts.join(\".\");\r\n\r\n    // Set the formatted value to state or whatever variable you are using\r\n    setGfr(formattedValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                GFR (mL/min/1.73m²) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.gfr)}\r\n                // onInput={numWithDecimal}\r\n                value={gfr}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n              {errors.gfr && <div className=\"error-text\">{errors.gfr}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GFR;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { extractNum } from \"../../../../../../Utils/commonUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst HCT = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [hct, setHct] = useState(defaultData?.[\"hct_%\"] || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!hct) {\r\n      currentErrors.hct = \"HCT is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          hct: Number(hct),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"hct\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          hct: Number(hct),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"hct\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const deciNum = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{3})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setHct(deciNum);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HCT (%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.[\"hct_%\"])}\r\n                // onInput={numWithDecimal}\r\n                value={hct}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HCT;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport {\r\n  findItemIndex,\r\n  getFileTypeFromMime,\r\n  openFile,\r\n} from \"../../../../../../Utils/commonUtils\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst HeartRate = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [type, setType] = useState(defaultData?.type || null);\r\n  const [interpretation, setInterpretation] = useState(\r\n    defaultData?.interpretation === \"-\"\r\n      ? \"\"\r\n      : defaultData?.interpretation || null\r\n  );\r\n  const [ecgFile, setEcgFile] = useState({\r\n    name: \"\",\r\n    link: \"\",\r\n    contentType: \"\",\r\n  });\r\n  const [hr, setHr] = useState(defaultData?.[\"hr_(bpm)\"] || null);\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const options = [\r\n    \"1 Lead ECG\",\r\n    \"3 Lead ECG\",\r\n    \"12 Lead ECG\",\r\n    \"Auscultation\",\r\n    \"Cardiac Function Test\",\r\n  ];\r\n\r\n  const getSelectedValue = (data) => {\r\n    setType(data);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files) {\r\n      handleUpload(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (file) => {\r\n    if (file) {\r\n      // const fileType = getFileTypeFromMime(file.type);\r\n      setEcgFile({ name: file.name, link: \"\", contentType: file.type });\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        // Convert file to base64 string\r\n        const base64 = reader.result.split(\",\")[1]; // Remove the data URL part\r\n        setEcgFile((prevState) => ({\r\n          ...prevState,\r\n          link: base64,\r\n        }));\r\n      };\r\n\r\n      // Read the file as a data URL\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const [errors, setErrors] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    type: \"\",\r\n    hr: \"\",\r\n  });\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!type) {\r\n      currentErrors.type = \"ECG Type is required\";\r\n      isValid = false;\r\n    }\r\n    if (!hr) {\r\n      currentErrors.hr = \"Heart Rate is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"Bpm\",\r\n          heart: Number(hr),\r\n          type: type,\r\n          interpretation: interpretation,\r\n          // result_file: ecgFile,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"heart-rate\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"Bpm\",\r\n          heart: Number(hr),\r\n          type: type,\r\n          interpretation: interpretation,\r\n          // result_file: ecgFile,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"heart-rate\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const openInNewTab = () => {\r\n    if (ecgFile.link && ecgFile.contentType) {\r\n      const dataUrl = `data:${ecgFile.contentType};base64,${ecgFile.link}`;\r\n      window.open(dataUrl, \"_blank\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultData?.type\r\n                      ? options[findItemIndex(options, defaultData?.type)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.type && <div className=\"error-text\">{errors.type}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HR (in bpm) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.hr}\r\n                value={hr}\r\n                onChange={(e) => {\r\n                  setHr(e.target.value.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n                maxLength={3}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n              />\r\n              {errors.hr && <div className=\"error-text\">{errors.hr}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG\r\n              </label>\r\n              <input id=\"file\" type=\"file\" onChange={handleFileChange} />\r\n              <label htmlFor=\"file\">Choose file</label>\r\n\r\n              <div class=\"d-flex flex-column gap-1 justify-content-center h-100\">\r\n                {ecgFile?.link !== \"\" ? (\r\n                  <span className=\"cursor\" onClick={() => openInNewTab()}>\r\n                    ECG.{getFileTypeFromMime(ecgFile?.contentType)}\r\n                  </span>\r\n                ) : (\r\n                  <span className=\"\">No File Chosen</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Interpretation\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.interpretation}\r\n                value={interpretation}\r\n                onChange={(e) => {\r\n                  setInterpretation(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeartRate;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Hemogloin = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [hemoglobin, setHemoglobin] = useState(defaultData?.hemoglobin || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!hemoglobin) {\r\n      currentErrors.hemoglobin = \"Hemoglobin is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          hemoglobin: Number(hemoglobin),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"hemoglobin\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          hemoglobin: Number(hemoglobin),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"hemoglobin\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const deciNum = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{3})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setHemoglobin(deciNum);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Hemogloin (g/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.hemoglobin)}\r\n                // onInput={numWithDecimal}\r\n                value={hemoglobin}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n              {errors.hemoglobin && (\r\n                <div className=\"error-text\">{errors.hemoglobin}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hemogloin;\r\n","import { CCol, CContainer, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst LFTForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [fvcL, setFvcL] = useState(defaultData?.[\"fvc_(l)\"] || \"\");\r\n  const [fvcPercent, setFvcPercent] = useState(defaultData?.fvcPercent || \"\");\r\n  const [fev1L, setFev1L] = useState(defaultData?.[\"fev1_(l)\"] || \"\");\r\n  const [fev1Percent, setFev1Percent] = useState(\r\n    defaultData?.fev1Percent || \"\"\r\n  );\r\n  const [pefL, setPefL] = useState(defaultData?.[\"pef_(l/s)\"] || \"\");\r\n  const [pefPercent, setPefPercent] = useState(defaultData?.pefPercent || \"\");\r\n  const [fev1FvcPercent, setFev1FvcPercent] = useState(\r\n    defaultData?.[\"fev1/fvc_(%)\"] || \"\"\r\n  );\r\n  const [fef25L, setFef25L] = useState(defaultData?.fef25 || \"\");\r\n  const [fef25Percent, setFef25Percent] = useState(\r\n    defaultData?.fef25Percent || \"\"\r\n  );\r\n  const [fef50L, setFef50L] = useState(defaultData?.fef50 || \"\");\r\n  const [fef50Percent, setFef50Percent] = useState(\r\n    defaultData?.fef50Percent || \"\"\r\n  );\r\n  const [fef75L, setFef75L] = useState(defaultData?.fef75 || \"\");\r\n  const [fef75Percent, setFef75Percent] = useState(\r\n    defaultData?.fef75Percent || \"\"\r\n  );\r\n  const [fef2575L, setFef2575L] = useState(defaultData?.fef2575 || \"\");\r\n  const [fef2575Percent, setFef2575Percent] = useState(\r\n    defaultData?.fef2575Percent || \"\"\r\n  );\r\n  const [notes, setNotes] = useState(defaultData?.notes || \"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{2})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{2})\\.(\\d{2}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n  };\r\n\r\n  const convertNum = (e) => {\r\n    e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n  };\r\n  // Validate inputs\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    let isValid = true;\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    // if (!notes) {\r\n    //   newErrors.notes = \"Notes is required\";\r\n    //   isValid = false;\r\n    // }\r\n    // Check required numerical fields\r\n    const fields = [\r\n      {\r\n        name: \"fvcL\",\r\n        value: fvcL,\r\n        maxLength: 5,\r\n        required: true,\r\n        label: \"FVC (L)\",\r\n      },\r\n      {\r\n        name: \"fvcPercent\",\r\n        value: fvcPercent,\r\n        maxLength: 2,\r\n        required: true,\r\n        label: \"FVC (%)\",\r\n      },\r\n      {\r\n        name: \"fev1L\",\r\n        value: fev1L,\r\n        maxLength: 5,\r\n        required: true,\r\n        label: \"FEV1 (L)\",\r\n      },\r\n      {\r\n        name: \"fev1Percent\",\r\n        value: fev1Percent,\r\n        maxLength: 2,\r\n        required: true,\r\n        label: \"FEV1 (%)\",\r\n      },\r\n      // {\r\n      //   name: \"pefL\",\r\n      //   value: pefL,\r\n      //   maxLength: 5,\r\n      //   required: true,\r\n      //   label: \"PEF (L/s)\",\r\n      // },\r\n      // {\r\n      //   name: \"pefPercent\",\r\n      //   value: pefPercent,\r\n      //   maxLength: 2,\r\n      //   required: true,\r\n      //   label: \"PEF (%)\",\r\n      // },\r\n      {\r\n        name: \"fev1FvcPercent\",\r\n        value: fev1FvcPercent,\r\n        maxLength: 2,\r\n        required: true,\r\n        label: \"FEV1/FVC (%)\",\r\n      },\r\n    ];\r\n\r\n    fields?.forEach((field) => {\r\n      if (field?.required && !field?.value) {\r\n        newErrors[field?.name] = `${field?.label} is required`;\r\n        isValid = false;\r\n      } else if (field?.maxLength && field?.value?.length > field?.maxLength) {\r\n        newErrors[\r\n          field.name\r\n        ] = `Maximum length is ${field.maxLength} characters`;\r\n        isValid = false;\r\n      } else if (isNaN(field.value)) {\r\n        newErrors[field.name] = \"Must be a number\";\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateForm()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          fvc: Number(fvcL),\r\n          fvcPercent: Number(fvcPercent),\r\n          fev1: Number(fev1L),\r\n          fev1Percent: Number(fev1Percent),\r\n          fev1_fvc: Number(fev1FvcPercent),\r\n          pef: Number(pefL),\r\n          pefPercent: Number(pefPercent),\r\n          fef25: Number(fef25L),\r\n          fef25Percent: Number(fef25Percent),\r\n          fef50: Number(fef50L),\r\n          fef50Percent: Number(fef50Percent),\r\n          fef75: Number(fef75L),\r\n          fef75Percent: Number(fef75Percent),\r\n          fef2575: Number(fef2575L),\r\n          fef2575Percent: Number(fef2575Percent),\r\n          notes: notes,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"spirometer\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          fvc: Number(fvcL),\r\n          fvcPercent: Number(fvcPercent),\r\n          fev1: Number(fev1L),\r\n          fev1Percent: Number(fev1Percent),\r\n          fev1_fvc: Number(fev1FvcPercent),\r\n          pef: Number(pefL),\r\n          pefPercent: Number(pefPercent),\r\n          fef25: Number(fef25L),\r\n          fef25Percent: Number(fef25Percent),\r\n          fef50: Number(fef50L),\r\n          fef50Percent: Number(fef50Percent),\r\n          fef75: Number(fef75L),\r\n          fef75Percent: Number(fef75Percent),\r\n          fef2575: Number(fef2575L),\r\n          fef2575Percent: Number(fef2575Percent),\r\n          notes: notes,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"spirometer\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FVC (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fvc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fvcL}\r\n                onChange={(e) => setFvcL(e.target.value)}\r\n              />\r\n              {errors.fvcL && <div className=\"error-text\">{errors.fvcL}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FVC (%)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fvc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fvcPercent}\r\n                onChange={(e) => setFvcPercent(e.target.value)}\r\n              />\r\n              {errors.fvcPercent && (\r\n                <div className=\"error-text\">{errors.fvcPercent}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1 (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fev1_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fev1L}\r\n                onChange={(e) => setFev1L(e.target.value)}\r\n              />\r\n              {errors.fev1L && <div className=\"error-text\">{errors.fev1L}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1 (%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fev1_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fev1Percent}\r\n                onChange={(e) => setFev1Percent(e.target.value)}\r\n              />\r\n              {errors.fev1Percent && (\r\n                <div className=\"error-text\">{errors.fev1Percent}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                PEF (L/s) \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"pef_(l/min)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={pefL}\r\n                onChange={(e) => setPefL(e.target.value)}\r\n              />\r\n              {errors.pefL && <div className=\"error-text\">{errors.pefL}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                PEF (%) \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"pef_(l/min)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={pefPercent}\r\n                onChange={(e) => setPefPercent(e.target.value)}\r\n              />\r\n              {errors.pefPercent && (\r\n                <div className=\"error-text\">{errors.pefPercent}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1/FVC (%)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fev1/fvc\"]}\r\n                maxLength={2}\r\n                onInput={numWithDecimal}\r\n                value={fev1FvcPercent}\r\n                onChange={(e) => setFev1FvcPercent(e.target.value)}\r\n              />\r\n              {errors.fev1FvcPercent && (\r\n                <div className=\"error-text\">{errors.fev1FvcPercent}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF25 (L/s)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fef25L}\r\n                onChange={(e) => setFef25L(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF25 (%)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fef25Percent}\r\n                onChange={(e) => setFef25Percent(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF50 (L/s)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fef50L}\r\n                onChange={(e) => setFef50L(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF50 (%)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fef50Percent}\r\n                onChange={(e) => setFef50Percent(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF75 (L/s)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fef75L}\r\n                onChange={(e) => setFef75L(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF75 (%)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fef75Percent}\r\n                onChange={(e) => setFef75Percent(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF2575 (L/s)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fef2575L}\r\n                onChange={(e) => setFef2575L(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF2575 (%)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fef2575Percent}\r\n                onChange={(e) => setFef2575Percent(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={8}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes \r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                rows={3}\r\n                value={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n              />\r\n              {errors.notes && <div className=\"error-text\">{errors.notes}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LFTForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { extractNum } from \"../../../../../../Utils/commonUtils\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst LipidProfileForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [ldl, setLdl] = useState(defaultData?.[\"ldl(mg/dl)\"] || \"\");\r\n  const [hdl, setHdl] = useState(defaultData?.[\"hdl(mg/dl)\"] || \"\");\r\n  const [vldl, setVldl] = useState(defaultData?.[\"vldl(mg/dl)\"] || \"\");\r\n  const [ldlHdl, setLdlHdl] = useState(defaultData?.[\"ldl/hdl(mg/dl)\"] || \"\");\r\n  const [triglycerides, setTriglycerides] = useState(\r\n    defaultData?.[\"triglycerides(mg/dl)\"] || \"\"\r\n  );\r\n  const [totalCholesterol, setTotalCholesterol] = useState(\r\n    defaultData?.[\"total_cholesterol(mg/dl)\"] || \"\"\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  // const convertNum = (e) => {\r\n  //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n  // };\r\n\r\n  // Validation function\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!ldl || isNaN(ldl) || ldl < 0) {\r\n      currentErrors.ldl = \"LDL is required\";\r\n      isValid = false;\r\n    }\r\n    if (!hdl || isNaN(hdl) || hdl < 0) {\r\n      currentErrors.hdl = \"HDL is required\";\r\n      isValid = false;\r\n    }\r\n    if (!vldl || isNaN(vldl) || vldl < 0) {\r\n      currentErrors.vldl = \"VLDL is required\";\r\n      isValid = false;\r\n    }\r\n    if (!ldlHdl || isNaN(ldlHdl) || ldlHdl < 0) {\r\n      currentErrors.ldlHdl = \"LDL/HDL is required\";\r\n      isValid = false;\r\n    }\r\n    if (!triglycerides || isNaN(triglycerides) || triglycerides < 0) {\r\n      currentErrors.triglycerides = \"Triglycerides is required\";\r\n      isValid = false;\r\n    }\r\n    if (!totalCholesterol || isNaN(totalCholesterol) || totalCholesterol < 0) {\r\n      currentErrors.totalCholesterol = \"Total Cholesterol is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          ldl_unit: \"mg/dL\",\r\n          hdl_unit: \"mg/dL\",\r\n          vldl_unit: \"mg/dL\",\r\n          hdl_ldl_unit: \"mg/dL\",\r\n          triglycerides_unit: \"mg/dL\",\r\n          total_unit: \"mg/dL\",\r\n          ldl: Number(ldl),\r\n          vldl: Number(vldl),\r\n          hdl: Number(hdl),\r\n          hdl_ldl: Number(ldlHdl),\r\n          triglycerides: Number(triglycerides),\r\n          total: Number(totalCholesterol),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"lipid-profile\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          ldl_unit: \"mg/dL\",\r\n          hdl_unit: \"mg/dL\",\r\n          vldl_unit: \"mg/dL\",\r\n          hdl_ldl_unit: \"mg/dL\",\r\n          triglycerides_unit: \"mg/dL\",\r\n          total_unit: \"mg/dL\",\r\n          ldl: Number(ldl),\r\n          vldl: Number(vldl),\r\n          hdl: Number(hdl),\r\n          hdl_ldl: Number(ldlHdl),\r\n          triglycerides: Number(triglycerides),\r\n          total: Number(totalCholesterol),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"lipid-profile\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.totalOnly}\r\n                maxLength={3}\r\n                // onInput={convertNum}\r\n                value={ldl}\r\n                onChange={(e) => {\r\n                  setLdl(e.target?.value?.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.ldl && <div className=\"error-text\">{errors.ldl}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HDL(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.totalOnly}\r\n                maxLength={3}\r\n                // onInput={convertNum}\r\n                value={hdl}\r\n                onChange={(e) => {\r\n                  setHdl(e.target?.value?.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.hdl && <div className=\"error-text\">{errors.hdl}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                VLDL(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.totalOnly}\r\n                maxLength={3}\r\n                // onInput={convertNum}\r\n                value={vldl}\r\n                onChange={(e) => {\r\n                  setVldl(e.target?.value?.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.vldl && <div className=\"error-text\">{errors.vldl}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL/HDL(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.totalOnly}\r\n                maxLength={3}\r\n                // onInput={convertNum}\r\n                value={ldlHdl}\r\n                onChange={(e) => {\r\n                  setLdlHdl(e.target?.value?.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.ldlHdl && (\r\n                <div className=\"error-text\">{errors.ldlHdl}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Triglycerides(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.triglycerides)}\r\n                maxLength={3}\r\n                // onInput={convertNum}\r\n                value={triglycerides}\r\n                onChange={(e) => {\r\n                  setTriglycerides(e.target?.value?.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.triglycerides && (\r\n                <div className=\"error-text\">{errors.triglycerides}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Total Cholesterol(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.hdl)}\r\n                maxLength={3}\r\n                // onInput={convertNum}\r\n                value={totalCholesterol}\r\n                onChange={(e) => {\r\n                  setTotalCholesterol(e.target?.value?.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.totalCholesterol && (\r\n                <div className=\"error-text\">{errors.totalCholesterol}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        {/* <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (LDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.ldl)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL/HDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"ldl/hdl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (VLDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                VLDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"vldl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow> */}\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LipidProfileForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst RespirationRateForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [respiration, setRespiration] = useState(\r\n    defaultData?.[\"respiration_rate_(bpm)\"] || \"\"\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!respiration) {\r\n      currentErrors.respiration = \"Respiration rate is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          respiration: respiration,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"respiration\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          respiration: respiration,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"respiration\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Respiration Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"respiration_rate_(bpm)\"]}\r\n                value={respiration}\r\n                onChange={(e) =>\r\n                  setRespiration(e.target.value.replace(/[^0-9]/g, \"\"))\r\n                }\r\n                maxLength={2}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n              />\r\n              {errors.respiration && (\r\n                <div className=\"error-text\">{errors.respiration}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RespirationRateForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Spo2 = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const { post, patch } = useApi();\r\n  function removePercent(str) {\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [spO2, setSpO2] = useState(removePercent(defaultData?.spo2) || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!spO2) {\r\n      currentErrors.spO2 = \"SpO2 is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          spo2: Number(spO2),\r\n          unit: \"%\",\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"spO2\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          spo2: Number(spO2),\r\n          unit: \"%\",\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"spO2\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"pulse_rate_(bpm)\"]}\r\n              />\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                SpO2 (%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.spo2)}\r\n                maxLength={3}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n                value={spO2}\r\n                onChange={(e) => setSpO2(e.target.value.replace(/[^0-9]/g, \"\"))}\r\n              />\r\n              {errors.spO2 && <div className=\"error-text\">{errors.spO2}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spo2;\r\n","import { CCol, CContainer, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { toast } from \"react-toastify\";\r\nimport { extractNum, findItemIndex } from \"../../../../../../Utils/commonUtils\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Temperature = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [selectedMethod, setSelectedMethod] = useState(\r\n    defaultData?.method || null\r\n  );\r\n  const [selectedUnit, setSelectedUnit] = useState(defaultData?.unit || null);\r\n  const [temperature, setTemperature] = useState(\r\n    extractNum(defaultData?.temperature) || \"\"\r\n  );\r\n\r\n  const [errors, setErrors] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    method: \"\",\r\n    unit: \"\",\r\n    temperature: \"\",\r\n  });\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedMethod) {\r\n      currentErrors.method = \"Method is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedUnit) {\r\n      currentErrors.unit = \"Unit is required\";\r\n      isValid = false;\r\n    }\r\n    if (!temperature || isNaN(temperature)) {\r\n      currentErrors.temperature =\r\n        \"Temperature is required and must be a number\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n  const options = [\r\n    \"Oral\",\r\n    \"Rectal\",\r\n    \"Axillary\",\r\n    \"Tympanic\",\r\n    \"Temporal\",\r\n    \"Skin\",\r\n  ];\r\n\r\n  const getSelectedValue = (data) => {\r\n    setSelectedMethod(data);\r\n  };\r\n  const handleUnitChange = (e) => {\r\n    setSelectedUnit(e.target.value);\r\n  };\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          type: selectedMethod,\r\n          unit: selectedUnit,\r\n          temperature: Number(temperature),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"temperature\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          type: selectedMethod,\r\n          unit: selectedUnit,\r\n          temperature: Number(extractNum(temperature)),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"temperature\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const nums = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{3})\\.(\\d{3}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setTemperature(nums);\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Method *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultData?.method\r\n                      ? options[findItemIndex(options, defaultData?.method)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n            {errors.method && <div className=\"error-text\">{errors.method}</div>}\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            {/* <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'F'}\r\n              />\r\n            </div> */}\r\n\r\n            <p className=\"radio-label\">Unit *</p>\r\n            <div className=\"d-flex align-items-end w-100\">\r\n              <div\r\n                style={{\r\n                  boxSizing: \"border-box\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"1px solid #17171D33\",\r\n                  padding: \"10px\",\r\n                }}\r\n              >\r\n                <CFormCheck\r\n                  className=\"mb-0\"\r\n                  inline\r\n                  type=\"radio\"\r\n                  id=\"activityYes\"\r\n                  value=\"Celsius\"\r\n                  label={<label className=\"form-label mb-0\">Celsius</label>}\r\n                  name=\"unit\"\r\n                  checked={selectedUnit === \"Celsius\"} // Set the checked attribute\r\n                  onChange={handleUnitChange} // Handle the change event\r\n                />\r\n                <CFormCheck\r\n                  className=\"mb-0\"\r\n                  inline\r\n                  type=\"radio\"\r\n                  id=\"activityNo\"\r\n                  value=\"Fahrenheit\"\r\n                  label={<label className=\"form-label mb-0\">Fahrenheit</label>}\r\n                  name=\"unit\"\r\n                  checked={selectedUnit === \"Fahrenheit\"} // Set the checked attribute\r\n                  onChange={handleUnitChange} // Handle the change event\r\n                />\r\n              </div>\r\n            </div>\r\n            {errors.unit && <div className=\"error-text\">{errors.unit}</div>}\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Temperature *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                value={temperature}\r\n                onChange={numWithDecimal}\r\n              />\r\n              {errors.temperature && (\r\n                <div className=\"error-text\">{errors.temperature}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Urea = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [urea, setUrea] = useState(defaultData?.urea || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!urea) {\r\n      currentErrors.urea = \"Urea is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          urea: Number(urea),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"urea\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          urea: Number(urea),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"urea\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    // Extract the input value\r\n    const value = e.target.value;\r\n\r\n    // Remove all non-numeric characters except for the decimal point\r\n    let formattedValue = value.replace(/[^0-9.]/g, \"\");\r\n\r\n    // Ensure there is only one decimal point\r\n    if (formattedValue.split(\".\").length > 2) {\r\n      formattedValue = formattedValue.replace(/\\.+$/, \"\"); // Remove trailing decimal points\r\n      formattedValue = formattedValue.replace(/(\\..*)\\./g, \"$1\"); // Remove extra decimal points\r\n    }\r\n\r\n    // Limit the number of digits before the decimal point to 3\r\n    const parts = formattedValue.split(\".\");\r\n    if (parts[0].length > 3) {\r\n      parts[0] = parts[0].slice(0, 3);\r\n    }\r\n\r\n    // Limit the number of digits after the decimal point to 2\r\n    if (parts[1]) {\r\n      parts[1] = parts[1].slice(0, 2);\r\n    }\r\n\r\n    // Reassemble the parts\r\n    formattedValue = parts.join(\".\");\r\n\r\n    // Set the formatted value to state or whatever variable you are using\r\n    setUrea(formattedValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urea (mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                //  defaultValue={extractNum(defaultData?.urea)}\r\n                // onInput={numWithDecimal}\r\n                value={urea}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n              {errors.urea && <div className=\"error-text\">{errors.urea}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urea;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Urinalysis = ({ addBack, defaultData }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [cell, setCell] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     return new Date(year, month - 1, day, hours, minutes);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultData?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultData\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setSelectedDate(defaultDate);\r\n  //   setSelectedTime(defaultDate);\r\n  // }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n\r\n  const oneNumWithOneDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{1})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{1})\\.(\\d{1}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n  \r\n  const oneNumWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{1})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{1})\\.(\\d{3}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n  const twoNumWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{2})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{2})\\.(\\d{2}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n  const threeNumWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{3})\\.(\\d{2}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n  \r\n  const wholeNumber = (e) => {\r\n    e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        {/* <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (μmol/kg/d)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.urine)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (pH)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Sugar (mg/dL)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.sugar}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.protein}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocytes*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.leukocytes}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                RBC*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.rbc}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow> */}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Color *\r\n              </label>\r\n              <select class=\"form-select\" aria-label=\"Disabled select example\">\r\n                <option>Select</option>\r\n                <option value=\"straw\">Straw</option>\r\n                <option value=\"yellow\">Yellow</option>\r\n                <option value=\"amber\">Amber</option>\r\n                <option value=\"red\">Red</option>\r\n                <option value=\"brown\">Brown</option>\r\n                <option value=\"green\">Green</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Clarity *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"clear\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"clear\">Clear</option>\r\n                <option value=\"slightly cloudy\">Slightly Cloudy</option>\r\n                <option value=\"cloudy\">Cloudy</option>\r\n                <option value=\"turbid\">Turbid</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Specific Gravity \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.specific_gravity}\r\n                placeholder=\"Enter\"\r\n                onInput={oneNumWithDecimal}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            {/* <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                pH *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Normal\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Normal (6-7)\">Normal (6-7)</option>\r\n                <option value=\"Acidic(<6)\">Acidic ({\"<\"}6)</option>\r\n                <option value=\"Alkaline(>7)\">Alkaline ({\">\"}7)</option>\r\n              </select>\r\n            </div> */}\r\n             <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              pH *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n                onInput={twoNumWithDecimal}\r\n              />\r\n            </div>\r\n\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Trace\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"1+ (30 mg/dL)\">1+ (30 mg/dL)</option>\r\n                <option value=\"2+ (100 mg/dL)\">2+ (100 mg/dL)</option>\r\n                <option value=\"3+ (300 mg/dL)\">3+ (300 mg/dL)</option>\r\n                <option value=\"4+ (>2000 mg/dL)\">4+ ({\">\"}2000 mg/dL)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Glucose *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"1+ (100 mg/dL)\">1+ (100 mg/dL)</option>\r\n                <option value=\"2+ (250 mg/dL)\">2+ (250 mg/dL)</option>\r\n                <option value=\"3+ (500 mg/dL)\">3+ (500 mg/dL)</option>\r\n                <option value=\"4+ (1000 mg/dL)\">4+ (1000 mg/dL)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Ketones *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+) mg/dL\">Small (1+) mg/dL</option>\r\n                <option value=\"Moderate (2+) mg/dL\">Moderate (2+) mg/dL</option>\r\n                <option value=\"Large (3+) mg/dL\">Large (3+) mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood in Urine *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+) mg/dL\">Small (1+) mg/dL</option>\r\n                <option value=\"Moderate (2+) mg/dL\">Moderate (2+) mg/dL</option>\r\n                <option value=\"Large (3+) mg/dL\">Large (3+) mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocyte Esterase *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+) mg/dL\">Small (1+) mg/dL</option>\r\n                <option value=\"Moderate (2+) mg/dL\">Moderate (2+) mg/dL</option>\r\n                <option value=\"Large (3+) mg/dL\">Large (3+) mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Nitrites *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Positive\">Positive</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urobilinogen *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n                onInput={oneNumWithOneDecimal}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Bilirubin *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Positive\">Positive</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"vertical-line mb-3\"></div>\r\n        <CRow>\r\n        <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Red Blood Cells\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n                maxLength={2}\r\n                onInput={wholeNumber}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              White Blood Cells\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n                maxLength={2}\r\n                onInput={wholeNumber}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Epithelial Cells \r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Red Blood Cell\"}\r\n                // onChange={(e) => setCell(e.target.value)}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Red Blood Cell\">Squamous Epithelial Cells</option>\r\n                <option value=\"White Blood Cell\">Transitional Epithelial Cells</option>\r\n                <option value=\"Epithelial Cell\">Renal Tubular Epithelial Cells</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n         \r\n          {/* {cell === \"Epithelial Cell\" && (\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Epithelial Cells *\r\n                </label>\r\n                <select\r\n                  class=\"form-select\"\r\n                  aria-label=\"Disabled select example\"\r\n                  // defaultValue={\"Squamous Epithelial Cells\"}\r\n                >\r\n                  <option>Select</option>\r\n\r\n                  <option value=\"Squamous Epithelial Cells\">\r\n                    Squamous Epithelial Cells\r\n                  </option>\r\n                  <option value=\"Transitional Epithelial Cells\">\r\n                    Transitional Epithelial Cells\r\n                  </option>\r\n                  <option value=\"Renal Tubular Epithelial Cells\">\r\n                    Renal Tubular Epithelial Cells\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </CCol>\r\n          )} */}\r\n        </CRow>\r\n        <CRow className=\"mb-3\"> \r\n        <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Crystals \r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Uric Acid Crystals\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Uric Acid Crystals\">Uric Acid Crystals</option>\r\n                <option value=\"Calcium Oxalate Crystals\">\r\n                  Calcium Oxalate Crystals\r\n                </option>\r\n                <option value=\"Struvite Crystals\">Struvite Crystals</option>\r\n                <option value=\"Cystine Crystals \">Cystine Crystals </option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Microorganisms \r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Bacteria\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Bacteria\">Bacteria</option>\r\n                <option value=\"Yeast\">Yeast</option>\r\n                <option value=\"Parasites\">Parasites</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urinalysis;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst LabForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lab Test Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Upload Results / Image (pdf, jpg, jpeg, png)\r\n              </label>\r\n              <div class=\"input-file-container\">\r\n                <input class=\"input-file\" id=\"my-file\" type=\"file\" />\r\n                <label\r\n                  tabindex=\"0\"\r\n                  for=\"my-file\"\r\n                  className=\"input-file-trigger\"\r\n                >\r\n                  <img alt=\"upload\" src={Assets.Export} />\r\n                  <span>Choose File</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol className=\"d-flex align-items-center\">\r\n          <span className=\"fs-18 fw-400\">No Files Chosen</span>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabForm;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ExamOptions = ({ label, onSelect, selected, disabled }) => {\r\n  const [isSelected, setIsSelected] = useState(selected);\r\n\r\n  useEffect(() => {\r\n    setIsSelected(selected);\r\n  }, [selected]);\r\n\r\n  const toggleSelected = () => {\r\n    if (!disabled) {\r\n      const newSelected = !isSelected;\r\n      setIsSelected(newSelected);\r\n      onSelect(label, newSelected); // Notify parent component of selection change\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`option-item ${isSelected ? \"selected\" : \"\"} ${disabled ? \"disabled\" : \"\"}`}\r\n      onClick={toggleSelected}\r\n    >\r\n      {label?.name}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default ExamOptions;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DateCards from \"../../../../../DateCards/DateCards\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport ExamOptions from \"../../../../../OptionItems/ExamOptions\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst PhysicalExam = ({ onClose, from }) => {\r\n  // const dateCards = [\r\n  //   {\r\n  //     id: 1,\r\n  //     date: \"06-07-2024\",\r\n  //     ga: {\r\n  //       status: \"Abnormal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //     skin: {\r\n  //       status: \"Normal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     date: \"06-07-2024\",\r\n  //     ga: {\r\n  //       status: \"Normal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //     skin: {\r\n  //       status: \"Abnormal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     date: \"06-07-2024\",\r\n  //     ga: {\r\n  //       status: \"Normal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //     skin: {\r\n  //       status: \"Abnormal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     date: \"06-07-2024\",\r\n  //     ga: {\r\n  //       status: \"Normal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //     skin: {\r\n  //       status: \"Abnormal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     date: \"06-07-2024\",\r\n  //     ga: {\r\n  //       status: \"Normal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //     skin: {\r\n  //       status: \"Abnormal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     id: 6,\r\n  //     date: \"06-07-2024\",\r\n  //     ga: {\r\n  //       status: \"Normal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //     skin: {\r\n  //       status: \"Abnormal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     id: 7,\r\n  //     date: \"06-07-2024\",\r\n  //     ga: {\r\n  //       status: \"Normal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //     skin: {\r\n  //       status: \"Abnormal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     id: 8,\r\n  //     date: \"06-07-2024\",\r\n  //     ga: {\r\n  //       status: \"Normal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //     skin: {\r\n  //       status: \"Abnormal\",\r\n  //       notes: \"Lorem ipsum\",\r\n  //       select: [\"Posture and Gait\"],\r\n  //     },\r\n  //   },\r\n  //   { id: 9, date: \"06-07-2024\" },\r\n  //   { id: 10, date: \"06-07-2024\" },\r\n  //   { id: 11, date: \"06-07-2024\" },\r\n  //   { id: 12, date: \"06-07-2024\" },\r\n  //   { id: 13, date: \"06-07-2024\" },\r\n  //   { id: 14, date: \"06-07-2024\" },\r\n  // ];\r\n\r\n  const { get, post, clearCache, del } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n  const [lists, setLists] = useState([]);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [generalOpen, setGeneralOpen] = useState(false);\r\n  const [headings, setHeadings] = useState([]);\r\n  const [subOptions, setSubOptions] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(true);\r\n  const [selectedOptions, setSelectedOptions] = useState({});\r\n  const [notes, setNotes] = useState({});\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState(\r\n    from === \"Consult\" ? lists[1] : null\r\n  );\r\n  const [editView, setEditView] = useState(from === \"Consult\" ? true : false);\r\n  const [date, setDate] = useState(null);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   setEditView(true);\r\n  // }, [from]);\r\n\r\n  const itemsPerPage = 9; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return lists?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselected = (data, method) => {\r\n    setSelectedData(data);\r\n    if (method === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (method === \"edit\") {\r\n      addFormPage();\r\n      setEditView(true);\r\n      setSelectedOptions(data.values || {});\r\n      setNotes(data.notes || {});\r\n      setDate(data?.values?.date);\r\n    }\r\n  };\r\n\r\n  const getOptions = useCallback(\r\n    async (headingSlug) => {\r\n      try {\r\n        const response = await get(\r\n          `resource/masters/all?attr_slug=${headingSlug}&slug=systemic_sub_types&with_values=true&order_by=id&dir=1`\r\n        );\r\n        const optionsData = response?.data?.masters;\r\n        // setSubOptions(optionsData);\r\n        setSubOptions((prevMap) => ({\r\n          ...prevMap,\r\n          [headingSlug]: optionsData,\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching card data:\", error);\r\n      }\r\n    },\r\n    [get]\r\n  );\r\n  const getSavedValue = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHealth/all?user_id=${data?.user_id}&slug=&from=${\r\n          date ?? format(new Date(), \"dd-MM-yyyy\")\r\n        }&to=${\r\n          date ?? format(new Date(), \"dd-MM-yyyy\")\r\n        }&slug_array=allergy,breast,cvs,ears,endocrine,eyes,gastro,general,genito-urinary,head,hematology,mouththroat,musculoskeletal,neck,neurology,nose,peripheral-vascular-disease,psychiatry,respiratory,skin&group_by=date_slug`\r\n      );\r\n      const savedData = response?.data?.patient_healths;\r\n      console.log(\"Saved Data:\", savedData);\r\n\r\n      // Initialize state for selected options and notes\r\n      const initialSelections = {};\r\n      const initialNotes = {};\r\n\r\n      savedData?.forEach((item) => {\r\n        console.log(\"first item\", item);\r\n        const { slug, values, notes } = item;\r\n        if (values) {\r\n          Object.keys(values).forEach((key) => {\r\n            if (values[key]) {\r\n              initialSelections[key] = true;\r\n              initialNotes[slug] = values?.notes; // Assuming notes are stored with a slug key\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      setSelectedOptions(initialSelections);\r\n      setNotes(initialNotes); // Ensure this state is initialized\r\n    } catch (error) {\r\n      console.error(\"Error fetching saved data:\", error);\r\n    }\r\n  }, [get, date, addFormView]);\r\n\r\n  const getHeadings = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/masters/all?slug=systemic-examination&order_by=id&dir=1&patient_id=${data?.user_id}`\r\n      );\r\n      const headingData = response?.data?.masters;\r\n      setHeadings(headingData);\r\n      getSavedValue();\r\n      headingData?.forEach((item) => getOptions(item?.slug));\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [data?.user_id, get, getOptions, getSavedValue, addFormView]);\r\n\r\n  const handleSelect = (option, isSelected) => {\r\n    // Update the selected options as an object\r\n    const updatedOptions = {\r\n      ...selectedOptions,\r\n      [option.slug]: isSelected,\r\n    };\r\n\r\n    setSelectedOptions(updatedOptions);\r\n    clearCache();\r\n\r\n    // Format the options into an object where only the selected options are true\r\n    const formattedOptions = Object.keys(subOptions).reduce((acc, key) => {\r\n      if (key === option.attributes?.reference_slug) {\r\n        subOptions[key].forEach((opt) => {\r\n          acc[opt.slug] = updatedOptions[opt.slug] || false;\r\n        });\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    // Example API call with the formatted options\r\n    onSubmit(formattedOptions, option.attributes?.reference_slug);\r\n  };\r\n\r\n  const handleNotesChange = (slug, value) => {\r\n    setNotes((prevNotes) => ({\r\n      ...prevNotes,\r\n      [slug]: value,\r\n    }));\r\n  };\r\n\r\n  const getLists = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHealth?limit=10&page=1&from=${startDate ?? \"\"}&to=${\r\n          endDate ?? \"\"\r\n        }&order_by=created_at&dir=2&user_id=${\r\n          data?.user_id\r\n        }&slug=&searchkey=&slug_array=allergy,breast,cvs,ears,endocrine,eyes,gastro,general,genito-urinary,head,hematology,mouththroat,musculoskeletal,neck,neurology,nose,peripheral-vascular-disease,psychiatry,respiratory,skin`\r\n      );\r\n      const listData = response?.data?.patient_healths; //pagination\r\n      setLists(listData);\r\n      setTotalItem(response?.data?.pagination);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get, deleteView, addFormView, startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    getSavedValue();\r\n  }, [getSavedValue, date]);\r\n\r\n  useEffect(() => {\r\n    getHeadings();\r\n  }, [getHeadings]);\r\n\r\n  useEffect(() => {\r\n    getLists();\r\n  }, [getLists]);\r\n\r\n  const onSubmit = async (formattedOptions, selectedSlug) => {\r\n    try {\r\n      const url = `resource/patientHealth`; // Replace with your API endpoint\r\n      const body = {\r\n        values: {\r\n          ...formattedOptions,\r\n          date: date === null ? format(new Date(), \"dd-MM-yyyy\") : date,\r\n          // others: [], // option to add extra on the fly for perticular section\r\n          notes: notes[selectedSlug] || \"\",\r\n        },\r\n        slug: selectedSlug,\r\n        up_create: true,\r\n        patient_id: data?.user_id, //data?.user_id\r\n      };\r\n      await post(url, body);\r\n      toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onDelete = async () => {\r\n    clearCache();\r\n    try {\r\n      const url = `resource/patientHealth/${selectedData?.id}`; // Replace with your API endpoint\r\n      await del(url);\r\n      toast.success(\"Deleted successfully\");\r\n      setDeleteView(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  const getFilterValues = (date1, date2) => {\r\n    console.log(date1, \"first date\", date2);\r\n    setStartDate(date1);\r\n    setEndDate(date2);\r\n  };\r\n  const clearDates = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n  };\r\n  return (\r\n    <>\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          <CRow className=\"mb-0\">\r\n            <CCol md={6} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Physical Exam\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Physical Exam\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector getFilterValues={getFilterValues} />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton\r\n                      onClick={() => {\r\n                        addFormPage();\r\n                        setSelectedData({});\r\n                        setDate(null);\r\n                      }}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                {lists.length > 0 ? (\r\n                  <>\r\n                    <CRow>\r\n                      {lists?.map((item, i) => (\r\n                        <CCol lg={4} className=\"mb-3\" key={i}>\r\n                          <DateCards data={item} onClick={getselected} />\r\n                        </CCol>\r\n                      ))}\r\n                    </CRow>\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={totalItem?.total}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"d-flex w-100 justify-content-center mt-5 mb-3\">\r\n                      <h4>No Data Available</h4>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => onDelete()}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <CRow className=\"mb-2\">\r\n                  <CCol className=\"d-flex align-items-center gap-2\">\r\n                    <span>Date</span>\r\n                    <SingleDatePicker\r\n                      getStartDate={(date) => setDate(date)}\r\n                      date={date}\r\n                    />\r\n                  </CCol>\r\n                  <CCol className=\"d-flex justify-content-end\">\r\n                    <div style={{ width: \"120px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => {\r\n                          setAddFormView(false);\r\n                          setEditView(false);\r\n                          setSelectedData({});\r\n                          clearDates();\r\n                        }}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets?.listview} alt=\"close\" />\r\n                          <span>List View</span>\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <div className=\"vertical-line mb-3\"></div>\r\n                {headings?.map((item, i) => (\r\n                  <>\r\n                    <CRow className=\"mb-2\" key={item?.id}>\r\n                      <CCol\r\n                        lg={12}\r\n                        className=\"d-flex align-items-center gap-2 mb-1\"\r\n                      >\r\n                        {!generalOpen && (\r\n                          <img\r\n                            alt=\"plus\"\r\n                            src={Assets?.PlusIcon}\r\n                            // onClick={generalTabOpen}\r\n                            className=\"cursor\"\r\n                          />\r\n                        )}\r\n                        {generalOpen && (\r\n                          <img\r\n                            alt=\"plus\"\r\n                            src={Assets?.MinusIcon}\r\n                            // onClick={generalTabClose}\r\n                            className=\"cursor\"\r\n                          />\r\n                        )}\r\n                        <span className=\"fs-16 fw-600\">{item?.name}</span>\r\n                      </CCol>\r\n                      <>\r\n                        <CRow>\r\n                          {subOptions?.[item?.slug]?.map((option, index) => (\r\n                            <CCol lg={\"auto\"}>\r\n                              <ExamOptions\r\n                                key={index}\r\n                                label={option}\r\n                                onSelect={handleSelect}\r\n                                // selected={selectedOptions.includes(\r\n                                //   option?.name\r\n                                // )}\r\n                                selected={!!selectedOptions[option.slug]}\r\n                                disabled={editView}\r\n                              />\r\n                            </CCol>\r\n                          ))}\r\n                          <CCol lg={12} className=\"mb-2\">\r\n                            <div className=\"position-relative\">\r\n                              <label\r\n                                htmlFor={`notes-${item?.slug}`}\r\n                                className=\"form-label\"\r\n                              >\r\n                                Notes\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id={`notes-${item?.slug}`}\r\n                                placeholder=\"Enter notes\"\r\n                                value={notes[item?.slug] || \"\"} // Use notes from state\r\n                                onChange={(e) =>\r\n                                  handleNotesChange(item?.slug, e.target.value)\r\n                                }\r\n                                disabled={editView}\r\n                              />\r\n                            </div>\r\n                          </CCol>\r\n                        </CRow>\r\n                      </>\r\n                    </CRow>\r\n                    <div className=\"vertical-line mt-2 mb-3\" key={i}></div>\r\n                  </>\r\n                ))}\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhysicalExam;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\n  // Helper function to format date to dd-MM-yyyy HH:mm:ss\r\nconst formatDate = (dateString) => {\r\n  const parsedDate = Date.parse(dateString);\r\n  if (isNaN(parsedDate)) return \"N/A\"; // Return \"N/A\" if the date is invalid\r\n\r\n  const date = new Date(parsedDate);\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed, so add 1\r\n  const year = date.getFullYear();\r\n\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n\r\n  return `${day}-${month}-${year} ${hours}:${minutes}`; // Format as dd-MM-yyyy HH:mm\r\n};\r\n\r\nconst NextAppointmentTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id ? dt?.id : \"-\"}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{formatDate(dt?.values?.date)}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{`${dt?.provider?.first_name || ''} ${dt?.provider?.last_name || ''}`}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.reason ? dt?.reason : \"-\"}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt,dt?.id,  \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextAppointmentTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../../Utils/dateUtils\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport {\r\n  findItemIndex,\r\n  getFileTypeFromMime,\r\n  openFile,\r\n} from \"../../../../../../../Utils/commonUtils\";\r\nimport Select from 'react-select';\r\n\r\nconst NextAppointmentForm = ({ back, defaultValues, setAddFormView, fetchNextAppointment }) => {\r\n\r\n\r\n  const { loading, error, get, post, clearCache, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [reason, setReason] = useState();\r\n  const [provider, setProvider] = useState([]);\r\n  const [selectedProvider, setSelectedProvider] = useState(\r\n    defaultValues?.provider?.first_name\r\n      ? { label: `${defaultValues.provider.first_name} ${defaultValues.provider.last_name}` }\r\n      : \"\"\r\n  );\r\n\r\n  \r\n  const [searchTerm, setSearchTerm] = useState([]);\r\n\r\n\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n\r\n  // console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedProvider) {\r\n      newErrors.selectedProvider = \"provider is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!reason) {\r\n      newErrors.reason = \"Reason is required.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n\r\n  const onSubmit = () => {\r\n    console.log('clicked checking')\r\n    if (validate()) {\r\n      if (defaultValues.id !== undefined) {\r\n        console.log(\"Edit clicked\");\r\n        editNextAppointment()\r\n\r\n      }\r\n      if (defaultValues.id === undefined) {\r\n        console.log(\"Add clicked\");\r\n        addNextAppointment();\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleProviderChange = (selectedOption) => {\r\n    setSelectedProvider(selectedOption);\r\n\r\n  };\r\n\r\n  // API integration of Provider list\r\n  useEffect(() => {\r\n    const getProvider = async () => {\r\n      try {\r\n        const response = await get(\r\n          `resource/providers?order_by=id&dir=1`\r\n        );\r\n        if (response.code === 200) {\r\n          // Format the data for react-select: { label: \"Name\", value: \"Name\" }\r\n          const formattedData = response?.data?.providers?.map((item) => ({\r\n            label: `${item?.user?.first_name} ${item?.user?.last_name}`,\r\n            value: `${item?.user?.first_name} ${item?.user?.last_name}`,\r\n          }));\r\n          setProvider(formattedData);\r\n        } else {\r\n          console.error(\"Failed to fetch data:\", response.message);\r\n          setProvider([]); // Ensure it's always an array\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setProvider([]); // Ensure it's always an array\r\n      }\r\n    };\r\n\r\n    getProvider();\r\n  }, [searchTerm]);\r\n\r\n\r\n\r\n\r\n\r\n  // Add NextAppointment\r\n  const addNextAppointment = async () => {\r\n\r\n    try {\r\n      const body = {\r\n        patient_id: \"10\", \r\n        provider_id: \"9\", \r\n        date: `${format(selectedDate, \"yyyy-MM-dd\")} ${format(selectedTime, \"HH:mm:ss\")}`,\r\n       // date: format(selectedDate, \"dd-MM-yyyy\"),\r\n        // time: format(selectedTime,\"HH:mm\"),\r\n        reason: reason,\r\n        provider: selectedProvider?.label,\r\n      }\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/next-appointment`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchNextAppointment();\r\n        setAddFormView(false);\r\n        toast.success(\"Added successfully\");\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Edit NextAppointment\r\n\r\n  const editNextAppointment = async () => {\r\n\r\n    try {\r\n      const body = {\r\n        patient_id: \"10\", \r\n        provider_id: \"9\", \r\n        date: `${format(selectedDate, \"yyyy-MM-dd\")} ${format(selectedTime, \"HH:mm:ss\")}`,\r\n       // date: format(selectedDate, \"dd-MM-yyyy\"),\r\n        // time: format(selectedTime,\"HH:mm\"),\r\n        reason: reason,\r\n        provider: selectedProvider?.label,\r\n      }\r\n      \r\n      // Use the provided `post` function to send the request\r\n      const response = await patch(`resource/next-appointment/${defaultValues.id}`, body);\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchNextAppointment();\r\n        setAddFormView(false);\r\n        toast.success(\"Added successfully\");\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeCaption=\"Time\"\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Provider Name *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Select\r\n                  options={provider}\r\n                  value={selectedProvider}\r\n                  onChange={handleProviderChange}\r\n                  isSearchable\r\n                  placeholder=\"Select\"\r\n                />\r\n              </div>\r\n              {errors.selectedProvider && <div className=\"error-text\">{errors.selectedProvider}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Reason *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                name=\"reason\"\r\n                value={reason}\r\n                onChange={(e) => setReason(e.target.value)}\r\n              />\r\n              {errors.reason && <div className=\"error-text\">{errors.reason}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextAppointmentForm","import React, { useState,useEffect,useCallback} from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PatientEducationForm from \"../../PatientEducation/PatientEducationTab/PatientEducationForm\";\r\nimport NextAppointmentTable from \"../../../../../../Tables/NextAppointmentTable\";\r\nimport NextAppointmentForm from \"./NextAppointmentForm\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\n\r\nconst NextAppointmentTab = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No\" },\r\n    { id: 2, label: \"Date & Time\" },\r\n    { id: 3, label: \"Provider Name\" },\r\n    { id: 3, label: \"Reason\" },\r\n    { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n\r\n\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     provider_name: \"Lorem ipsum \",\r\n  //     reason: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     provider_name: \"Lorem ipsum \",\r\n  //     reason: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     provider_name: \"Lorem ipsum \",\r\n  //     reason: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     provider_name: \"Lorem ipsum \",\r\n  //     reason: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     provider_name: \"Lorem ipsum \",\r\n  //     reason: \"Lorem ipsum\",\r\n  //   },\r\n  // ];\r\n\r\n  const { loading, error, get,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n   \r\n  };\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };  \r\n\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data,id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id)\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  \r\n  const fetchNextAppointment = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/next-appointment?patient_id=10&provider_id=9&limit=${itemsPerPage}&page=${currentPage}&from=${startDate ?? \"\"}&to=${endDate ?? \"\"}&searchkey=${searchValue ?? \"\"}&order_by=date&dir=2`\r\n      );\r\n      if (response.code === 200) {\r\n        setRowData(response.data.next_appointments);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage,startDate,endDate,searchValue]);\r\n\r\n  useEffect(() => {\r\n    fetchNextAppointment();\r\n  }, [fetchNextAppointment]);\r\n\r\n  // Delte Patient Education\r\n  const deleteNextAppointment = async () => {\r\n    try {\r\n      const response = await del(`resource/next-appointment/${id}`);\r\n  \r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        fetchNextAppointment();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n \r\n\r\n \r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <NextAppointmentTable\r\n             rowData={rowData}\r\n             columns={columnData}\r\n             getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                <DateRangePicker getFilterValues={getFilterValues} />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <NextAppointmentTable\r\n                     rowData={rowData}\r\n                     columns={columnData}\r\n                     getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                     currentPage={currentPage}\r\n                     onPageChange={onPageChange}\r\n                     totalItems={pagination?.total}\r\n                     itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <NextAppointmentForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  fetchNextAppointment={fetchNextAppointment}\r\n                  setAddFormView={setAddFormView}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => deleteNextAppointment(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextAppointmentTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PatientEducationTab from \"./NextAppointmentTab/NextAppointmentTab\";\r\n\r\nconst NextAppointment = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Next Appointment\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Next Appointment\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <PatientEducationTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextAppointment;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst ImagingOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Raj Scan 1\", \"Raj Scan 2\", \"Raj Scan 3\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getbtnNames = () => {\r\n    console.log(\"getbtnNames\");\r\n  };\r\n  const eoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd_code}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={eoptions}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Imaging Order Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Scan Center *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"250px\" }}>\r\n          {/* <PrimaryButton>SEND TO LAB</PrimaryButton> */}\r\n          <DropdownButton\r\n            buttonName2={\"SEND TO SCAN CENTER\"}\r\n            getbtnNames={getbtnNames}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ImagingOrderForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\n\r\nconst ImagingOrder = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"NAME\" },\r\n    { id: 4, label: \"FILES\" },\r\n    // { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"SCAN CENTER & STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"01-01-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Accepted\",\r\n      scan_name: \"Raj Scan 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Prescribed\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ImagingOrderTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <ImagingOrderTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ImagingOrderForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"lg\"\r\n              >\r\n                <CModalBody className=\"p-5\">\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12}>\r\n                      <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.date}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Scan Name\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          ICD Code\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Scan Center\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.scan_name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                        <div\r\n                          className=\"w-100\"\r\n                          // style={{\r\n                          //   border: \"1px solid #17171D33\",\r\n                          //   borderRadius: \"5px\",\r\n                          // }}\r\n                        >\r\n                          {/* <Dropdown\r\n                        options={options}\r\n                        getSelectedValue={getSelectedValue}\r\n                      /> */}\r\n                          <CFormSelect\r\n                            aria-label=\"Default select example\"\r\n                            disabled={\r\n                              selectedData.scan_status === \"Uploaded\" ||\r\n                              (selectedData.scan_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          >\r\n                            <option>Select</option>\r\n                            <option value=\"Morning\">Morning</option>\r\n                            <option value=\"Afternoon\">Afternoon</option>\r\n                            <option value=\"Evening\">Evening</option>\r\n                            <option value=\"Night\">Night</option>\r\n                          </CFormSelect>\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <PrimaryButton>SAVE</PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <SecondaryButton onClick={() => setDetailView(false)}>\r\n                        CANCEL\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </CRow>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrder;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst LabOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Raj Scan 1\", \"Raj Scan 2\", \"Raj Scan 3\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getbtnNames = () => {\r\n    console.log(\"getbtnNames\");\r\n  };\r\n  const eoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd_code}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={eoptions}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lab Test Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Lab *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"250px\" }}>\r\n          {/* <PrimaryButton>SEND TO LAB</PrimaryButton> */}\r\n          <DropdownButton\r\n            buttonName2={\"SEND TO LAB\"}\r\n            getbtnNames={getbtnNames}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrderForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport LabOrderForm from \"./LabOrderForm\";\r\n\r\nconst LabOrder = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"NAME\" },\r\n    { id: 4, label: \"FILE\" },\r\n    // { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"LAB & STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Accepted\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <LabOrderTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <LabOrderTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <LabOrderForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"lg\"\r\n              >\r\n                <CModalBody className=\"p-5\">\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12}>\r\n                      <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.date}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Test Name\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          ICD Code\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Lab/Scan Center\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.lab_name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                        <div\r\n                          className=\"w-100\"\r\n                          // style={{\r\n                          //   border: \"1px solid #17171D33\",\r\n                          //   borderRadius: \"5px\",\r\n                          // }}\r\n                        >\r\n                          {/* <Dropdown\r\n                        options={options}\r\n                        getSelectedValue={getSelectedValue}\r\n                      /> */}\r\n                          <CFormSelect\r\n                            aria-label=\"Default select example\"\r\n                            disabled={\r\n                              selectedData.lab_status === \"Uploaded\" ||\r\n                              (selectedData.lab_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          >\r\n                            <option>Select</option>\r\n                            <option value=\"Morning\">Morning</option>\r\n                            <option value=\"Afternoon\">Afternoon</option>\r\n                            <option value=\"Evening\">Evening</option>\r\n                            <option value=\"Night\">Night</option>\r\n                          </CFormSelect>\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Test Type\r\n                        </span>\r\n                        <div>\r\n                          <CFormCheck\r\n                            inline\r\n                            type=\"radio\"\r\n                            name=\"inlineRadioOptions\"\r\n                            id=\"inlineCheckbox1\"\r\n                            value=\"Lab Test\"\r\n                            label=\"Lab Test\"\r\n                            defaultChecked\r\n                            disabled={\r\n                              selectedData.lab_status === \"Uploaded\" ||\r\n                              (selectedData.lab_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          />\r\n                          <CFormCheck\r\n                            inline\r\n                            type=\"radio\"\r\n                            name=\"inlineRadioOptions\"\r\n                            id=\"inlineCheckbox2\"\r\n                            value=\"Home Test\"\r\n                            label=\"Home Test\"\r\n                            disabled={\r\n                              selectedData.lab_status === \"Uploaded\" ||\r\n                              (selectedData.lab_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <PrimaryButton>SAVE</PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <SecondaryButton onClick={() => setDetailView(false)}>\r\n                        CANCEL\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </CRow>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrder;\r\n","import {\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst MedicationOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState(\r\n    defaultValues.medicines\r\n      ? defaultValues.medicines\r\n      : [\r\n          {\r\n            id: 1,\r\n            type: \"\",\r\n            name: \"\",\r\n            strength: \"\",\r\n            strengthMeasurement: \"\",\r\n            days: \"\",\r\n            totalQty: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            instruction: \"\",\r\n            reason: \"\",\r\n            status: \"\",\r\n            m: 0,\r\n            a: 0,\r\n            e: 0,\r\n            n: 0,\r\n            food: \"bf\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, value, fieldName) => {\r\n    console.log(fieldName, value);\r\n    const newValue = value?.replace(/[^0-9]/g, \"\");\r\n    const processedValue =\r\n      fieldName === \"startDate\" || fieldName === \"endDate\"\r\n        ? value\r\n          ? value.toISOString()\r\n          : \"\" // Convert date to ISO string\r\n        : fieldName === \"strength\"\r\n        ? newValue\r\n        : fieldName === \"totalQty\"\r\n        ? newValue\r\n        : fieldName === \"days\"\r\n        ? newValue\r\n        : value;\r\n\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [fieldName]: processedValue };\r\n      }\r\n      return medicine;\r\n    });\r\n\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  console.log(\"first\", medicines);\r\n  const [btnValue, setBtnValue] = useState();\r\n  const [btnView, setBtnView] = useState(false);\r\n\r\n  const getbtnNames = (data) => {\r\n    setBtnValue(data);\r\n    if (data === \"SEND TO PHARMACY\") {\r\n      setBtnView(true);\r\n    }\r\n  };\r\n  console.log(btnValue, \"SEND TO PHARMACY\");\r\n\r\n  const [strength, setStrength] = useState(defaultValues?.strength || \"\");\r\n  const [qty, setQty] = useState(defaultValues?.strength || \"\");\r\n  const [timeTaken, setTimeTaken] = useState(defaultValues?.strength || \"\");\r\n\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newValue = input.replace(/[^0-9]/g, \"\");\r\n    if (name === \"strength\") {\r\n      setStrength(newValue);\r\n    }\r\n    if (name === \"totalQty\") {\r\n      setQty(newValue);\r\n    }\r\n    if (name === \"days\") {\r\n      setTimeTaken(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">\r\n              {defaultValues?.medicines?.length >= 1 ? \"Edit \" : \"Add \"} New\r\n              Medicine\r\n            </span>\r\n          </CCol>\r\n\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3 h-100 d-flex align-items-center justify-content-between\">\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              <CCol\r\n                lg={8}\r\n                className=\"mt-4 d-flex justify-content-between\"\r\n                style={{ width: \"42%\" }}\r\n              >\r\n                <CRow className=\"mb-3\">\r\n                  <div style={{ width: \"250px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                    {/* <DropdownButton /> */}\r\n                  </div>\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                  </div>\r\n                </CRow>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ) : null}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine, index) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\" key={index}>\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"type\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"Brand\">Brand</option>\r\n                          <option value=\"Generic\">Generic</option>\r\n                        </CFormSelect>\r\n                        {/* <input\r\n                          name=\"type\"\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"name\"\r\n                          defaultValue={medicine?.name}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"strength\"\r\n                          value={medicine?.strength}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Route of administration\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strengthMeasurement\"\r\n                          defaultValue={medicine?.strengthMeasurement}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"days\"\r\n                          value={medicine?.days}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"totalQty\"\r\n                          value={medicine?.totalQty}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"startDate\"\r\n                          defaultValue={medicine?.startDate}\r\n                          onChange={(e) => handleMedicineInputChange(medicine?.id, e.target.value, e.target.name)}\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : defaultValues?.medicines?.length >= 1\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            name=\"startDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.startDate\r\n                                ? new Date(medicine?.startDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"startDate\"\r\n                              )\r\n                            }\r\n                            dateFormat={DATE_FORMAT}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"endDate\"\r\n                          defaultValue={medicine?.endDate}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : defaultValues?.medicines?.length >= 1\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            name=\"endDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.endDate\r\n                                ? new Date(medicine?.endDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"endDate\"\r\n                              )\r\n                            }\r\n                            dateFormat={DATE_FORMAT}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"m\"\r\n                          defaultValue={medicine?.m}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"a\"\r\n                          defaultValue={medicine?.a}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"e\"\r\n                          defaultValue={medicine?.e}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"n\"\r\n                          defaultValue={medicine?.n}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          key={index}\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"bf\"\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"bf\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"af\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"af\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"instruction\"\r\n                          defaultValue={medicine?.instruction}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"reason\"\r\n                          defaultValue={medicine?.reason}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              {defaultValues?.medicines?.length >= 1 ? (\r\n                defaultValues?.lab_status === \"Prescribed\" &&\r\n                (medicine?.id === 1 ? null : (\r\n                  <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => handleRemoveMedicine(medicine.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                ))\r\n              ) : medicine.id === 1 ? null : (\r\n                <CCol lg={1}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton\r\n                      onClick={() => handleRemoveMedicine(medicine.id)}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteDel} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              )}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          defaultValues?.lab_status === \"Prescribed\" && (\r\n            <>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton onClick={handleAddMedicine}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteAdd} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div className=\"vertical-line\"></div>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddMedicine}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? null : (\r\n          <>\r\n            <CRow>\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"250px\" }}>\r\n                {/* <PrimaryButton>SEND TO PHARMACY</PrimaryButton> */}\r\n                <DropdownButton\r\n                  buttonName2={\"SEND TO PHARMACY\"}\r\n                  getbtnNames={getbtnNames}\r\n                />\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {btnView && (\r\n          <BlurBackground>\r\n            <CModal\r\n              alignment=\"center\"\r\n              visible={btnView}\r\n              onClose={() => setBtnView(false)}\r\n              aria-labelledby=\"VerticallyCenteredExample\"\r\n              size=\"md\"\r\n            >\r\n              <CModalBody className=\"p-3\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Select a Pharmacy\r\n                </label>\r\n                <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                  <CFormSelect\r\n                    size=\"lg\"\r\n                    className=\"mb-3\"\r\n                    aria-label=\"Large select example\"\r\n                    name=\"strength\"\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"1\">One</option>\r\n                    <option value=\"2\">Two</option>\r\n                    <option value=\"3\">Three</option>\r\n                  </CFormSelect>\r\n                  <div className=\"d-flex gap-2 mt-2\">\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <PrimaryButton onClick={() => setBtnView(false)}>\r\n                        Save\r\n                      </PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <SecondaryButton onClick={() => setBtnView(false)}>\r\n                        Cancel\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CModalBody>\r\n            </CModal>\r\n          </BlurBackground>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrderForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport Badge from \"../../../../../../Badge/Badge\";\r\n\r\nconst DetailsTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"detailsTable\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.rx}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.frequency[0]}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.qty}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {i === 0 && (\r\n                <CTableDataCell\r\n                  style={{ height: \"10px\" }}\r\n                  rowSpan={rowData.length}\r\n                >\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.TickCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.PlusCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                        style={{transform:'rotate(45deg)'}}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsTable;\r\n","import { CCol, CFormCheck, CFormSelect, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\n\r\nconst MedicationCompleted = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState(\r\n    defaultValues.medicines\r\n      ? defaultValues.medicines\r\n      : [\r\n          {\r\n            id: 1,\r\n            type: \"\",\r\n            name: \"\",\r\n            strength: \"\",\r\n            strengthMeasurement: \"\",\r\n            days: \"\",\r\n            totalQty: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            instruction: \"\",\r\n            reason: \"\",\r\n            status: \"\",\r\n            m: 0,\r\n            a: 0,\r\n            e: 0,\r\n            n: 0,\r\n            food: \"bf\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, value, fieldName) => {\r\n    // Handle date values differently\r\n    const processedValue =\r\n      fieldName === \"startDate\" || fieldName === \"endDate\"\r\n        ? value\r\n          ? value.toISOString()\r\n          : \"\" // Convert date to ISO string\r\n        : value; // For non-date fields, just use the value directly\r\n\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [fieldName]: processedValue };\r\n      }\r\n      return medicine;\r\n    });\r\n\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  console.log(\"first\", medicines);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">View Medicine</span>\r\n          </CCol>\r\n\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine, index) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\" key={index}>\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <input\r\n                          name=\"type\"\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"name\"\r\n                          defaultValue={medicine?.name}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Route of administration\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strengthMeasurement\"\r\n                          defaultValue={medicine?.strengthMeasurement}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"days\"\r\n                          defaultValue={medicine?.days}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"totalQty\"\r\n                          defaultValue={medicine?.totalQty}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"startDate\"\r\n                          defaultValue={medicine?.startDate}\r\n                          onChange={(e) => handleMedicineInputChange(medicine?.id, e.target.value, e.target.name)}\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                            name=\"startDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.startDate\r\n                                ? new Date(medicine?.startDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"startDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"endDate\"\r\n                          defaultValue={medicine?.endDate}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                            name=\"endDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.endDate\r\n                                ? new Date(medicine?.endDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"endDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"m\"\r\n                          defaultValue={medicine?.m}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"a\"\r\n                          defaultValue={medicine?.a}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"e\"\r\n                          defaultValue={medicine?.e}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"n\"\r\n                          defaultValue={medicine?.n}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          key={index}\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"bf\"\r\n                          disabled={true}\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"bf\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"af\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                          disabled={true}\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"af\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"instruction\"\r\n                          defaultValue={medicine?.instruction}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"reason\"\r\n                          defaultValue={medicine?.reason}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              {defaultValues?.medicines?.length >= 1 ? (\r\n                defaultValues?.lab_status === \"Prescribed\" && (\r\n                  <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => handleRemoveMedicine(medicine.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                )\r\n              ) : (\r\n                <CCol lg={1}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton\r\n                      onClick={() => handleRemoveMedicine(medicine.id)}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteDel} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              )}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          defaultValues?.lab_status === \"Prescribed\" && (\r\n            <>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton onClick={handleAddMedicine}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteAdd} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div className=\"vertical-line\"></div>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddMedicine}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? null : (\r\n          <>\r\n            <CRow>\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"250px\" }}>\r\n                {/* <PrimaryButton>SEND TO PHARMACY</PrimaryButton> */}\r\n                <DropdownButton />\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationCompleted;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicationOrderForm from \"./MedicationOrderForm\";\r\nimport MedicationOrderTable from \"../../../../../../Tables/MedicationOrderTable\";\r\nimport DetailsTable from \"./DetailsTable\";\r\nimport MedicationCompleted from \"./MedicationCompleted\";\r\n\r\nconst MedicationOrder = ({ from }) => {\r\n  const detailsData = [\r\n    { id: 1, label: \"\" },\r\n    { id: 2, label: \"RX\" },\r\n    { id: 3, label: \"FREQUENCY\" },\r\n    { id: 4, label: \"DURATION\" },\r\n    { id: 5, label: \"QTY/TAKEN\" },\r\n    { id: 6, label: \"ACTIONS​\" },\r\n  ];\r\n\r\n  const detailsValue = [\r\n    {\r\n      id: 1,\r\n      name: \"Prescribed\",\r\n      rx: \"Medicine 1\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Alternative\",\r\n      rx: \"Medicine 2\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n  ];\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"MEDICATION DATE\" },\r\n    { id: 3, label: \"MEDICATION NAME\" },\r\n    { id: 4, label: \"Strength & Dosage\" },\r\n    { id: 5, label: \"M | A | E | N\" },\r\n    { id: 6, label: \"BF/AF\" },\r\n    { id: 7, label: \"Pharmacy & STATUS\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Received\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine A\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine C\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Waiting For Approval\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine D\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine A\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine AB\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine J\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1,\r\n          n: 1,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [completedView, setCompletedView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (type === \"completed\") {\r\n      setCompletedView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <MedicationOrderTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          <>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSelector />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"mb-2\">\r\n              <CRow>\r\n                <MedicationOrderTable\r\n                  rowData={getCurrentPageItems()}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            </div>\r\n          </>\r\n          {addFormView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={addFormView}\r\n                onClose={() => setAddFormView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"xl\"\r\n              >\r\n                <CModalBody className=\"p-0\">\r\n                  <div\r\n                    className=\"close-modal\"\r\n                    onClick={() => {\r\n                      setAddFormView(false);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={Assets.CloseBtn}\r\n                      alt=\"close-btn\"\r\n                      style={{ width: \"100%\" }}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <MedicationOrderForm\r\n                    back={() => {\r\n                      setAddFormView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                    defaultValues={selectedData}\r\n                  />\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n\r\n          {completedView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={completedView}\r\n                onClose={() => setCompletedView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"xl\"\r\n              >\r\n                <CModalBody className=\"p-0\">\r\n                  <div\r\n                    className=\"close-modal\"\r\n                    onClick={() => {\r\n                      setCompletedView(false);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={Assets.CloseBtn}\r\n                      alt=\"close-btn\"\r\n                      style={{ width: \"100%\" }}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <MedicationCompleted\r\n                    back={() => {\r\n                      setCompletedView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                    defaultValues={selectedData}\r\n                  />\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"lg\"\r\n              >\r\n                <CModalBody className=\"p-0\">\r\n                  <div\r\n                    className=\"close-modal\"\r\n                    onClick={() => setDetailView(false)}\r\n                  >\r\n                    <img\r\n                      src={Assets.CloseBtn}\r\n                      alt=\"close-btn\"\r\n                      style={{ width: \"100%\" }}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <DetailsTable\r\n                    rowData={detailsValue}\r\n                    columns={detailsData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrder;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { format, parse } from \"date-fns\";\r\n\r\n\r\n// Helper function to format date to dd-MM-yyyy HH:mm:ss\r\nconst formatDate = (dateString) => {\r\n  const parsedDate = Date.parse(dateString);\r\n  if (isNaN(parsedDate)) return \"N/A\"; // Return \"N/A\" if the date is invalid\r\n\r\n  const date = new Date(parsedDate);\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed, so add 1\r\n  const year = date.getFullYear();\r\n\r\n  \r\n\r\n  return `${day}-${month}-${year} `; // Format as dd-MM-yyyy HH:mm\r\n};\r\n\r\n\r\nconst PatientEducationTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id ? dt?.id : \"-\"}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{formatDate(dt?.addition_info?.date)}</span>\r\n                <span className=\"fs-16 fw-500\">{dt?.addition_info?.time ? dt?.addition_info?.time : \"-\"}</span>\r\n              </CTableDataCell>\r\n          \r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.addition_info?.title ? dt?.addition_info?.title : \"-\"}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.addition_info?.notes ? dt?.addition_info?.notes : \"-\"}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducationTable;\r\n","import React, { useState,useEffect,useCallback } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PatientEducationTable from \"../../../../../../Tables/PatientEducationTable\";\r\nimport PatientEducationForm from \"./PatientEducationForm\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\n\r\n\r\n\r\nconst PatientEducationTab = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Title\" },\r\n    { id: 4, label: \"Notes\" },\r\n    { id: 5, label: \"ACTIONS\" },\r\n  ];\r\n\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     date: \"2024-08-16\",\r\n  //     time: \"12:30\",\r\n  //     title: \"Lorem ipsum\",\r\n  //     notes: \"Lorem ipsum Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     date: \"2024-08-16\",\r\n  //     time: \"12:20\",\r\n  //     title: \"Lorem ipsum\",\r\n  //     notes: \"Lorem ipsum Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     date: \"2024-08-16\",\r\n  //     time: \"15:30\",\r\n  //     title: \"Lorem ipsum\",\r\n  //     notes: \"Lorem ipsum Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     date: \"2024-08-16\",\r\n  //     time: \"12:30\",\r\n  //     title: \"Lorem ipsum\",\r\n  //     notes: \"Lorem ipsum Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     date: \"2024-08-16\",\r\n  //     time: \"12:30\",\r\n  //     title: \"Lorem ipsum\",\r\n  //     notes: \"Lorem ipsum Lorem ipsum\",\r\n  //   },\r\n  // ];\r\n\r\n\r\n  const { loading, error, get,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n   \r\n  };\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };  \r\n\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data,id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id)\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  \r\n  const fetchPatientEducation = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/docs?user_id=10&limit=${itemsPerPage}&page=${currentPage}&from=${startDate ?? \"\"}&to=${endDate ?? \"\"}&searchkey=${searchValue ?? \"\"}&order_by=id&dir=2&slug=patient-education`\r\n      );\r\n      if (response.code === 200) {\r\n        setRowData(response.data.docs);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage,startDate,endDate,searchValue]);\r\n\r\n  useEffect(() => {\r\n    fetchPatientEducation();\r\n  }, [fetchPatientEducation]);\r\n\r\n  // Delte Patient Education\r\n  const deletePatientEducation = async () => {\r\n    try {\r\n      const response = await del(`resource/doc/${id}`);\r\n  \r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        fetchPatientEducation();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n \r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <PatientEducationTable\r\n           rowData={rowData}\r\n           columns={columnData}\r\n           getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                <DateRangePicker getFilterValues={getFilterValues} />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <PatientEducationTable\r\n                    rowData={rowData}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                     currentPage={currentPage}\r\n                     onPageChange={onPageChange}\r\n                     totalItems={pagination?.total}\r\n                     itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <PatientEducationForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  fetchPatientEducation={fetchPatientEducation}\r\n                  setAddFormView={setAddFormView}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => deletePatientEducation()}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducationTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PatientEducationTab from \"./PatientEducationTab/PatientEducationTab\";\r\n\r\nconst PatientEducation = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Patient Education\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Patient Education\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <PatientEducationTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducation;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../../Utils/dateUtils\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport {\r\n  findItemIndex,\r\n  getFileTypeFromMime,\r\n  openFile,\r\n} from \"../../../../../../../Utils/commonUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst PatientEducationForm = ({ back, defaultValues, fetchPatientEducation, setAddFormView }) => {\r\n\r\n\r\n  const { loading, error, get, post, clearCache, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [formData, setFormData] = useState({\r\n   title: defaultValues?.addition_info?.title || null,\r\n   notes: defaultValues?.addition_info?.notes || null,\r\n  });\r\n \r\n\r\n\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n\r\n  // console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.title) {\r\n      newErrors.title = \"Title is required.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultValues.id !== undefined) {\r\n        console.log(\"Edit clicked\");\r\n        editPatientEducation()\r\n\r\n      }\r\n      if (defaultValues.id === undefined) {\r\n        console.log(\"Add clicked\");\r\n        addPatientEducation();\r\n\r\n      }\r\n    }\r\n  };\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n  // Add PatientEducation\r\n  const addPatientEducation = async () => {\r\n\r\n    try {\r\n      const body = {\r\n        user_id: \"10\",\r\n        document_source: \"patient-education\",\r\n        addition_info: {\r\n          date: format(selectedDate, \"yyyy-MM-dd\"),\r\n          time: format(selectedTime,  \"HH:mm\"),\r\n          title: formData?.title,\r\n          notes: formData?.notes,\r\n        }\r\n      };\r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/docs`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchPatientEducation();\r\n        setAddFormView(false);\r\n        toast.success(\"Added successfully\");\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Edit PatientEducation\r\n  const editPatientEducation = async () => {\r\n\r\n    try {\r\n      const body = {\r\n        addition_info: {\r\n          date: format(selectedDate, \"yyyy-MM-dd\"),\r\n          time: format(selectedTime,  \"HH:mm\"),\r\n          title: formData?.title,\r\n          notes: formData?.notes,\r\n        }\r\n      };\r\n      // Use the provided `post` function to send the request\r\n      const response = await patch(`resource/docs/${defaultValues.id}`, body);\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchPatientEducation();\r\n        setAddFormView(false);\r\n        toast.success(\"Added successfully\");\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Title *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                name=\"title\"\r\n                value={formData?.title}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.title && <div className=\"error-text\">{errors.title}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                 name=\"notes\"\r\n                rows={3}\r\n                value={formData?.notes}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducationForm;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../../Utils/dateUtils\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport {\r\n  findItemIndex,\r\n  getFileTypeFromMime,\r\n  openFile,\r\n} from \"../../../../../../../Utils/commonUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ProcedureForm = ({ back, defaultValues, fetchCpt, setAddFormView }) => {\r\n\r\n  const { loading, error, get, post, clearCache, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [cpt, setCpt] = useState([]);\r\n  const [Description, setDescription] = useState([defaultValues?.values?.code || null])\r\n  const [searchTerm, setSearchTerm] = useState([defaultValues?.values?.name || null]);\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n\r\n  // console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!searchTerm) {\r\n      newErrors.searchTerm = \"CPT Code is required.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultValues.id !== undefined) {\r\n        console.log(\"Edit clicked\");\r\n        editCpt()\r\n\r\n      }\r\n      if (defaultValues.id === undefined) {\r\n        console.log(\"Add clicked\");\r\n        addCpt();\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  //api integration of ICD Code list\r\n  useEffect(() => {\r\n    const getCptCode = async () => {\r\n      if (searchTerm) {\r\n        try {\r\n          const response = await get(\r\n            `resource/masters?slug=procedure&searchkey=${searchTerm}&limit=50&country=undefined`\r\n          );\r\n          if (response.code === 200) {\r\n            setCpt(response.data.masters);\r\n          } else {\r\n            console.error(\"Failed to fetch data:\", response.message);\r\n            setCpt([]);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n          setCpt([]);\r\n        }\r\n      } else {\r\n        setCpt([]);\r\n      }\r\n    };\r\n\r\n    getCptCode();\r\n  }, [searchTerm, get]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  // Add Therapies\r\n  const addCpt = async () => {\r\n\r\n    try {\r\n      const body = {\r\n        patient_id: \"263\",\r\n        slug: \"procedure\",\r\n        values: {\r\n          date: `${format(selectedDate, \"yyyy-MM-dd\")} ${format(selectedTime, \"HH:mm\")}`,\r\n          code: searchTerm,\r\n          name: Description,\r\n        }\r\n      };\r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/patientHealth`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchCpt();\r\n        setAddFormView(false);\r\n        toast.success(\"Added successfully\");\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Edit Therapies\r\n  const editCpt = async () => {\r\n\r\n    try {\r\n      const body = {\r\n        patient_id: \"263\",\r\n        slug: \"procedure\",\r\n        values: {\r\n          date: `${format(selectedDate, \"yyyy-MM-dd\")} ${format(selectedTime, \"HH:mm\")}`,\r\n          code: searchTerm,\r\n          name: Description,\r\n        }\r\n      };\r\n      // Use the provided `post` function to send the request\r\n      const response = await patch(`resource/patientHealth/${defaultValues.id}`, body);\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchCpt();\r\n        setAddFormView(false);\r\n        toast.success(\"Added successfully\");\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  closeOnScroll={true}\r\n                  wrapperClassName=\"date-picker-wrapper\"\r\n                  dateFormat={DATE_FORMAT}\r\n                />\r\n                {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative dropdown-container\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={searchTerm}\r\n                onChange={handleInputChange}\r\n              />\r\n              {loading ? (\r\n                <p>Loading...</p>\r\n              ) : error ? (\r\n                <p>{error}</p>\r\n              ) : cpt?.length > 0 ? (\r\n                <ul className=\"dropdown-list\">\r\n                  {cpt?.map((cpt) => (\r\n                    <li\r\n                      key={cpt?.id}\r\n                      className=\"list-group-item\"\r\n                      onClick={() => {\r\n                        setSearchTerm(cpt?.attributes?.cpt_code);\r\n                        setCpt([]);\r\n                        setDescription(cpt?.name)\r\n                      }}\r\n                    >\r\n                      {cpt?.attributes?.cpt_code}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : null}\r\n              {errors.searchTerm && <div className=\"error-text\">{errors.searchTerm}</div>}\r\n\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Description *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                // defaultValue={defaultValues?.remark}\r\n                disabled\r\n                 value={Description}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\n\r\n\r\n\r\n// Helper function to format date to dd-MM-yyyy HH:mm:ss\r\nconst formatDate = (dateString) => {\r\n  const parsedDate = Date.parse(dateString);\r\n  if (isNaN(parsedDate)) return \"N/A\"; // Return \"N/A\" if the date is invalid\r\n\r\n  const date = new Date(parsedDate);\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed, so add 1\r\n  const year = date.getFullYear();\r\n\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n\r\n  return `${day}-${month}-${year} ${hours}:${minutes}`; // Format as dd-MM-yyyy HH:mm\r\n};\r\n\r\n\r\nconst ProcedurerTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id ? dt?.id : \"-\"}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{formatDate(dt?.values?.date)}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.values?.code ? dt?.values?.code : \"-\"}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.values?.name ? dt?.values?.name : \"-\"}</CTableDataCell>\r\n              {/* <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.visibleEye}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"details\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell> */}\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedurerTable;\r\n","import React, { useState,useEffect,useCallback } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport ProcedureForm from \"./ProcedureForm\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ProcedurerTable from \"../../../../../../Tables/ProcedurerTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\n\r\nconst ProcedureTab = ({ onClose, from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"CPT Code\" },\r\n    { id: 4, label: \"DESCRIPTION\" },\r\n    { id: 5, label: \"ACTIONS\" },\r\n  ];\r\n\r\n  // const rowData = [\r\n  //   {\r\n  //     no: 1,\r\n  //     date: \"06-07-2024\",\r\n  //     id: \"93000\",\r\n  //     time: \"12:30\",\r\n  //     description:\r\n  //       \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n  //   },\r\n  //   {\r\n  //     no: 2,\r\n  //     date: \"06-07-2024\",\r\n  //     id: \"93000\",\r\n  //     time: \"18:30\",\r\n  //     description:\r\n  //       \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n  //   },\r\n  //   {\r\n  //     no: 3,\r\n  //     date: \"06-07-2024\",\r\n  //     id: \"93008\",\r\n  //     time: \"19:30\",\r\n  //     description:\r\n  //       \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n  //   },\r\n  //   {\r\n  //     no: 4,\r\n  //     date: \"06-07-2024\",\r\n  //     id: \"93006\",\r\n  //     time: \"18:43\",\r\n  //     description:\r\n  //       \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n  //   },\r\n  //   {\r\n  //     no: 5,\r\n  //     date: \"06-07-2024\",\r\n  //     id: \"93005\",\r\n  //     time: \"18:30\",\r\n  //     description:\r\n  //       \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n  //   },\r\n  //   {\r\n  //     no: 6,\r\n  //     date: \"06-07-2024\",\r\n  //     id: \"93002\",\r\n  //     time: \"18:30\",\r\n  //     description:\r\n  //       \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n  //   },\r\n  //   {\r\n  //     no: 7,\r\n  //     date: \"06-07-2024\",\r\n  //     id: \"93000\",\r\n  //     time: \"18:30\",\r\n  //     description:\r\n  //       \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n  //   },\r\n  //   {\r\n  //     no: 8,\r\n  //     date: \"06-07-2024\",\r\n  //     id: \"93000\",\r\n  //     time: \"18:30\",\r\n  //     description:\r\n  //       \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n  //   },\r\n  //   {\r\n  //     no: 9,\r\n  //     date: \"06-07-2024\",\r\n  //     id: \"93000\",\r\n  //     time: \"18:30\",\r\n  //     description:\r\n  //       \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n  //   },\r\n  //   {\r\n  //     no: 10,\r\n  //     date: \"06-07-2024\",\r\n  //     id: \"93000\",\r\n  //     time: \"18:30\",\r\n  //     description:\r\n  //       \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n  //   },\r\n  //   // {\r\n  //   //   no: 11,\r\n  //   //   date: \"06-07-2024\",\r\n  //   //   id: \"12321\",\r\n  //   //   description: \"Lorem Ipsum\",\r\n  //   // },\r\n  //   // {\r\n  //   //   no: 12,\r\n  //   //   date: \"06-07-2024\",\r\n  //   //   id: \"12322\",\r\n  //   //   description: \"Lorem Ipsum\",\r\n  //   // },\r\n  //   // {\r\n  //   //   no: 13,\r\n  //   //   date: \"06-07-2024\",\r\n  //   //   id: \"12323\",\r\n  //   //   description: \"Lorem Ipsum\",\r\n  //   // },\r\n  // ];\r\n  \r\n\r\n  const { loading, error, get,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n   \r\n  };\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };  \r\n\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data,id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id)\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  \r\n  const fetchCpt = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHealth?limit=${itemsPerPage}&page=${currentPage}&from=${startDate ?? \"\"}&to=${endDate ?? \"\"}&searchkey=${searchValue ?? \"\"}&order_by=values-%3Edate&dir=2&user_id=263&slug=procedure&slug_array=`\r\n      );\r\n      if (response.code === 200) {\r\n        setRowData(response.data.patient_healths);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage,startDate,endDate,searchValue]);\r\n\r\n  useEffect(() => {\r\n    fetchCpt();\r\n  }, [fetchCpt]);\r\n\r\n  // Delte Allergies\r\n  const deleteCpt = async () => {\r\n    try {\r\n      const response = await del(`resource/therapy/${id}`);\r\n  \r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        fetchCpt();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ProcedurerTable\r\n            rowData={rowData}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                <DateRangePicker getFilterValues={getFilterValues} />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <ProcedurerTable\r\n                     rowData={rowData}\r\n                     columns={columnData}\r\n                     getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={pagination?.total}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ProcedureForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  fetchCpt={fetchCpt}\r\n                  setAddFormView={setAddFormView}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => deleteCpt(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport ProcedureTab from \"./ProcedureTab/ProcedureTab\";\r\n\r\nconst Cpt = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Procedure (CPT Code)\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Procedure (CPT Code)\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <ProcedureTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cpt;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\n\r\n\r\n// Helper function to format date to dd-MM-yyyy HH:mm:ss\r\nconst formatDate = (dateString) => {\r\n  const parsedDate = Date.parse(dateString);\r\n  if (isNaN(parsedDate)) return \"N/A\"; // Return \"N/A\" if the date is invalid\r\n\r\n  const date = new Date(parsedDate);\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed, so add 1\r\n  const year = date.getFullYear();\r\n\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n\r\n  return `${day}-${month}-${year} ${hours}:${minutes}`; // Format as dd-MM-yyyy HH:mm\r\n};\r\n\r\n\r\nconst TherapiesTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data,id,type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id ? dt?.id : \"-\"}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{formatDate(dt?.date)}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.type ? dt?.type : \"-\"}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.therapy_name ? dt?.therapy_name : \"-\"}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.therapist_name ? dt?.therapist_name : \"-\"}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.duration ? dt?.duration : \"-\"}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt,dt?.id ,\"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TherapiesTable;\r\n","import { CCol, CFormCheck, CFormSelect, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../../Utils/dateUtils\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport {\r\n    findItemIndex,\r\n    getFileTypeFromMime,\r\n    openFile,\r\n} from \"../../../../../../../Utils/commonUtils\";\r\nimport { duration } from \"moment\";\r\n\r\nconst TherapiesForm = ({ back, fetchTherapies, setAddFormView, defaultValues }) => {\r\n\r\n\r\n    const { loading, error, get, post, clearCache, patch } = useApi();\r\n    const [selectedTime, setSelectedTime] = useState(null);\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [errors, setErrors] = useState({});\r\n    const [formData, setFormData] = useState({\r\n        type: defaultValues?.type || \"\",\r\n        therapy_name: defaultValues?.therapy_name || \"\",\r\n        therapist_name: defaultValues?.therapist_name || \"\",\r\n        duration: defaultValues?.duration || \"\",\r\n        notes: defaultValues?.notes || \"\",\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n    const getFormattedDate = (date) => {\r\n        const day = String(date.getDate()).padStart(2, \"0\");\r\n        const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\r\n        const year = date.getFullYear();\r\n\r\n        return `${day}-${month}-${year}`;\r\n    };\r\n\r\n    const currentDate = new Date();\r\n    const formattedDate = getFormattedDate(currentDate);\r\n\r\n    // console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n    const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n    // Split date and time\r\n    const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n    const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n    useEffect(() => {\r\n        // Combine default date and time into a single Date object\r\n        let date = new Date();\r\n\r\n        if (defaultDate) {\r\n            const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n            if (isValid(parsedDate)) {\r\n                date = parsedDate;\r\n            }\r\n        }\r\n\r\n        if (defaultTime) {\r\n            const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n            date.setHours(hours);\r\n            date.setMinutes(minutes);\r\n            date.setSeconds(0); // Reset seconds\r\n        }\r\n\r\n        setSelectedDate(date);\r\n        setSelectedTime(date); // Initialize time picker with the same Date object\r\n    }, [defaultDate, defaultTime]);\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        if (date) {\r\n            setSelectedTime(date); // Sync time picker with the updated date\r\n        }\r\n    };\r\n\r\n    const handleTimeChange = (time) => {\r\n        if (time) {\r\n            const updatedDateTime = new Date(selectedDate || time);\r\n            updatedDateTime.setHours(time.getHours());\r\n            updatedDateTime.setMinutes(time.getMinutes());\r\n            updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n            setSelectedDate(updatedDateTime); // Optionally update date as well\r\n            setSelectedTime(time);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const options = [\"Physical\", \"Occupational\", \"Speech\", \"Psychotherapy\", \"Others\"];\r\n\r\n\r\n    // Function to update Type\r\n    const getSelectedValue = (data) => {\r\n        setFormData((prevState) => ({\r\n          ...prevState,\r\n          type: data,\r\n        }));\r\n\r\n    };\r\n\r\n    const validate = () => {\r\n        let isValid = true;\r\n        const newErrors = {};\r\n\r\n        if (!selectedDate) {\r\n            newErrors.date = \"Date is required.\";\r\n            isValid = false;\r\n        }\r\n        if (!selectedTime) {\r\n            newErrors.time = \"Time is required.\";\r\n            isValid = false;\r\n        }\r\n        if (!formData.type) {\r\n            newErrors.type = \"Type is required.\";\r\n            isValid = false;\r\n        }\r\n        if (!formData.therapy_name) {\r\n            newErrors.therapy_name = \"Therapy Name is required.\";\r\n            isValid = false;\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return isValid;\r\n    };\r\n\r\n\r\n    const onSubmit = () => {\r\n        if (validate()) {\r\n            if (defaultValues.id !== undefined) {\r\n                console.log(\"Edit clicked\");\r\n                editTherapies()\r\n\r\n            }\r\n            if (defaultValues.id === undefined) {\r\n                console.log(\"Add clicked\");\r\n                addTherapies();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    // Add Therapies\r\n    const addTherapies = async () => {\r\n\r\n        try {\r\n            const body = {\r\n                patient_id: \"10\", \r\n                date: `${format(selectedDate, \"yyyy-MM-dd\")} ${format(selectedTime, \"HH:mm\")}`,\r\n                type: formData?.type,\r\n                therapy_name: formData?.therapy_name,\r\n                therapist_name: formData?.therapist_name,\r\n                duration: formData?.duration,\r\n                notes: formData?.notes,\r\n            };\r\n            // Use the provided `post` function to send the request\r\n            const response = await post(`resource/therapy`, body);\r\n\r\n            if (response.code === 201) {\r\n                clearCache();\r\n                await fetchTherapies();\r\n                setAddFormView(false);\r\n                toast.success(\"Added successfully\");\r\n\r\n            } else {\r\n                console.error(\"Failed to fetch data:\", response.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    };\r\n\r\n    // Edit Therapies\r\n\r\n    const editTherapies = async () => {\r\n\r\n        try {\r\n            const body = {\r\n                patient_id: \"10\", \r\n                date: `${format(selectedDate, \"yyyy-MM-dd\")} ${format(selectedTime, \"HH:mm\")}`,\r\n                type: formData?.type,\r\n                therapy_name: formData?.therapy_name,\r\n                therapist_name: formData?.therapist_name,\r\n                duration: formData?.duration,\r\n                notes: formData?.notes,\r\n            };\r\n\r\n            // Use the provided `post` function to send the request\r\n            const response = await patch(`resource/therapy/${defaultValues.id}`, body);\r\n\r\n            if (response.code === 200) {\r\n                clearCache();\r\n                await fetchTherapies();\r\n                setAddFormView(false);\r\n                toast.success(\"Added successfully\");\r\n\r\n            } else {\r\n                console.error(\"Failed to fetch data:\", response.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={4}>\r\n                    <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Date *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                closeOnScroll={true}\r\n                                wrapperClassName=\"date-picker-wrapper\"\r\n                                dateFormat={DATE_FORMAT}\r\n                            />\r\n                            {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                    <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Time *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={selectedTime}\r\n                                onChange={handleTimeChange}\r\n                                showTimeSelect\r\n                                showTimeSelectOnly\r\n                                closeOnScroll={true}\r\n                                timeIntervals={5}\r\n                                dateFormat=\"h:mm aa\"\r\n                            />\r\n                            {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div class=\"position-relative\">\r\n                            <label for=\"validationTooltip01\" class=\"form-label\">\r\n                                Type *\r\n                            </label>\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{\r\n                                    border: \"1px solid #17171D33\",\r\n                                    borderRadius: \"5px\",\r\n                                }}\r\n                            >\r\n                                <Dropdown\r\n                                  options={options}\r\n                                  defaultValue={\r\n                                    defaultValues?.type\r\n                                      ? options[findItemIndex(options, defaultValues?.type)]\r\n                                      : null\r\n                                  }\r\n                                  getSelectedValue={getSelectedValue}\r\n                                />\r\n                            </div>\r\n                            {errors.type && <div className=\"error-text\">{errors.type}</div>}\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                                Therapy Name *\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                value={formData?.therapy_name}\r\n                                name=\"therapy_name\"\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.therapy_name && <div className=\"error-text\">{errors.therapy_name}</div>}\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                                Therapist Name\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                value={formData?.therapist_name}\r\n                                name=\"therapist_name\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                                Duration (in days)\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"00\"\r\n                                value={formData?.duration}\r\n                                name=\"duration\"\r\n                                onChange={handleChange}\r\n                                maxLength={2}\r\n                                onInput={(e) => {\r\n                                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                                Notes\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                value={formData?.notes}\r\n                                name=\"notes\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n\r\n\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TherapiesForm","import React, { useState,useEffect,useCallback } from \"react\";\r\nimport Breadcrumb from \"../../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport TherapiesTable from \"../../../../../../Tables/TherapiesTable\";\r\nimport TherapiesForm from \"./TherapiesForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\n\r\nconst TherapiesTab = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date & Time\" },\r\n    { id: 3, label: \"Type\" },\r\n    { id: 4, label: \"Therapy Name\" },\r\n    { id: 5, label: \"Therapist Name\" },\r\n    { id: 6, label: \"Duration (in days)\" },\r\n    { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     date_time: \"06-07-2024 12:15\",\r\n  //     type: \"Physical\",\r\n  //     therapy_name: \"Lorem ipsum\",\r\n  //     therapist_name: \"Lorem ipsum\",\r\n  //     duration: \"5\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     date_time: \"06-07-2024 12:15\",\r\n  //     type: \"Occupational\",\r\n  //     therapy_name: \"Lorem ipsum\",\r\n  //     therapist_name: \"Lorem ipsum\",\r\n  //     duration: \"5\",\r\n  //   },\r\n  // ];\r\n\r\n  const { loading, error, get,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n   \r\n  };\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };  \r\n\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data,id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id)\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  \r\n  const fetchTherapies = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/therapy?patient_id=10&limit=${itemsPerPage}&page=${currentPage}&from=${startDate ?? \"\"}&to=${endDate ?? \"\"}&order_by=date&dir=2`\r\n      );\r\n      if (response.code === 200) {\r\n        setRowData(response.data.therapies);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage,startDate,endDate,searchValue]);\r\n\r\n  useEffect(() => {\r\n    fetchTherapies();\r\n  }, [fetchTherapies]);\r\n\r\n  // Delte Allergies\r\n  const deleteTherapies = async () => {\r\n    try {\r\n      const response = await del(`resource/therapy/${id}`);\r\n  \r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        fetchTherapies();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n    \r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <TherapiesTable\r\n            rowData={rowData}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                <DateRangePicker getFilterValues={getFilterValues} />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <TherapiesTable\r\n                   rowData={rowData}\r\n                   columns={columnData}\r\n                   getselectedData={getselectedData}\r\n                 \r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                     currentPage={currentPage}\r\n                     onPageChange={onPageChange}\r\n                     totalItems={pagination?.total}\r\n                     itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <TherapiesForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  fetchTherapies={fetchTherapies}\r\n                  setAddFormView={setAddFormView}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => deleteTherapies()}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TherapiesTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport TherapiesTab from \"./TherapiesTab/TherapiesTab\";\r\n\r\nconst Therapies = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            {\" \"}\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Therapies\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Therapies\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <TherapiesTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Therapies;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport { tableDateTime } from \"../../../Utils/dateUtils\";\r\nimport { getSerialNumber } from \"../../../Utils/commonUtils\";\r\n\r\nconst ChiefComplaintTable = ({ columns, rowData, getselectedData, from,itemsPerPage,currentPage }) => {\r\n  const selectedData = (data,id, type) => {\r\n\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n              {getSerialNumber(itemsPerPage, currentPage, i)}\r\n              </CTableHeaderCell>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {dt?.addition_info?.date ? dt?.addition_info?.date : \"-\"}\r\n                  {\" \"}\r\n                </span>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {dt?.addition_info?.time ? dt?.addition_info?.time : \"-\"}\r\n                </span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.addition_info?.title ? dt?.addition_info?.title :'-'}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.addition_info?.notes ? dt?.addition_info?.notes : '-'}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaintTable;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { format } from \"date-fns\";\r\nimport moment from \"moment\";\r\n\r\nconst ChiefComplaintsForm = ({ back, setAddFormView, getChiefComplaints, defaultValues }) => {\r\n\r\n  const { loading, error, get, post, clearCache, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [complaints, setComplaints] = useState(defaultValues?.addition_info?.title || \"\");\r\n  const [notes, setNotes] = useState(defaultValues?.addition_info?.notes || \"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n\r\n  // console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n \r\n\r\n\r\n  // Validate the form\r\n  const validate = () => {\r\n    let valid = true;\r\n    let newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      console.log(\"Validate\");\r\n      newErrors.date = \"Date is required\";\r\n      valid = false;\r\n    }\r\n\r\n    if (!selectedTime) {\r\n      console.log(\"Validate\");\r\n      newErrors.time = \"Time is required\";\r\n      valid = false;\r\n    }\r\n\r\n    if (!complaints?.trim()) {\r\n      console.log(\"Validate\");\r\n      newErrors.complaints = \"Chief Complaints is required\";\r\n      valid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return valid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultValues.id !== undefined) {\r\n        console.log(\"Edit clicked\");\r\n        editChiefComplaints();\r\n\r\n      }\r\n      if (defaultValues.id === undefined) {\r\n        console.log(\"Add clicked\");\r\n        addChiefComplaints();\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  const addChiefComplaints = async () => {\r\n    const formattedDate = format(selectedDate, \"dd-MM-yyyy\");\r\n    const formattedTime = moment(selectedTime).format(\"hh:mm\");\r\n    try {\r\n      const body = {\r\n        addition_info: {\r\n          date: formattedDate,\r\n          time: formattedTime,\r\n          title: complaints,\r\n          notes: notes,\r\n        },\r\n        user_id: \"10\",\r\n        document_source: \"chief-complaints\",\r\n      };\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/docs`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await getChiefComplaints();\r\n        setAddFormView(false);\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const editChiefComplaints = async () => {\r\n    const formattedDate = format(selectedDate, \"dd-MM-yyyy\");\r\n    const formattedTime = moment(selectedTime).format(\"hh:mm\");\r\n    try {\r\n      const body = {\r\n        addition_info: {\r\n          date: formattedDate,\r\n          time: formattedTime,\r\n          title: complaints,\r\n          notes: notes,\r\n        },\r\n        user_id: \"10\",\r\n        document_source: \"chief-complaints\",\r\n      };\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await patch(`resource/docs/${defaultValues.id}`, body);\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await getChiefComplaints();\r\n        setAddFormView(false);\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative d-flex flex-column gap-1\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <DatePicker\r\n              showIcon\r\n              selected={selectedDate}\r\n              onChange={handleDateChange}\r\n              isClearable\r\n              closeOnScroll={true}\r\n              wrapperClassName=\"date-picker-wrapper\"\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n            {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative d-flex flex-column gap-1\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <DatePicker\r\n              showIcon\r\n              selected={selectedTime}\r\n              onChange={handleTimeChange}\r\n              showTimeSelect\r\n              showTimeSelectOnly\r\n              isClearable\r\n              closeOnScroll={true}\r\n              timeIntervals={5}\r\n              dateFormat=\"h:mm aa\"\r\n            />\r\n            {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Chief Complaints *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                // defaultValue={defaultValues?.complaints}\r\n                value={complaints}\r\n                onChange={(e) => setComplaints(e.target.value)}\r\n              />\r\n              {errors.complaints && (\r\n                <div className=\"error-text\">{errors.complaints}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                // defaultValue={defaultValues?.notes}\r\n                value={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n                rows={3}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaintsForm;\r\n","// import React from \"react\";\r\n// import Table from \"../../../../../Tables/Table\";\r\n// import { Assets } from \"../../../../../../assets/Assets\";\r\n// import { CCol, CRow } from \"@coreui/react\";\r\n// import Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\n// import ChiefComplaintTable from \"../../../../../Tables/Subjective/ChiefComplaintTable\";\r\n\r\n// const ChiefComplaints = ({ OnClose }) => {\r\n//   const columns = [\r\n//     { label: \"No.\" },\r\n//     { label: \"Complaints\" },\r\n//     { label: \"Notes\" },\r\n//     { label: \"Actions\" },\r\n//   ];\r\n\r\n//   const data = {\r\n//     columnsData: columns,\r\n//     tableData: [\r\n//       {\r\n//         no_: 1,\r\n//         complaints:\r\n//           \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n//         notes: \"Taking dole\",\r\n//         action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n//       },\r\n//     ],\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <CRow>\r\n//         <CCol md={6} className=\"mb-2\">\r\n//           <div className=\"d-flex gap-2\">\r\n//             <img\r\n//               alt=\"BackBtn\"\r\n//               src={Assets.BackBtn}\r\n//               style={{ width: \"35px\" }}\r\n//               onClick={OnClose}\r\n//               className=\"cursor\"\r\n//             />\r\n//             <span className=\"Obj-name d-flex align-items-center\">\r\n//               Chief Complaints\r\n//             </span>\r\n//           </div>\r\n//         </CCol>\r\n//         <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n//           <div className=\"d-flex mt-2\">\r\n//             <Breadcrumb\r\n//               paths={[\r\n//                 { label: \"Home\", to: \"/patients\" },\r\n//                 { label: \"Patient List\", to: \"/patients\" },\r\n//                 { label: \"Medical Profile\", to: \"/patients/history\" },\r\n//                 { label: \"Chief Complaints\", to: \"/patients/history\" },\r\n//               ]}\r\n//             />\r\n//           </div>\r\n//         </CCol>\r\n//       </CRow>\r\n//       <CRow>\r\n//         <CCol md={6} xl={6} className=\"mb-3 chief-complaints\">\r\n//           <div className=\"search-bar\">\r\n//             <input type=\"text\" placeholder=\"Search\" />\r\n//             <button type=\"submit\">\r\n//               <i className=\"fas fa-search\"></i>\r\n//             </button>\r\n//           </div>\r\n//         </CCol>\r\n//         <CCol\r\n//           md={6}\r\n//           xl={6}\r\n//           className=\"mb-3 d-flex justify-content-end align-items-center gap-15\"\r\n//         >\r\n//           <div className=\"patient-adding\">\r\n//             <button>+ ADD</button>\r\n//           </div>\r\n//           <div className=\"patient-adding\">\r\n//             <button>\r\n//               <img src={Assets.ThreeDots} alt=\"settings\" />\r\n//             </button>\r\n//           </div>\r\n//         </CCol>\r\n//       </CRow>\r\n//       <Table columns={columns} data={data} />\r\n//       <ChiefComplaintTable/>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ChiefComplaints;\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ChiefComplaintTable from \"../../../../../Tables/Subjective/ChiefComplaintTable\";\r\nimport ChiefComplaintsForm from \"./ChiefComplaintsForm\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../DateRangePicker/DateRangePicker\";\r\n\r\nconst ChiefComplaints = ({ OnClose, from }) => {\r\n  const columnData = [\r\n    { label: \"No.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Complaints\" },\r\n    { label: \"Notes\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-07-05 17:52\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-07-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 03:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 6,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 7,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 8,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  // ];\r\n\r\n  const { loading, error, get,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n   \r\n  };\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data,id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id);\r\n      detailPage();\r\n      \r\n    }\r\n  };\r\n\r\n  const getChiefComplaints = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/docs?limit=${itemsPerPage}&page=${currentPage}&from=${startDate ?? \"\"}&to=${endDate ?? \"\"}&searchkey=${searchValue ?? \"\"}&order_by=created_at&dir=2&slug=chief-complaints&user_id=10&scanOrdersOnly=&scanstatus=`\r\n      );\r\n      if (response.code === 200) {\r\n        console.log(response.data.docs);\r\n        \r\n        setRowData(response.data.docs);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage,addFormView,startDate,endDate,searchValue]);\r\n\r\n  useEffect(() => {\r\n    getChiefComplaints();\r\n  }, [getChiefComplaints]);\r\n\r\n  \r\n  const deleteChiefComplaints = async () => {\r\n    try {\r\n      const response = await del(`resource/docs/${id}`);\r\n  \r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        getChiefComplaints();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {from !== \"Consult\" && (\r\n        <CRow>\r\n          <CCol md={6} className=\"mb-2\">\r\n            <div className=\"d-flex gap-2\">\r\n              <img\r\n                alt=\"BackBtn\"\r\n                src={Assets.BackBtn}\r\n                style={{ width: \"35px\" }}\r\n                onClick={() => {\r\n                  OnClose();\r\n                }}\r\n                className=\"cursor\"\r\n              />\r\n              <span className=\"Obj-name d-flex align-items-center\">\r\n                Chief Complaints\r\n              </span>\r\n            </div>\r\n          </CCol>\r\n          <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n            <div className=\"d-flex mt-2\">\r\n              <Breadcrumb\r\n                paths={[\r\n                  { label: \"Home\", to: \"/patients\" },\r\n                  { label: \"Patient List\", to: \"/patients\" },\r\n                  { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                  { label: \"Chief Complaints\", to: \"/patients/history\" },\r\n                ]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow>\r\n              <CCol lg={8} md={8} xl={8} className=\"mb-3 chief-complaints\">\r\n                {/* <div className=\"search-bar\">\r\n                <input type=\"text\" placeholder=\"Search\" />\r\n                <button type=\"submit\">\r\n                  <i className=\"fas fa-search\"></i>\r\n                </button>\r\n              </div> */}\r\n                <DateRangePicker getFilterValues={getFilterValues} />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                md={4}\r\n                xl={4}\r\n                className=\"mb-3 d-flex justify-content-end align-items-center gap-15\"\r\n              >\r\n                <div className=\"patient-adding\" onClick={() => addFormPage()}>\r\n                  <button>+ ADD</button>\r\n                </div>\r\n                <div className=\"patient-adding\">\r\n                  <button>\r\n                    <img src={Assets.ThreeDots} alt=\"settings\" />\r\n                  </button>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <ChiefComplaintTable\r\n              rowData={rowData}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n              currentPage={currentPage || 1}\r\n              itemsPerPage={itemsPerPage || 5}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={pagination?.total}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ChiefComplaintsForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              setAddFormView={setAddFormView}\r\n              getChiefComplaints={getChiefComplaints}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => deleteChiefComplaints()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaints;\r\n","import {\r\n  CFormCheck,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport { getSerialNumber } from \"../../../Utils/commonUtils\";\r\n\r\nconst FamilyHistoryTable = ({\r\n  columns,\r\n  rowData,\r\n  getselectedData,\r\n  currentPage,\r\n  itemsPerPage,\r\n}) => {\r\n  const selectedData = (fullData, data) => {\r\n    getselectedData(fullData, data);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">\r\n                    {getSerialNumber(itemsPerPage, currentPage, i)}\r\n                  </span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.attributes?.values[0]?.status}\r\n                    onChange={(e) =>\r\n                      selectedData(dt, dt?.attributes?.values[0])\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.attributes?.values[1]?.status}\r\n                    onChange={(e) =>\r\n                      selectedData(dt, dt?.attributes?.values[1])\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.attributes?.values[2]?.status}\r\n                    onChange={(e) =>\r\n                      selectedData(dt, dt?.attributes?.values[2])\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.attributes?.values[3]?.status}\r\n                    onChange={(e) =>\r\n                      selectedData(dt, dt?.attributes?.values[3])\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.attributes?.values[4]?.status}\r\n                    onChange={(e) =>\r\n                      selectedData(dt, dt?.attributes?.values[4])\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.attributes?.values[5]?.status}\r\n                    onChange={(e) =>\r\n                      selectedData(dt, dt?.attributes?.values[5])\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.attributes?.values[6]?.status}\r\n                    onChange={(e) =>\r\n                      selectedData(dt, dt?.attributes?.values[6])\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyHistoryTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport FamilyHistoryTable from \"../../../../../../Tables/Subjective/FamilyHistoryTable\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst FamilyHistory = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Disease\" },\r\n    { id: 3, label: \"Grandparents\" },\r\n    { id: 4, label: \"Father\" },\r\n    { id: 5, label: \"Mother\" },\r\n    { id: 6, label: \"Brother(s)\" },\r\n    { id: 7, label: \"Sister(s)\" },\r\n    { id: 8, label: \"Daughter(s)\" },\r\n    { id: 9, label: \"Son(s)\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      disease: \"Migraine\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"yes\",\r\n      Daughter: \"yes\",\r\n      Son: \"no\",\r\n    },\r\n    {\r\n      id: 2,\r\n      disease: \"Stroke\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"no\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 3,\r\n      disease: \"Thyroid Disease\",\r\n      grandparents: \"no\",\r\n      father: \"no\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 4,\r\n      disease: \"Sinus\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"yes\",\r\n      Brother: \"no\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 5,\r\n      disease: \"Tuberculosis\",\r\n      grandparents: \"no\",\r\n      father: \"no\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"no\",\r\n    },\r\n  ];\r\n  const { get, post, clearCache, patch, del, loading } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [familyDatas, setFamilyDatas] = useState([]);\r\n  const [familyPagi, setFamilyPagi] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [labelData, setLabelData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return familyDatas?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (fullData, data) => {\r\n    setSelectedData(fullData);\r\n    setLabelData(data);\r\n    // if (type === \"edit\") {\r\n    //   addFormPage();\r\n    // }\r\n    if (data) {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const getHistoryLists = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/masters/all?slug=family_history_diseases&order_by=id&dir=1&patient_id=${data?.user_id}`\r\n      );\r\n      const listData = response?.data?.masters; //\r\n      setFamilyDatas(listData);\r\n      setFamilyPagi(response?.data?.pagination);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [data?.user_id, get]);\r\n  const familyHistAdd = async () => {\r\n    try {\r\n      const url = `resource/familyHistories`; // Replace with your API endpoint\r\n      const body = {\r\n        patient_id: data?.user_id, //data?.user_id\r\n        slug: selectedData?.slug,\r\n        details: labelData?.relationship,\r\n        status: labelData?.status,\r\n      };\r\n      await post(url, body);\r\n      clearCache();\r\n      await getHistoryLists();\r\n      toast.success(\"Updated successfully\");\r\n      setDetailView(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getHistoryLists();\r\n  }, [getHistoryLists]);\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        {from !== \"Consult\" && (\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              {/* <div>\r\n                {!addFormView ? (\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.EditPencil} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Edit</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                ) : (\r\n                  <div style={{ width: \"100px\" }}>\r\n                    <PrimaryButton onClick={() => setAddFormView(false)}>\r\n                      <div className=\"d-flex justify-content-center gap-2 w-100\">\r\n                        <span className=\"fs-16 fw-600\">Save</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                )}\r\n              </div> */}\r\n              {/* <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div> */}\r\n            </CCol>\r\n          </CRow>\r\n        )}\r\n        <div className=\"mb-2\">\r\n          <FamilyHistoryTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            // addFormView={addFormView}\r\n            currentPage={currentPage || 1}\r\n            itemsPerPage={itemsPerPage || 5}\r\n          />\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={familyDatas?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n        </div>\r\n      </>\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>\r\n                  Are you sure your {labelData?.relationship} has/had{\" \"}\r\n                  {selectedData?.name} ?\r\n                </h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => familyHistAdd()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyHistory;\r\n","import { CCol, CFormCheck, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { format } from \"date-fns\";\r\n\r\n\r\nconst MedHistoryForm = ({ back, defaultValues, getMedicalLists, setAddFormView }) => {\r\n  const { loading, error, get, post, clearCache } = useApi();\r\n  // const [date, setDate] = useState(null);\r\n  const [conditions, setConditions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectChronic, setSelectChronic] = useState(true);\r\n  const [selectPreviousIllness, setSelectPreviousIllness] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [notes, setNotes] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    if (defaultValues?.values) {\r\n      // Set initial state for editing\r\n      console.log(\"Default Values:\", defaultValues.values);\r\n      setSelectedDate(parseDate(defaultValues.values.onset_date));\r\n      setNotes(defaultValues.values.notes || \"\");\r\n      setSearchTerm(defaultValues.values.condition.name || \"\");\r\n      setSelectChronic(defaultValues.values.chronic_illness === \"yes\");\r\n      setSelectPreviousIllness(defaultValues.values.previous_illness === \"yes\");\r\n    }\r\n  }, [defaultValues]);\r\n\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [day, month, year] = dateString.split('-').map(Number);\r\n    return new Date(year, month - 1, day);\r\n  };\r\n\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     return new Date(year, month - 1, day);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultValues?.onset;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultValues?.onset\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setDate(defaultDate);\r\n  // }, [defaultValues?.onset]);\r\n\r\n  // const options = [\"Yes\", \"No\"];\r\n  // const findIndex = defaultValues?.prev_illness\r\n  //   ? options?.indexOf(defaultValues?.prev_illness)\r\n  //   : 0;\r\n\r\n  // const findIndex1 = defaultValues?.chronic\r\n  //   ? options?.indexOf(defaultValues?.chronic)\r\n  //   : 0;\r\n\r\n  const icdoptions = [\r\n    \"E11.5 - Type 2 diabetes mellitus without complications\",\r\n    \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n    \"E11.7 - Type 2 diabetes mellitus without complications\",\r\n  ];\r\n\r\n  const findIndex2 = defaultValues?.icd10\r\n    ? icdoptions?.indexOf(defaultValues?.icd10)\r\n    : 0;\r\n\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n\r\n  //api integration of medical conditions list\r\n  useEffect(() => {\r\n    const getMedicalConditions = async () => {\r\n      if (searchTerm) {\r\n        try {\r\n          const response = await get(\r\n            `resource/masters?slug=condition&searchkey=${searchTerm}&limit=50&country=undefined`\r\n          );\r\n          if (response.code === 200) {\r\n            console.log(\"data\", response.data.masters);\r\n            setConditions(response.data.masters);\r\n          } else {\r\n            console.error(\"Failed to fetch data:\", response.message);\r\n            setConditions([]);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n          setConditions([]);\r\n        }\r\n      } else {\r\n        setConditions([]);\r\n      }\r\n    };\r\n\r\n    getMedicalConditions();\r\n  }, [searchTerm, get]);\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(\"Conditions:\", conditions);\r\n  // }, [conditions]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  // Validate the form\r\n  const validate = () => {\r\n    let valid = true;\r\n    let newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      // console.log(\"Validate\");\r\n      newErrors.date = \"Date is required\";\r\n      valid = false;\r\n    }\r\n\r\n    if (!searchTerm) {\r\n      // console.log(\"Validate\");\r\n      newErrors.name = \"Condition is required\";\r\n      valid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return valid;\r\n  };\r\n\r\n  // api integration of medical history form submit\r\n  const medicalHistoryForm = async () => {\r\n    const formattedDate = format(selectedDate, \"dd-MM-yyyy\");\r\n    try {\r\n      const body = {\r\n        values: {\r\n          condition: {\r\n            name: searchTerm,\r\n            chronic_illness: selectChronic ? \"yes\" : \"no\",\r\n            previous_illness: selectPreviousIllness ? \"yes\" : \"no\",\r\n            icd: \"fever\",\r\n          },\r\n          onset_date: formattedDate,\r\n          notes: notes,\r\n        },\r\n        patient_id: \"10\",\r\n        slug: \"medical-history\",\r\n      };\r\n\r\n      console.log(\"Form Data:\", body);\r\n\r\n      const response = await post(`resource/patientHistories`, body)\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await getMedicalLists();\r\n        setAddFormView(false);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChronicChange = (event) => {\r\n    setSelectChronic(event.target.value === \"Yes\");\r\n  }\r\n\r\n  const handlePreviousIllnessChange = (event) => {\r\n    setSelectPreviousIllness(event.target.value === \"Yes\");\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n    if (date) {\r\n      setSelectedDate(date);\r\n    } else {\r\n      setSelectedDate(null);\r\n    }\r\n  };\r\n\r\n  // api integration of edit form\r\n  const editMedicalHistory = async () => {\r\n    const formattedDate = format(selectedDate, \"dd-MM-yyyy\");\r\n    try {\r\n      const body = {\r\n        values: {\r\n          condition: {\r\n            name: searchTerm,\r\n            chronic_illness: selectChronic ? \"yes\" : \"no\",\r\n            previous_illness: selectPreviousIllness ? \"yes\" : \"no\",\r\n            icd: \"fever\",\r\n          },\r\n          onset_date: formattedDate,\r\n          notes: notes,\r\n        },\r\n        patient_id: \"10\",\r\n        slug: \"medical-history\",\r\n      };\r\n\r\n      console.log(\"Editing Form Data:\", body);\r\n\r\n      const response = await post(`resource/patientHistories/${defaultValues.id}`, body);\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await getMedicalLists();\r\n        setAddFormView(false);\r\n      } else {\r\n        console.error(\"Failed to edit data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error editing data:\", error);\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultValues.id !== undefined) {\r\n        console.log(\"Edit clicked\");\r\n        editMedicalHistory();\r\n      }\r\n      if (defaultValues.id === undefined) {\r\n        console.log(\"Add clicked\");\r\n        medicalHistoryForm();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Onset Date *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  isClearable\r\n                  closeOnScroll={true}\r\n                  wrapperClassName=\"date-picker-wrapper\"\r\n                  dateFormat={DATE_FORMAT}\r\n                />\r\n                {errors.onset_date && <div className=\"error-text\">{errors.onset_date}</div>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative dropdown-container\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Conditions *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={searchTerm}\r\n                onChange={handleInputChange}\r\n              />\r\n              {errors.name && <div className=\"error-text\">{errors.name}</div>}\r\n              {loading ? (\r\n                <p>Loading...</p>\r\n              ) : error ? (\r\n                <p>{error}</p>\r\n              ) : conditions.length > 0 ? (\r\n                <ul className=\"dropdown-list\">\r\n                  {conditions.map((condition) => (\r\n                    <li\r\n                      key={condition.id}\r\n                      className=\"list-group-item\"\r\n                      onClick={() => {\r\n                        setSearchTerm(condition.name);\r\n                        setConditions([]);\r\n                      }}\r\n                    >\r\n                      {condition.name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : null}\r\n\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={icdoptions}\r\n                  defaultValue={\r\n                    defaultValues?.icd10 ? icdoptions[findIndex2] : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Chronic\r\n              </label>\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={selectChronic}\r\n                onChange={handleChronicChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={!selectChronic}\r\n                onChange={handleChronicChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Previous Illness\r\n              </label>\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault1\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={selectPreviousIllness}\r\n                onChange={handlePreviousIllnessChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={!selectPreviousIllness}\r\n                onChange={handlePreviousIllnessChange}\r\n\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedHistoryForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useCallback, useEffect } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedHistoryForm from \"./MedHistoryForm\";\r\nimport MedicalHistoryTable from \"../../../../../../Tables/Subjective/MedicalHistoryTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\n\r\n\r\nconst MedicalHistory = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"ONSET DATE\" },\r\n    { id: 3, label: \"CONDITIONS\" },\r\n    { id: 4, label: \"ICD\" },\r\n    { id: 5, label: \"Chronic\" },\r\n    { id: 6, label: \"Previous Illness\" },\r\n    { id: 7, label: \"Actions\" },\r\n  ];\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     onset: \"02-04-2024\",\r\n  //     conditions: \"Lorem ipsum\",\r\n  //     icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n  //     chronic: \"Yes\",\r\n  //     prev_illness: \"Yes\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     onset: \"02-04-2024\",\r\n  //     conditions: \"Lorem ipsum\",\r\n  //     icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n  //     chronic: \"Yes\",\r\n  //     prev_illness: \"Yes\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     onset: \"02-04-2024\",\r\n  //     conditions: \"Lorem ipsum\",\r\n  //     icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n  //     chronic: \"No\",\r\n  //     prev_illness: \"Yes\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     onset: \"01-04-2024\",\r\n  //     conditions: \"Lorem ipsum\",\r\n  //     icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n  //     chronic: \"No\",\r\n  //     prev_illness: \"No\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     onset: \"01-04-2024\",\r\n  //     conditions: \"Lorem ipsum\",\r\n  //     icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n  //     chronic: \"Yes\",\r\n  //     prev_illness: \"No\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 6,\r\n  //     onset: \"02-04-2024\",\r\n  //     conditions: \"Lorem ipsum\",\r\n  //     icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n  //     chronic: \"No\",\r\n  //     prev_illness: \"No\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 7,\r\n  //     onset: \"02-04-2024\",\r\n  //     conditions: \"Lorem ipsum\",\r\n  //     icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n  //     chronic: \"Yes\",\r\n  //     prev_illness: \"Yes\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 8,\r\n  //     onset: \"02-04-2024\",\r\n  //     conditions: \"Lorem ipsum\",\r\n  //     icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n  //     chronic: \"Yes\",\r\n  //     prev_illness: \"Yes\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 9,\r\n  //     onset: \"12-03-2024\",\r\n  //     conditions: \"Lorem ipsum\",\r\n  //     icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n  //     chronic: \"Yes\",\r\n  //     prev_illness: \"Yes\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 10,\r\n  //     onset: \"02-03-2024\",\r\n  //     conditions: \"Lorem ipsum\",\r\n  //     icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n  //     chronic: \"Yes\",\r\n  //     prev_illness: \"Yes\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  // ];\r\n\r\n  const { loading, error, get, del, clearCache } = useApi();\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 10; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, id, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id);\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  // api integration of list,filter and search of medical history\r\n  const getMedicalLists = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHistories?user_id=10&slug=medical-history&limit=${itemsPerPage}&page=${currentPage}&order_by=values->onset_date&dir=2&from=&to=&searchkey=fever`\r\n      );\r\n      if (response.code === 200) {\r\n        // console.log(\"data\", response.data.patient_histories);\r\n        setRowData(response.data.patient_histories);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n        setRowData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setRowData([]);\r\n    }\r\n  }, [get, currentPage, addFormView]);\r\n\r\n  useEffect(() => {\r\n    getMedicalLists();\r\n  }, [getMedicalLists]);\r\n\r\n  // api integration of delete list from the table\r\n  const deleteMedicalLists = async () => {\r\n    try {\r\n      const response = await del(`resource/patientHistories/${id}`);\r\n\r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        getMedicalLists();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                {/* <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div> */}\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <MedicalHistoryTable\r\n              rowData={rowData}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={pagination?.total}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MedHistoryForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              setAddFormView={setAddFormView}\r\n              getMedicalLists={getMedicalLists}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => deleteMedicalLists()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistory;\r\n","import { CCol, CFormCheck, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../../Utils/dateUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst ObstericHistoryForm = ({ back, defaultValues, obsAdd, obsEdit }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  const [prev, setPrev] = useState(defaultValues?.fert_treatment || \"No\");\r\n  const [trimester, setTrimester] = useState(\r\n    defaultValues?.values?.trimester || \"\"\r\n  );\r\n  const [obstetricDesc, setObstetricDesc] = useState(\r\n    defaultValues?.values?.boh_desc || \"\"\r\n  );\r\n  const [fertTreatmentDesc, setFertTreatmentDesc] = useState(\r\n    defaultValues?.values?.fertility_treatment_desc || \"\"\r\n  );\r\n  const [preg, setPreg] = useState(defaultValues?.values?.pregnant || \"No\");\r\n  const [fertTreat, setFertTreat] = useState(\r\n    defaultValues?.values?.fertility_treatment || \"No\"\r\n  );\r\n  const [lact, setLact] = useState(defaultValues?.values?.lactation || \"No\");\r\n  const [cesarean, setCesarean] = useState(\r\n    defaultValues?.values?.previous_cesarean_sections || \"No\"\r\n  );\r\n  const [obstetric, setObsteric] = useState(defaultValues?.values?.boh || \"No\");\r\n  const [gravidaValue, setGravidaValue] = useState(\r\n    defaultValues?.values?.gravida || \"\"\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const [paraValue, setParaValue] = useState(defaultValues?.values?.para || \"\");\r\n  // This should match your expected format\r\n  const defaultDateTime = defaultValues?.values?.lmp || \"\";\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n\r\n  const defaultDateTime1 = defaultValues?.values?.edd || \"\";\r\n  const defaultDate1 = defaultDateTime1.split(\" \")[0] || \"\";\r\n  useEffect(() => {\r\n    // Parse the date string into a Date object\r\n    if (defaultDate) {\r\n      // Define the format of the date string you are parsing\r\n      const parsedDate = parse(defaultDate, DATE_FORMAT, new Date());\r\n      if (isValid(parsedDate)) {\r\n        setDate(parsedDate);\r\n      }\r\n      const parsedDate1 = parse(defaultDate1, DATE_FORMAT, new Date());\r\n      if (isValid(parsedDate1)) {\r\n        setDate2(parsedDate1);\r\n      }\r\n    }\r\n  }, [defaultDate, defaultDate1]);\r\n\r\n  const options = [\"First\", \"Second\", \"Third\"];\r\n  const findIndex = defaultValues?.trimster\r\n    ? options?.indexOf(defaultValues?.trimster)\r\n    : 0;\r\n\r\n  const handleChangeObste = (e) => {\r\n    setObsteric(e.target.value);\r\n  };\r\n\r\n  const handleChangeCesa = (e) => {\r\n    setCesarean(e.target.value);\r\n  };\r\n  const handleChangeLact = (e) => {\r\n    setLact(e.target.value);\r\n  };\r\n  const handleChangeFert = (e) => {\r\n    setFertTreat(e.target.value);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setPreg(e.target.value);\r\n  };\r\n\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newstrValue = input?.replace(/[^0-9]/g, \"\")?.slice(0, 2);\r\n\r\n    if (name === \"gravida\") {\r\n      setGravidaValue(newstrValue);\r\n    }\r\n    if (name === \"para\") {\r\n      setParaValue(newstrValue);\r\n    }\r\n    if (name === \"trimester\") {\r\n      setTrimester(newstrValue);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = {};\r\n\r\n    // Validate fields\r\n    if (!preg) {\r\n      newErrors.preg = \"Pregnant field is required\";\r\n    }\r\n    if (preg === \"Yes\") {\r\n      if (!date) {\r\n        newErrors.date = \"LMP Date is required\";\r\n      }\r\n      if (!trimester) {\r\n        newErrors.trimester = \"Trimester is required\";\r\n      }\r\n      if (!gravidaValue) {\r\n        newErrors.gravidaValue = \"Gravida is required\";\r\n      }\r\n      if (!paraValue) {\r\n        newErrors.paraValue = \"Para is required\";\r\n      }\r\n    }\r\n    if (fertTreat === \"Yes\" && !fertTreatmentDesc) {\r\n      newErrors.fertTreatmentDesc =\r\n        \"Fertility Treatment Description is required\";\r\n    }\r\n    if (obstetric === \"Yes\" && !obstetricDesc) {\r\n      newErrors.obstetricDesc = \"Bad Obstetric History Description is required\";\r\n    }\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n\r\n    // Handle successful form submission\r\n    setErrors({});\r\n    formsubmit();\r\n  };\r\n\r\n  const formsubmit = () => {\r\n    const values = {\r\n      lmp: preg === \"Yes\" ? format(date, \"dd-MM-yyyy\") : \"\",\r\n      edd: preg === \"Yes\" ? format(date2, \"dd-MM-yyyy\") : \"\",\r\n      trimester: preg === \"Yes\" ? trimester : \"\",\r\n      gravida: preg === \"Yes\" ? gravidaValue : \"\",\r\n      para: preg === \"Yes\" ? paraValue : \"\",\r\n      lactation: preg === \"Yes\" ? lact : \"\",\r\n      fertility_treatment: preg === \"Yes\" ? fertTreat : \"\",\r\n      fertility_treatment_desc: preg === \"Yes\" ? fertTreatmentDesc : \"\",\r\n      previous_cesarean_sections: cesarean,\r\n      pregnant: preg,\r\n      boh: obstetric,\r\n      boh_desc: obstetric === \"Yes\" ? obstetricDesc : \"\",\r\n    };\r\n    if (defaultValues?.id) {\r\n      console.log(\"Edit clicked\");\r\n      obsEdit(values, defaultValues?.id);\r\n    }\r\n    if (!defaultValues?.id) {\r\n      obsAdd(values);\r\n    }\r\n    console.log(\"clicked\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pregnant *\r\n              </label>\r\n\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"exampleRadios\"\r\n                id=\"exampleRadios1\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={preg === \"Yes\"}\r\n                onChange={handleChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={preg === \"No\"}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.preg && <div className=\"text-danger\">{errors.preg}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {preg === \"Yes\" && (\r\n          <>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  LMP Date *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date}\r\n                    onChange={(date) => setDate(date)}\r\n                    dateFormat={DATE_FORMAT}\r\n                  />\r\n                </div>\r\n                {errors.date && (\r\n                  <div className=\"text-danger\">{errors.date}</div>\r\n                )}\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  ED Date\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date2}\r\n                    onChange={(date) => setDate2(date)}\r\n                    dateFormat={DATE_FORMAT}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Trimester *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    name=\"trimester\"\r\n                    placeholder=\"00\"\r\n                    // defaultValue={defaultValues?.trimster}\r\n                    value={trimester}\r\n                    onChange={numCheck}\r\n                  />\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={options}\r\n                      defaultValue={options[findIndex]}\r\n                      getSelectedValue={getSelectedTrimster}\r\n                    />\r\n                  </div> */}\r\n                  {errors.trimester && (\r\n                    <div className=\"text-danger\">{errors.trimester}</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Gravida *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    name=\"gravida\"\r\n                    placeholder=\"00\"\r\n                    // defaultValue={defaultValues?.gravida}\r\n                    value={gravidaValue}\r\n                    onChange={numCheck}\r\n                  />\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedGravida}\r\n                      options={gravidaoptions}\r\n                      defaultValue={gravidaoptions[findgravidaIndex]}\r\n                    />\r\n                  </div> */}\r\n                  {errors.gravidaValue && (\r\n                    <div className=\"text-danger\">{errors.gravidaValue}</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Para *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"00\"\r\n                    defaultValue={defaultValues?.para}\r\n                    name=\"para\"\r\n                    value={paraValue}\r\n                    onChange={numCheck}\r\n                  />\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedPara}\r\n                      options={gravidaoptions}\r\n                      defaultValue={gravidaoptions[findparaIndex]}\r\n                    />\r\n                  </div> */}\r\n                  {errors.paraValue && (\r\n                    <div className=\"text-danger\">{errors.paraValue}</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Fertility Treament\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.fert_treatment}\r\n              /> */}\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={lacatingoptions}\r\n                      defaultValue={lacatingoptions[findtreatmentIndex]}\r\n                      getSelectedValue={getSelectedFertValue}\r\n                    />\r\n                  </div> */}\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"Yes\"\r\n                    value=\"Yes\"\r\n                    checked={fertTreat === \"Yes\"}\r\n                    onChange={handleChangeFert}\r\n                  />\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"No\"\r\n                    value=\"No\"\r\n                    checked={fertTreat === \"No\"}\r\n                    onChange={handleChangeFert}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            {fertTreat === \"Yes\" && (\r\n              <CCol lg={4} className=\"mb-3\">\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Treament Description*\r\n                    </label>\r\n                    <CFormTextarea\r\n                      type=\"text\"\r\n                      class=\"form-control  pad-10\"\r\n                      id=\"validationTooltip01\"\r\n                      placeholder=\"Enter\"\r\n                      // defaultValue={defaultValues?.fert_treatment}\r\n                      value={fertTreatmentDesc}\r\n                      onChange={(e) => setFertTreatmentDesc(e.target.value)}\r\n                    />\r\n                    {errors.fertTreatmentDesc && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.fertTreatmentDesc}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            )}\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Lacatating\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.lacating}\r\n              /> */}\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedLacating}\r\n                      options={lacatingoptions}\r\n                      defaultValue={lacatingoptions[findlacatingIndex]}\r\n                    />\r\n                  </div> */}\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"Yes\"\r\n                    value=\"Yes\"\r\n                    checked={lact === \"Yes\"}\r\n                    onChange={handleChangeLact}\r\n                  />\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"No\"\r\n                    value=\"No\"\r\n                    checked={lact === \"No\"}\r\n                    onChange={handleChangeLact}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n      </CRow>\r\n      <CRow>\r\n        <CCol lg={6} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Previous Cesarean Sections\r\n              </label>\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={cesarean === \"Yes\"}\r\n                onChange={handleChangeCesa}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={cesarean === \"No\"}\r\n                onChange={handleChangeCesa}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol lg={6} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Bad Obstetric History\r\n              </label>\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={obstetric === \"Yes\"}\r\n                onChange={handleChangeObste}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={obstetric === \"No\"}\r\n                onChange={handleChangeObste}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {obstetric === \"Yes\" && (\r\n          <CCol lg={6} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Bad Obstetric History Description*\r\n                </label>\r\n                <CFormTextarea\r\n                  type=\"text\"\r\n                  class=\"form-control  pad-10\"\r\n                  id=\"validationTooltip01\"\r\n                  placeholder=\"Enter\"\r\n                  // defaultValue={defaultValues?.fert_treatment}\r\n                  value={obstetricDesc}\r\n                  onChange={(e) => setObstetricDesc(e.target.value)}\r\n                />\r\n                {errors.obstetricDesc && (\r\n                  <div className=\"text-danger\">{errors.obstetricDesc}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"130px\" }}>\r\n          <PrimaryButton onClick={handleSubmit}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObstericHistoryForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport { getSerialNumber } from \"../../../Utils/commonUtils\";\r\n\r\nconst ObstetricHistoryTable = ({\r\n  columns,\r\n  rowData,\r\n  getselectedData,\r\n  from,\r\n  itemsPerPage,\r\n  currentPage,\r\n}) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.length <= 0 ? (\r\n            <tr>\r\n              <td colSpan={columns.length} className=\"no-data-message\">\r\n                No data available\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            rowData?.map((dt, i) => (\r\n              <CTableRow key={i}>\r\n                <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                    <span className=\"fs-16 fw-500\">\r\n                      {getSerialNumber(itemsPerPage, currentPage, i)}\r\n                    </span>\r\n                  </div>\r\n                </CTableHeaderCell>\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                    <span className=\"fs-16 fw-500\">{dt?.values?.lmp}</span>\r\n                  </div>\r\n                </CTableDataCell>\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                    <span className=\"fs-16 fw-500\">{dt?.values?.edd}</span>\r\n                  </div>\r\n                </CTableDataCell>\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                    <span className=\"fs-16 fw-500\">\r\n                      {dt?.values?.trimester}\r\n                    </span>\r\n                  </div>\r\n                </CTableDataCell>\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                    {dt?.values?.gravida}\r\n                  </div>\r\n                </CTableDataCell>\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                    {dt?.values?.para}\r\n                  </div>\r\n                </CTableDataCell>\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                    {dt?.values?.boh}\r\n                  </div>\r\n                </CTableDataCell>\r\n                {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lacating}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n                {from !== \"Consult\" && (\r\n                  <CTableDataCell style={{ height: \"10px\" }}>\r\n                    <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                      <div\r\n                        style={{\r\n                          width: \"50%\",\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.EditPencil}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"edit\")}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          width: \"50%\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-start\",\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"delete\"\r\n                          src={Assets?.Delete}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"delete\")}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CTableDataCell>\r\n                )}\r\n              </CTableRow>\r\n            ))\r\n          )}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObstetricHistoryTable;\r\n","import { CCol, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { format } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { findItemIndex } from \"../../../../../../../Utils/commonUtils\";\r\n\r\nconst MensturalHistoryForm = ({\r\n  back,\r\n  defaultValues,\r\n  from,\r\n  mensuEdit,\r\n  mensuAdd,\r\n}) => {\r\n  const [date, setDate] = useState(defaultValues?.values?.lmp || new Date());\r\n\r\n  // useEffect(() => {\r\n  //   // This should match your expected format\r\n  //   const defaultDateTime = defaultValues?.values?.lmp || \"\";\r\n  //   const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  //   // Parse the date string into a Date object\r\n  //   if (defaultDate) {\r\n  //     // Define the format of the date string you are parsing\r\n  //     const parsedDate = parse(defaultDate, DATE_FORMAT, new Date());\r\n  //     if (isValid(parsedDate)) {\r\n  //       setDate(parsedDate);\r\n  //     }\r\n  //   }\r\n  // }, [defaultValues?.values?.lmp]);\r\n\r\n  const flow_duration = [\"2-7 days\", \"< 2 Days\", \"> 7 Days\"];\r\n  const flow_type = [\"Less\", \"Moderate\", \"Severe\"];\r\n\r\n  const [menopause, setMenopause] = useState(\r\n    defaultValues?.values?.menopause || \"no\"\r\n  );\r\n  const [irregular, setIrregular] = useState(\r\n    defaultValues?.values?.cycle?.irregular || \"no\"\r\n  );\r\n\r\n  const [dysmenorrhea, setDysmenorrhea] = useState(\r\n    defaultValues?.values?.dysmenorrhea || \"no\"\r\n  );\r\n  const [bleeding, setBleeding] = useState(\r\n    defaultValues?.values?.bleeding || \"no\"\r\n  );\r\n  const [flowType, setFlowType] = useState(\r\n    defaultValues?.values?.flow?.type || \"\"\r\n  );\r\n  const [flowDur, setFlowDur] = useState(\r\n    defaultValues?.values?.flow?.duration || \"\"\r\n  );\r\n\r\n  const handleClick = (event) => {\r\n    setMenopause(event.target.value);\r\n  };\r\n\r\n  const getSelectedValue = (data) => {\r\n    setFlowType(data);\r\n  };\r\n  const getSelectedValue2 = (data) => {\r\n    setFlowDur(data);\r\n  };\r\n\r\n  const [value, setValue] = useState(\r\n    defaultValues?.values?.menopause_age\r\n      ? defaultValues?.values?.menopause_age\r\n      : \"\"\r\n  );\r\n  const [value1, setValue1] = useState(\r\n    defaultValues?.values?.menarche_age\r\n      ? defaultValues?.values?.menarche_age\r\n      : \"\"\r\n  );\r\n  const [value2, setValue2] = useState(\r\n    defaultValues?.values?.cycle?.year ? defaultValues?.values?.cycle?.year : \"\"\r\n  );\r\n  const [value3, setValue3] = useState(\r\n    defaultValues?.values?.cycle?.days ? defaultValues?.values?.cycle?.days : \"\"\r\n  );\r\n  const [error, setError] = useState(\"\");\r\n  const [errors, setErrors] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const input = e.target.value;\r\n\r\n    // Remove non-digit characters and limit to two digits\r\n    const newValue = input.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (input.length > 2 && newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      if (e.target.name === \"MenopauseAge\") {\r\n        setValue(newValue);\r\n      } else if (e.target.name === \"MenarcheAge\") {\r\n        setValue1(newValue);\r\n      } else if (e.target.name === \"cycle_per_year\") {\r\n        setValue2(newValue);\r\n      } else if (e.target.name === \"cycle_in_days\") {\r\n        setValue3(newValue);\r\n      }\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const paste = e.clipboardData.getData(\"text\");\r\n    const newValue = paste.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      if (e.target.name === \"MenopauseAge\") {\r\n        setValue(newValue);\r\n      } else if (e.target.name === \"MenarcheAge\") {\r\n        setValue1(newValue);\r\n      } else if (e.target.name === \"cycle_per_year\") {\r\n        setValue2(newValue);\r\n      } else if (e.target.name === \"cycle_in_days\") {\r\n        setValue3(newValue);\r\n      }\r\n      setError(\"\");\r\n    }\r\n  };\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    // Validate Menarche Age\r\n    if (!value1) {\r\n      newErrors.menarcheAge = \"Menarche Age is required.\";\r\n    }\r\n\r\n    // Validate Cycle Information if Menopause is not \"yes\"\r\n    if (menopause !== \"yes\") {\r\n      if (!value2) {\r\n        newErrors.cyclePerYear = \"Cycle per Year is required.\";\r\n      }\r\n      if (!value3) {\r\n        newErrors.cycleLengthDays = \"Cycle Length in days is required.\";\r\n      }\r\n      if (!flowDur) {\r\n        newErrors.flowdur = \"Flow duration is required.\";\r\n      }\r\n      if (!flowType) {\r\n        newErrors.flowtype = \"Flow type is required.\";\r\n      }\r\n    }\r\n\r\n    // Validate LMP Date\r\n    if (!date) {\r\n      newErrors.lmpDate = \"LMP Date is required.\";\r\n    }\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors); // Set errors to state\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    if (!validateForm()) {\r\n      return; // Stop form submission if validation fails\r\n    }\r\n    const values = {\r\n      lmp: format(date, \"yyyy-MM-dd\"),\r\n      menarche_age: value1,\r\n      cycle: {\r\n        year: value2,\r\n        days: value3,\r\n        irregular: irregular,\r\n      },\r\n      flow: {\r\n        duration: flowDur,\r\n        type: flowType,\r\n      },\r\n      dysmenorrhea: dysmenorrhea,\r\n      menopause: menopause,\r\n      bleeding: bleeding,\r\n      menopause_age: menopause === \"yes\" ? value : \"\",\r\n    };\r\n    if (defaultValues?.id === undefined) {\r\n      await mensuAdd(values);\r\n      setErrors({});\r\n    }\r\n    if (defaultValues?.id !== undefined) {\r\n      await mensuEdit(values, defaultValues?.id);\r\n      setErrors({});\r\n      if (menopause === \"no\") {\r\n        setValue();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Menarche Age *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={}\r\n                name=\"MenarcheAge\"\r\n                value={value1}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n            {error && <p className=\"text-danger\">{error}</p>}\r\n            {errors.menarcheAge && (\r\n              <p className=\"text-danger\">{errors.menarcheAge}</p>\r\n            )}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycles per Year {menopause !== \"yes\" && \"*\"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={defaultValues?.cycle_per_year}\r\n                name=\"cycle_per_year\"\r\n                value={value2}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              {errors.cyclePerYear && (\r\n                <p className=\"text-danger\">{errors.cyclePerYear}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycle Length in days {menopause !== \"yes\" && \"*\"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={defaultValues?.cycle_in_days}\r\n                name=\"cycle_in_days\"\r\n                value={value3}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              {errors.cycleLengthDays && (\r\n                <p className=\"text-danger\">{errors.cycleLengthDays}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Flow Duration {menopause !== \"yes\" && \"*\"}\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={flow_duration}\r\n                  defaultValue={\r\n                    defaultValues?.values?.flow?.duration\r\n                      ? flow_duration[\r\n                          findItemIndex(\r\n                            flow_duration,\r\n                            defaultValues?.values?.flow?.duration\r\n                          )\r\n                        ]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n              {errors.flowdur && (\r\n                <p className=\"text-danger\">{errors.flowdur}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Flow Type {menopause !== \"yes\" && \"*\"}\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={flow_type}\r\n                  defaultValue={\r\n                    defaultValues?.values?.flow?.type\r\n                      ? flow_type[\r\n                          findItemIndex(\r\n                            flow_type,\r\n                            defaultValues?.values?.flow?.type\r\n                          )\r\n                        ]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.flowtype && (\r\n                <p className=\"text-danger\">{errors.flowtype}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\"> InterMenstrual Bleeding </p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menstrualYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"menstrual\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n                onChange={(e) => setBleeding(e.target.value)}\r\n                checked={bleeding === \"yes\"}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menstrualNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"menstrual\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n                onChange={(e) => setBleeding(e.target.value)}\r\n                checked={bleeding === \"no\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\"> Cycle Irregularity </p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"irregularityYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"irregularity\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n                checked={irregular === \"yes\"}\r\n                onChange={(e) => setIrregular(e.target.value)}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"irregularityNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"irregularity\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n                checked={irregular === \"no\"}\r\n                onChange={(e) => setIrregular(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">Dysmenorrhea</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"dysmenorrheaYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"dysmenorrhea\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n                onChange={(e) => setDysmenorrhea(e.target.value)}\r\n                checked={dysmenorrhea === \"yes\"}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"dysmenorrheaNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"dysmenorrhea\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n                onChange={(e) => setDysmenorrhea(e.target.value)}\r\n                checked={dysmenorrhea === \"no\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              LMP Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">Menopause</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menopauseYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"menopause\"\r\n                checked={menopause === \"yes\"}\r\n                onChange={handleClick}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menopauseNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"menopause\"\r\n                checked={menopause === \"no\"}\r\n                onChange={handleClick}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {menopause === \"yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Menopause Age\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control  pad-10\"\r\n                  id=\"validationTooltip01\"\r\n                  placeholder=\"00\"\r\n                  // defaultValue={defaultValues?.age}\r\n                  name=\"MenopauseAge\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  onPaste={handlePaste}\r\n                  disabled={from === \"Consult-Gynaec\" ? true : false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n\r\n      {from !== \"Consult-Gynaec\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"130px\" }}>\r\n            <PrimaryButton onClick={onSubmit}>\r\n              {defaultValues?.id !== undefined ? \"UPDATE\" : \"ADD\"}\r\n            </PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MensturalHistoryForm;\r\n","import { CCol, CFormTextarea, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst ScreeningHistoryForm = ({\r\n  back,\r\n  defaultValues,\r\n  from,\r\n  screeningAdd,\r\n  screeningEdit,\r\n}) => {\r\n  const [date, setDate] = useState(\r\n    defaultValues?.values?.last_pap_smear_at || new Date()\r\n  );\r\n  const [date2, setDate2] = useState(\r\n    defaultValues?.values?.last_mamogram_at || new Date()\r\n  );\r\n  const [date3, setDate3] = useState(\r\n    defaultValues?.values?.last_breast_exam_at || new Date()\r\n  );\r\n  const [abnormalStatus, setAbnormalStatus] = useState(\r\n    defaultValues?.values?.is_abnormal_pap_smear || \"no\"\r\n  );\r\n  const [mamogramStatus, setMamogramStatus] = useState(\r\n    defaultValues?.values?.is_mammogram || \"no\"\r\n  );\r\n  const [breastStatus, setBreastStatus] = useState(\r\n    defaultValues?.values?.is_breast_exam || \"no\"\r\n  );\r\n  const [abnormalDesc, setAbnormalDesc] = useState(\r\n    defaultValues?.values?.abnormal_pap_smear_desc || \"\"\r\n  );\r\n  const [mamogramDesc, setMamogramDesc] = useState(\r\n    defaultValues?.values?.mammogram_desc || \"\"\r\n  );\r\n  const [breastDesc, setBreastDesc] = useState(\r\n    defaultValues?.values?.breast_exam_desc || \"\"\r\n  );\r\n\r\n  const handleAbnormalStatus = (event) => {\r\n    setAbnormalStatus(event.target.value);\r\n  };\r\n\r\n  const handleMamogramStatus = (event) => {\r\n    setMamogramStatus(event.target.value);\r\n  };\r\n\r\n  const handleBreastStatus = (event) => {\r\n    setBreastStatus(event.target.value);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const values = {\r\n      last_pap_smear_at: format(date, \"yyyy-MM-dd\"),\r\n      is_abnormal_pap_smear: abnormalStatus,\r\n      abnormal_pap_smear_desc: abnormalStatus === \"yes\" ? abnormalDesc : \"\",\r\n      last_mamogram_at: format(date2, \"yyyy-MM-dd\"),\r\n      is_mammogram: mamogramStatus,\r\n      mammogram_desc: mamogramStatus === \"yes\" ? mamogramDesc : \"\",\r\n      last_breast_exam_at: format(date3, \"yyyy-MM-dd\"),\r\n      is_breast_exam: breastStatus,\r\n      breast_exam_desc: breastStatus === \"yes\" ? breastDesc : \"\",\r\n    };\r\n    if (defaultValues?.id === undefined) {\r\n      await screeningAdd(values);\r\n    }\r\n    if (defaultValues?.id !== undefined) {\r\n      await screeningEdit(values, defaultValues?.id);\r\n      if (breastStatus === \"no\") {\r\n        setBreastDesc(\"\");\r\n      }\r\n      if (mamogramStatus === \"no\") {\r\n        setMamogramDesc(\"\");\r\n      }\r\n      if (abnormalStatus === \"no\") {\r\n        setAbnormalDesc(\"\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last pap smear\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">History of abnormal pap smear</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"abnormalYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"abnormal\"\r\n                checked={abnormalStatus === \"yes\"}\r\n                onChange={handleAbnormalStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"abnormalNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"abnormal\"\r\n                checked={abnormalStatus === \"no\"}\r\n                onChange={handleAbnormalStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {abnormalStatus === \"yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Abnormal pap smear details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  defaultValue={abnormalDesc}\r\n                  onChange={(e) => setAbnormalDesc(e.target.value)}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult-Screen\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last mamogram\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date2}\r\n                onChange={(date) => setDate2(date)}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">History of mamogram</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"mamogramYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"mamogram\"\r\n                checked={mamogramStatus === \"yes\"}\r\n                onChange={handleMamogramStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"mamogramNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"mamogram\"\r\n                checked={mamogramStatus === \"no\"}\r\n                onChange={handleMamogramStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {mamogramStatus === \"yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Mamogram details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  defaultValue={mamogramDesc}\r\n                  onChange={(e) => setMamogramDesc(e.target.value)}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult-Screen\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last breast exam\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date3}\r\n                onChange={(date) => setDate3(date)}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">History of breast exam</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"breastYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"breast\"\r\n                checked={breastStatus === \"yes\"}\r\n                onChange={handleBreastStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"breastNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"breast\"\r\n                checked={breastStatus === \"no\"}\r\n                onChange={handleBreastStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {breastStatus === \"yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Breast exam details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  defaultValue={breastDesc}\r\n                  onChange={(e) => setBreastDesc(e.target.value)}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult-Screen\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n\r\n      {from !== \"Consult-Screen\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"130px\" }}>\r\n            <PrimaryButton onClick={onSubmit}>\r\n              {defaultValues?.id !== undefined ? \"UPDATE\" : \"ADD\"}\r\n            </PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScreeningHistoryForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ObstericHistoryForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\nimport MedicalTab from \"../../../MedicalTab\";\r\nimport ObstetricHistoryTable from \"../../../../../../Tables/Subjective/ObstetricHistoryTable\";\r\nimport GynaecHistoryTable from \"../../../../../../Tables/Subjective/GynaecHistoryTable\";\r\nimport ScreeningHistory from \"../../../../../../Tables/Subjective/ScreeningHistory\";\r\nimport MensturalHistoryForm from \"./MensturalHistoryForm\";\r\nimport ScreeningHistoryForm from \"./ScreeningHistoryForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst OGHistory = ({ from, back }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"LMP Date\" },\r\n    { id: 3, label: \"ED Date\" },\r\n    { id: 4, label: \"Trimester\" },\r\n    { id: 5, label: \"Gravida\" },\r\n    { id: 6, label: \"Para\" },\r\n    { id: 7, label: \"Bad Obstetric History\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 3,\r\n      para: 5,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      pregnant: \"Yes\",\r\n      cesarean: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      cesarean: \"Yes\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 3,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"No\",\r\n      lacating: \"Yes\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 4,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"No\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 5,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"No\",\r\n      lacating: \"No\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 6,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 7,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 8,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 9,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 10,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n  ];\r\n\r\n  const MensuralcolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 3, label: \"Menarche Age\" },\r\n    // { id: 3, label: \"Cycles per Year\" },\r\n    // { id: 4, label: \"Cycle Length in days\" },\r\n    // { id: 5, label: \"Flow Duration\" },\r\n    // { id: 6, label: \"Flow Type\" },\r\n    // { id: 7, label: \"InterMenstrual Bleeding\" },\r\n    { id: 3, label: \"cycle irregularity\" },\r\n    { id: 4, label: \"dysmenorrhea\" },\r\n    { id: 5, label: \"LMP\" },\r\n    { id: 2, label: \"Menopause\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const MenstrualrowData = [\r\n    {\r\n      id: 1,\r\n      age: \"18\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"20\",\r\n      cycle_in_days: \"30\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 2,\r\n      age: \"25\",\r\n      menopause: \"No\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 3,\r\n      age: \"25\",\r\n      menopause: \"No\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 4,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 5,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 6,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 7,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 8,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 9,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 10,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n  ];\r\n\r\n  const ScreeningcolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"date of last pap smear\" },\r\n    { id: 3, label: \"History of abnormal pap smear\" },\r\n    { id: 4, label: \"date of last mamogram\" },\r\n    { id: 5, label: \"History of mamogram\" },\r\n    { id: 6, label: \"date of last Breast Exam\" },\r\n    { id: 7, label: \"History of Breast Exam\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const ScreeningrowData = [\r\n    {\r\n      id: 1,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"08-06-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-07-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n  ];\r\n\r\n  const { get, post, clearCache, patch, del } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [obsData, setObsData] = useState([]);\r\n  const [mensuData, setMensuData] = useState({});\r\n  const [screeningData, setScreeningData] = useState({});\r\n\r\n  const [obsPagi, setObsPagi] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentMenstrualPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return MenstrualrowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentScreeningItem = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return ScreeningrowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const PatientSubMenu4 = localStorage.getItem(\"PatientSubMenu-4\");\r\n  const ParsedPatientSubMenu = PatientSubMenu4\r\n    ? JSON.parse(PatientSubMenu4)\r\n    : 1;\r\n  const tabs = [\r\n    { id: 1, title: \"Obstetric History\" },\r\n    { id: 2, title: \"Gynaec History\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n\r\n  const PatientSubMenu5 = localStorage.getItem(\"PatientSubMenu-5\");\r\n  const ParsedPatientSubMenu5 = PatientSubMenu5\r\n    ? JSON.parse(PatientSubMenu5)\r\n    : 1;\r\n  const [currentHistoryTab, setCurrentHistoryTab] = useState(\r\n    ParsedPatientSubMenu5\r\n  );\r\n\r\n  const GynaecTabs = [\r\n    { id: 1, title: \"Menstrual History\" },\r\n    { id: 2, title: \"Screening and Diagnostic History\" },\r\n  ];\r\n\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n    setAddFormView(false);\r\n  };\r\n\r\n  const getHistoryCurrentTab = (data) => {\r\n    setCurrentHistoryTab(data);\r\n    setAddFormView(false);\r\n  };\r\n\r\n  const getObsLists = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHistories?limit=${itemsPerPage}&page=${currentPage}&slug=obstetric-history&searchkey=${\r\n          searchValue ?? \"\"\r\n        }&order_by=id&dir=2&user_id=${data?.user_id}&from=${\r\n          startDate ?? \"\"\r\n        }&to=${endDate ?? \"\"}` //${data?.user_id}\r\n      );\r\n      const listData = response?.data?.patient_histories; //\r\n      setObsData(listData);\r\n      setObsPagi(response?.data?.pagination);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get, currentPage, searchValue, data?.user_id, startDate, endDate]);\r\n\r\n  const obsAdd = async (answerDatas) => {\r\n    try {\r\n      const url = `resource/patientHistories`; // Replace with your API endpoint\r\n      const body = {\r\n        values: answerDatas,\r\n        patient_id: data?.user_id,\r\n        slug: \"obstetric-history\",\r\n      };\r\n      await post(url, body);\r\n      clearCache();\r\n      await getObsLists();\r\n      toast.success(\"Added successfully\");\r\n      setAddFormView(false);\r\n      setCurrentTab(1);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  const obsEdit = async (answerDatas, selectedId) => {\r\n    try {\r\n      const url = `resource/patientHistories/${selectedId}`; // Replace with your API endpoint\r\n      const body = {\r\n        values: answerDatas,\r\n        patient_id: data?.user_id,\r\n        slug: \"obstetric-history\",\r\n      };\r\n      await patch(url, body);\r\n      clearCache();\r\n      await getObsLists();\r\n      toast.success(\"Added successfully\");\r\n      setAddFormView(false);\r\n      setCurrentTab(1);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  const onDelete = async () => {\r\n    try {\r\n      const url = `resource/patientHistories/${selectedData?.id}`; // Replace with your API endpoint\r\n      await del(url);\r\n      clearCache();\r\n      await getObsLists();\r\n      toast.success(\"Deleted successfully\");\r\n      setDetailView(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n  };\r\n  const getMensuralLists = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHistories?slug=menstrual-history&user_id=${data?.user_id}&limit=1&page=1&order_by=id&dir=2` //${data?.user_id}\r\n      );\r\n      const listData = response?.data?.patient_histories[0]; //\r\n      setMensuData(listData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get]);\r\n  const mensuEdit = async (answerDatas, selectedId) => {\r\n    try {\r\n      const url = `resource/patientHistories/${selectedId}`; // Replace with your API endpoint\r\n      const body = {\r\n        values: answerDatas,\r\n        patient_id: data?.user_id, //data?.user_id\r\n        slug: \"menstrual-history\",\r\n      };\r\n      await patch(url, body);\r\n      clearCache();\r\n      await getMensuralLists();\r\n      toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  const mensuAdd = async (answerDatas) => {\r\n    try {\r\n      const url = `resource/patientHistories`; // Replace with your API endpoint\r\n      const body = {\r\n        values: answerDatas,\r\n        patient_id: data?.user_id, //data?.user_id\r\n        slug: \"menstrual-history\",\r\n      };\r\n      await post(url, body);\r\n      clearCache();\r\n      await getMensuralLists();\r\n      toast.success(\"Added successfully\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const getScreeningLists = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHistories?slug=screening-diagnostic-history&user_id=${data?.user_id}&limit=1&page=1&order_by=id&dir=2` //${data?.user_id}\r\n      );\r\n      const listData = response?.data?.patient_histories[0]; //\r\n      setScreeningData(listData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get]);\r\n  const screeningEdit = async (answerDatas, selectedId) => {\r\n    try {\r\n      const url = `resource/patientHistories/${selectedId}`; // Replace with your API endpoint\r\n      const body = {\r\n        values: answerDatas,\r\n        patient_id: data?.user_id, //data?.user_id\r\n        slug: \"screening-diagnostic-history\",\r\n      };\r\n      await patch(url, body);\r\n      clearCache();\r\n      await getScreeningLists();\r\n      toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  const screeningAdd = async (answerDatas) => {\r\n    try {\r\n      const url = `resource/patientHistories`; // Replace with your API endpoint\r\n      const body = {\r\n        values: answerDatas,\r\n        patient_id: data?.user_id, //data?.user_id\r\n        slug: \"screening-diagnostic-history\",\r\n      };\r\n      await post(url, body);\r\n      clearCache();\r\n      await getScreeningLists();\r\n      toast.success(\"Added successfully\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getScreeningLists();\r\n  }, [getScreeningLists]);\r\n  useEffect(() => {\r\n    getMensuralLists();\r\n  }, [getMensuralLists]);\r\n\r\n  useEffect(() => {\r\n    getObsLists();\r\n  }, [getObsLists]);\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ObstetricHistoryTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from === \"Consult-Gynaec\" && (\r\n        <CRow>\r\n          <CCard className=\"p-2 cursor-default mb-5\">\r\n            <CCardBody className=\"mb-3\">\r\n              <MensturalHistoryForm\r\n                back={back}\r\n                defaultValues={selectedData}\r\n                from={from}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CRow>\r\n      )}\r\n      {from === \"Consult-Screen\" && (\r\n        <CRow>\r\n          <CCard className=\"p-2 cursor-default mb-5\">\r\n            <CCardBody className=\"mb-3\">\r\n              <ScreeningHistoryForm\r\n                back={back}\r\n                defaultValues={selectedData}\r\n                from={from}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CRow>\r\n      )}\r\n      {from === \"\" && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={5} className=\"\">\r\n              <MedicalTab\r\n                tabs={tabs}\r\n                getCurrentTab={getCurrentTab}\r\n                defaultTab={currentTab - 1}\r\n              />\r\n            </CCol>\r\n            <CCol lg={7}>\r\n              {currentTab === 1 && (\r\n                // <CRow>\r\n                //   <CCol lg={4}>\r\n                //     <div style={{ width: \"100%\" }}>\r\n                //       <div class=\"position-relative\">\r\n                //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n                //           Pregnant\r\n                //         </label>\r\n                //         <div\r\n                //           className=\"w-100\"\r\n                //           style={{\r\n                //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                //           }}\r\n                //         >\r\n                //           <Dropdown\r\n                //             options={options}\r\n                //             defaultValue={options[0]}\r\n                //             getSelectedValue={getSelectedValue}\r\n                //           />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   </CCol>\r\n                //   <CCol lg={4}>\r\n                //     <div style={{ width: \"100%\" }}>\r\n                //       <div class=\"position-relative\">\r\n                //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n                //           Previous Cesarean Sections\r\n                //         </label>\r\n                //         <div\r\n                //           className=\"w-100\"\r\n                //           style={{\r\n                //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                //           }}\r\n                //         >\r\n                //           <Dropdown\r\n                //             options={options}\r\n                //             defaultValue={options[1]}\r\n                //             getSelectedValue={getSelectedValue1}\r\n                //           />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   </CCol>\r\n                //   <CCol lg={4}>\r\n                //     <div style={{ width: \"100%\" }}>\r\n                //       <div class=\"position-relative\">\r\n                //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n                //           Bad Obstetric History\r\n                //         </label>\r\n                //         <div\r\n                //           className=\"w-100\"\r\n                //           style={{\r\n                //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                //           }}\r\n                //         >\r\n                //           <Dropdown\r\n                //             options={options}\r\n                //             defaultValue={options[1]}\r\n                //             getSelectedValue={getSelectedValue2}\r\n                //           />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   </CCol>\r\n                // </CRow>\r\n                <></>\r\n              )}\r\n              {currentTab === 2 && (\r\n                <MedicalTab\r\n                  tabs={GynaecTabs}\r\n                  getCurrentTab={getHistoryCurrentTab}\r\n                  defaultTab={currentHistoryTab - 1}\r\n                />\r\n              )}\r\n            </CCol>\r\n          </CRow>\r\n\r\n          {!addFormView && currentTab === 1 && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch getFilterValues={getFilterValues} />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  {/* <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div> */}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <div className=\"mb-2\">\r\n                {currentTab === 1 && (\r\n                  <>\r\n                    <CRow>\r\n                      <ObstetricHistoryTable\r\n                        rowData={obsData}\r\n                        columns={columnData}\r\n                        getselectedData={getselectedData}\r\n                        from={from}\r\n                        currentPage={currentPage || 1}\r\n                        itemsPerPage={itemsPerPage || 5}\r\n                      />\r\n                    </CRow>\r\n\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={obsPagi?.total || 0}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                )}\r\n                {/* {currentTab === 2 && currentHistoryTab === 1 && (\r\n                  <>\r\n                    <CRow>\r\n                      <GynaecHistoryTable\r\n                        rowData={getCurrentMenstrualPageItems()}\r\n                        columns={MensuralcolumnData}\r\n                        getselectedData={getselectedData}\r\n                      />\r\n                    </CRow>\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={rowData?.length}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                )}\r\n                {currentTab === 2 && currentHistoryTab === 2 && (\r\n                  <>\r\n                    <CRow>\r\n                      <ScreeningHistory\r\n                        rowData={getCurrentScreeningItem()}\r\n                        columns={ScreeningcolumnData}\r\n                        getselectedData={getselectedData}\r\n                      />\r\n                    </CRow>\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={rowData?.length}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                )} */}\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {from === \"\" && (\r\n        <>\r\n          {addFormView && (\r\n            <CRow className=\"mb-2\">\r\n              <CCard className=\"p-2 cursor-default mb-5\">\r\n                <CCardBody className=\"mb-3\">\r\n                  {currentTab === 1 && (\r\n                    <ImagingOrderForm\r\n                      back={() => {\r\n                        setAddFormView(false);\r\n                        setSelectedData({});\r\n                      }}\r\n                      defaultValues={selectedData}\r\n                      obsAdd={obsAdd}\r\n                      obsEdit={obsEdit}\r\n                    />\r\n                  )}\r\n                  {/* {currentTab === 2 && currentHistoryTab === 1 && (\r\n                <MensturalHistoryForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )}\r\n              {currentTab === 2 && currentHistoryTab === 2 && (\r\n                <ScreeningHistoryForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )} */}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CRow>\r\n          )}\r\n\r\n          {currentTab !== 1 && (\r\n            <CRow className=\"mb-2\">\r\n              <CCard className=\"p-2 cursor-default mb-5\">\r\n                <CCardBody className=\"mb-3\">\r\n                  {currentTab === 2 && currentHistoryTab === 1 && (\r\n                    <MensturalHistoryForm\r\n                      back={back}\r\n                      defaultValues={mensuData}\r\n                      mensuEdit={mensuEdit}\r\n                      mensuAdd={mensuAdd}\r\n                    />\r\n                  )}\r\n                  {currentTab === 2 && currentHistoryTab === 2 && (\r\n                    <ScreeningHistoryForm\r\n                      back={back}\r\n                      defaultValues={screeningData}\r\n                      screeningAdd={screeningAdd}\r\n                      screeningEdit={screeningEdit}\r\n                    />\r\n                  )}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CRow>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => onDelete()}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OGHistory;\r\n","import { CCol, CFormTextarea, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst MedHistoryForm = ({\r\n  back,\r\n  defaultValues,\r\n  from,\r\n  socialAdd,\r\n  socialEdit,\r\n}) => {\r\n  console.log(\"first\", defaultValues);\r\n  const [smokingStatus, setSmokingStatus] = useState(\r\n    defaultValues?.values?.smoking || \"no\"\r\n  );\r\n  const [smokingDesc, setSmokingDesc] = useState(\r\n    defaultValues?.values?.smoking_desc || \"\"\r\n  );\r\n  const [alcoholStatus, setAlcoholStatus] = useState(\r\n    defaultValues?.values?.alcohol || \"no\"\r\n  );\r\n  const [alcoholDesc, setAlcoholDesc] = useState(\r\n    defaultValues?.values?.alcohol_desc || \"\"\r\n  );\r\n  const [drugStatus, setDrugStatus] = useState(\r\n    defaultValues?.values?.drugs || \"no\"\r\n  );\r\n  const [drugDesc, setDrugDesc] = useState(\r\n    defaultValues?.values?.drugs_desc || \"\"\r\n  );\r\n  const [errors, setErrors] = useState({\r\n    smokingDesc: \"\",\r\n    alcoholDesc: \"\",\r\n    drugDesc: \"\",\r\n  });\r\n  const validateForm = () => {\r\n    const newErrors = {\r\n      smokingDesc: \"\",\r\n      alcoholDesc: \"\",\r\n      drugDesc: \"\",\r\n    };\r\n\r\n    if (smokingStatus === \"yes\" && !smokingDesc.trim()) {\r\n      newErrors.smokingDesc = \"Smoking details are required.\";\r\n    }\r\n\r\n    if (alcoholStatus === \"yes\" && !alcoholDesc.trim()) {\r\n      newErrors.alcoholDesc = \"Alcohol details are required.\";\r\n    }\r\n\r\n    if (drugStatus === \"yes\" && !drugDesc.trim()) {\r\n      newErrors.drugDesc = \"Drugs details are required.\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n\r\n    return !Object.values(newErrors).some((error) => error);\r\n  };\r\n\r\n  const handleSmokingStatus = (event) => {\r\n    setSmokingStatus(event.target.value);\r\n  };\r\n\r\n  const handleAlcoholStatus = (event) => {\r\n    setAlcoholStatus(event.target.value);\r\n  };\r\n\r\n  const handleDrugStatus = (event) => {\r\n    setDrugStatus(event.target.value);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const values = {\r\n      smoking: smokingStatus,\r\n      smoking_desc: smokingDesc,\r\n      alcohol: alcoholStatus,\r\n      alcohol_desc: alcoholDesc,\r\n      drugs: drugStatus,\r\n      drugs_desc: drugDesc,\r\n    };\r\n    if (validateForm()) {\r\n      if (defaultValues?.id === undefined) {\r\n        await socialAdd(values);\r\n      }\r\n      if (defaultValues?.id !== undefined) {\r\n        await socialEdit(values, defaultValues?.id);\r\n        if (smokingStatus === \"no\") {\r\n          setSmokingDesc(\"\");\r\n        }\r\n        if (alcoholStatus === \"no\") {\r\n          setAlcoholDesc(\"\");\r\n        }\r\n        if (drugStatus === \"no\") {\r\n          setDrugDesc(\"\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <p className=\"radio-label\">Smoking</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"smokingYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"smoking\"\r\n                checked={smokingStatus === \"yes\"}\r\n                onChange={handleSmokingStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"smokingNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"smoking\"\r\n                checked={smokingStatus === \"no\"}\r\n                onChange={handleSmokingStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {smokingStatus === \"yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Smoking details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  defaultValue={smokingDesc}\r\n                  onChange={(e) => setSmokingDesc(e.target.value)}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult\" ? true : false}\r\n                ></CFormTextarea>\r\n                {errors.smokingDesc && (\r\n                  <div className=\"text-danger\">{errors.smokingDesc}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4}>\r\n          <p className=\"radio-label\">Alcohol</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"alcoholYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"alcohol\"\r\n                checked={alcoholStatus === \"yes\"}\r\n                onChange={handleAlcoholStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"alcoholNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"alcohol\"\r\n                checked={alcoholStatus === \"no\"}\r\n                onChange={handleAlcoholStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {alcoholStatus === \"yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Alcohol details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  defaultValue={alcoholDesc}\r\n                  onChange={(e) => setAlcoholDesc(e.target.value)}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult\" ? true : false}\r\n                ></CFormTextarea>\r\n                {errors.alcoholDesc && (\r\n                  <div className=\"text-danger\">{errors.alcoholDesc}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4}>\r\n          <p className=\"radio-label\">Drugs</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"drugsYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"drugs\"\r\n                checked={drugStatus === \"yes\"}\r\n                onChange={handleDrugStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"drugsNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"drugs\"\r\n                checked={drugStatus === \"no\"}\r\n                onChange={handleDrugStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {drugStatus === \"yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Drugs details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  defaultValue={drugDesc}\r\n                  onChange={(e) => setDrugDesc(e.target.value)}\r\n                  // text=\"Must be 4-20 words long.\"\r\n                  disabled={from === \"Consult\" ? true : false}\r\n                ></CFormTextarea>\r\n                {errors.drugDesc && (\r\n                  <div className=\"text-danger\">{errors.drugDesc}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n      {from !== \"Consult\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton onClick={onSubmit}>\r\n              {defaultValues?.id !== undefined ? \"UPDATE\" : \"ADD\"}\r\n            </PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedHistoryForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedHistoryForm from \"./MedHistoryForm\";\r\nimport MedicalHistoryTable from \"../../../../../../Tables/Subjective/MedicalHistoryTable\";\r\nimport SocialHistoryTable from \"../../../../../../Tables/Subjective/SocialHistoryTable\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\n\r\nconst SocialHistory = ({ from, back }) => {\r\n  const { get, post, clearCache, patch, del, loading } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [socialList, setSocialList] = useState({});\r\n  const Data = {\r\n    id: 1,\r\n    smoking: \"No\",\r\n    alcohol: \"No\",\r\n    drugs: \"No\",\r\n  };\r\n\r\n  const getSocialLists = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHistories?slug=social-history&user_id=${data?.user_id}&limit=1&page=1&order_by=id&dir=2` //${data?.user_id}\r\n      );\r\n      const listData = response?.data?.patient_histories[0]; //\r\n      setSocialList(listData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [data?.user_id, get]);\r\n\r\n  const socialEdit = async (answerDatas, selectedId) => {\r\n    try {\r\n      const url = `resource/patientHistories/${selectedId}`; // Replace with your API endpoint\r\n      const body = {\r\n        values: answerDatas,\r\n        patient_id: data?.user_id, //data?.user_id\r\n        slug: \"social-history\",\r\n      };\r\n      await patch(url, body);\r\n      clearCache();\r\n      await getSocialLists();\r\n      toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  const socialAdd = async (answerDatas) => {\r\n    try {\r\n      const url = `resource/patientHistories`; // Replace with your API endpoint\r\n      const body = {\r\n        values: answerDatas,\r\n        patient_id: data?.user_id, //data?.user_id\r\n        slug: \"social-history\",\r\n      };\r\n      await post(url, body);\r\n      clearCache();\r\n      await getSocialLists();\r\n      toast.success(\"Added successfully\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getSocialLists();\r\n  }, [getSocialLists]);\r\n  return (\r\n    <>\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          {!loading && (\r\n            <MedHistoryForm\r\n              back={back}\r\n              defaultValues={socialList}\r\n              from={from}\r\n              socialAdd={socialAdd}\r\n              socialEdit={socialEdit}\r\n            />\r\n          )}\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialHistory;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./ICDDrop.css\"; // Make sure to create or update this CSS file\r\n\r\nconst ICDDrop = ({ options, defaultValue, getSelectedValue, icdKey }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(defaultValue || \"\");\r\n  const [filteredOptions, setFilteredOptions] = useState(options);\r\n  const [selectedOption, setSelectedOption] = useState(\r\n    defaultValue || options[0] || \"Select\"\r\n  );\r\n  const dropdownRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setFilteredOptions(\r\n      // options?.filter((option) =>\r\n      //   option?.name?.toLowerCase()?.includes(searchTerm?.toLowerCase())\r\n      // )\r\n      options\r\n    );\r\n  }, [searchTerm, options]);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    setSelectedOption(option);\r\n    setSearchTerm(option?.name || \"\"); // Set searchTerm to the selected option's name\r\n    setIsOpen(false); // Close the dropdown after selecting an option\r\n    getSelectedValue(option);\r\n  };\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    icdKey(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Attach the event listener for clicks outside\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    // Cleanup event listener on component unmount\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dropdown-container\" ref={dropdownRef}>\r\n      <div className=\"dropdown-header-1\" onClick={toggleDropdown}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={searchTerm} // Use searchTerm for the value of the input\r\n          onChange={handleSearchChange}\r\n          className=\"dropdown-search-input\"\r\n          style={{ outline: \"none\", border: \"none\" }}\r\n        />\r\n        <span className={`arrow ${isOpen ? \"open\" : \"\"}`}></span>\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"dropdown-body\">\r\n          <ul className=\"dropdown-list\">\r\n            {filteredOptions?.length > 0 ? (\r\n              filteredOptions?.map((option, index) => (\r\n                <li key={index} onClick={() => handleOptionClick(option)}>\r\n                  {option?.slug ?? \"\"} - {option?.name}\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <li>No results found</li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ICDDrop;\r\n","import { CCol, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport SearchInput from \"../../../../../../Input/SearchInput\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ICDDrop from \"../../../../../../Dropdown/ICDDrop\";\r\nimport { getCurrentTime } from \"../../../../../../../Utils/dateUtils\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\n\r\nconst SurgicalForm = ({ back, defaultValues, surgicalAdd, surgicalEdit }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const { get, post, clearCache, patch, del, loading } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [surgeryDetails, setSurgeryDetails] = useState([]);\r\n  const [surgerykey, setSurgeryKey] = useState(\r\n    defaultValues?.values?.surgical_name?.name || \"\"\r\n  );\r\n  const [surgeryName, setSurgeryName] = useState(\r\n    defaultValues?.values?.surgical_name || {}\r\n  );\r\n\r\n  const [reasonDetails, setReasonDetails] = useState([]);\r\n  const [reasonkey, setReasonKey] = useState(\r\n    defaultValues?.values?.pre_surgery_diagnosis?.name || \"\"\r\n  );\r\n  const [reasonName, setReasonName] = useState(\r\n    defaultValues?.values?.pre_surgery_diagnosis || {}\r\n  );\r\n\r\n  const [icd10, setIcd10] = useState([]);\r\n  const [icdkey, setIcdKey] = useState(defaultValues?.values?.icd?.name || \"\");\r\n  const [icd, setIcd] = useState(defaultValues?.values?.icd || {});\r\n\r\n  const [notes, setNotes] = useState(\r\n    defaultValues?.values?.pre_surgery_notes || \"\"\r\n  );\r\n  const [hospital, setHospital] = useState(\r\n    defaultValues?.values?.hospital_name || \"\"\r\n  );\r\n  const [refby, setRefby] = useState(\r\n    defaultValues?.values?.prescribed_by || \"\"\r\n  );\r\n  const [performby, setPerformby] = useState(\r\n    defaultValues?.values?.surgery_done_by || \"\"\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultValues?.values?.surgery_date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultValues?.values?.surgery_time || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const getSelectedGravida = (data) => {\r\n    setIcd(data);\r\n  };\r\n\r\n  const getSurgeryName = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/masters?slug=procedure&searchkey=${surgerykey}&limit=50&country=undefined`\r\n      );\r\n      const listData = response?.data?.masters; //\r\n      setSurgeryDetails(listData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get, surgerykey]);\r\n  const getSelectedData = (data) => {\r\n    setSurgeryName(data);\r\n  };\r\n\r\n  const getSurgeryReasons = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/masters?slug=condition&searchkey=${reasonkey}&limit=50&country=undefined`\r\n      );\r\n      const listData = response?.data?.masters; //\r\n      setReasonDetails(listData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get, reasonkey]);\r\n\r\n  const getSelectedReasonData = (data) => {\r\n    setReasonName(data);\r\n  };\r\n\r\n  const getICDCode = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/masters?slug=icd&searchkey=${icdkey}&limit=50&country=undefined`\r\n      );\r\n      const listData = response?.data?.masters; //\r\n      setIcd10(listData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get, icdkey]);\r\n\r\n  useEffect(() => {\r\n    getICDCode();\r\n  }, [getICDCode]);\r\n\r\n  useEffect(() => {\r\n    getSurgeryReasons();\r\n  }, [getSurgeryReasons]);\r\n  useEffect(() => {\r\n    getSurgeryName();\r\n  }, [getSurgeryName]);\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!selectedDate) newErrors.date = \"Date is required.\";\r\n    if (!selectedTime) newErrors.time = \"Time is required.\";\r\n    if (!surgeryName || !surgeryName?.name)\r\n      newErrors.surgeryName = \"Surgery Name is required.\";\r\n    if (!reasonName || !reasonName?.name)\r\n      newErrors.reasonName = \"Surgery Reason is required.\";\r\n    // if (!icd || !icd?.name) newErrors.icd = \"ICD Code is required.\";\r\n    if (!hospital) newErrors.hospital = \"Hospital is required.\";\r\n    if (!performby) newErrors.performby = \"Performed by Doctor is required.\";\r\n\r\n    setErrors(newErrors);\r\n\r\n    // Return false if there are errors\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const values = {\r\n      icd: icd,\r\n      hospital_name: hospital,\r\n      pre_surgery_notes: notes, // pass the notes in this field\r\n      post_operative_problems: \"\",\r\n      surgery_date: format(selectedDate, \"yyyy-MM-dd\"),\r\n      surgery_time: format(selectedTime, \"HH:mm\"),\r\n      surgical_name: surgeryName,\r\n      pre_surgery_diagnosis: reasonName,\r\n      prescribed_by: refby,\r\n      surgery_done_by: performby,\r\n    };\r\n    if (validateForm()) {\r\n      if (defaultValues?.id === undefined) {\r\n        surgicalAdd(values);\r\n      }\r\n      if (defaultValues?.id !== undefined) {\r\n        surgicalEdit(values, defaultValues?.id);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n            {errors.date && <div className=\"text-danger\">{errors.date}</div>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeCaption=\"Time\"\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n            {errors.date && <div className=\"text-danger\">{errors.date}</div>}\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Surgery Name *\r\n              </label>\r\n              <SearchInput\r\n                data={surgeryDetails}\r\n                setSurgeryKey={setSurgeryKey}\r\n                getSelectedData={getSelectedData}\r\n                defaultkey={surgerykey}\r\n              />\r\n              {errors.surgeryName && (\r\n                <div className=\"text-danger\">{errors.surgeryName}</div>\r\n              )}\r\n              {/* <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  // defaultValue={gravidaoptions[findgravidaIndex]}\r\n                /> */}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Surgery Reason *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              /> */}\r\n              <SearchInput\r\n                data={reasonDetails}\r\n                setSurgeryKey={setReasonKey}\r\n                getSelectedData={getSelectedReasonData}\r\n                defaultkey={reasonkey}\r\n              />\r\n              {errors.reasonName && (\r\n                <div className=\"text-danger\">{errors.reasonName}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code\r\n              </label>\r\n\r\n              <div\r\n              // className=\"w-100\"\r\n              // style={{\r\n              //   border: \"1px solid #17171D33\",\r\n              //   borderRadius: \"5px\",\r\n              // }}\r\n              >\r\n                <ICDDrop\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={icd10}\r\n                  defaultValue={icdkey}\r\n                  icdKey={setIcdKey}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Performed by Doctor *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={performby}\r\n                onChange={(e) => setPerformby(e.target.value)}\r\n              />\r\n              {errors.performby && (\r\n                <div className=\"text-danger\">{errors.performby}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Referred by Doctor\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={refby}\r\n                onChange={(e) => setRefby(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Hospital *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={hospital}\r\n                onChange={(e) => setHospital(e.target.value)}\r\n              />\r\n              {errors.hospital && (\r\n                <div className=\"text-danger\">{errors.hospital}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                id=\"exampleFormControlTextarea1\"\r\n                // label=\"Example textarea\"\r\n                defaultValue={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n                rows={3}\r\n              ></CFormTextarea>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={onSubmit}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport { getSerialNumber } from \"../../../Utils/commonUtils\";\r\n\r\nconst SurgicalTable = ({\r\n  columns,\r\n  rowData,\r\n  getselectedData,\r\n  from,\r\n  itemsPerPage,\r\n  currentPage,\r\n}) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.length <= 0 ? (\r\n            <tr>\r\n              <td colSpan={columns.length} className=\"no-data-message\">\r\n                No data available\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            rowData?.map((dt, i) => (\r\n              <CTableRow key={i}>\r\n                <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                    <span className=\"fs-16 fw-500\">\r\n                      {getSerialNumber(itemsPerPage, currentPage, i)}\r\n                    </span>\r\n                  </div>\r\n                </CTableHeaderCell>\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                    <span className=\"fs-16 fw-500\">\r\n                      {dt?.values?.surgery_date\r\n                        ?.split(\" \")[0]\r\n                        .split(\"-\")\r\n                        .reverse()\r\n                        .join(\"-\")}\r\n                    </span>\r\n                  </div>\r\n                </CTableDataCell>\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                    <span className=\"fs-16 fw-500\">\r\n                      {dt?.values?.surgical_name?.name}\r\n                    </span>\r\n                  </div>\r\n                </CTableDataCell>\r\n\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex flex-column align-items-center\">\r\n                    <span>{dt?.values?.icd?.slug}</span>\r\n                  </div>\r\n                </CTableDataCell>\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex flex-column align-items-center\">\r\n                    <span>{dt?.values?.surgery_done_by}</span>\r\n                  </div>\r\n                </CTableDataCell>\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex flex-column align-items-center\">\r\n                    <span>{dt?.values?.hospital_name}</span>\r\n                  </div>\r\n                </CTableDataCell>\r\n\r\n                {from !== \"Consult\" && (\r\n                  <CTableDataCell style={{ height: \"10px\" }}>\r\n                    <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                      <div\r\n                        style={{\r\n                          width: \"50%\",\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.EditPencil}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"edit\")}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          width: \"50%\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-start\",\r\n                        }}\r\n                      >\r\n                        <img\r\n                          alt=\"delete\"\r\n                          src={Assets?.Delete}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"delete\")}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CTableDataCell>\r\n                )}\r\n              </CTableRow>\r\n            ))\r\n          )}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SurgicalForm from \"./SurgicalForm\";\r\nimport SurgicalTable from \"../../../../../../Tables/Subjective/SurgicalTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst SurgicalHistory = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Surgery Name\" },\r\n    { id: 4, label: \" ICD Code\" },\r\n    { id: 5, label: \"Performed by\" },\r\n    { id: 5, label: \"Hospital\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const { get, post, clearCache, patch, del, loading } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n  const [surgicalDatas, setSurgicalDatas] = useState([]);\r\n  const [surgicalPagi, setSurgicalPagi] = useState({});\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n  };\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const getHistoryLists = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHistories?limit=10&page=1&from=${startDate ?? \"\"}&to=${\r\n          endDate ?? \"\"\r\n        }&order_by=values-%3Esurgery_date&dir=2&user_id=${\r\n          data?.user_id\r\n        }&slug=surgical-history&searchkey=${searchValue ?? \"\"}`\r\n      );\r\n      const listData = response?.data?.patient_histories; //\r\n      setSurgicalDatas(listData);\r\n      setSurgicalPagi(response?.data?.pagination);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get]);\r\n  const surgicalEdit = async (answerDatas, selectedId) => {\r\n    try {\r\n      const url = `resource/patientHistories/${selectedId}`; // Replace with your API endpoint\r\n      const body = {\r\n        values: answerDatas,\r\n        patient_id: data?.user_id, //data?.user_id\r\n        slug: \"surgical-history\",\r\n      };\r\n      await patch(url, body);\r\n      clearCache();\r\n      await getHistoryLists();\r\n      setAddFormView(false);\r\n      toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  const surgicalAdd = async (answerDatas) => {\r\n    try {\r\n      const url = `resource/patientHistories`; // Replace with your API endpoint\r\n      const body = {\r\n        values: answerDatas,\r\n        patient_id: data?.user_id, //data?.user_id\r\n        slug: \"surgical-history\",\r\n      };\r\n      await post(url, body);\r\n      clearCache();\r\n      await getHistoryLists();\r\n      toast.success(\"Added successfully\");\r\n      setAddFormView(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  const deleteMedicalLists = async () => {\r\n    try {\r\n      const response = await del(\r\n        `resource/patientHistories/${selectedData?.id}`\r\n      );\r\n\r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        await getHistoryLists();\r\n        toast.success(\"Deleted successfully\");\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getHistoryLists();\r\n  }, [getHistoryLists]);\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch getFilterValues={getFilterValues} />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                {/* <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div> */}\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <SurgicalTable\r\n              rowData={surgicalDatas}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n              currentPage={currentPage || 1}\r\n              itemsPerPage={itemsPerPage || 5}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={surgicalPagi?.total || 0}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <SurgicalForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              surgicalAdd={surgicalAdd}\r\n              surgicalEdit={surgicalEdit}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => deleteMedicalLists()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalHistory;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport { getSerialNumber } from \"../../../Utils/commonUtils\";\r\n\r\nconst MedicationTable = ({ columns, rowData, getselectedData, from,itemsPerPage,currentPage }) => {\r\n\r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                {getSerialNumber(itemsPerPage, currentPage, i)}\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100 flex-column\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.name?.name ? dt?.values?.name?.name : \"-\" }</span>\r\n                  <small>\r\n                    {dt?.values?.strength ? dt?.values?.strength : \"-\"} {dt?.values?.strength_measurement ? dt?.values?.strength_measurement : \"-\"} {dt?.values?.dosage ? dt?.values?.dosage : \"-\"}\r\n                  </small>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">\r\n                    {dt?.values?.m ? dt?.values?.m : \"-\"} | {dt?.values?.a}  | {dt?.values?.e} | {dt?.values?.n}\r\n                  </span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.food_times ? dt?.values?.food_times : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.quantity ? dt?.values?.quantity : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.start_date ? dt?.values?.start_date : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\"> {dt?.values?.status ? dt?.values?.status : \"-\"} </span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicationForm from \"./MedicationForm\";\r\nimport MedicationTable from \"../../../../../../Tables/Subjective/MedicationTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\n\r\nconst Medication = ({ from }) => {\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Medication Name\" },\r\n    // { id: 3, label: \"Strength\" },\r\n    // { id: 4, label: \" strength measurement\" },\r\n    // { id: 5, label: \"dosage \" },\r\n    { id: 6, label: \"M | A | E | N \" },\r\n    { id: 7, label: \"BF/AF\" },\r\n    { id: 8, label: \"Quantity\" },\r\n    { id: 9, label: \" start date\" },\r\n    { id: 10, label: \"Status\" },\r\n    { id: 11, label: \"ACTIONS\" },\r\n  ];\r\n\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"bf\",\r\n  //     m: 0,\r\n  //     a: 0.5,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 6,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 7,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 8,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 9,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 10,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  // ];\r\n\r\n\r\n  const { loading, error, get, del, clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n\r\n  };\r\n\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      console.log(\"Add Clicked\")\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      console.log(\"Delete Clicked\")\r\n      setId(id)\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const fetchMedication = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHealth?limit=${itemsPerPage}&page=${currentPage}&from=${startDate ?? \"\"}&to=${endDate ?? \"\"}&searchkey=${searchValue ?? \"\"}&order_by=values-%3Estart_date&dir=2&user_id=10&slug=medicine&slug_array=`\r\n      );\r\n      if (response.code === 200) {\r\n        setRowData(response?.data?.patient_healths);\r\n        setPagination(response?.data?.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage, startDate, endDate, searchValue]);\r\n\r\n  useEffect(() => {\r\n    fetchMedication();\r\n  }, [fetchMedication]);\r\n\r\n  // Delte Signs Symptoms\r\n  const deleteMedication = async () => {\r\n    try {\r\n      const response = await del(`resource/patientHealth/${id}`);\r\n\r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        fetchMedication();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateRangePicker getFilterValues={getFilterValues} />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <MedicationTable\r\n              rowData={rowData}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n              currentPage={currentPage || 1}\r\n              itemsPerPage={itemsPerPage || 5}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={pagination?.total}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MedicationForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              setAddFormView={setAddFormView}\r\n              fetchMedication={fetchMedication}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => deleteMedication()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Medication;\r\n","import { CCol, CFormCheck, CFormSelect, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../../Utils/dateUtils\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport {\r\n  findItemIndex,\r\n  getFileTypeFromMime,\r\n  openFile,\r\n} from \"../../../../../../../Utils/commonUtils\";\r\n\r\n\r\nconst MedicationForm = ({ back, setAddFormView, fetchMedication, defaultValues }) => {\r\n\r\n\r\n\r\n  const { loading, error, get, post, clearCache, patch } = useApi();\r\n  const [selectedStartDate, setSelectedStartDate] = useState(null);\r\n  const [selectedEndDate, setSelectedEndDate] = useState(null);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    medicine_type: defaultValues?.values?.medicine_type || \"\",\r\n    medicine_name: defaultValues?.values?.medicine_name || \"\",\r\n    dosage: defaultValues?.values?.dosage || \"\",\r\n    strength : defaultValues?.values?.strength  || \"\",\r\n    strength_measurement: defaultValues?.values?.strength_measurement || \"\",\r\n    total_qty: defaultValues?.values?.total_qty || \"\",\r\n    route_administration: defaultValues?.values?.route_administration || \"\",\r\n    no_of_days: defaultValues?.values?.no_of_days || \"\",\r\n    m: defaultValues?.values?.m || \"\",\r\n    a: defaultValues?.values?.a || \"\",\r\n    e: defaultValues?.values?.e || \"\",\r\n    n: defaultValues?.values?.n || \"\",\r\n    medicine_taken: defaultValues?.values?.medicine_taken || \"\",\r\n    notes: defaultValues?.values?.notes || \"\",\r\n    status: defaultValues?.values?.status || \"\",\r\n\r\n\r\n\r\n  });\r\n  const [location, setLocation] = useState([defaultValues?.values?.locationy || \"\"]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n\r\n  useEffect(() => {\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0);\r\n    }\r\n\r\n    setSelectedStartDate(date);\r\n    setSelectedEndDate(date);\r\n    setSelectedTime(date);\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  // Separate handlers for start and end date changes\r\n  const handleStartDateChange = (date) => {\r\n    setSelectedStartDate(date);\r\n    if (date) {\r\n      setSelectedTime(date);\r\n    }\r\n  };\r\n\r\n  const handleEndDateChange = (date) => {\r\n    setSelectedEndDate(date);\r\n    if (date) {\r\n      setSelectedTime(date);\r\n    }\r\n  };\r\n\r\n  // Function to handle time change\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedStartDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0);\r\n\r\n      setSelectedStartDate(updatedDateTime);\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const options = [\"Taking\", \"Not Taking\", \"Discontinued\", \"Status Unknown\"];\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const options1 = [\"Brand\", \"Generic\"];\r\n   // Function to update symptoms\r\n   const getSelectedValue1 = (data) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      symptoms: data,\r\n    }));\r\n  };\r\n\r\n  const options2 = [\r\n    \"Tablet\",\r\n    \"Chewable tablet\",\r\n    \"Sublingual tablet\",\r\n    \"Buccal tablet\",\r\n    \"Capsule\",\r\n    \"Hard capsule\",\r\n    \"Soft gelatin capsule\",\r\n    \"Powder\",\r\n    \"Oral powder\",\r\n    \"Topical powder\",\r\n    \"Liquid\",\r\n    \"Syrup\",\r\n    \"Elixir\",\r\n    \"Suspension\",\r\n    \"Solution\",\r\n    \"Tincture\",\r\n    \"Ointment\",\r\n    \"Cream\",\r\n    \"Gel\",\r\n    \"Paste\",\r\n    \"Suppository\",\r\n    \"Patch\",\r\n    \"Inhaler\",\r\n    \"Metered-dose inhaler (MDI)\",\r\n    \"Dry powder inhaler (DPI)\",\r\n    \"Nasal Spray\",\r\n    \"Eye Drop\",\r\n    \"Ear Drop\",\r\n    \"Intravenous (IV) solution\",\r\n    \"Intramuscular (IM) injection\",\r\n    \"Subcutaneous (SC) injection\",\r\n    \"Intradermal (ID) injection\",\r\n    \"Implant\",\r\n  ];\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedStartDate) {\r\n      newErrors.date = \" Start Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedEndDate) {\r\n      newErrors.date = \"End Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.medicine_type) {\r\n      newErrors.medicine_type = \"Medication Type is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.medicine_name) {\r\n      newErrors.medicine_name = \"Medication Name is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.dosage) {\r\n      newErrors.dosage = \"Dosage is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.strength) {\r\n      newErrors.strength = \"Strength is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.strength_measurement) {\r\n      newErrors.strength_measurement = \"Strength Measurement is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.total_qty) {\r\n      newErrors.total_qty = \"Quantity is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.route_administration) {\r\n      newErrors.route_administration = \"Administration is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.no_of_days) {\r\n      newErrors.no_of_days = \"Number of days is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.status) {\r\n      newErrors.status = \"Status is required.\";\r\n      isValid = false;\r\n    }\r\n\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n\r\n  const onSubmit = () => {\r\n    console.log('clicked checking')\r\n    if (validate()) {\r\n      if (defaultValues.id !== undefined) {\r\n        console.log(\"Edit clicked\");\r\n         editMedication()\r\n\r\n      }\r\n      if (defaultValues.id === undefined) {\r\n        console.log(\"Add clicked\");\r\n         addMedication();\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const addMedication = async () => {\r\n\r\n    try {\r\n      const body = {\r\n\r\n        slug: \"prescription\",\r\n        patient_id: \"10\",\r\n       \r\n        values: {\r\n          start_date: format(selectedStartDate, \"dd-MM-yyyy\"),\r\n          end_date: format(selectedEndDate, \"dd-MM-yyyy\"),\r\n          dosage: formData.dosage,\r\n          strength: formData.strength,\r\n          strength_measurement: formData.strength_measurement,\r\n          total_qty: formData.total_qty,\r\n          route_administration: formData.route_administration,\r\n          no_of_days: formData.no_of_days,\r\n          m: formData.m,\r\n          a: formData.a,\r\n          e: formData.e,\r\n          n: formData.n,\r\n          medicine_taken: formData.medicine_taken,\r\n          notes: formData.notes,\r\n          status: formData.status\r\n        }\r\n      };\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/patientHealth`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchMedication();\r\n        setAddFormView(false);\r\n        toast.success(\"Added successfully\");\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const editMedication = async () => {\r\n    try {\r\n     \r\n      const body = {\r\n\r\n        slug: \"prescription\",\r\n        patient_id: \"10\",\r\n       \r\n        values: {\r\n          start_date: format(selectedStartDate, \"dd-MM-yyyy\"),\r\n          end_date: format(selectedEndDate, \"dd-MM-yyyy\"),\r\n          dosage: formData.dosage,\r\n          strength: formData.strength,\r\n          strength_measurement: formData.strength_measurement,\r\n          total_qty: formData.total_qty,\r\n          route_administration: formData.route_administration,\r\n          no_of_days: formData.no_of_days,\r\n          m: formData.m,\r\n          a: formData.a,\r\n          e: formData.e,\r\n          n: formData.n,\r\n          medicine_taken: formData.medicine_taken,\r\n          notes: formData.notes,\r\n          status: formData.status\r\n        }\r\n      };\r\n      // Use the provided `post` function to send the request\r\n      const response = await patch(`resource/patientHealth/${defaultValues.id}`, body);\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchMedication();\r\n        setAddFormView(false);\r\n        toast.success(\"Updated successfully\");\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Medication Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options1}\r\n                  defaultValue={\r\n                    defaultValues?.values?.type\r\n                      ? options1[findItemIndex(options1, defaultValues?.values?.type)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue1}\r\n                />\r\n              </div>\r\n              {errors.medicine_type && <div className=\"error-text\">{errors.medicine_type}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Medication Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n             {errors.medicine_name && <div className=\"error-text\">{errors.medicine_name}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Dosage *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options2}\r\n                  // defaultValue={options[1]}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n              {errors.dosage && <div className=\"error-text\">{errors.dosage}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Strength *\r\n              </label>\r\n                <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                // value={formData?.duration_days}\r\n                name=\"duration_days\"\r\n                onChange={handleChange}\r\n                maxLength={4}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n               \r\n              />\r\n              {errors.strength && <div className=\"error-text\">{errors.strength}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Strength measurement *\r\n              </label>\r\n              <CFormSelect\r\n                size=\"lg\"\r\n                className=\"mb-3\"\r\n                aria-label=\"Large select example\"\r\n                name=\"strength\"\r\n                defaultValue={'mg'}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"cfu/ml\">\r\n                  Colony forming units per milliliter (cfu/ml)\r\n                </option>\r\n                <option value=\"iu\">International unit (iu) </option>\r\n                <option value=\"meq/ml\">\r\n                  Milliequivalent per liter (meq/ml)\r\n                </option>\r\n                <option value=\"meq\">Milliequivalent(meq)</option>\r\n                <option value=\"Milligram per milliliter\">\r\n                  Milligram per milliliter{\" \"}\r\n                </option>\r\n                <option value=\"mg\">Milligram(mg)</option>{\" \"}\r\n                <option value=\"ml\">milliliter(ml)</option>\r\n                <option value=\"%\">percentage(%) </option>\r\n                <option value=\"unt\">Unit (unt)</option>\r\n                <option value=\"unt/ml\">Unit per milliliter (unt/ml)</option>\r\n                <option value=\"kg\">Kilogram (kg) </option>\r\n                <option value=\"mcg\">Microgram (mcg)</option>\r\n              </CFormSelect>\r\n              {errors.strength_measurement && <div className=\"error-text\">{errors.strength_measurement}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Total Qty / Taken *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                name=\"total_qty\"\r\n                value={formData.total_qty}\r\n                onChange={handleChange}\r\n                maxLength={4}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n              \r\n              />\r\n              {errors.total_qty && <div className=\"error-text\">{errors.total_qty}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Route of administration *\r\n              </label>\r\n              <CFormSelect\r\n                size=\"lg\"\r\n                className=\"mb-3\"\r\n                aria-label=\"Large select example\"\r\n                name=\"strengthMeasurement\"\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Oral\">Oral</option>{\" \"}\r\n                <option value=\"Sublingual\">Sublingual</option>\r\n                <option value=\"Buccal\">Buccal </option>\r\n                <option value=\"Intravenous\">Intravenous </option>\r\n                <option value=\"Intramuscular\">Intramuscular</option>\r\n                <option value=\"Subcutaneous\">Subcutaneous</option>\r\n                <option value=\"Intradermal\">Intradermal</option>\r\n                <option value=\"Topical\">Topical</option>{\" \"}\r\n                <option value=\"Transdermal\">Transdermal</option>\r\n                <option value=\"Ocular\">Ocular </option>\r\n                <option value=\"Otic\">Otic </option>\r\n                <option value=\"Nasal\">Nasal</option>\r\n                <option value=\"Inhalation\">Inhalation</option>\r\n                <option value=\"Rectal\">Rectal</option>\r\n                <option value=\"Vaginal\">Vaginal </option>\r\n                <option value=\"Implant\">Implant </option>\r\n                <option value=\"Intrathecal\">Intrathecal</option>\r\n                <option value=\"Epidural\">Epidural</option>\r\n              </CFormSelect>\r\n              {errors.route_administration && <div className=\"error-text\">{errors.route_administration}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Start Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedStartDate}\r\n                onChange={handleStartDateChange}\r\n                dateFormat=\"MM-dd-yyyy\"\r\n                disabled\r\n              />\r\n               {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                No. of Day(s) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"000\"\r\n                name=\"days\"\r\n                // value={timeTaken}\r\n                onChange={handleChange}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n                \r\n              />\r\n              {errors.no_of_days && <div className=\"error-text\">{errors.no_of_days}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              End Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedEndDate}\r\n                onChange={handleEndDateChange}\r\n                dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n               {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\" style={{ paddingRight: \"0\" }}>\r\n          <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                M\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"m\"\r\n              />\r\n              {errors.m && <div className=\"error-text\">{errors.m}</div>}\r\n            </div>\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                A\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"a\"\r\n              />\r\n              {errors.a && <div className=\"error-text\">{errors.a}</div>}\r\n            </div>\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                E\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"e\"\r\n              />\r\n              {errors.e && <div className=\"error-text\">{errors.e}</div>}\r\n            </div>\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                N\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"n\"\r\n              />\r\n              {errors.n && <div className=\"error-text\">{errors.n}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3} className=\"mb-3\">\r\n          <div className=\"h-100 d-flex align-items-end w-100 justify-content-start\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"inlineCheckbox1\"\r\n                value=\"bf\"\r\n                disabled={\r\n                  defaultValues?.lab_status === \"Prescribed\"\r\n                    ? false\r\n                    : defaultValues?.medicines?.length >= 1\r\n                      ? true\r\n                      : false\r\n                }\r\n                label={\r\n                  <label for=\"validationTooltip01\" class=\"form-label mb-0\">\r\n                    BF\r\n                  </label>\r\n                }\r\n                name=\"food\"\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"inlineCheckbox2\"\r\n                value=\"af\"\r\n                label={\r\n                  <label for=\"validationTooltip01\" class=\"form-label mb-0\">\r\n                    AF\r\n                  </label>\r\n                }\r\n                name=\"food\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={5} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                id=\"exampleFormControlTextarea1\"\r\n                rows={3} >\r\n              </CFormTextarea>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {/* <CCol lg={7} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Reason for medication\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                name=\"reason\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol> */}\r\n        <CCol lg={5} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Status *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[1]}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.status && <div className=\"error-text\">{errors.status}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationForm;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState,useCallback } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { toast } from \"react-toastify\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { duration } from \"moment\";\r\nimport { getCurrentTime } from \"../../../../../../../Utils/dateUtils\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport {\r\n  findItemIndex,\r\n  getFileTypeFromMime,\r\n  openFile,\r\n} from \"../../../../../../../Utils/commonUtils\";\r\nimport SearchInput from \"../../../../../../Input/SearchInput\";\r\n\r\nconst SignsSymptomsForm = ({ back, defaultValues, setAddFormView, fetchSignsSymptoms }) => {\r\n\r\n  const { loading,error, get, post, clearCache, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    //location: defaultValues?.values?.location || \"\",\r\n    duration_days: defaultValues?.values?.duration || \"\",\r\n    symptoms: defaultValues?.values?.symptoms || \"\",\r\n    aggravating_factors: defaultValues?.values?.aggravating_factors || \"\",\r\n    releiving_factors: defaultValues?.values?.releiving_factors || \"\",\r\n    temporal_factors: defaultValues?.values?.temporal_factors || \"\",\r\n    severity: defaultValues?.values?.severity || \"\",\r\n    notes: defaultValues?.values?.notes || \"\",\r\n\r\n  });\r\n  const [locationDetails, setLocationDetails] = useState([]);\r\n  const [locationKey, setLocationKey] = useState(defaultValues?.values?.location || \"\" );\r\n  const [location, setLocation] = useState(defaultValues?.values?.location || {});\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n\r\n  // console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const options = [\r\n    \"Normal\",\r\n    \"Mild\",\r\n    \"Moderate\",\r\n    \"Severe\",\r\n    \"Very Severe\",\r\n    \"Worst\",\r\n  ];\r\n  const options1 = [\"Headache\", \"Fracture\", \"Fever\"];\r\n\r\n  // Function to update symptoms\r\n  const getSelectedValue = (data) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      symptoms: data,\r\n    }));\r\n  };\r\n\r\n  // Function to update severity\r\n  const getSelectedValue1 = (data) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      severity: data,\r\n    }));\r\n  };\r\n\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!location || !location?.name) {\r\n      newErrors.location = \"Location is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.duration_days) {\r\n      newErrors.duration_days = \"Duration is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.symptoms) {\r\n      newErrors.symptoms = \"Symptoms is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.severity) {\r\n      newErrors.severity = \"Severity is required.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n\r\n  const onSubmit = () => {\r\n    console.log('clicked checking')\r\n    if (validate()) {\r\n      if (defaultValues.id !== undefined) {\r\n        console.log(\"Edit clicked\");\r\n        editSymptoms()\r\n\r\n      }\r\n      if (defaultValues.id === undefined) {\r\n        console.log(\"Add clicked\");\r\n        addSymptoms();\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  //api integration of medical conditions list\r\n  const getLocation = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/masters/all?slug=hpi_location&order_by=name&dir=1&searchkey=${locationKey}`\r\n      );\r\n      const listData = response?.data?.masters; //\r\n      setLocationDetails(listData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching card data:\", error);\r\n    }\r\n  }, [get, locationKey]);\r\n\r\n  useEffect(() => {\r\n    getLocation();\r\n  }, [getLocation]);\r\n\r\n  const getSelectedlocation = (data) => {\r\n    setLocation(data);\r\n  };\r\n\r\n  console.log('Locationnnn',location,locationKey)\r\n  const addSymptoms = async () => {\r\n\r\n    try {\r\n      const body = {\r\n\r\n        slug: \"hpi\",\r\n        patient_id: \"261\",\r\n        consult_id: null,\r\n        values: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          location: location?.name,\r\n          duration: formData.duration_days,\r\n          symptoms: formData.symptoms,\r\n          aggravating_factors: formData.aggravating_factors,\r\n          releiving_factors: formData.releiving_factors,\r\n          temporal_factors: formData.temporal_factors,\r\n          severity: formData.severity,\r\n          notes: formData.notes,\r\n          quality: \"\"\r\n        }\r\n      };\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/patientHealth`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchSignsSymptoms();\r\n        setAddFormView(false);\r\n        toast.success(\"Added successfully\");\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const editSymptoms = async () => {\r\n    try {\r\n      const body = {\r\n\r\n        slug: \"hpi\",\r\n        patient_id: \"261\",\r\n        consult_id: null,\r\n        values: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          location: location?.name,\r\n          duration: Number(formData.duration_days),\r\n          symptoms: formData.symptoms,\r\n          aggravating_factors: formData.aggravating_factors,\r\n          releiving_factors: formData.releiving_factors,\r\n          temporal_factors: formData.temporal_factors,\r\n          severity: formData.severity,\r\n          notes: formData.notes,\r\n          quality: \"\"\r\n        }\r\n      };\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await patch(`resource/patientHealth/${defaultValues.id}`, body);\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchSignsSymptoms();\r\n        setAddFormView(false);\r\n        toast.success(\"Updated successfully\");\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={3}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                dateFormat=\"MM-dd-yyyy\"\r\n                disabled\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeCaption=\"Time\"\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3}> \r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative dropdown-container\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Location *\r\n              </label>\r\n              <SearchInput\r\n                data={locationDetails}\r\n                setSurgeryKey={setLocationKey}\r\n                getSelectedData={getSelectedlocation}\r\n                defaultkey={locationKey}\r\n              />\r\n             \r\n              {errors.location && <div className=\"error-text\">{errors.location}</div>}\r\n\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Duration in Days *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                value={formData?.duration_days}\r\n                name=\"duration_days\"\r\n                onChange={handleChange}\r\n                maxLength={4}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n\r\n              />\r\n              {errors.duration_days && <div className=\"error-text\">{errors.duration_days}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Symptoms *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.characteristics}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultValues?.values?.symptoms\r\n                      ? options[findItemIndex(options, defaultValues?.values?.symptoms)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.symptoms && <div className=\"error-text\">{errors.symptoms}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Aggravating factors\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={formData?.aggravating_factors}\r\n                name=\"aggravating_factors\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Relieving factors\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={formData?.releiving_factors}\r\n                name=\"releiving_factors\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Temporal factors\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={formData?.temporal_factors}\r\n                name=\"temporal_factors\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Severity *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options1}\r\n                  defaultValue={\r\n                    defaultValues?.values?.severity\r\n                      ? options1[findItemIndex(options1, defaultValues?.values?.severity)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue1}\r\n                />\r\n              </div>\r\n              {errors.severity && <div className=\"error-text\">{errors.severity}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={formData?.notes}\r\n                name=\"notes\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={() => back()}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignsSymptomsForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport { getSerialNumber } from \"../../../Utils/commonUtils\";\r\n\r\nconst SymtomsTable = ({ columns, rowData, getselectedData, from,itemsPerPage,currentPage }) => {\r\n\r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                {getSerialNumber(itemsPerPage, currentPage, i)}\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {dt?.values?.date ? dt?.values?.date : \"-\"}\r\n                  {\" \"}\r\n                </span>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {dt?.values?.time ? dt?.values?.time : \"-\"}\r\n                </span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.location ? dt?.values?.location : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.values?.symptoms ? dt?.values?.symptoms : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.values?.duration ? dt?.values?.duration : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.aggravating}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.relieving}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.temporal}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.values?.severity ? dt?.values?.severity : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SymtomsTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState,useCallback,useEffect } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SignsSymptomsForm from \"./SignsSymptomsForm\";\r\nimport MedicationOrderTable from \"../../../../../../Tables/MedicationOrderTable\";\r\nimport SymtomsTable from \"../../../../../../Tables/Subjective/SymtomsTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\n\r\nconst SignsSymptoms = ({ from }) => {\r\n  const detailsData = [\r\n    { id: 1, label: \"\" },\r\n    { id: 2, label: \"RX\" },\r\n    { id: 3, label: \"FREQUENCY\" },\r\n    { id: 4, label: \"DURATION\" },\r\n    { id: 5, label: \"QTY/TAKEN\" },\r\n    { id: 6, label: \"ACTIONS​\" },\r\n  ];\r\n\r\n  const detailsValue = [\r\n    {\r\n      id: 1,\r\n      name: \"Prescribed\",\r\n      rx: \"Medicine 1\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Alternative\",\r\n      rx: \"Medicine 2\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n  ];\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"LOCATION\" },\r\n    { id: 5, label: \"Symptoms\" },\r\n    { id: 4, label: \"DURATION IN DAYS\" },\r\n    { id: 6, label: \"Severity\" },\r\n    // { id: 10, label: \"Notes\" },\r\n    { id: 6, label: \"Actions\" },\r\n  ];\r\n\r\n\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     onset: \"2024-07-15 03:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     onset: \"2024-08-15 10:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"150\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Mild\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     onset: \"2024-07-18 20:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"120\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Moderate\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Worst\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 6,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Severe\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 7,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 8,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 9,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 10,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  // ];\r\n\r\n  const { loading, error, get,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n   \r\n  };\r\n \r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };  \r\n\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data,id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id)\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  \r\n  const fetchSignsSymptoms = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHealth?slug=hpi&user_id=261&limit=${itemsPerPage}&page=${currentPage}&dir=2&from=${startDate ?? \"\"}&to=${endDate ?? \"\"}&searchkey=${searchValue ?? \"\"}`\r\n      );\r\n      if (response.code === 200) {\r\n        console.log(response.data.patient_healths);\r\n        setRowData(response.data.patient_healths);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage,startDate,endDate,searchValue]);\r\n\r\n  useEffect(() => {\r\n    fetchSignsSymptoms();\r\n  }, [fetchSignsSymptoms]);\r\n\r\n  // Delte Signs Symptoms\r\n  const deleteSignsSymptoms = async () => {\r\n    try {\r\n      const response = await del(`resource/patientHealth/${id}`);\r\n  \r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        fetchSignsSymptoms();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n              <DateSearch getFilterValues={getFilterValues} />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <SymtomsTable\r\n              rowData={rowData}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n              currentPage={currentPage || 1}\r\n              itemsPerPage={itemsPerPage || 5}\r\n            />\r\n\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={pagination?.total}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <SignsSymptomsForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              setAddFormView={setAddFormView}\r\n              fetchSignsSymptoms={fetchSignsSymptoms}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => deleteSignsSymptoms()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignsSymptoms;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport moment from \"moment\";\r\nimport Form from 'react-bootstrap/Form'; // Import Bootstrap Form component\r\n\r\nconst ExerciseHabitForm = ({ back, defaultValues, setAddFormView, fetchExciseHabit }) => {\r\n  const { loading, error, post, patch, clearCache, get } = useApi();\r\n  const [selectedDate, setSelectedDate] = useState(new Date()); // Set default to current date\r\n  const [selectedTime, setSelectedTime] = useState(new Date());\r\n  const [type, setType] = useState(defaultValues?.details?.act_type || \"\");\r\n  const [patientId, setPatientId] = useState(defaultValues?.details?.patient_id || \"\");\r\n  const [category, setCategory] = useState(defaultValues?.details?.act_catagory || \"activity\");\r\n  const [duration, setDuration] = useState(defaultValues?.details?.act_duration || \"\");\r\n  const [intensity, setIntensity] = useState(defaultValues?.details?.act_intensity || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [dropdownOptions, setDropdownOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (defaultValues?.details) {\r\n      setSelectedDate(parseDate(defaultValues?.details?.act_date) || new Date()); // Set to default today if not provided\r\n      setSelectedTime(parseTime(defaultValues?.details?.act_time) || new Date());\r\n      setType(defaultValues?.details?.act_type || \"\");\r\n      setCategory(defaultValues.details?.act_catagory || \"activity\");\r\n      setDuration(defaultValues.details?.act_duration || \"\");\r\n      setIntensity(defaultValues.details?.act_intensity || \"\");\r\n    }\r\n  }, [defaultValues]);\r\n\r\n  useEffect(() => {\r\n    const fetchDropdownOptions = async () => {\r\n      try {\r\n        const response = await get('resource/masters/all?slug=activity&order_by=id&dir=1');\r\n        console.log(\"Dropdown props:\", { response });\r\n\r\n        if (response.code === 200) {\r\n          const options = response.data.masters\r\n            .filter(item => item.is_active) // Filter out inactive items\r\n            .map(item => ({\r\n              value: item.slug,\r\n              label: item.name\r\n            }));\r\n          setDropdownOptions(options);\r\n        } else {\r\n          console.error(\"Failed to fetch dropdown options:\", response.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching dropdown options:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDropdownOptions();\r\n  }, [get]);\r\n\r\n  const getSelectedValue = (data) => {\r\n    setIntensity(data); // Set the selected intensity\r\n  };\r\n\r\n  const options = [\"High\", \"Moderate\", \"Low\"];\r\n  const findIndex = defaultValues?.act_intensity\r\n    ? options.indexOf(defaultValues?.act_intensity)\r\n    : 0;\r\n\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    return new Date(dateString);\r\n  };\r\n\r\n  const parseTime = (timeString) => {\r\n    if (!timeString) return null;\r\n    const [hours, minutes] = timeString.split(\":\").map(Number);\r\n    const date = new Date();\r\n    date.setHours(hours, minutes, 0, 0);\r\n    return date;\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date || new Date()); // Default to current date if cleared\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    setSelectedTime(time || new Date());\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    setType(value);\r\n  };\r\n\r\n  const addHabits = async () => {\r\n    try {\r\n      const body = {\r\n        details: [{\r\n          patient_id: \"10\",\r\n          act_catagory: category,\r\n          act_date: selectedDate.toISOString(),\r\n          act_time: moment(selectedTime).format(\"HH:mm\"),\r\n          act_type: type,\r\n          act_duration: Number(duration),\r\n          act_intensity: intensity,\r\n          act_intake: \"\",\r\n          unit: \"\",\r\n        }],\r\n      };\r\n\r\n      const response = await post('resource/activity_wellness', body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchExciseHabit();\r\n        setAddFormView(false);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const editDiet = async () => {\r\n    // Formatting the date and time to match the required format\r\n    const formattedDate = selectedDate.toISOString();\r\n    const formattedTime = moment(selectedTime).format(\"HH:mm\");\r\n  \r\n    try {\r\n      const body = {\r\n        act_date: formattedDate,\r\n        act_time: formattedTime,\r\n        act_type: type || defaultValues.details?.act_type,\r\n        act_catagory: category || defaultValues.details?.act_catagory,\r\n        act_duration: Number(duration) || defaultValues.details?.act_duration,\r\n        act_intensity: intensity || defaultValues.details?.act_intensity,\r\n        // Add any additional fields needed here\r\n      };\r\n  \r\n      // Making the PATCH request to update the details\r\n      const response = await patch(`resource/activity_wellness/${defaultValues.id}`, body);\r\n  \r\n      if (response.code === 200) {\r\n        clearCache(); // Clear cache to refresh data\r\n        await fetchExciseHabit(); // Fetch updated data after edit\r\n        setAddFormView(false); // Hide the form after successful edit\r\n      } else {\r\n        console.error(\"Failed to update data:\", response.message); // Error handling\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error); // Error handling for request\r\n    }\r\n  };\r\n  \r\n\r\n  const validate = () => {\r\n    let validationErrors = {};\r\n\r\n    if (!selectedDate) validationErrors.date = \"Date is required.\";\r\n    if (!selectedTime) validationErrors.time = \"Time is required.\";\r\n    if (!type) validationErrors.type = \"Type is required.\";\r\n    if (!duration) validationErrors.duration = \"Duration is required.\";\r\n    if (!intensity) validationErrors.intensity = \"Intensity is required.\";\r\n\r\n    setErrors(validationErrors);\r\n    return Object.keys(validationErrors).length === 0;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultValues?.id) {\r\n        editDiet();\r\n      } else {\r\n        addHabits();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={12}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div style={{ width: \"100%\" }}>\r\n              <div className=\"position-relative\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Date *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    isClearable\r\n                    closeOnScroll={true}\r\n                    wrapperClassName=\"date-picker-wrapper\"\r\n                    dateFormat={DATE_FORMAT}\r\n                  />\r\n                </div>\r\n                {errors.date && <p className=\"text-danger\">{errors.date}</p>}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={selectedTime}\r\n                  onChange={handleTimeChange}\r\n                  showTimeSelect\r\n                  showTimeSelectOnly\r\n                  isClearable\r\n                  closeOnScroll={true}\r\n                  timeIntervals={5}\r\n                  dateFormat=\"h:mm aa\"\r\n                />\r\n              </div>\r\n              {errors.time && <p className=\"text-danger\">{errors.time}</p>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div style={{ width: \"100%\" }}>\r\n              <div className=\"position-relative\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Type *\r\n                </label>\r\n                <div\r\n                  className=\"w-100\"\r\n                  style={{\r\n                    border: \"1px solid #17171D33\",\r\n                    borderRadius: \"5px\",\r\n                  }}\r\n                >\r\n                  {/* Updated Type Dropdown using Form.Select from Bootstrap */}\r\n                  <Form.Select\r\n                    aria-label=\"Select Type\"\r\n                    value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Select Type</option>\r\n                    {dropdownOptions.map((option) => (\r\n                      <option key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </div>\r\n                {errors.type && <p className=\"text-danger\">{errors.type}</p>}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n         \r\n        <CCol lg={3}>\r\n            <div className=\"mb-3\">\r\n              <div className=\"d-flex flex-column\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Duration *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control pad-10\"\r\n                  id=\"validationTooltip01\"\r\n                  placeholder=\"Enter duration\"\r\n                  value={duration}\r\n                  onChange={(e) => setDuration(e.target.value)}\r\n                />\r\n                {errors.duration && <p className=\"text-danger\">{errors.duration}</p>}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n\r\n          <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Intensity *\r\n                  </label>\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                    //  options={options.map((option) => ({ value: option, label: option }))}\r\n                     value={intensity}\r\n                    //  getSelectedValue={getSelectedIntensity}\r\n                      options={options}\r\n                      defaultValue={defaultValues?.act_intensity ? options[findIndex] : null}\r\n                      getSelectedValue={getSelectedValue}\r\n                    />\r\n                  </div>\r\n                  {errors.intensity && <p className=\"text-danger\">{errors.intensity}</p>}\r\n                </div>\r\n              </div>\r\n            \r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExerciseHabitForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useCallback, useEffect } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExerciseHabitTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/ExerciseHabitTable\";\r\nimport ExcerciseHabitForm from \"./ExcerciseHabitForm\";\r\n// import DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ExerciseHabit = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Type\" },\r\n    { label: \"DURATION\" },\r\n    { label: \"INTENSITY\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [pagination, setPagination] = useState({});\r\n  const [rowData, setRowData] = useState([]);\r\n  const [habitData, setHabitData] = useState([]);\r\n  const [rowFluidata, setRowFluiData] = useState([]);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  // const [startDate, setStartDate] = useState(());\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filters, setFilters] = useState(true);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const { loading, error, get, del, clearCache } = useApi();\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return habitData?.slice(startIndex, endIndex);\r\n  };\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    console.log(startDate, endDate, searchValue, \"ghghhghg\");\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n  };\r\n\r\n  const fetchExciseHabit = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/activity_wellness?limit=${itemsPerPage}&page=${currentPage}&from=${\r\n          startDate ?? \"\"\r\n        }&to=${\r\n          endDate ?? \"\"\r\n        }&order_by=act_date&dir=2&act_catagory=activity&user_id=${\r\n          data?.user_id\r\n        }`\r\n      );\r\n      if (response.code === 200) {\r\n        console.log(response?.data?.activity_wellnesses);\r\n        setHabitData(response?.data?.activity_wellnesses);\r\n        setPagination(response?.data?.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage, startDate, endDate]);\r\n  useEffect(() => {\r\n    fetchExciseHabit();\r\n  }, [fetchExciseHabit]);\r\n\r\n  const getselectedData = (data, id, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id);\r\n      detailPage();\r\n    }\r\n  };\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const deleteDiet = async () => {\r\n    try {\r\n      if (id) {\r\n        const response = await del(`resource/activity_wellness/${id}`);\r\n        if (response.code === 200) {\r\n          setDetailView(false);\r\n          clearCache();\r\n          fetchExciseHabit();\r\n        } else {\r\n          console.error(\"Failed to delete data:\", response.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <ExerciseHabitTable\r\n          habitData={habitData}\r\n          columns={columnData}\r\n          getselectedData={getselectedData}\r\n          from={from}\r\n        />\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch getFilterValues={getFilterValues} />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  {/* <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div> */}\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <ExerciseHabitTable\r\n                  habitData={habitData}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                  from={from}\r\n                />\r\n\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={pagination?.total || 0}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ExcerciseHabitForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  setAddFormView={setAddFormView}\r\n                  fetchExciseHabit={fetchExciseHabit}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={deleteDiet}>Yes</PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExerciseHabit;\r\n","import { CCol, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { format } from \"date-fns\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst MoodForm = ({ back, defaultValues, fetchMood, setAddFormView }) => {\r\n    const { loading, error, post, patch, clearCache, get } = useApi();\r\n    const [date, setDate] = useState(null);\r\n    const [selectedDate, setSelectedDate] = useState(new Date()); // Set default to current date\r\n    const [selectedTime, setSelectedTime] = useState(new Date());\r\n    const [typeMood, setTypeMood] = useState(defaultValues?.details?.act_type || \"\");\r\n    const [patientId, setPatientId] = useState(defaultValues?.details?.patient_id || \"\");\r\n    const [category, setCategory] = useState(defaultValues?.details?.act_catagory || \"mood\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (defaultValues) {\r\n            setSelectedDate(parseDate(defaultValues?.act_date) || new Date());\r\n            setSelectedTime(parseTime(defaultValues.act_time) || new Date());\r\n            setTypeMood(defaultValues.act_type || \"\");\r\n            setCategory(defaultValues?.category);\r\n        }\r\n    }, [defaultValues]);\r\n\r\n    useEffect(() => {\r\n        const parseDateString = (dateString) => {\r\n            const parts = dateString?.split(\" \");\r\n            const datePart = parts[0];\r\n            const timePart = parts[1];\r\n            const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n            const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n            const date = new Date(year, month - 1, day, hours, minutes);\r\n            return date;\r\n        };\r\n\r\n        const defaultDateString = defaultValues?.date;\r\n\r\n        const defaultDate = defaultValues?.date\r\n            ? parseDateString(defaultDateString)\r\n            : new Date();\r\n\r\n        setDate(defaultDate);\r\n    }, [defaultValues]);\r\n\r\n    const parseDate = (dateString) => {\r\n        if (!dateString) return null;\r\n        const [year, month, day] = dateString.split(\"-\").map(Number);\r\n        return new Date(year, month - 1, day);\r\n    };\r\n\r\n    const parseTime = (timeString) => {\r\n        if (!timeString) return null;\r\n        const [hours, minutes] = timeString.split(\":\").map(Number);\r\n        const date = new Date();\r\n        date.setHours(hours, minutes, 0, 0);\r\n        return date;\r\n    };\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date || new Date());\r\n    };\r\n\r\n    const handleTimeChange = (time) => {\r\n        setSelectedTime(time || new Date());\r\n    };\r\n\r\n    const addMood = async () => {\r\n        const formattedDate = format(selectedDate, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\r\n        const formattedTime = moment(selectedTime).format(\"HH:mm\");\r\n        try {\r\n            const body = {\r\n                patient_id: \"10\",\r\n                act_catagory: category,\r\n                act_date: formattedDate,\r\n                act_time: formattedTime,\r\n                act_type: typeMood,\r\n            };\r\n\r\n            const response = await post(`resource/activity_wellness`, body);\r\n\r\n            if (response.code === 201) {\r\n                clearCache();\r\n                await fetchMood();\r\n                setAddFormView(false);\r\n            } else {\r\n                console.error(\"Failed to fetch data:\", response.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    };\r\n\r\n    const editMood = async () => {\r\n        const formattedDate = format(selectedDate, \"yyyy-MM-dd\");\r\n        const formattedTime = moment(selectedTime).format(\"HH:mm\");\r\n        try {\r\n            const body = {\r\n                patient_id: \"10\",\r\n                act_catagory: category,\r\n                act_date: formattedDate,\r\n                act_time: formattedTime,\r\n                act_type: typeMood,\r\n            };\r\n\r\n            const response = await patch(\r\n                `resource/activity_wellness/${defaultValues.id}`,\r\n                body\r\n            );\r\n\r\n            if (response.code === 200) {\r\n                clearCache();\r\n                await fetchMood();\r\n                setAddFormView(false);\r\n            } else {\r\n                console.error(\"Failed to update data:\", response.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error updating data:\", error);\r\n        }\r\n    };\r\n\r\n    const validate = () => {\r\n        const newErrors = {};\r\n        if (!selectedDate) newErrors.date = \"Date is required\";\r\n        if (!selectedTime) newErrors.time = \"Time is required\";\r\n        if (!typeMood) newErrors.typeMood = \"Mood type is required\";\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        if (validate()) {\r\n            if (defaultValues?.id) {\r\n                editMood();\r\n            } else {\r\n                addMood();\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* ... Date and Time Picker Components ... */}\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <div className=\"position-relative\">\r\n                        <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                            Date *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                isClearable\r\n                                closeOnScroll={true}\r\n                                wrapperClassName=\"date-picker-wrapper\"\r\n                                dateFormat={DATE_FORMAT}\r\n                            />\r\n                            {errors.date && <div className=\"text-danger\">{errors.date}</div>}\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div className=\"position-relative\">\r\n                        <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                            Time *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={selectedTime}\r\n                                onChange={handleTimeChange}\r\n                                showTimeSelect\r\n                                showTimeSelectOnly\r\n                                isClearable\r\n                                closeOnScroll={true}\r\n                                timeIntervals={5}\r\n                                dateFormat=\"h:mm aa\"\r\n                            />\r\n                            {errors.time && <div className=\"text-danger\">{errors.time}</div>}\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n            <CRow className=\"mb-3\">\r\n                <p className=\"radio-label\">Type *</p>\r\n                <CCol lg={12}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100\">\r\n                        <div\r\n                            style={{\r\n                                boxSizing: \"border-box\",\r\n                                borderRadius: \"5px\",\r\n                                border: \"1px solid #17171D33\",\r\n                                padding: \"10px\",\r\n                            }}\r\n                        >\r\n                            {[\r\n                                \"Happy\", \"Sad\", \"Angry\", \"Relaxed\", \"Excited\", \r\n                                \"Anxious\", \"Content\", \"Frustrated\", \"Surprised\", \"Confident\"\r\n                            ].map((mood, index) => (\r\n                                <CFormCheck\r\n                                    key={index}\r\n                                    className=\"mb-0\"\r\n                                    inline\r\n                                    type=\"radio\"\r\n                                    id={`inlineCheckbox${index + 1}`}\r\n                                    value={mood.toLowerCase()}\r\n                                    label={<label htmlFor={`inlineCheckbox${index + 1}`} className=\"form-label mb-0\">{mood}</label>}\r\n                                    name=\"mood\"\r\n                                    checked={typeMood === mood}  // Correctly set the checked state\r\n                                    onChange={() => setTypeMood(mood)}  // Update state on change\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n            {/* ... Submit and Cancel Button Components ... */}\r\n            <CRow className=\"mb-3\">\r\n            <CCol xs={3} md={2}>\r\n              <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n            </CCol>\r\n            <CCol xs={3} md={2}>\r\n              <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n            </CCol>\r\n          </CRow>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MoodForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport MoodTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/MoodTable\";\r\nimport MoodForm from \"./MoodForm\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Mood = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Type\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [pagination, setPagination] = useState({});\r\n  const [id, setId] = useState(null);\r\n  const { loading, error, get, del, clearCache } = useApi();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [moodData, setMoodData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filters, setFilters] = useState(true);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    console.log(startDate, endDate, searchValue, \"ghghhghg\");\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n  };\r\n\r\n  const fetchMood = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/activity_wellness?limit=${itemsPerPage}&page=${currentPage}&from=${\r\n          startDate ?? \"\"\r\n        }&to=${\r\n          endDate ?? \"\"\r\n        }&order_by=act_date&dir=2&act_catagory=mood&user_id=${data?.user_id}`\r\n      );\r\n      if (response.code === 200) {\r\n        console.log(response?.data?.activity_wellnesses);\r\n        setMoodData(response?.data?.activity_wellnesses);\r\n        setPagination(response?.data?.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage, startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    fetchMood();\r\n  }, [fetchMood]);\r\n\r\n  const getselectedData = (data, id, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id);\r\n      detailPage();\r\n    }\r\n  };\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const deleteMood = async () => {\r\n    try {\r\n      if (id) {\r\n        const response = await del(`resource/activity_wellness/${id}`);\r\n        if (response.code === 200) {\r\n          setDetailView(false);\r\n          clearCache();\r\n          fetchMood();\r\n        } else {\r\n          console.error(\"Failed to delete data:\", response.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <MoodTable\r\n          // rowData={getCurrentPageItems()}\r\n          moodData={moodData}\r\n          columns={columnData}\r\n          getselectedData={getselectedData}\r\n          from={from}\r\n        />\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch getFilterValues={getFilterValues} />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <MoodTable\r\n                  moodData={moodData}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={pagination?.total || 0}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <MoodForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  setAddFormView={setAddFormView}\r\n                  fetchMood={fetchMood}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={deleteMood}>Yes</PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mood;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst NutritionDietTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.detail?.notes}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NutritionDietTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst NutritionFluidTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data,id, type) => {\r\n\r\n    getselectedData(data,id, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult-Intake\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.act_intake}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult-Intake\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NutritionFluidTable;\r\n","import { CCol, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { format } from \"date-fns\";\r\nimport moment from \"moment\";\r\n\r\nconst DietForm = ({ back, defaultValues, fetchDiet, setAddFormView }) => {\r\n  const [date, setDate] = useState(null);\r\n  const { loading, error, post, patch, clearCache } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(new Date()); \r\n  const [selectedDate, setSelectedDate] = useState(new Date()); \r\n  const [dietType, setDietType] = useState(defaultValues?.act_type || \"\"); // Initialize diet type\r\n  const [notes, setNotes] = useState(defaultValues?.detail?.notes || \"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Initialize the state with default values if available\r\n    if (defaultValues) {\r\n      setSelectedDate(parseDate(defaultValues?.details?.act_date) || new Date());\r\n      setSelectedTime(parseTime(defaultValues.act_time)|| new Date());\r\n      setDietType(defaultValues.act_type || \"\"); // Set the diet type from default values\r\n      setNotes(defaultValues.detail?.notes || \"\"); // Set the notes from the new format\r\n    }\r\n  }, [defaultValues]);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [year, month, day] = dateString.split(\"-\").map(Number);\r\n    return new Date(year, month - 1, day);\r\n  };\r\n\r\n  const parseTime = (timeString) => {\r\n    if (!timeString) return null;\r\n    const [hours, minutes] = timeString.split(\":\").map(Number);\r\n    const date = new Date();\r\n    date.setHours(hours, minutes, 0, 0);\r\n    return date;\r\n  };\r\n\r\n  const options = [\"Veg\", \"Non-Veg\", \"Others\"];\r\n  const findIndex = defaultValues?.act_type\r\n    ? options?.indexOf(defaultValues?.act_type)\r\n    : 0;\r\n\r\n  const getSelectedValue = (data) => {\r\n    setDietType(data); // Set the selected diet type\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date || new Date());\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    setSelectedTime(time || new Date());\r\n  };\r\n\r\n  const addDiet = async () => {\r\n    const formattedDate = format(selectedDate, \"yyyy-MM-dd\"); // Format date to \"YYYY-MM-DD\"\r\n    const formattedTime = moment(selectedTime).format(\"HH:mm\"); // Format time to \"HH:mm\"\r\n    try {\r\n      // Construct the request body in the desired format\r\n      const body = {\r\n        patient_id: \"10\", // Use the appropriate patient ID\r\n        act_catagory: \"diet\",\r\n        act_date: formattedDate,\r\n        act_time: formattedTime,\r\n        act_type: dietType, // Assuming `dietType` is the selected diet type like \"Veg\", \"Non-Veg\", etc.\r\n        detail: {\r\n          notes: notes, // The notes from the form\r\n        },\r\n      };\r\n  \r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/activity_wellness`, body);\r\n  \r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchDiet(); // Refresh the list data here\r\n        setAddFormView(false); // Close the form view\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  \r\n  const editDiet = async () => {\r\n    const formattedDate = format(selectedDate, \"yyyy-MM-dd\"); // Format date to \"YYYY-MM-DD\"\r\n    const formattedTime = moment(selectedTime).format(\"HH:mm\"); // Format time to \"HH:mm\"\r\n    try {\r\n      // Construct the request body in the desired format\r\n      const body = {\r\n        act_date: formattedDate,\r\n        act_time: formattedTime,\r\n        act_type: dietType,\r\n        detail: {\r\n          notes: notes,\r\n        },\r\n      };\r\n  \r\n      // Use the provided `patch` function to send the request\r\n      const response = await patch(`resource/activity_wellness/${defaultValues.id}`, body);\r\n  \r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchDiet(); // Refresh the list data here\r\n        setAddFormView(false); // Close the form view\r\n      } else {\r\n        console.error(\"Failed to update data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  const validate = () => {\r\n    // Add validation logic here if needed\r\n    // Example: Check if all required fields are filled\r\n    let validationErrors = {};\r\n    if (!selectedDate) validationErrors.date = \"Date is required.\";\r\n    if (!selectedTime) validationErrors.time = \"Time is required.\";\r\n    if (!dietType) validationErrors.dietType = \"Diet type is required.\";\r\n    setErrors(validationErrors);\r\n    return Object.keys(validationErrors).length === 0;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultValues?.id) {\r\n        console.log(\"Edit clicked\");\r\n        editDiet(); // Call edit function if id is present\r\n      } else {\r\n        console.log(\"Add clicked\");\r\n        addDiet(); // Call add function if id is not present\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n            {errors.date && <p className=\"text-danger\">{errors.date}</p>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n            {errors.time && <p className=\"text-danger\">{errors.time}</p>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Type of Diet *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={defaultValues?.act_type ? options[findIndex] : null}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.dietType && <p className=\"text-danger\">{errors.dietType}</p>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Add Notes\"\r\n                value={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DietForm;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { format } from \"date-fns\";\r\nimport moment from \"moment\";\r\n\r\nconst FluidIntakeForm = ({ back, defaultValues, setAddFormView, fetchFluid }) => {\r\n  const [date, setDate] = useState(null);\r\n  const { loading, error, post, patch, clearCache } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(new Date()); \r\n  const [selectedDate, setSelectedDate] =  useState(new Date()); \r\n  const [fluidType, setFluidType] = useState(defaultValues?.act_type || \"\");\r\n  const [water, setWater] = useState(\"\");\r\n  const [intake, setIntake] = useState(defaultValues?.act_intake || \"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Initialize the state with default values if available\r\n    if (defaultValues) {\r\n      setSelectedDate(parseDate(defaultValues?.details?.act_date) || new Date());\r\n      setSelectedTime(parseTime(defaultValues.act_time)|| new Date());\r\n      setFluidType(defaultValues.act_type || \"\");\r\n      setWater(defaultValues.act_intake?.water || \"\"); // Set water for add mode\r\n      setIntake(defaultValues.act_intake || \"\"); // Set intake for edit mode\r\n    }\r\n  }, [defaultValues]);\r\n\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [year, month, day] = dateString.split(\"-\").map(Number);\r\n    return new Date(year, month - 1, day);\r\n  };\r\n\r\n  const parseTime = (timeString) => {\r\n    if (!timeString) return null;\r\n    const [hours, minutes] = timeString.split(\":\").map(Number);\r\n    const date = new Date();\r\n    date.setHours(hours, minutes, 0, 0);\r\n    return date;\r\n  };\r\n\r\n  const options = [\r\n    \"Water\", \"Oral Rehydration Solutions\", \"Clear Broth\", \"Milk\",\r\n    \"Fruit Juices\", \"Herbal Teas\", \"Coffee\", \"Tea\", \"Sports Drinks\",\r\n    \"Soft Drinks\", \"Energy Drinks\", \"Coconut Water\", \"Infused Water\",\r\n    \"Soup\", \"Electrolyte Solutions\", \"Alcoholic Beverages\",\r\n  ];\r\n\r\n  const getSelectedValue = (data) => {\r\n    setFluidType(data); // Update the fluid type when selected\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date || new Date());\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    setSelectedTime(time || new Date());\r\n  };\r\n\r\n  const addFluid = async () => {\r\n    const formattedDate = format(selectedDate, \"yyyy-MM-dd\"); // Format date to \"YYYY-MM-DD\"\r\n    const formattedTime = moment(selectedTime).format(\"HH:mm\"); // Format time to \"HH:mm\"\r\n    try {\r\n      const body = {\r\n        patient_id: \"10\", // Use the appropriate patient ID\r\n        act_catagory: \"fluid\",\r\n        act_date: formattedDate,\r\n        act_time: formattedTime,\r\n        actual_value: true, // New field for add\r\n        act_intake: {\r\n          [fluidType.toLowerCase()]: water, // Use fluid type as key\r\n        },\r\n        unit: \"ml\",\r\n      };\r\n\r\n      const response = await post(`resource/activity_wellness`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchFluid(); // Refresh the list data here\r\n        setAddFormView(false); // Close the form view\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const editFluid = async () => {\r\n    const formattedDate = format(selectedDate, \"yyyy-MM-dd\"); // Format date to \"YYYY-MM-DD\"\r\n    const formattedTime = moment(selectedTime).format(\"HH:mm\"); // Format time to \"HH:mm\"\r\n    try {\r\n      const body = {\r\n        patient_id: \"10\",\r\n        act_catagory: \"fluid\",\r\n        act_date: formattedDate,\r\n        act_time: formattedTime,\r\n        act_type: fluidType.toLowerCase(), // Assuming `act_type` is required\r\n        act_intake: intake, // Use intake for editing\r\n        unit: \"ml\",\r\n      };\r\n\r\n      // Use the PATCH function for editing\r\n      const response = await patch(\r\n        `resource/activity_wellness/${defaultValues.id}`, // Use the ID from default values\r\n        body\r\n      );\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchFluid(); // Refresh the list data here\r\n        setAddFormView(false); // Close the form view\r\n      } else {\r\n        console.error(\"Failed to update data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n    if (!selectedDate) newErrors.date = \"Date is required\";\r\n    if (!selectedTime) newErrors.time = \"Time is required\";\r\n    if (!fluidType) newErrors.fluidType = \"Fluid type is required\";\r\n    if (!water && !intake) newErrors.intake = \"Intake is required\"; // Validate based on edit mode\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultValues?.id) {\r\n        console.log(\"Edit clicked\");\r\n        editFluid(); // Call edit function if id is present\r\n      } else {\r\n        console.log(\"Add clicked\");\r\n        addFluid(); // Call add function if id is not present\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"text-danger\">{errors.date}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"text-danger\">{errors.time}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={defaultValues?.act_type || null}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n                {errors.fluidType && <div className=\"text-danger\">{errors.fluidType}</div>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Intake *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={defaultValues?.id ? intake : water} // Adjust based on mode\r\n              onChange={(e) =>\r\n                defaultValues?.id ? setIntake(e.target.value) : setWater(e.target.value)\r\n              }\r\n            />\r\n            {errors.intake && <div className=\"text-danger\">{errors.intake}</div>}\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FluidIntakeForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useCallback, useEffect } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicalTab from \"../../../MedicalTab\";\r\nimport ExerciseHabitTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/ExerciseHabitTable\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport NutritionDietTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/NutritionDietTable\";\r\nimport NutritionFluidTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/NutritionFluidTable\";\r\nimport DietForm from \"./DietForm\";\r\nimport FluidIntakeForm from \"./FluidIntakeForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Nutrition = ({ from }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [pagination, setPagination] = useState({});\r\n  const [rowData, setRowData] = useState([]);\r\n  const [rowFluidata, setRowFluiData] = useState([]);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filters, setFilters] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const { loading, error, get, del, clearCache } = useApi();\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Type of Diet\" },\r\n    { id: 4, label: \"Notes\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     type_of_diet: \"Non-Veg\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     type_of_diet: \"Non-Veg\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     type_of_diet: \"Non-Veg\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  // ];\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    console.log(startDate,endDate,searchValue,\"ghghhghg\")\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n    \r\n  };\r\n\r\n  const fetchDiet = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/activity_wellness?act_catagory=diet&user_id=${data?.user_id}&limit=${itemsPerPage}&page=${currentPage ?? \"\"}&from=${startDate ?? \"\"}&to=${\r\n          endDate ?? \"\"\r\n        }&order_by=act_date&dir=1`\r\n      );\r\n      if (response.code === 200) {\r\n        console.log(response?.data?.activity_wellnesses);\r\n        setRowData(response?.data?.activity_wellnesses);\r\n        setPagination(response?.data?.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage, startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    fetchDiet();\r\n  }, [fetchDiet]);\r\n\r\n  const fetchFluid = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/activity_wellness?&limit=${itemsPerPage}&page=${currentPage}&order_by=act_date&dir=2&act_catagory=fluid&user_id=${data?.user_id}`\r\n      );\r\n      // &from=${startDate}&to=${endDate}&\r\n      if (response.code === 200) {\r\n        console.log(response?.data?.activity_wellnesses);\r\n        setRowFluiData(response?.data?.activity_wellnesses);\r\n        setPagination(response?.data?.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage, startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    fetchFluid();\r\n  }, [fetchFluid]);\r\n\r\n\r\n  const FluidIntakecolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 3, label: \"Date\" },\r\n    { id: 3, label: \"Type\" },\r\n    { id: 4, label: \"INTAKE (ML)\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  // const FluidIntakerowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     type: \"Water\",\r\n  //     intake: \"1500\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     type: \"Water\",\r\n  //     intake: \"1500\",\r\n  //   },\r\n  // ];\r\n\r\n  const tabs = [\r\n    { id: 1, title: \"Diet\" },\r\n    { id: 2, title: \"Fluid Intake\" },\r\n  ];\r\n\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-4\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 1;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  // const getCurrentFluidPageItems = () => {\r\n  //   const startIndex = (currentPage - 1) * itemsPerPage;\r\n  //   const endIndex = startIndex + itemsPerPage;\r\n  //   return FluidIntakerowData?.slice(startIndex, endIndex);\r\n  // };\r\n  const getselectedData = (data,id, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id);\r\n      detailPage();\r\n    }\r\n  };\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n  const deleteDiet = async () => {\r\n    try {\r\n      if (id) {\r\n        const response = await del(`resource/activity_wellness/${id}`);\r\n        if (response.code === 200) {\r\n          setDetailView(false);\r\n          clearCache();\r\n          fetchDiet();\r\n        } else {\r\n          console.error(\"Failed to delete data:\", response.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <NutritionDietTable\r\n            rowData={rowData}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from === \"Consult-Intake\" && (\r\n        <CRow>\r\n          <NutritionFluidTable\r\n            rowData={rowFluidata}\r\n            columns={FluidIntakecolumnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && from !== \"Consult-Intake\" && (\r\n        <>\r\n          <>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"\">\r\n                <MedicalTab\r\n                  tabs={tabs}\r\n                  getCurrentTab={getCurrentTab}\r\n                  defaultTab={ParsedPatientSubMenu - 1}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n            {!addFormView && (\r\n              <>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={8} className=\"\">\r\n                   \r\n                    <DateSearch\r\n                    \r\n                     getFilterValues={getFilterValues}\r\n                    />\r\n                  </CCol>\r\n                  <CCol\r\n                    lg={4}\r\n                    className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                  >\r\n                    <div>\r\n                      <PrimaryButton onClick={() => addFormPage()}>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.Add} alt=\"add\" />\r\n                          <span className=\"fs-16 fw-600\">Add</span>\r\n                        </div>\r\n                      </PrimaryButton>\r\n                    </div>\r\n                    {/* <div>\r\n                      <PrimaryButton onClick={() => addFormPage()}>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                        </div>\r\n                      </PrimaryButton>\r\n                    </div> */}\r\n                  </CCol>\r\n                </CRow>\r\n                <div className=\"mb-2\">\r\n                  {currentTab === 1 && (\r\n                    <>\r\n                      <CRow>\r\n                        <NutritionDietTable\r\n                          rowData={rowData}\r\n                          columns={columnData}\r\n                          getselectedData={getselectedData}\r\n                          from={from}\r\n                        />\r\n                      </CRow>\r\n                      <CRow className=\"mb-3\">\r\n                        <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                          <Pagination\r\n                            currentPage={currentPage}\r\n                            onPageChange={onPageChange}\r\n                            totalItems={pagination?.total}\r\n                            itemsPerPage={itemsPerPage}\r\n                          />\r\n                        </CCol>\r\n                      </CRow>\r\n                    </>\r\n                  )}\r\n                  {currentTab === 2 && (\r\n                    <>\r\n                      <CRow>\r\n                        <NutritionFluidTable\r\n                          rowData={rowFluidata}\r\n                          columns={FluidIntakecolumnData}\r\n                          getselectedData={getselectedData}\r\n                          from={from}\r\n                        />\r\n                      </CRow>\r\n                      <CRow className=\"mb-3\">\r\n                        <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                          <Pagination\r\n                            currentPage={currentPage}\r\n                            onPageChange={onPageChange}\r\n                            totalItems={pagination?.total}\r\n                            itemsPerPage={itemsPerPage}\r\n                          />\r\n                        </CCol>\r\n                      </CRow>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n\r\n          {addFormView && (\r\n            <CRow className=\"mb-2\">\r\n              <CCard className=\"p-2 cursor-default mb-5\">\r\n                <CCardBody className=\"mb-3\">\r\n                  {currentTab === 1 && (\r\n                    <DietForm\r\n                      back={() => {\r\n                        setAddFormView(false);\r\n                        setSelectedData({});\r\n                      }}\r\n                      setAddFormView={setAddFormView}\r\n                      fetchDiet={fetchDiet}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                  {currentTab === 2 && (\r\n                    <FluidIntakeForm\r\n                      back={() => {\r\n                        setAddFormView(false);\r\n                        setSelectedData({});\r\n                      }}\r\n                      setAddFormView={setAddFormView}\r\n                      fetchFluid={fetchFluid}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CRow>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                      <PrimaryButton onClick={deleteDiet}>Yes</PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nutrition;\r\n\r\n","import { CCol, CRow, CFormCheck, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { format, parse } from \"date-fns\";\r\n\r\nconst SexualStatusForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [historySti, setHistorySti] = useState(\"no\");\r\n  const [historySexual, setHistorySexual] = useState(\"no\");\r\n  const [currentSti, setCurrentSti] = useState();\r\n  const [stiNotes, setStiNotes] = useState(\"\");\r\n  const [allStatus, setAllStatus] = useState({});\r\n  const [currentStiNotes, setCurrentStiNotes] = useState(\"\");\r\n  const { loading, error, post, patch, get, clearCache } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [errors, setErrors] = useState(\"\");\r\n\r\n  // Fetch the latest record\r\n  const fetchSexualStatus = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/activity_wellness?act_catagory=sexual-status&user_id=${data?.user_id}&limit=1&page=1&order_by=act_date&dir=1`\r\n      );\r\n      if (response.code === 200) {\r\n        const records = response?.data?.activity_wellnesses[0];\r\n        console.log(records);\r\n        setAllStatus(records);\r\n        setHistorySexual(records?.act_type === \"Active\" ? \"yes\" : \"no\");\r\n        setHistorySti(records?.detail?.is_sti || \"no\");\r\n        const defaultDate = parse(\r\n          records?.detail?.sti?.screen_date,\r\n          DATE_FORMAT,\r\n          new Date()\r\n        );\r\n        setSelectedDate(defaultDate);\r\n        setStiNotes(records?.detail?.sti?.screen_notes);\r\n        setCurrentSti(records?.detail?.sti?.status || \"unknown\");\r\n        setCurrentStiNotes(records?.detail?.sti?.status_notes);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get]);\r\n\r\n  useEffect(() => {\r\n    fetchSexualStatus();\r\n  }, [fetchSexualStatus]);\r\n\r\n  const handleHistoryStiClick = (event) => {\r\n    setHistorySti(event.target.value);\r\n  };\r\n\r\n  const handleHistorySexualClick = (event) => {\r\n    setHistorySexual(event.target.value);\r\n  };\r\n\r\n  const handleCurrentStiClick = (event) => {\r\n    setCurrentSti(event.target.value);\r\n  };\r\n\r\n  const statusEdit = async (selectedId) => {\r\n    try {\r\n      const url = `resource/activity_wellness/${selectedId}`; // Replace with your API endpoint\r\n      const body = {\r\n        patient_id: data?.user_id, //data?.user_id\r\n        act_catagory: \"sexual-status\",\r\n        act_type: historySexual === \"yes\" ? \"Active\" : \"In active\",\r\n        detail: {\r\n          is_sti: historySti,\r\n          sti:\r\n            historySti === \"yes\"\r\n              ? {\r\n                  screen_date: format(selectedDate, DATE_FORMAT),\r\n                  screen_notes: stiNotes,\r\n                  status: currentSti,\r\n                  status_notes:\r\n                    currentSti === \"positive\" ? currentStiNotes : \"\",\r\n                }\r\n              : {},\r\n        },\r\n      };\r\n      await patch(url, body);\r\n      clearCache();\r\n      await fetchSexualStatus();\r\n      toast.success(\"Updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  const statusAdd = async () => {\r\n    try {\r\n      const url = `resource/activity_wellness`; // Replace with your API endpoint\r\n      const body = {\r\n        patient_id: data?.user_id, //data?.user_id\r\n        act_catagory: \"sexual-status\",\r\n        act_type: historySexual === \"yes\" ? \"Active\" : \"In active\",\r\n        detail: {\r\n          is_sti: historySti,\r\n          sti:\r\n            historySti === \"yes\"\r\n              ? {\r\n                  screen_date: format(selectedDate, DATE_FORMAT),\r\n                  screen_notes: stiNotes,\r\n                  status: currentSti,\r\n                  status_notes:\r\n                    currentSti === \"positive\" ? currentStiNotes : \"\",\r\n                }\r\n              : {},\r\n        },\r\n      };\r\n      await post(url, body);\r\n      clearCache();\r\n      await fetchSexualStatus();\r\n      toast.success(\"Added successfully\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  const validation = () => {\r\n    const newErrors = {};\r\n\r\n    if (historySti === \"yes\") {\r\n      if (!selectedDate) {\r\n        newErrors.selectedDate = \"Last STI Screening Date is required.\";\r\n      }\r\n    }\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors); // Set errors to state\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n  const onSubmit = async () => {\r\n    if (validation()) {\r\n      if (allStatus?.id === undefined) {\r\n        await statusAdd();\r\n        setErrors(\"\");\r\n      }\r\n      if (allStatus?.id !== undefined) {\r\n        await statusEdit(allStatus?.id);\r\n        setErrors(\"\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <p className=\"radio-label\">Sexual Activity</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"activityYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"activity\"\r\n                checked={historySexual === \"yes\"}\r\n                onChange={handleHistorySexualClick}\r\n                disabled={from === \"Consult\"}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"activityNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"activity\"\r\n                checked={historySexual === \"no\"}\r\n                onChange={handleHistorySexualClick}\r\n                disabled={from === \"Consult\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol lg={6}>\r\n          <p className=\"radio-label\">History of STI</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"historyYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"sti\"\r\n                checked={historySti === \"yes\"}\r\n                onChange={handleHistoryStiClick}\r\n                disabled={from === \"Consult\"}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"historyNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"sti\"\r\n                checked={historySti === \"no\"}\r\n                onChange={handleHistoryStiClick}\r\n                disabled={from === \"Consult\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      {historySti === \"yes\" && (\r\n        <>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <div className=\"position-relative\">\r\n                <label className=\"form-label\">Last STI Screening Date *</label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={selectedDate}\r\n                    onChange={(date) => setSelectedDate(date)}\r\n                    dateFormat={DATE_FORMAT}\r\n                  />\r\n                </div>\r\n                {errors.selectedDate && (\r\n                  <p className=\"text-danger\">{errors.selectedDate}</p>\r\n                )}\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label className=\"form-label\">STI History Notes</label>\r\n                  <CFormTextarea\r\n                    type=\"text\"\r\n                    className=\"form-control pad-10\"\r\n                    id=\"sti_history_notes\"\r\n                    placeholder=\"Enter\"\r\n                    defaultValue={stiNotes}\r\n                    disabled={from === \"Consult\"}\r\n                    onChange={(e) => setStiNotes(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <p className=\"radio-label\">Current STI Status</p>\r\n              <div className=\"d-flex align-items-end w-100\">\r\n                <div\r\n                  style={{\r\n                    boxSizing: \"border-box\",\r\n                    borderRadius: \"5px\",\r\n                    border: \"1px solid #17171D33\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <CFormCheck\r\n                    className=\"mb-0\"\r\n                    inline\r\n                    type=\"radio\"\r\n                    id=\"statusPositive\"\r\n                    value=\"positive\"\r\n                    label={<label className=\"form-label mb-0\">Positive</label>}\r\n                    name=\"sti_status\"\r\n                    checked={currentSti === \"positive\"}\r\n                    onChange={handleCurrentStiClick}\r\n                    disabled={from === \"Consult\"}\r\n                  />\r\n                  <CFormCheck\r\n                    className=\"mb-0\"\r\n                    inline\r\n                    type=\"radio\"\r\n                    id=\"statusNegative\"\r\n                    value=\"negative\"\r\n                    label={<label className=\"form-label mb-0\">Negative</label>}\r\n                    name=\"sti_status\"\r\n                    checked={currentSti === \"negative\"}\r\n                    onChange={handleCurrentStiClick}\r\n                    disabled={from === \"Consult\"}\r\n                  />\r\n                  <CFormCheck\r\n                    className=\"mb-0\"\r\n                    inline\r\n                    type=\"radio\"\r\n                    id=\"statusUnknown\"\r\n                    value=\"unknown\"\r\n                    label={<label className=\"form-label mb-0\">Unknown</label>}\r\n                    name=\"sti_status\"\r\n                    checked={currentSti === \"unknown\"}\r\n                    onChange={handleCurrentStiClick}\r\n                    disabled={from === \"Consult\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            {currentSti === \"positive\" && (\r\n              <CCol lg={6}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div className=\"position-relative\">\r\n                    <label className=\"form-label\">\r\n                      Current STI Status Notes\r\n                    </label>\r\n                    <CFormTextarea\r\n                      type=\"text\"\r\n                      className=\"form-control pad-10\"\r\n                      id=\"current_sti_notes\"\r\n                      placeholder=\"Enter\"\r\n                      defaultValue={currentStiNotes}\r\n                      disabled={from === \"Consult\"}\r\n                      onChange={(e) => setCurrentStiNotes(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            )}\r\n          </CRow>\r\n        </>\r\n      )}\r\n\r\n      {from !== \"Consult\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton onClick={onSubmit}>\r\n              {allStatus?.id !== undefined ? \"UPDATE\" : \"ADD\"}\r\n            </PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SexualStatusForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport MoodTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/MoodTable\";\r\nimport SexualStatusTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/SexualStatusTable\";\r\nimport SexualStatusForm from \"./SexualStatusForm\";\r\n\r\nconst SexualStatus = ({ back, from }) => {\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <SexualStatusForm  />\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SexualStatus;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst SleepTable = ({ columns, rowData, getselectedData, from ,}) => {\r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.act_duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SleepTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { format } from \"date-fns\";\r\nimport moment from \"moment\";\r\n\r\nconst SleepForm = ({ back, defaultValues, fetchSleepData, setAddFormView }) => {\r\n  const { loading, error, post, patch, clearCache } = useApi();\r\n  const [date, setDate] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date()); // Set default to current date\r\n  const [selectedTime, setSelectedTime] = useState(new Date());\r\n  const [sleepType, setSleepType] = useState(defaultValues?.act_type || \"\");\r\n  const [duration, setDuration] = useState(defaultValues?.act_duration || \"\");\r\n  const [category, setCategory] = useState(defaultValues?.act_catagory || \"sleep\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (defaultValues) {\r\n      setSelectedDate(parseDate(defaultValues?.act_date) || new Date()); // Set to default today if not provided\r\n      setSelectedTime(parseTime(defaultValues?.act_time) || new Date());\r\n      setSleepType(defaultValues?.act_type || \"\");\r\n      setCategory(defaultValues.act_catagory || \"activity\");\r\n      setDuration(defaultValues.act_duration || \"\");\r\n    }\r\n  }, [defaultValues]);\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     const date = new Date(year, month - 1, day, hours, minutes);\r\n  //     return date;\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultValues?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultValues?.date\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setDate(defaultDate);\r\n  // }, [defaultValues]);\r\n\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [year, month, day] = dateString.split(\"-\").map(Number);\r\n    return new Date(year, month - 1, day);\r\n  };\r\n\r\n  const parseTime = (timeString) => {\r\n    if (!timeString) return null;\r\n    const [hours, minutes] = timeString.split(\":\").map(Number);\r\n    const date = new Date();\r\n    date.setHours(hours, minutes, 0, 0);\r\n    return date;\r\n  };\r\n\r\n  const options = [\"Disturbed\", \"Undisturbed\", \"Excess Dreams\"];\r\n  \r\n  const getSelectedValue = (data) => {\r\n    setSleepType(data); // Set the selected diet type\r\n  };\r\n\r\n \r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date || new Date());\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    setSelectedTime(time || new Date());\r\n  };\r\n  const addSleep = async () => {\r\n    try {\r\n      // Ensure the date is in ISO format, including time and timezone.\r\n      const formattedDate = selectedDate.toISOString(); // Convert to ISO format\r\n      const formattedTime = moment(selectedTime).format(\"HH:mm\"); // Format time to \"HH:mm\"\r\n\r\n      // Construct the request body in the desired format\r\n      const body = {\r\n        patient_id: \"10\", // Use the appropriate patient ID\r\n        act_catagory: category,\r\n        act_date: formattedDate, // Use the ISO formatted date\r\n        act_time: formattedTime,\r\n        act_type: sleepType,\r\n        act_duration: duration,\r\n      };\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/activity_wellness`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchSleepData(); // Refresh the list data here\r\n        setAddFormView(false); // Close the form view\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const editSleep = async () => {\r\n    const formattedDate = selectedDate.toISOString(); // Convert to ISO format\r\n    const formattedTime = moment(selectedTime).format(\"HH:mm\"); // Format time to \"HH:mm\"\r\n    try {\r\n      const body = {\r\n        patient_id: \"10\", // Use the appropriate patient ID\r\n        act_catagory: category,\r\n        act_date: formattedDate, // Use the ISO formatted date\r\n        act_time: formattedTime,\r\n        act_type: sleepType,\r\n        act_duration: duration,\r\n      };\r\n\r\n      // Use the PATCH function for editing\r\n      const response = await patch(\r\n        `resource/activity_wellness/${defaultValues.id}`, // Use the ID from default values\r\n        body\r\n      );\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchSleepData(); // Refresh the list data here\r\n        setAddFormView(false); // Close the form view\r\n      } else {\r\n        console.error(\"Failed to update data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n  const validate = () => {\r\n    // Add validation logic here if needed\r\n    // Example: Check if all required fields are filled\r\n    let validationErrors = {};\r\n    if (!selectedDate) validationErrors.date = \"Date is required.\";\r\n    if (!selectedTime) validationErrors.time = \"Time is required.\";\r\n    if (!sleepType) validationErrors.sleepType = \"Diet type is required.\";\r\n    setErrors(validationErrors);\r\n    return Object.keys(validationErrors).length === 0;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultValues?.id) {\r\n        console.log(\"Edit clicked\");\r\n        editSleep(); // Call edit function if id is present\r\n      } else {\r\n        console.log(\"Add clicked\");\r\n        addSleep(); // Call add function if id is not present\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n            <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n            <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={defaultValues?.act_type || null}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Duration (mins)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                maxLength={4}\r\n                defaultValue={defaultValues?.act_duration}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n                onChange={(e) => setDuration(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol xs={3} md={2}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </CCol>\r\n        <CCol xs={3} md={2}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SleepForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SleepTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/SleepTable\";\r\nimport SleepForm from \"./SleepForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Sleep = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Type\" },\r\n    { label: \"DURATION (IN MINS)\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [pagination, setPagination] = useState({});\r\n  const [id, setId] = useState(null);\r\n  const { loading, error, get, del, clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filters, setFilters] = useState(true);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  // const { get } = useApi();\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    console.log(startDate, endDate, searchValue, \"ghghhghg\");\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n  };\r\n  // Fetch sleep data\r\n  const fetchSleepData = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/activity_wellness?limit=${itemsPerPage}&page=${currentPage}&from=${\r\n          startDate ?? \"\"\r\n        }&to=${\r\n          endDate ?? \"\"\r\n        }&order_by=act_date&dir=2&act_catagory=sleep&user_id=${data?.user_id}`\r\n      );\r\n      if (response.code === 200) {\r\n        setRowData(response.data.activity_wellnesses);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage, startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    fetchSleepData();\r\n  }, [fetchSleepData]);\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n  const deleteSleep = async () => {\r\n    try {\r\n      if (id) {\r\n        const response = await del(`resource/activity_wellness/${id}`);\r\n        if (response.code === 200) {\r\n          setDetailView(false);\r\n          clearCache();\r\n          deleteSleep();\r\n        } else {\r\n          console.error(\"Failed to delete data:\", response.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n    }\r\n  };\r\n  const getselectedData = (data, id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id);\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <SleepTable\r\n          rowData={rowData}\r\n          columns={columnData}\r\n          getselectedData={getselectedData}\r\n          from={from}\r\n        />\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8}>\r\n                  <DateSearch getFilterValues={getFilterValues} />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <SleepTable\r\n                  rowData={rowData}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={pagination?.total || 0}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <SleepForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  setAddFormView={setAddFormView}\r\n                  fetchSleepData={fetchSleepData}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure you want to delete?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={deleteSleep}>Yes</PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sleep;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst DateCards = ({ data, onClick }) => {\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      <CCard className=\"date-card cursor-default\">\r\n        <CCardBody>\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <div onClick={() => onClick(data, \"edit\")} className=\"cursor\">\r\n              <span className=\"fs-20 fw-600\">\r\n                {format(data?.values?.date, \"dd-MM-yyyy\")}\r\n              </span>\r\n            </div>\r\n            <div onClick={() => onClick(data, \"delete\")}>\r\n              <img src={Assets.deleteorg} alt=\"Del\" className=\"cursor\" />\r\n            </div>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateCards;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport ActiveButton from \"../Buttons/ActiveButton/ActiveButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { formatDate } from \"../../Utils/dateUtils\";\r\n\r\nconst DateRangePicker = ({ onClose, getFilterValues }) => {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  // Get today's date\r\n  const today = new Date();\r\n\r\n  const onSearch = () => {\r\n    const formattedStart =\r\n      formatDate(startDate) === \"01-01-1970\" ? null : formatDate(startDate);\r\n    const formattedEnd =\r\n      formatDate(endDate) === \"01-01-1970\" ? null : formatDate(endDate);\r\n    getFilterValues(formattedStart, formattedEnd, searchValue);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2 p-3\">\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span>From Date *</span>\r\n          <DatePicker\r\n            showIcon\r\n            selected={startDate}\r\n            onChange={(date) => {\r\n              if (date === null) {\r\n                // Explicitly set to null if the clear button is clicked\r\n                setStartDate(null);\r\n              } else {\r\n                setStartDate(date);\r\n              }\r\n            }}\r\n            isClearable\r\n            className=\"date-range-picker\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </CCol>\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span>To Date *</span>\r\n          <DatePicker\r\n            showIcon\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            isClearable\r\n            className=\"date-range-picker\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </CCol>\r\n        {/* <CCol md={3} className=\"d-flex flex-column gap-1 justify-content-end\">\r\n          <div\r\n            className=\"search-bar\"\r\n            style={{ width: \"100%\", borderRadius: \"10px\" }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              style={{ padding: \"7px\" }}\r\n              value={searchValue}\r\n              onChange={(e) => setSearchValue(e.target.value)}\r\n            />\r\n          </div>\r\n        </CCol> */}\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton onClick={() => onSearch()}>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateRangePicker;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport ActiveButton from \"../Buttons/ActiveButton/ActiveButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\n\r\nimport { formatDate } from \"../../Utils/dateUtils\";\r\n\r\nconst DateSearch = ({ getFilterValues }) => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  // Get today's date\r\n  const today = new Date();\r\n  const onSearch = () => {\r\n    const formattedStart =\r\n      formatDate(startDate) === \"01-01-1970\" ? null : formatDate(startDate);\r\n    const formattedEnd =\r\n      formatDate(endDate) === \"01-01-1970\" ? null : formatDate(endDate);\r\n    getFilterValues(formattedStart, formattedEnd, searchValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span className=\"fs-18 fw-400 label-color\">Start Date *</span>\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => {\r\n                if (date === null) {\r\n                  // Explicitly set to null if the clear button is clicked\r\n                  setStartDate(null);\r\n                } else {\r\n                  setStartDate(date);\r\n                }\r\n              }}\r\n              isClearable\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span className=\"fs-18 fw-400 label-color\">End Date *</span>\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={endDate}\r\n              onChange={(date) => setEndDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n              isClearable\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol md={3} className=\"d-flex flex-column gap-1 justify-content-end\">\r\n          <div\r\n            className=\"search-bar\"\r\n            style={{ width: \"100%\", borderRadius: \"10px\" }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              style={{ padding: \"7px\" }}\r\n              value={searchValue}\r\n              onChange={(e) => setSearchValue(e.target.value)}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton onClick={onSearch}>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateSearch;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\nimport { formatDate } from \"../../Utils/dateUtils\";\r\n\r\nconst DateSelector = ({ getFilterValues }) => {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n\r\n  const onSearch = () => {\r\n    const formattedStart =\r\n      formatDate(startDate) === \"01-01-1970\" ? null : formatDate(startDate);\r\n    const formattedEnd =\r\n      formatDate(endDate) === \"01-01-1970\" ? null : formatDate(endDate);\r\n    getFilterValues(formattedStart, formattedEnd);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span className=\"fs-18 fw-400 label-color\">Start Date *</span>\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => {\r\n                if (date === null) {\r\n                  // Explicitly set to null if the clear button is clicked\r\n                  setStartDate(null);\r\n                } else {\r\n                  setStartDate(date);\r\n                }\r\n              }}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n              isClearable\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span className=\"fs-18 fw-400 label-color\">End Date *</span>\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={endDate}\r\n              onChange={(date) => {\r\n                if (date === null) {\r\n                  // Explicitly set to null if the clear button is clicked\r\n                  setEndDate(null);\r\n                } else {\r\n                  setEndDate(date);\r\n                }\r\n              }}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n              isClearable\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton onClick={() => onSearch()}>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateSelector;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\nimport { formatDate } from \"../../Utils/dateUtils\";\r\n\r\nconst SingleDatePicker = ({ getStartDate, date }) => {\r\n  const [startDate, setStartDate] = useState(date || new Date());\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  const onChange = (date) => {\r\n    setStartDate(date);\r\n    const formattedStart =\r\n      formatDate(date) === \"01-01-1970\" ? null : formatDate(date);\r\n    getStartDate(formattedStart);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={12} className=\"d-flex flex-column gap-1\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => onChange(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleDatePicker;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst Dropdown = ({ options, defaultValue, getSelectedValue ,fetchDropdownOptions}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\r\n    defaultValue || \"Select\" || options[0]\r\n  );\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    setSelectedOption(option);\r\n    setIsOpen(false); // Close the dropdown after selecting an option\r\n    getSelectedValue(option);\r\n  };\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Attach the event listener for clicks outside\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    \r\n    // Cleanup event listener on component unmount\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"dropdown-container\" ref={dropdownRef}>\r\n      <div className=\"dropdown-header\" onClick={toggleDropdown}>\r\n        <span>{selectedOption || \"Select an option\"}</span>\r\n        <span className={`arrow ${isOpen ? \"open\" : \"\"}`}></span>\r\n      </div>\r\n      {isOpen && (\r\n        <ul className=\"dropdown-list\">\r\n          {options.map((option, index) => (\r\n            <li key={index} onClick={() => handleOptionClick(option)}>\r\n              {option}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./input.css\"; // Import the CSS file\r\n\r\nconst SearchInput = ({ data, setSurgeryKey, getSelectedData, defaultkey }) => {\r\n  const [searchTerm, setSearchTerm] = useState(defaultkey || \"\");\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n  const [isSelect, setIsSelect] = useState(true);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isSelect === false) {\r\n      // Ensure searchTerm is always a string\r\n      const term = String(searchTerm).toLowerCase();\r\n      if (term === \"\") {\r\n        setFilteredData([]);\r\n        setIsDropdownVisible(false);\r\n      } else {\r\n        const results = data?.filter((item) =>\r\n          item?.name?.toLowerCase()?.includes(term)\r\n        );\r\n        setFilteredData(results);\r\n        setIsDropdownVisible(true);\r\n      }\r\n    }\r\n  }, [searchTerm, data, isSelect]);\r\n  // Handle clicks outside of the component\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (inputRef.current && !inputRef.current.contains(event.target)) {\r\n        setIsDropdownVisible(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    setSearchTerm(value);\r\n    setSurgeryKey(value);\r\n    setIsSelect(false);\r\n    setSelectedItem(null); // Clear selected item if the user is typing\r\n  };\r\n\r\n  const handleSelect = (item) => {\r\n    setIsDropdownVisible(false);\r\n    setSearchTerm(item?.name || \"\"); // Ensure the selected value is a string\r\n    setFilteredData([]);\r\n    setIsSelect(true);\r\n    setSelectedItem(item);\r\n    getSelectedData(item);\r\n  };\r\n  useEffect(() => {\r\n    if (searchTerm && !selectedItem) {\r\n      const term = String(searchTerm).toLowerCase();\r\n      const matchedItem = data?.find(\r\n        (item) => item?.name?.toLowerCase() === term\r\n      );\r\n      if (matchedItem) {\r\n        getSelectedData(matchedItem);\r\n      } else {\r\n        getSelectedData({});\r\n      }\r\n    } else if (searchTerm === \"\") {\r\n      getSelectedData({});\r\n    }\r\n  }, [searchTerm, data, selectedItem]);\r\n  return (\r\n    <div className=\"search-container\" ref={inputRef}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter...\"\r\n        value={searchTerm}\r\n        onChange={handleChange}\r\n        className=\"form-control pad-10\"\r\n      />\r\n      {isDropdownVisible && (\r\n        <ul className=\"dropdown-list\">\r\n          {filteredData?.length > 0 ? (\r\n            filteredData?.map((item, index) => (\r\n              <li key={index} onClick={() => handleSelect(item)}>\r\n                {item?.name}\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <li>No results found</li>\r\n          )}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst OptionItem = ({ label, onSelect, selected, disabled }) => {\r\n  const [isSelected, setIsSelected] = useState(selected);\r\n  useEffect(() => {\r\n    setIsSelected(selected);\r\n  }, [selected]);\r\n  const toggleSelected = () => {\r\n    setIsSelected(!isSelected);\r\n    onSelect(label, !isSelected); // Notify parent component of selection change\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`option-item ${isSelected ? \"selected\" : \"\"} ${\r\n        disabled ? \"disabled\" : \"\"\r\n      }`}\r\n      onClick={toggleSelected}\r\n    >\r\n      {label}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../assets/Css/PaginationHome.css\";\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  totalItems,\r\n  onPageChange,\r\n  itemsPerPage,\r\n}) => {\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // Calculate total pages based on totalItems and itemsPerPage\r\n    const pagesCount = Math.ceil(totalItems / itemsPerPage);\r\n    setTotalPages(pagesCount);\r\n  }, [totalItems, itemsPerPage]);\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      onPageChange(page);\r\n    }\r\n  };\r\n\r\n  const getPageNumbers = () => {\r\n    const pageNumbers = [];\r\n    const range = 1; // Number of pages to show around the current page\r\n\r\n    if (totalPages <= 5) {\r\n      // Less than or equal to 5 pages, show all\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n    } else {\r\n      // More than 5 pages, use ellipses\r\n      if (currentPage <= 3) {\r\n        // Show first few pages and the last page\r\n        for (let i = 1; i <= 3; i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n        pageNumbers.push(\"...\");\r\n        pageNumbers.push(totalPages);\r\n      } else if (currentPage >= totalPages - 2) {\r\n        // Show last few pages and the first page\r\n        pageNumbers.push(1);\r\n        pageNumbers.push(\"...\");\r\n        for (let i = totalPages - 2; i <= totalPages; i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n      } else {\r\n        // Show a range around the current page\r\n        pageNumbers.push(1);\r\n        pageNumbers.push(\"...\");\r\n        for (let i = currentPage - range; i <= currentPage + range; i++) {\r\n          if (i > 0 && i <= totalPages) {\r\n            pageNumbers.push(i);\r\n          }\r\n        }\r\n        pageNumbers.push(\"...\");\r\n        pageNumbers.push(totalPages);\r\n      }\r\n    }\r\n\r\n    // Remove duplicate ellipses\r\n    return pageNumbers.filter(\r\n      (item, index, arr) =>\r\n        item !== \"...\" || (index > 0 && arr[index - 1] !== \"...\")\r\n    );\r\n  };\r\n\r\n  const pageNumbers = getPageNumbers();\r\n\r\n  return (\r\n    <div\r\n      // className=\"pagination-home\"\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      <div\r\n        onClick={() => handlePageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n        aria-label=\"Previous\"\r\n        // className=\"div-pagination\"\r\n        style={{\r\n          width: \"56px\",\r\n          height: \"56px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          gap: \"0px\",\r\n          borderRadius: \"8px\",\r\n          opacity: \"0px\",\r\n          boxShadow: \"0px 4px 24px 0px #0084CF14\",\r\n          marginLeft: \"10px\",\r\n          outline: \"none\",\r\n          border: \"none\",\r\n          fontSize: \"20px\",\r\n          fontWeight: \"600\",\r\n          lineHeight: \"28.9px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        &lt;\r\n      </div>\r\n      {pageNumbers.map((number, index) => (\r\n        <div\r\n          key={index}\r\n          onClick={() => {\r\n            if (number !== \"...\") {\r\n              handlePageChange(number);\r\n            }\r\n          }}\r\n          className={number === currentPage ? \"active-home-page\" : \"\"}\r\n          disabled={number === \"...\"}\r\n          aria-current={number === currentPage ? \"page\" : undefined}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            gap: \"0px \",\r\n            borderRadius: \"8px \",\r\n            opacity: \"0px \",\r\n            boxShadow: \"0px 4px 24px 0px #0084CF14 \",\r\n            marginLeft: \"10px \",\r\n            outline: \"none \",\r\n            border: \"none \",\r\n            fontSize: \"20px \",\r\n            fontWeight: \"600 \",\r\n            lineHeight: \"28.9px \",\r\n            cursor: \"pointer\",\r\n            width: \"56px\",\r\n            height: \"56px\",\r\n          }}\r\n        >\r\n          {number}\r\n        </div>\r\n      ))}\r\n      <div\r\n        onClick={() => handlePageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n        aria-label=\"Next\"\r\n        style={{\r\n          width: \"56px\",\r\n          height: \"56px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          gap: \"0px\",\r\n          borderRadius: \"8px\",\r\n          opacity: \"0px\",\r\n          boxShadow: \"0px 4px 24px 0px #0084CF14\",\r\n          marginLeft: \"10px\",\r\n          outline: \"none\",\r\n          border: \"none\",\r\n          fontSize: \"20px\",\r\n          fontWeight: \"600\",\r\n          lineHeight: \"28.9px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        &gt;\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst SearchBar = () => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={6} className=\"d-flex flex-column gap-1\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Search\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport { capitalizeFirstLetter, getSerialNumber } from \"../../../Utils/commonUtils\";\r\nimport { format } from \"date-fns\";\r\nimport { formatFetchDate } from \"../../../Utils/dateUtils\";\r\n\r\nconst PsychiatricTable = ({\r\n  columns,\r\n  rowData,\r\n  getselectedData,\r\n  from,\r\n  currentPage,\r\n  itemsPerPage,\r\n}) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  const formatText = (text, score) => {\r\n    let cleanedText = text?.replace(/@\\w+\\s*/g, \"\");\r\n\r\n    // Extract status between ! markers\r\n    const statusMatch = text?.match(/!(.*?)!/);\r\n    const status = statusMatch ? statusMatch[1] : \"\";\r\n\r\n    // Remove the status part from the cleaned text\r\n    cleanedText = cleanedText?.replace(/!.*!/, \"\")?.trim();\r\n\r\n    // Extract title and sub-title\r\n    const titleMatch = cleanedText?.match(/^([^,]*?)(?:,|$)/);\r\n    const subTitMatch = cleanedText?.match(/, (.+)$/);\r\n\r\n    // Prepare the final object\r\n    console.log({\r\n      title: titleMatch ? titleMatch[1]?.trim() : \"\",\r\n      subTit: subTitMatch ? subTitMatch[1]?.trim() : \"\",\r\n      status: status?.trim(),\r\n    });\r\n    return (\r\n      <div className=\"d-flex flex-column align-items-center\">\r\n        <Badge label={score} color={status} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {getSerialNumber(itemsPerPage, currentPage, i)}\r\n                </span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{capitalizeFirstLetter(dt?.name)}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {formatFetchDate(dt?.latest_form_submisson?.created_at)}\r\n                  {/* {formatText(dt?.latest_form_submisson?.message)} */}\r\n                </span>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{dt?.result}</span>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <Badge\r\n                    label={dt?.latest_form_submisson?.score}\r\n                    color={\"error\"}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={\r\n                        dt?.latest_form_submisson?.score\r\n                          ? Assets?.testSubIcon\r\n                          : Assets?.testUnSubIcon\r\n                      }\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"add\")}\r\n                    />\r\n                    {dt?.latest_form_submisson?.score && (\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.testViewIcon}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"view\")}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PsychiatricTable;\r\n","import React, { useState } from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { CModal, CModalBody, CModalHeader } from \"@coreui/react\";\r\nimport BlurBackground from \"../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../Buttons/SecondaryButton/SecondaryButton\";\r\nimport RespirationRateForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm\";\r\nimport Spo2 from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2\";\r\nimport Temperature from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature\";\r\nimport LFTForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm\";\r\nimport HeartRate from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate\";\r\nimport BSugar from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar\";\r\nimport LipidProfileForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm\";\r\nimport HCT from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT\";\r\nimport Hemogloin from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin\";\r\nimport BKetone from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone\";\r\nimport BUricAcid from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid\";\r\nimport GFR from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR\";\r\nimport Creatinine from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine\";\r\nimport Urea from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea\";\r\nimport Urinalysis from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis\";\r\nimport BMI from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI\";\r\nimport BPForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm\";\r\nimport useApi from \"../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\n\r\nconst DynamicTable = ({\r\n  columnsData,\r\n  tableData,\r\n  getTableDatas,\r\n  from,\r\n  render,\r\n}) => {\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [selectedData, setSelectedData] = useState(\"\");\r\n  const { loading, del, clearCache } = useApi();\r\n\r\n  const deleteData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setDeleteModal(true);\r\n    }\r\n  };\r\n\r\n  const editData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setEditModal(true);\r\n    }\r\n  };\r\n\r\n  const onDelete = async () => {\r\n    try {\r\n      const url = `resource/vitals/${selectedData?.id}`; // Replace with your API endpoint\r\n      await del(url);\r\n      await getTableDatas(selectedData);\r\n      toast.success(\"Deleted successfully\");\r\n      setDeleteModal(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"responsive-table-container\">\r\n        <table\r\n          class=\"responsive-table\"\r\n          style={{ background: from === \"Consult\" ? \"white\" : \"transparent\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              {columnsData?.map(\r\n                (data, i) =>\r\n                  from === \"Consult\" && i === columnsData.length - 1 ? null : (\r\n                    <th key={i}>{data?.label}</th>\r\n                  )\r\n                // <th key={column.id}>{column.label}</th>\r\n              )}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableData?.length <= 0 ? (\r\n              <tr>\r\n                <td colSpan={columnsData.length} className=\"no-data-message\">\r\n                  No data available\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              tableData?.map((row, rowIndex) => (\r\n                <tr key={rowIndex}>\r\n                  {columnsData.map((column, i) =>\r\n                    from === \"Consult\" &&\r\n                    i === columnsData.length - 1 ? null : (\r\n                      <td key={`${rowIndex}-${column?.id}`}>\r\n                        {renderCell(row, column)}\r\n                      </td>\r\n                    )\r\n                  )}\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Delete Modal */}\r\n      {deleteModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteModal}\r\n            onClose={() => setDeleteModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => onDelete()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteModal(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {/* Edit Modal */}\r\n      {editModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={editModal}\r\n            onClose={() => setEditModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalHeader>\r\n              <h4 className=\"fw-600\">Edit {selectedData?.name}</h4>\r\n            </CModalHeader>\r\n            <CModalBody className=\"p-3\">\r\n              {selectedData?.name === \"BMI\" && (\r\n                <BMI\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Pressure\" && (\r\n                <BPForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Respiration Rate\" && (\r\n                <RespirationRateForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"SpO2\" && (\r\n                <Spo2\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Temperature\" && (\r\n                <Temperature\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Lung Function Test (LFT)\" && (\r\n                <LFTForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Heart\" && (\r\n                <HeartRate\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Sugar\" && (\r\n                <BSugar\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Lipid Profile\" && (\r\n                <LipidProfileForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Hematocrit (HCT)\" && (\r\n                <HCT\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Hemoglobin\" && (\r\n                <Hemogloin\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Ketone\" && (\r\n                <BKetone\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Uric Acid\" && (\r\n                <BUricAcid\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"GFR\" && (\r\n                <GFR\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Creatinine\" && (\r\n                <Creatinine\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urea\" && (\r\n                <Urea\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urinalysis\" && (\r\n                <Urinalysis\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const renderImage = (contentUrl) => {\r\n    return (\r\n      <img\r\n        src={contentUrl}\r\n        alt=\"Image\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  function renderCell(row, column) {\r\n    const columnKey = getColumnKey(column?.label);\r\n    const value = row[columnKey];\r\n\r\n    if (columnKey === \"result_file\") {\r\n      // Function to render PDF content\r\n      const renderPdf = (contentUrl) => {\r\n        window.open(contentUrl, \"_blank\");\r\n      };\r\n      return (\r\n        <div style={{ width: \"80px\" }} onClick={() => renderPdf(value.link)}>\r\n          <span className=\"hyperlink\">{value?.name}</span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"result\") {\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          {value?.name !== \"\" ? (\r\n            <Badge label={value?.name ?? \"-\"} color={value?.status ?? \"-\"} />\r\n          ) : value?.name === \"\" ? (\r\n            <>--</>\r\n          ) : (\r\n            <span>{value}</span>\r\n          )}\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"date\") {\r\n      // Function to format date-time string\r\n      const formatDateTime = (dateTimeString) => {\r\n        if (!dateTimeString) {\r\n          return \"Invalid date-time\"; // Handle empty or invalid input\r\n        }\r\n\r\n        // Parse the date and time string\r\n        const parsedDate = parse(\r\n          dateTimeString,\r\n          \"yyyy-MM-dd HH:mm\",\r\n          new Date()\r\n        );\r\n\r\n        // Check if the parsed date is valid\r\n        if (!isValid(parsedDate)) {\r\n          return \"Invalid date-time\"; // Handle invalid date\r\n        }\r\n\r\n        // Format the date and time into 'dd-MM-yyyy HH:mm'\r\n        return format(parsedDate, \"dd-MM-yyyy HH:mm\");\r\n      };\r\n\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          <span>{formatDateTime(value)} </span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"action\") {\r\n      return (\r\n        <div className=\"d-flex gap-2\">\r\n          {value.map((data, i) => (\r\n            <div key={i} className=\"d-flex\">\r\n              {renderActionButton(data, row)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      // Default rendering for regular data\r\n      return <span className=\"fs-16 fw-500\">{value}</span>;\r\n    }\r\n  }\r\n\r\n  function renderActionButton(data, row) {\r\n    switch (data.type) {\r\n      case \"warning\":\r\n        return <img src={Assets.Warning} alt=\"warn\" className=\"cursor\" />;\r\n      case \"edit\":\r\n        return (\r\n          <img\r\n            src={Assets.EditPencil}\r\n            alt=\"edit\"\r\n            className=\"cursor\"\r\n            onClick={() => editData(row)}\r\n          />\r\n        );\r\n      case \"delete\":\r\n        return (\r\n          <img\r\n            src={Assets.Delete}\r\n            alt=\"delete\"\r\n            className=\"cursor\"\r\n            onClick={() => deleteData(row)}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function getColumnKey(columnLabel) {\r\n    // Convert label to a key format used in your data object\r\n    // Example: \"Heart Rate (BPM)\" -> \"heart_rate_(bpm)\"\r\n    return columnLabel.toLowerCase().replace(/\\s+/g, \"_\");\r\n  }\r\n};\r\n\r\nexport default DynamicTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImagingOrderTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.file !== \"-\" ? (\r\n                    <Badge label={dt?.file} color={\"primary\"} />\r\n                  ) : (\r\n                    \"-\"\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.notes}\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.link}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.icd_code}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.scan_name}</span>\r\n                  <Badge\r\n                    label={dt?.scan_status}\r\n                    color={\r\n                      dt?.scan_status === \"Accepted\"\r\n                        ? \"yellow\"\r\n                        : dt?.scan_status === \"Uploaded\"\r\n                        ? \"success\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                    >\r\n                      {dt?.scan_status === \"Accepted\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.Approve}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.scan_status === \"Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.scan_status === \"Not Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.EditPencil}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                          />\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.TableDelete}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"delete\")}\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                    }}\r\n                    className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                  >\r\n                    {dt?.scan_status === \"Accepted\" && (\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.Accept}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                      />\r\n                    )}\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst LabOrderTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.file !== \"-\" ? (\r\n                    <Badge label={dt?.file} color={\"primary\"} />\r\n                  ) : (\r\n                    \"-\"\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.notes}\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.link}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.icd_code}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lab_name}</span>\r\n                  <Badge\r\n                    label={dt?.lab_status}\r\n                    color={\r\n                      dt?.lab_status === \"Accepted\"\r\n                        ? \"yellow\"\r\n                        : dt?.lab_status === \"Uploaded\"\r\n                        ? \"success\"\r\n                        : dt?.lab_status === \"Prescribed\"\r\n                        ? \"warning\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                    >\r\n                      {dt?.lab_status === \"Accepted\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.Approve}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.lab_status === \"Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.lab_status === \"Not Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.EditPencil}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                          />\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.TableDelete}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"delete\")}\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst LabTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <Badge label={dt?.file} color={\"primary\"} />\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.notes}</CTableDataCell>\r\n              <CTableDataCell>{dt?.link}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst MedicationOrderTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  console.log(\"first\", rowData[0]);\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span className=\"fs-16 fw-500\">{dat?.name}</span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span className=\"fs-16 fw-500\">{dat?.strength} mg</span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span className=\"fs-16 fw-500\">\r\n                        {dat?.m} | {dat?.a} | {dat?.e} | {dat?.n}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span\r\n                        className=\"fs-16 fw-500\"\r\n                        style={{\r\n                          textTransform: \"capitalize\",\r\n                        }}\r\n                      >\r\n                        {dat?.food}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lab_name}</span>\r\n                  <Badge\r\n                    label={dt?.lab_status}\r\n                    color={\r\n                      dt?.lab_status === \"Received\"\r\n                        ? \"primary\"\r\n                        : dt?.lab_status === \"Delivered\"\r\n                        ? \"success\"\r\n                        : dt?.lab_status === \"Prescribed\"\r\n                        ? \"warning\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                    >\r\n                      {dt?.lab_status === \"Waiting For Approval\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          // src={Assets?.UpdateIcon}\r\n                          src={Assets?.Approve}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.lab_status === \"Prescribed\" ? (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.EditPencil}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                          />\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.TableDelete}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"delete\")}\r\n                          />\r\n                        </>\r\n                      ) : dt?.lab_status === \"Received\" ? (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.UStatus}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                            style={{ width: \"35px\" }}\r\n                          />\r\n                        </>\r\n                      ) : dt?.lab_status === \"Delivered\" ? (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.visibleEye}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"completed\")}\r\n                            style={{ width: \"30px\" }}\r\n                          />\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n                    {/* <div\r\n                    style={{\r\n                      width: dt?.lab_status === \"Accepted\" ? \"50%\" : \"100%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.visibleEye}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div> */}\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst MedicalHistoryTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, id, type) => {\r\n    getselectedData(data, id, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.onset_date ? dt?.values?.onset_date.split('T')[0].split('-').reverse().join('-')\r\n                    : ''}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.condition?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.icd10}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.chronic}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.prev_illness}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistoryTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nfunction ExerciseHabitTable({ columns, habitData, getselectedData, from }) {\r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {habitData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.act_duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.act_intensity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExerciseHabitTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst MoodTable = ({ columns, rowData, getselectedData, from ,moodData}) => {\r\n  const selectedData = (data, id,type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {moodData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.act_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.act_type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"20%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"20%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoodTable;\r\n","// Define your constants\r\nconst DATE_FORMAT = \"dd-MM-yyyy\";\r\n\r\nexport { DATE_FORMAT };\r\n","export const findItemIndex = (options, value) => {\r\n  // Use findIndex to get the index of the item with the specified id\r\n  const index = options.findIndex((item) => item === value);\r\n  return index;\r\n};\r\n\r\nexport const extractNum = (data) => {\r\n  const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n  return numbers || \"\";\r\n};\r\n\r\nexport const getFileTypeFromMime = (mimeType) => {\r\n  const mimeTypes = {\r\n    \"application/pdf\": \"pdf\",\r\n    \"image/jpeg\": \"jpg\",\r\n    \"image/png\": \"png\",\r\n    \"text/plain\": \"txt\",\r\n    // Add more MIME types as needed\r\n  };\r\n\r\n  return mimeTypes[mimeType] || \"unknown\";\r\n};\r\n\r\nexport const openFile = (contentUrl) => {\r\n  window.open(contentUrl, \"_blank\");\r\n};\r\n\r\nexport const getSerialNumber = (itemPerPage, pageNumber, index) => {\r\n  // Calculate the starting serial number for the given page\r\n  const startingSerialNumber = (pageNumber - 1) * itemPerPage + 1;\r\n  // Add the index of the item on the page to the starting serial number\r\n  return startingSerialNumber + index;\r\n};\r\n\r\nexport const capitalizeFirstLetter = (text) => {\r\n  if (!text) return text;\r\n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\r\n};","import { format, isValid, parse, parseISO } from \"date-fns\";\r\n\r\n// Function to format date as DD-MM-YYYY HH:mm AM/PM\r\nexport function formatDateTime(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n\r\n  const options = {\r\n    day: \"2-digit\",\r\n    month: \"2-digit\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  };\r\n\r\n  return date.toLocaleString(\"en-GB\", options).replace(\",\", \"\");\r\n}\r\n\r\n// Function to format date as DD-MM-YYYY\r\nexport function formatDate(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are zero-indexed\r\n  const year = date.getFullYear();\r\n\r\n  return `${day}-${month}-${year}`;\r\n}\r\n\r\n// Function to format time as HH:mm AM/PM\r\nexport function formatTime(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n  const options = {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  };\r\n\r\n  return date.toLocaleTimeString(\"en-GB\", options);\r\n}\r\n\r\nexport function tableDateTime(dateTimeString) {\r\n  if (!dateTimeString) {\r\n    return \"Invalid date-time\"; // Handle empty or invalid input\r\n  }\r\n\r\n  // Parse the date and time string\r\n  const parsedDate = parse(dateTimeString, \"yyyy-MM-dd HH:mm\", new Date());\r\n\r\n  // Check if the parsed date is valid\r\n  if (!isValid(parsedDate)) {\r\n    return \"Invalid date-time\"; // Handle invalid date\r\n  }\r\n\r\n  // Format the date and time into 'dd-MM-yyyy HH:mm'\r\n  return format(parsedDate, \"dd-MM-yyyy HH:mm\");\r\n}\r\n\r\nexport function getCurrentTime() {\r\n  const now = new Date();\r\n  const hours = now.getHours().toString().padStart(2, \"0\");\r\n  const minutes = now.getMinutes().toString().padStart(2, \"0\");\r\n  return `${hours}:${minutes}`;\r\n}\r\n\r\nexport const formatFetchDate = (dateString) => {\r\n  if (!dateString) return ''; // Handle cases where dateString might be null or undefined\r\n\r\n  try {\r\n    const parsedDate = parseISO(dateString); // Convert the ISO string to a Date object\r\n    return format(parsedDate, 'dd-MM-yyyy'); // Format the Date object\r\n  } catch (error) {\r\n    console.error(\"Error formatting date:\", error);\r\n    return ''; // Return an empty string or handle the error as needed\r\n  }\r\n};"],"names":["useApi","apiUrl","process","apiKey","loading","setLoading","useState","error","setError","cache","useRef","fetchData","useCallback","async","url","options","current","startsWith","response","fetch","ok","Error","concat","statusText","data","json","message","get","method","headers","Authorization","sessionStorage","getItem","post","body","JSON","stringify","patch","del","clearCache","_ref","label","color","_jsx","className","children","paths","lastIndex","length","_Fragment","CBreadcrumb","map","index","CBreadcrumbItem","href","to","onClick","buttonName2","getbtnNames","buttonText","setButtonText","isOpen","setIsOpen","handleItemClick","text","_jsxs","toggleDropdown","src","Assets","cUp","alt","cDown","ObjectiveDatas","id","icon","VitalBP","slug","name","date","category","badge","columnsData","tableData","result","status","systolic","diastolic","chartLabel1","action","type","VitalBs","blood_sugar","blood_sugar_value","VitalBMI","bmi","height","weight","VitalHCT","VitalHBeat","interpretation","result_file","contentType","link","ecgSample","VitalHae","hemoglobinValue","BKetone","blood_ketone_value","VitalLipid","chartLabel2","chartLabel3","chartLabel4","chartLabel5","chartLabel6","VitalRespi","SpO2","spo2","Temp","temperature","unit","LFT","BUAcid","blood_uric_acid_value","Urinalysis","specific_gravity","ph","clarity","protein","glucose","leukocyte","bilirubin","urobilinogen","red_blood_cells","white_blood_cells","Urea","urea","urea_value","Creatinine","creatinine_value","GFR","gfr_value","_defaultValues$questi","back","defaultValues","questions","formTitle","onAdd","latest_form_submission","isEditMode","formData","setFormData","useEffect","answers","initializedData","Object","keys","forEach","key","answer","capitalizeFirstLetter","style","width","PrimaryButton","question","_question$question","_question$answers2","CRow","CCol","option","cIndex","_question$question2","_question$question3","_option$answer","_option$answer2","_formData$question$qu","_formData$question$qu2","_question$question4","_option$answer3","CFormCheck","value","onChange","e","handleChange","event","_question$answers","target","questionId","parseInt","selectedOption","find","prevData","checked","disabled","preventDefault","console","log","SecondaryButton","_location$state","from","useLocation","state","PatientDetail","qName","setQName","qPagi","setQPagi","edit","setEdit","setFormTitle","addFormView","setAddFormView","currentPage","setCurrentPage","selectedData","setSelectedData","getTableLists","_response$data","_response$data2","user_id","listData","forms","pagination","PsychiatricTable","rowData","columns","getselectedData","itemsPerPage","lg","Pagination","onPageChange","pageNumber","totalItems","total","CCard","CCardBody","NeurologicalForm","answerDatas","patient_id","form_id","form_name","toast","success","latest_form_submisson","PsychiatricForm","PeadiatricForm","_defaultValues$questi2","_defaultValues$questi3","_defaultValues$questi4","sub_questions","_defaultValues$questi5","_defaultValues$questi6","_formData$question$id","_formData$question$id2","CTable","CTableHead","CTableRow","i","CTableHeaderCell","CTableBody","dt","_dt$addition_info","_dt$addition_info2","_dt$addition_info3","_dt$addition_info4","_dt$addition_info5","_dt$addition_info6","CTableDataCell","addition_info","title","notes","TableEdit","TableDelete","_defaultValues$additi","_defaultValues$additi2","fetchDiagnosis","selectedTime","setSelectedTime","selectedDate","setSelectedDate","errors","setErrors","icd","setIcd","Description","setDescription","searchTerm","setSearchTerm","defaultDateTime","day","String","getDate","padStart","month","getMonth","year","getFullYear","getFormattedDate","Date","defaultDate","split","defaultTime","getCurrentTime","parsedDate","parse","isValid","hours","minutes","Number","setHours","setMinutes","setSeconds","onSubmit","validate","newErrors","undefined","editDiagnosis","addDiagnosis","code","masters","getIcdCode","document_source","format","class","for","DatePicker","showIcon","selected","dateFormat","placeholder","onClose","setRowData","setPagination","detailView","setDetailView","setId","startDate","setStartDate","endDate","setEndDate","searchValue","setSearchValue","addFormPage","docs","md","BackBtn","Breadcrumb","DateRangePicker","getFilterValues","Add","OptionsIcon","DiagnosisTable","DiagnosisForm","BlurBackground","CModal","alignment","visible","CModalBody","deleteDiagnosis","setDate","takendate","setTakenDate","parseDateString","dateString","_datePart$split","datePart","defaultDateString","dosage_date","defaultDateString1","taken_date","defaultDate1","defaultValue","vaccine","period","tableCellStyle","borderRight","padding","formatDate","isNaN","_dt$attributes","_dt$attributes2","_dt$attributes3","_dt$attributes4","attributes","values","periods","taken_at","colorVaccined","vaccined","columnData","deleteView","setDeleteView","tkDate","setTkDate","setSlug","today","getCurrentPageItems","startIndex","endIndex","slice","fetchImmunization","ImmunizationTable","ImmunizationForm","maxDate","details","addImmunization","tabs","getCurrentTab","defaultTab","currentTab","setCurrentTab","switchTab","addBack","defaultData","getTableDatas","keytone","setKeytone","blood_ketone","validateInputs","currentErrors","time","onEdit","CContainer","isClearable","closeOnScroll","wrapperClassName","DATE_FORMAT","updatedDateTime","getHours","getMinutes","showTimeSelect","showTimeSelectOnly","timeIntervals","deciNum","replace","numWithDecimal","xs","extractNum","parseFloat","match","setHeight","setWeight","heightUnit","setHeightUnit","height_unit","weightUnit","setWeightUnit","weight_unit","setBmi","calculateBMI","heightInMeters","toFixed","maxLength","onInput","setSystolic","toString","setDiastolic","pulse","setPulse","trim","setType","bloodSugar","setBloodSugar","border","borderRadius","Dropdown","findItemIndex","getSelectedValue","uricAcid","setUricAcid","blood_uric_acid","uric_acid","creatinine","setCreatinine","gfr","setGfr","formattedValue","parts","join","hct","setHct","setInterpretation","ecgFile","setEcgFile","hr","setHr","handleUpload","file","reader","FileReader","onloadend","base64","prevState","readAsDataURL","heart","files","htmlFor","openInNewTab","dataUrl","window","open","getFileTypeFromMime","hemoglobin","setHemoglobin","fvcL","setFvcL","fvcPercent","setFvcPercent","fev1L","setFev1L","fev1Percent","setFev1Percent","pefL","setPefL","pefPercent","setPefPercent","fev1FvcPercent","setFev1FvcPercent","fef25L","setFef25L","fef25","fef25Percent","setFef25Percent","fef50L","setFef50L","fef50","fef50Percent","setFef50Percent","fef75L","setFef75L","fef75","fef75Percent","setFef75Percent","fef2575L","setFef2575L","fef2575","fef2575Percent","setFef2575Percent","setNotes","convertNum","validateForm","fields","required","field","_field$value","fvc","fev1","fev1_fvc","pef","CFormTextarea","rows","ldl","setLdl","hdl","setHdl","vldl","setVldl","ldlHdl","setLdlHdl","triglycerides","setTriglycerides","totalCholesterol","setTotalCholesterol","ldl_unit","hdl_unit","vldl_unit","hdl_ldl_unit","triglycerides_unit","total_unit","hdl_ldl","_e$target","_e$target$value","_e$target2","_e$target2$value","_e$target3","_e$target3$value","_e$target4","_e$target4$value","_e$target5","_e$target5$value","_e$target6","_e$target6$value","respiration","setRespiration","spO2","setSpO2","str","selectedMethod","setSelectedMethod","selectedUnit","setSelectedUnit","setTemperature","handleUnitChange","boxSizing","inline","nums","setUrea","cell","setCell","wholeNumber","tabindex","Export","onSelect","isSelected","setIsSelected","toggleSelected","newSelected","lists","setLists","totalItem","setTotalItem","generalOpen","setGeneralOpen","headings","setHeadings","subOptions","setSubOptions","selectedOptions","setSelectedOptions","editView","setEditView","getselected","_data$values","getOptions","headingSlug","optionsData","prevMap","getSavedValue","savedData","patient_healths","initialSelections","initialNotes","item","getHeadings","_response$data3","headingData","handleSelect","_option$attributes2","updatedOptions","formattedOptions","reduce","acc","_option$attributes","reference_slug","opt","getLists","_response$data4","_response$data5","selectedSlug","up_create","DateSelector","date1","date2","DateCards","onDelete","SingleDatePicker","getStartDate","ActiveButton","listview","_subOptions$item$slug","PlusIcon","MinusIcon","ExamOptions","handleNotesChange","prevNotes","getSeconds","_dt$values","_dt$provider","_dt$provider2","provider","first_name","last_name","reason","_defaultValues$provid","fetchNextAppointment","setReason","setProvider","selectedProvider","setSelectedProvider","editNextAppointment","addNextAppointment","_response$data$provid","formattedData","providers","_item$user","_item$user2","_item$user3","_item$user4","user","getProvider","provider_id","timeCaption","Select","isSearchable","next_appointments","NextAppointmentTable","NextAppointmentForm","deleteNextAppointment","PatientEducationTab","trimester","setTrimester","DropdownButton","icd_code","scan_status","scan_name","ImagingOrderTable","ImagingOrderForm","size","CFormSelect","lab_status","lab_name","LabOrderTable","LabOrderForm","defaultChecked","_defaultValues$medici","_defaultValues$medici2","_defaultValues$medici21","_defaultValues$medici22","medicines","setMedicines","strength","strengthMeasurement","days","totalQty","instruction","m","a","n","food","handleAddMedicine","newMedicines","push","handleRemoveMedicine","filter","medicine","handleMedicineInputChange","fieldName","newValue","processedValue","toISOString","btnValue","setBtnValue","btnView","setBtnView","setStrength","qty","setQty","timeTaken","setTimeTaken","_defaultValues$medici3","_defaultValues$medici4","_defaultValues$medici5","_defaultValues$medici6","_defaultValues$medici7","_defaultValues$medici8","_defaultValues$medici9","_defaultValues$medici10","_defaultValues$medici11","_defaultValues$medici12","_defaultValues$medici13","_defaultValues$medici14","_defaultValues$medici15","_defaultValues$medici16","_defaultValues$medici17","_defaultValues$medici18","_defaultValues$medici19","_defaultValues$medici20","paddingRight","whiteDel","whiteAdd","rx","frequency","duration","rowSpan","TickCircle","display","justifyContent","PlusCircle","transform","completedView","setCompletedView","MedicationOrderTable","CloseBtn","MedicationOrderForm","MedicationCompleted","DetailsTable","_dt$addition_info7","fetchPatientEducation","PatientEducationTable","PatientEducationForm","deletePatientEducation","editPatientEducation","addPatientEducation","_defaultValues$values","_defaultValues$values2","fetchCpt","cpt","setCpt","editCpt","addCpt","getCptCode","_cpt$attributes2","_cpt$attributes","cpt_code","_dt$values2","_dt$values3","_dt$values4","_dt$values5","ProcedurerTable","ProcedureForm","deleteCpt","ProcedureTab","therapy_name","therapist_name","fetchTherapies","editTherapies","addTherapies","therapies","TherapiesTable","TherapiesForm","deleteTherapies","TherapiesTab","_dt$addition_info8","getSerialNumber","EditPencil","Delete","getChiefComplaints","complaints","setComplaints","valid","editChiefComplaints","addChiefComplaints","formattedDate","formattedTime","moment","OnClose","xl","ThreeDots","ChiefComplaintTable","ChiefComplaintsForm","deleteChiefComplaints","fullData","_dt$attributes$values","_dt$attributes3$value","_dt$attributes5","_dt$attributes5$value","_dt$attributes7","_dt$attributes7$value","_dt$attributes9","_dt$attributes9$value","_dt$attributes11","_dt$attributes11$valu","_dt$attributes13","_dt$attributes13$valu","_dt$attributes6","_dt$attributes8","_dt$attributes10","_dt$attributes12","_dt$attributes14","familyDatas","setFamilyDatas","familyPagi","setFamilyPagi","labelData","setLabelData","getHistoryLists","FamilyHistoryTable","relationship","familyHistAdd","getMedicalLists","conditions","setConditions","selectChronic","setSelectChronic","selectPreviousIllness","setSelectPreviousIllness","parseDate","onset_date","condition","chronic_illness","previous_illness","icdoptions","findIndex2","icd10","indexOf","getMedicalConditions","handleChronicChange","handlePreviousIllnessChange","editMedicalHistory","medicalHistoryForm","patient_histories","DateSearch","MedicalHistoryTable","MedHistoryForm","deleteMedicalLists","_defaultValues$values3","_defaultValues$values4","_defaultValues$values5","_defaultValues$values6","_defaultValues$values7","_defaultValues$values8","_defaultValues$values9","_defaultValues$values10","_defaultValues$values11","_defaultValues$values12","obsAdd","obsEdit","setDate2","prev","setPrev","fert_treatment","obstetricDesc","setObstetricDesc","boh_desc","fertTreatmentDesc","setFertTreatmentDesc","fertility_treatment_desc","preg","setPreg","pregnant","fertTreat","setFertTreat","fertility_treatment","lact","setLact","lactation","cesarean","setCesarean","previous_cesarean_sections","obstetric","setObsteric","boh","gravidaValue","setGravidaValue","gravida","paraValue","setParaValue","para","lmp","edd","parsedDate1","handleChangeObste","trimster","handleChangeCesa","handleChangeLact","handleChangeFert","numCheck","_input$replace","input","newstrValue","formsubmit","colSpan","_dt$values6","_defaultValues$values13","_defaultValues$values14","_defaultValues$values15","_defaultValues$values16","_defaultValues$values17","_defaultValues$values18","_defaultValues$values19","_defaultValues$values20","_defaultValues$values21","_defaultValues$values22","_defaultValues$values23","_defaultValues$values24","_defaultValues$values25","_defaultValues$values26","_defaultValues$values27","_defaultValues$values28","_defaultValues$values29","_defaultValues$values30","mensuEdit","mensuAdd","flow_duration","flow_type","menopause","setMenopause","irregular","setIrregular","cycle","dysmenorrhea","setDysmenorrhea","bleeding","setBleeding","flowType","setFlowType","flow","flowDur","setFlowDur","handleClick","setValue","menopause_age","value1","setValue1","menarche_age","value2","setValue2","value3","setValue3","handlePaste","clipboardData","getData","onPaste","menarcheAge","cyclePerYear","cycleLengthDays","flowdur","flowtype","lmpDate","screeningAdd","screeningEdit","last_pap_smear_at","last_mamogram_at","date3","setDate3","last_breast_exam_at","abnormalStatus","setAbnormalStatus","is_abnormal_pap_smear","mamogramStatus","setMamogramStatus","is_mammogram","breastStatus","setBreastStatus","is_breast_exam","abnormalDesc","setAbnormalDesc","abnormal_pap_smear_desc","mamogramDesc","setMamogramDesc","mammogram_desc","breastDesc","setBreastDesc","breast_exam_desc","handleAbnormalStatus","handleMamogramStatus","handleBreastStatus","lmp_date","ed_date","lacating","obsData","setObsData","mensuData","setMensuData","screeningData","setScreeningData","obsPagi","setObsPagi","PatientSubMenu4","localStorage","ParsedPatientSubMenu","PatientSubMenu5","ParsedPatientSubMenu5","currentHistoryTab","setCurrentHistoryTab","getObsLists","getMensuralLists","getScreeningLists","ObstetricHistoryTable","MensturalHistoryForm","ScreeningHistoryForm","MedicalTab","selectedId","socialAdd","socialEdit","smokingStatus","setSmokingStatus","smoking","smokingDesc","setSmokingDesc","smoking_desc","alcoholStatus","setAlcoholStatus","alcohol","alcoholDesc","setAlcoholDesc","alcohol_desc","drugStatus","setDrugStatus","drugs","drugDesc","setDrugDesc","drugs_desc","handleSmokingStatus","handleAlcoholStatus","handleDrugStatus","some","socialList","setSocialList","getSocialLists","icdKey","filteredOptions","setFilteredOptions","setSelectedOption","dropdownRef","handleClickOutside","contains","document","addEventListener","removeEventListener","ref","outline","_option$slug","handleOptionClick","surgicalAdd","surgicalEdit","surgeryDetails","setSurgeryDetails","surgerykey","setSurgeryKey","surgical_name","surgeryName","setSurgeryName","reasonDetails","setReasonDetails","reasonkey","setReasonKey","pre_surgery_diagnosis","reasonName","setReasonName","setIcd10","icdkey","setIcdKey","pre_surgery_notes","hospital","setHospital","hospital_name","refby","setRefby","prescribed_by","performby","setPerformby","surgery_done_by","surgery_date","surgery_time","getSurgeryName","getSurgeryReasons","getICDCode","SearchInput","getSelectedData","defaultkey","ICDDrop","post_operative_problems","_dt$values$surgery_da","_dt$values2$surgical_","_dt$values3$icd","reverse","surgicalDatas","setSurgicalDatas","surgicalPagi","setSurgicalPagi","SurgicalTable","SurgicalForm","_dt$values$name","_dt$values2$name","_dt$values7","_dt$values8","_dt$values9","_dt$values10","_dt$values11","_dt$values12","_dt$values13","_dt$values14","_dt$values15","_dt$values16","_dt$values17","_dt$values18","_dt$values19","_dt$values20","_dt$values21","strength_measurement","dosage","food_times","quantity","start_date","fetchMedication","MedicationTable","MedicationForm","deleteMedication","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","medicine_type","medicine_name","total_qty","route_administration","no_of_days","medicine_taken","location","setLocation","locationy","options1","editMedication","addMedication","end_date","symptoms","fetchSignsSymptoms","duration_days","aggravating_factors","releiving_factors","temporal_factors","severity","locationDetails","setLocationDetails","locationKey","setLocationKey","editSymptoms","addSymptoms","getLocation","consult_id","quality","SymtomsTable","SignsSymptomsForm","deleteSignsSymptoms","_defaultValues$detail","_defaultValues$detail2","_defaultValues$detail3","_defaultValues$detail4","_defaultValues$detail5","fetchExciseHabit","act_type","patientId","setPatientId","setCategory","act_catagory","setDuration","act_duration","intensity","setIntensity","act_intensity","dropdownOptions","setDropdownOptions","_defaultValues$detail6","_defaultValues$detail7","_defaultValues$detail8","_defaultValues$detail9","_defaultValues$detail10","_defaultValues$detail11","act_date","parseTime","act_time","is_active","fetchDropdownOptions","findIndex","timeString","validationErrors","_defaultValues$detail12","_defaultValues$detail13","_defaultValues$detail14","_defaultValues$detail15","editDiet","act_intake","addHabits","Form","habitData","setHabitData","rowFluidata","setRowFluiData","filters","setFilters","activity_wellnesses","detailPage","ExerciseHabitTable","ExcerciseHabitForm","fetchMood","typeMood","setTypeMood","_timePart$split","timePart","editMood","addMood","mood","toLowerCase","moodData","setMoodData","MoodTable","MoodForm","_dt$detail","detail","fetchDiet","dietType","setDietType","addDiet","fetchFluid","fluidType","setFluidType","water","setWater","intake","setIntake","_defaultValues$act_in","editFluid","actual_value","addFluid","_response$data6","FluidIntakecolumnData","PatientSubMenu2","NutritionDietTable","NutritionFluidTable","DietForm","FluidIntakeForm","historySti","setHistorySti","historySexual","setHistorySexual","currentSti","setCurrentSti","stiNotes","setStiNotes","allStatus","setAllStatus","currentStiNotes","setCurrentStiNotes","fetchSexualStatus","_records$detail","_records$detail2","_records$detail2$sti","_records$detail3","_records$detail3$sti","_records$detail4","_records$detail4$sti","_records$detail5","_records$detail5$sti","records","is_sti","sti","screen_date","screen_notes","status_notes","handleHistoryStiClick","handleHistorySexualClick","handleCurrentStiClick","validation","statusAdd","statusEdit","SexualStatusForm","fetchSleepData","sleepType","setSleepType","editSleep","addSleep","deleteSleep","SleepTable","SleepForm","deleteorg","onSearch","formattedStart","formattedEnd","search","filteredData","setFilteredData","isDropdownVisible","setIsDropdownVisible","isSelect","setIsSelect","selectedItem","setSelectedItem","inputRef","term","results","_item$name","_item$name$toLowerCas","includes","matchedItem","_item$name2","totalPages","setTotalPages","pagesCount","Math","ceil","handlePageChange","page","pageNumbers","getPageNumbers","arr","alignItems","gap","opacity","boxShadow","marginLeft","fontSize","fontWeight","lineHeight","cursor","number","SearchBar","_dt$latest_form_submi","_dt$latest_form_submi2","_dt$latest_form_submi3","_dt$latest_form_submi4","formatFetchDate","created_at","Badge","score","testSubIcon","testUnSubIcon","testViewIcon","render","deleteModal","setDeleteModal","editModal","setEditModal","deleteData","editData","background","row","rowIndex","column","renderCell","CModalHeader","BMI","BPForm","RespirationRateForm","Spo2","Temperature","LFTForm","HeartRate","BSugar","LipidProfileForm","HCT","Hemogloin","BUricAcid","columnKey","renderPdf","contentUrl","_value$name","_value$status","formatDateTime","dateTimeString","renderActionButton","Warning","Approve","visibleEye","_dt$medicines","_dt$medicines2","_dt$medicines3","_dt$medicines4","dat","textTransform","UStatus","_dt$values3$condition","chronic","prev_illness","mimeType","itemPerPage","charAt","toUpperCase","originalDateStr","toLocaleString","hour","minute","hour12","now","parseISO"],"sourceRoot":""}