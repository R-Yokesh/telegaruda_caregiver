{"version":3,"file":"static/js/149.83e2037c.chunk.js","mappings":"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","sources":["ApiServices/useApi.jsx","Components/Badge/Badge.jsx","Components/BlurBackground/BlurBackground.jsx","Components/Breadcrumb/Breadcrumb.jsx","Components/Buttons/ActiveButton/ActiveButton.jsx","Components/Buttons/DropDownButton/DropDownButton.jsx","Components/Buttons/PrimaryButton/PrimaryButton.jsx","Components/Consultant/TableColumnsJson/ObjectiveJson.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Neurological/Neurological.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Ophthalmic/Ophthalmic.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Peadiatric/Peadiatric.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Psychiatric/Psychiatric.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Psychiatric/PsychiatricForm.jsx","Components/Tables/DiagnosisTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Diagnosis/DiagnosisForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Diagnosis/Diagnosis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Immunization/ImmunizationForm.jsx","Components/Tables/ImmunizationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Immunization/Immunization.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Lab/LabForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/PhysicalExam/PhysicalExam.jsx","Components/Tables/NextAppointmentTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointmentTab/NextAppointmentForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointmentTab/NextAppointmentTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointment.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/DetailsTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationCompleted.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrder.jsx","Components/Tables/PatientEducationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducationTab/PatientEducationTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducation.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducationTab/PatientEducationForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureForm.jsx","Components/Tables/ProcedurerTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/Cpt.jsx","Components/Tables/TherapiesTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/TherapiesTab/TherapiesForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/TherapiesTab/TherapiesTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/Therapies.jsx","Components/Tables/Subjective/ChiefComplaintTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Chief Complaints/ChiefComplaintsForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Chief Complaints/ChiefComplaints.jsx","Components/Tables/Subjective/FamilyHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Family History/FamilyHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Medical History/MedHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Medical History/MedicalHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/ObstericHistoryForm.jsx","Components/Tables/Subjective/ObstetricHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/MensturalHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/ScreeningHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/OGHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Social History/MedHistoryForm.jsx","Components/Tables/Subjective/SocialHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Social History/SocialHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Surgical History/SurgicalForm.jsx","Components/Tables/Subjective/SurgicalTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Surgical History/SurgicalHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Medication/Medication.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Medication/MedicationForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Signs And Symptoms/SignsSymptomsForm.jsx","Components/Tables/Subjective/SymtomsTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Signs And Symptoms/SignsSymptoms.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/ExerciseHabit/ExcerciseHabitForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/ExerciseHabit/ExerciseHabit.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Mood/MoodForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Mood/Mood.jsx","Components/Tables/Subjective/WellnessProfileTable/NutritionDietTable.jsx","Components/Tables/Subjective/WellnessProfileTable/NutritionFluidTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/DietForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/FluidIntakeForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/Nutrition.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/SexualStatus/SexualStatusForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/SexualStatus/SexualStatus.jsx","Components/Tables/Subjective/WellnessProfileTable/SleepTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Sleep/SleepForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Sleep/Sleep.jsx","Components/DateCards/DateCards.jsx","Components/DateRangePicker/DateRangePicker.jsx","Components/DateRangePicker/DateSearch.jsx","Components/DateRangePicker/DateSelector.jsx","Components/DateRangePicker/SingleDatePicker.jsx","Components/Dropdown/Dropdown.jsx","Components/OptionItems/OptionItem.jsx","Components/Pagination/Pagination.jsx","Components/SearchBar/SearchBar.jsx","Components/Tables/AssessmentTools/PsychiatricTable.jsx","Components/Tables/DynamicTable.jsx","Components/Tables/ImagingOrderTable.jsx","Components/Tables/LabOrderTable.jsx","Components/Tables/LabTable.jsx","Components/Tables/MedicationOrderTable.jsx","Components/Tables/Subjective/MedicalHistoryTable.jsx","Components/Tables/Subjective/MedicationTable.jsx","Components/Tables/Subjective/WellnessProfileTable/ExerciseHabitTable.jsx","Components/Tables/Subjective/WellnessProfileTable/MoodTable.jsx","Config/config.jsx","Utils/commonUtils.jsx","Utils/dateUtils.jsx"],"sourcesContent":["import { useState, useCallback, useRef } from \"react\";\r\n\r\nconst useApi = () => {\r\n  const apiUrl = process.env.REACT_APP_API_URL;\r\n  const apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const cache = useRef({});\r\n\r\n  const fetchData = useCallback(\r\n    async (url, options) => {\r\n      setLoading(true);\r\n\r\n      if (cache?.current[url] && url.startsWith(\"resource/vitals\")) {\r\n        setLoading(true);\r\n        cache.current = {};\r\n      }\r\n      if (cache?.current[url]) {\r\n        setLoading(false);\r\n        return cache.current[url];\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(apiUrl + url, options);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch ${url}: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        cache.current[url] = data;\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(`Error: ${error.message}`);\r\n        throw error;\r\n      }\r\n    },\r\n    [apiUrl]\r\n  );\r\n\r\n  const get = useCallback(\r\n    async (url) => {\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData, apiKey]\r\n  );\r\n\r\n  const post = useCallback(\r\n    async (url, body) => {\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n        body: JSON.stringify(body),\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData]\r\n  );\r\n\r\n  const patch = useCallback(\r\n    async (url, body) => {\r\n      const options = {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n        body: JSON.stringify(body),\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData]\r\n  );\r\n\r\n  const del = useCallback(\r\n    async (url) => {\r\n      const options = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n      };\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(apiUrl + url, options);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch ${url}: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(`Error: ${error.message}`);\r\n        throw error;\r\n      }\r\n    },\r\n    [apiKey, apiUrl]\r\n  );\r\n\r\n  // Function to clear all cache entries\r\n  const clearCache = useCallback(() => {\r\n    cache.current = {}; // Clear all entries from cache\r\n  }, []);\r\n  return {\r\n    loading,\r\n    error,\r\n    get,\r\n    post,\r\n    patch,\r\n    del,\r\n    clearCache,\r\n  };\r\n};\r\n\r\nexport default useApi;\r\n","import React from \"react\";\r\n\r\nconst Badge = ({ label, color }) => {\r\n  return <div className={`badge badge-${color} fs-14 fw-500`}>{label}</div>;\r\n};\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\n\r\nconst BlurBackground = ({ children }) => {\r\n  return <div className=\"blur-background\">{children}</div>;\r\n};\r\n\r\nexport default BlurBackground;\r\n","import { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./Breadcrumb.css\";\r\n\r\nconst Breadcrumb = ({ paths }) => {\r\n  const lastIndex = paths.length - 1;\r\n  const url = \"/telegaruda-caregiver\";\r\n  return (\r\n    <>\r\n      <CBreadcrumb>\r\n        {paths.map((data, index) => (\r\n          <CBreadcrumbItem\r\n            href={url + data?.to}\r\n            className={`breadcrumb-item-custom ${\r\n              lastIndex === index && \"black\"\r\n            }`}\r\n          >\r\n            <span className=\"breadcrumb-label\">{data.label}</span>\r\n          </CBreadcrumbItem>\r\n        ))}\r\n      </CBreadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from \"react\";\r\nimport \"./ActiveButton.css\";\r\n\r\nconst ActiveButton = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"act-button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ActiveButton;\r\n","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst DropdownButton = ({ buttonName2, getbtnNames }) => {\r\n  const [buttonText, setButtonText] = useState(\"SAVE\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleItemClick = (text) => {\r\n    setButtonText(text);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button className=\"dropdown-button button\">\r\n        <div className=\"d-flex align-items-center justify-content-between\" onClick={() => getbtnNames(buttonText)}>\r\n          <div className=\"w-100\" >\r\n            <span className=\"fs-16 fw-600\">{buttonText}</span>\r\n          </div>\r\n          <div onClick={toggleDropdown}>\r\n            {!isOpen ? (\r\n              <img src={Assets.cDown} alt=\"down\" />\r\n            ) : (\r\n              <img src={Assets.cUp} alt=\"up\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"dropdown-content\">\r\n          {buttonText === buttonName2 && (\r\n            <span\r\n              onClick={() => handleItemClick(\"SAVE\")}\r\n              className=\"fs-14 fw-600\"\r\n            >\r\n              SAVE\r\n            </span>\r\n          )}\r\n          {buttonText === \"SAVE\" && (\r\n            <span\r\n              onClick={() => handleItemClick(buttonName2)}\r\n              className=\"fs-14 fw-600\"\r\n            >\r\n              {buttonName2}\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownButton;\r\n","import React from \"react\";\r\nimport \"./PrimaryButton.css\";\r\n\r\nconst PrimaryButton = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import { Assets } from \"../../../assets/Assets\";\r\n\r\nexport const ObjectiveDatas = [\r\n  {\r\n    id: 1,\r\n    icon: Assets.VitalBP,\r\n    slug: \"blood-pressure\",\r\n    name: \"Blood Pressure\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    category: \"Primary Vitals\",\r\n    badge: [\r\n      { label: \"120/80 mm Hg\", color: \"success\" },\r\n      // { label: \"DIA : 71\", color: \"success\" },\r\n      // { label: \"Pulse : 89\", color: \"success\" },\r\n    ],\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"SYSTOLIC\" },\r\n      { id: 4, label: \"DIASTOLIC\" },\r\n      { id: 5, label: \"PULSE (IN BPM)\" },\r\n      { id: 6, label: \"DATE\" },\r\n      { id: 7, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        systolic: \"112\",\r\n        diastolic: \"25\",\r\n        \"pulse_(in_bpm)\": \"89\",\r\n        chartLabel1: \"PULSE (IN BPM)\",\r\n        date: \"02-04-2024 12:13\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Pressure\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"error\",\r\n          name: \"High Blood Pressure (Hypertension) Stage 1\",\r\n        },\r\n        systolic: \"112\",\r\n        diastolic: \"25\",\r\n        \"pulse_(in_bpm)\": \"125\",\r\n        date: \"05-04-2024 13:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Pressure\",\r\n      },\r\n    ],\r\n    chartLabel1: \"PULSE (IN BPM)\",\r\n  },\r\n  {\r\n    id: 2,\r\n    icon: Assets.VitalBs,\r\n    slug: \"blood-sugar\",\r\n    name: \"Blood Sugar\",\r\n    category: \"Metabolic And Biochemical Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"110 mg/dL\", color: \"success\" }],\r\n    chartLabel1: \"Blood Sugar (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Blood Sugar\" },\r\n      { id: 4, label: \"Type\" },\r\n      { id: 5, label: \"DATE\" },\r\n      { id: 6, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        blood_sugar: \"110 mg/dL\",\r\n        blood_sugar_value: \"110\",\r\n        type: \"Random\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Sugar\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        blood_sugar: \"110 mg/dL\",\r\n        blood_sugar_value: \"110\",\r\n        type: \"Random\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Blood Sugar\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    icon: Assets.VitalBMI,\r\n    slug: \"bmi\",\r\n    name: \"BMI\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"24.5 kg/m²\", color: \"success\" }],\r\n    chartLabel1: \"BMI (kg/m²)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BMI (kg/m²)\" },\r\n      { id: 4, label: \"Height (cm)\" },\r\n      { id: 5, label: \"Weight (kg)\" },\r\n      { id: 6, label: \"DATE\" },\r\n      { id: 7, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        bmi: \"24.13\",\r\n        height: \"159cm\",\r\n        weight: \"61kg\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"BMI\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"error\",\r\n          name: \"Overweight\",\r\n        },\r\n        bmi: \"27.01\",\r\n        height: \"180cm\",\r\n        weight: \"87.5kg\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"BMI\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    icon: Assets.VitalHCT,\r\n    slug: \"hct\",\r\n    name: \"Hematocrit (HCT)\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"23%\", color: \"error\" }],\r\n    chartLabel1: \"HCT (%)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"HCT %\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        \"hct_%\": \"42%\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Hematocrit (HCT)\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        \"hct_%\": \"45%\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Hematocrit (HCT)\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    icon: Assets.VitalHBeat,\r\n    slug: \"heart-rate\",\r\n    name: \"Heart\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"1 bpm\", color: \"success\" }],\r\n    chartLabel1: \"Heart Rate (bpm)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"Result\" },\r\n      { id: 3, label: \"HR (bpm)\" },\r\n      { id: 4, label: \"Type\" },\r\n      { id: 5, label: \"Result File\" },\r\n      { id: 6, label: \"Interpretation\" },\r\n      { id: 7, label: \"DATE\" },\r\n      { id: 8, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"error\", name: \"Abnormal Heart Rate\" },\r\n        // ecg: {\r\n        //   contentType: \"image\",\r\n        //   link: Assets.ecgSample,\r\n        // },\r\n        \"hr_(bpm)\": \"120\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Heart Rate\",\r\n        interpretation: \"ECG Interpretation\",\r\n        type: \"3 Lead\",\r\n        // result_file: \"heart.png\",\r\n        result_file: {\r\n          contentType: \"image\",\r\n          link: Assets.ecgSample,\r\n          name: \"heart.png\",\r\n        },\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        // ecg: {\r\n        //   contentType: \"pdf\",\r\n        //   link: \"https://www.orimi.com/pdf-test.pdf\",\r\n        // },\r\n        \"hr_(bpm)\": \"80\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Heart Rate\",\r\n        interpretation: \"ECG Interpretation\",\r\n        type: \"3 Lead\",\r\n        // result_file: \"heart.pdf\",\r\n        result_file: {\r\n          contentType: \"pdf\",\r\n          link: \"https://www.orimi.com/pdf-test.pdf\",\r\n          name: \"heart.pdf\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    icon: Assets.VitalHae,\r\n    slug: \"hemoglobin\",\r\n    name: \"Hemoglobin\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"14 g/dL\", color: \"error\" }],\r\n    chartLabel1: \"Hemoglobin (g/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Hemoglobin\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        hemoglobin: \"15\",\r\n        hemoglobinValue: \"15\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Hemoglobin\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        hemoglobin: \"15\",\r\n        hemoglobinValue: \"15\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Hemoglobin\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    icon: Assets.BKetone,\r\n    slug: \"keytone\",\r\n    name: \"Blood Ketone\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"0.5 mmol/L\", color: \"error\" }],\r\n    chartLabel1: \"Blood Ketone (mmol/L)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BLOOD KETONE\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        blood_ketone: \"0.33 mmol/L\",\r\n        blood_ketone_value: \"0.33\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Ketone\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        blood_ketone: \"0.33 mmol/L\",\r\n        blood_ketone_value: \"0.33\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Blood Ketone\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    icon: Assets.VitalLipid,\r\n    slug: \"lipid-profile\",\r\n    name: \"Lipid Profile\",\r\n    category: \"Metabolic And Biochemical Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [\r\n      { label: \"Total Cholesterol: 180 mg/dL \", color: \"success\" },\r\n      { label: \"LDL: 100 mg/dL\", color: \"error\" },\r\n      { label: \"HDL: 50 mg/dL \", color: \"error\" },\r\n      // { label: \"TG: Optimal\", color: \"error\" },\r\n      { label: \"Triglycerides: 150 mg/dL\", color: \"success\" },\r\n    ],\r\n    chartLabel1: \"LDL (mg/dL)\",\r\n    chartLabel2: \"HDL (mg/dL)\",\r\n    chartLabel3: \"VLDL (mg/dL)\",\r\n    chartLabel4: \"LDL/HDL (mg/dL)\",\r\n    chartLabel5: \"Triglycerides (mg/dL)\",\r\n    chartLabel6: \"Total Cholesterol (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"LDL(mg/dL)\" },\r\n      { id: 4, label: \"HDL(mg/dL)\" },\r\n      { id: 5, label: \"VLDL(mg/dL)\" },\r\n      { id: 6, label: \"LDL/HDL(mg/dL)\" },\r\n      { id: 7, label: \"Triglycerides(mg/dL)\" },\r\n      { id: 8, label: \"Total Cholesterol(mg/dL)\" },\r\n      { id: 9, label: \"DATE\" },\r\n      { id: 10, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        \"ldl(mg/dl)\": \"60 mg/dL\",\r\n        \"hdl(mg/dl)\": \"50 mg/dL\",\r\n        \"vldl(mg/dl)\": \"5 mg/dL\",\r\n        \"ldl/hdl(mg/dl)\": \"1\",\r\n        \"triglycerides(mg/dl)\": \"140 mg/dL\",\r\n        \"total_cholesterol(mg/dl)\": \"180 mg/dL\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Lipid Profile\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        \"ldl(mg/dl)\": \"60 mg/dL\",\r\n        \"hdl(mg/dl)\": \"50 mg/dL\",\r\n        \"vldl(mg/dl)\": \"5 mg/dL\",\r\n        \"ldl/hdl(mg/dl)\": \"1\",\r\n        \"triglycerides(mg/dl)\": \"140 mg/dL\",\r\n        \"total_cholesterol(mg/dl)\": \"180 mg/dL\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Lipid Profile\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    icon: Assets.VitalRespi,\r\n    slug: \"respiration\",\r\n    name: \"Respiration Rate\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"16 bpm\", color: \"error\" }],\r\n    chartLabel1: \"Respiration Rate (BPM)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Respiration Rate (BPM)\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"error\", name: \"High\" },\r\n        \"respiration_rate_(bpm)\": \"44\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Respiration Rate\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        \"respiration_rate_(bpm)\": \"18\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Respiration Rate\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 10,\r\n    icon: Assets.SpO2,\r\n    slug: \"spO2\",\r\n    name: \"SpO2\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"92%\", color: \"success\" }],\r\n    chartLabel1: \"SpO2 (%)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      // { id: 3, label: \"Pulse Rate (BPM)\" },\r\n      { id: 3, label: \"SpO2\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"error\", name: \"Abnormal\" },\r\n        \"pulse_rate_(bpm)\": \"120\",\r\n        spo2: \"99%\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"SpO2\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        spo2: \"90%\",\r\n        \"pulse_rate_(bpm)\": \"70\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"SpO2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 11,\r\n    icon: Assets.Temp,\r\n    slug: \"temperature\",\r\n    name: \"Temperature\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [\r\n      { label: \"36.6*C\", color: \"success\" },\r\n      { label: \"96.80 ° F\", color: \"success\" },\r\n    ],\r\n    chartLabel1: \"Temperature (°F) \",\r\n    chartLabel2: \"Temperature (°C)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Temperature\" },\r\n      { id: 4, label: \"Method\" },\r\n      { id: 5, label: \"DATE\" },\r\n      { id: 6, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        // temperature_fahrenheit: \"96.80 ° F\",\r\n        // temperature_celsius: \"36 ° C\",\r\n        method: \"Oral\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Temperature\",\r\n        temperature: \"96\",\r\n        unit: \"Celsius\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        // temperature_fahrenheit: \"96.80 ° F\",\r\n        // temperature_celsius: \"36 ° C\",\r\n        method: \"Oral\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Temperature\",\r\n        temperature: \"36\",\r\n        unit: \"Celsius\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 12,\r\n    icon: Assets.LFT,\r\n    slug: \"spirometer\",\r\n    name: \"Lung Function Test (LFT)\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    category: \"Primary Vitals\",\r\n    chartLabel1: \"FVC (%)\",\r\n    chartLabel2: \"FEV1 (%)\",\r\n    chartLabel4: \"FEV1/FVC Ratio (%)\",\r\n    chartLabel3: \"PEF (%)\",\r\n    badge: [\r\n      { label: \"FEV1 (%): 1L\", color: \"error\" },\r\n      { label: \"FVC (%): 1L\", color: \"error\" },\r\n      { label: \"FEV1/FVC Ratio (%): 49\", color: \"error\" },\r\n      { label: \"PEF (%): 1L/min\", color: \"error\" },\r\n    ],\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"Result\" },\r\n      { id: 3, label: \"FVC (L)\" },\r\n      { id: 4, label: \"FEV1 (L)\" },\r\n      { id: 5, label: \"PEF (L/s)\" },\r\n      { id: 6, label: \"FEV1/FVC (%)\" },\r\n      { id: 7, label: \"DATE\" },\r\n      { id: 8, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        \"fvc_(l)\": \"5.94\",\r\n        \"fev1_(l)\": \"12.45\",\r\n        \"fev1/fvc_(%)\": \"41\",\r\n        \"pef_(l/s)\": \"2.62\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Lung Function Test (LFT)\",\r\n        result: \"Lorem Ipsum\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        \"fvc_(l)\": \"6.94\",\r\n        \"fev1_(l)\": \"2.45\",\r\n        \"fev1/fvc_(%)\": \"41\",\r\n        \"pef_(l/s)\": \"2.62\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Lung Function Test (LFT)\",\r\n        result: \"Lorem Ipsum\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 13,\r\n    icon: Assets.BUAcid,\r\n    slug: \"uric_acid\",\r\n    name: \"Blood Uric Acid\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"6 mg/dL\", color: \"error\" }],\r\n    chartLabel1: \"Blood Uric Acid (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BLOOD URIC ACID\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        blood_uric_acid: \"5 mg/dL\",\r\n        blood_uric_acid_value: \"5\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Uric Acid\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        blood_uric_acid: \"5 mg/dL\",\r\n        blood_uric_acid_value: \"5\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Blood Uric Acid\",\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   id: 14,\r\n  //   icon: Assets.Urinalysis,\r\n  //   name: \"Urinalysis\",\r\n  //   category: \"Renal and Metabolic Markers\",\r\n  //   date: \"Recently Added 27-03-2024\",\r\n  //   badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n  //   chartLabel1: \"Urine (μmol/kg/d)\",\r\n  //   chartLabel2: \"ph\",\r\n  //   columnsData: [\r\n  //     { id: 1, label: \"NO.\" },\r\n  //     { id: 2, label: \"RESULT\" },\r\n  //     { id: 3, label: \"URINE\" },\r\n  //     { id: 4, label: \"PH\" },\r\n  //     { id: 5, label: \"SUGAR\" },\r\n  //     { id: 6, label: \"PROTEIN\" },\r\n  //     { id: 7, label: \"LEUKOCYTES\" },\r\n  //     { id: 8, label: \"RBC\" },\r\n  //     { id: 9, label: \"DATE\" },\r\n  //     { id: 10, label: \"ACTION\" },\r\n  //   ],\r\n  //   tableData: [\r\n  //     {\r\n  //       \"no.\": 1,\r\n  //       result: { status: \"success\", name: \"Normal\" },\r\n  //       urine: \"100 μmol/kg/d\",\r\n  //       chartValue: \"100\",\r\n  //       ph: \"17.5\",\r\n  //       sugar: \"0.8 mmol/L\",\r\n  //       protein: \"None\",\r\n  //       leukocytes: \"None\",\r\n  //       rbc: \"None\",\r\n  //       date: \"06-24-2024 10:15\",\r\n  //       action: [{ type: \"warning\" }],\r\n  //       name: \"Urinalysis\",\r\n  //     },\r\n  //     {\r\n  //       \"no.\": 2,\r\n  //       result: {\r\n  //         status: \"success\",\r\n  //         name: \"Normal\",\r\n  //       },\r\n  //       urine: \"110 μmol/kg/d\",\r\n  //       chartValue: \"110\",\r\n  //       ph: \"6.5\",\r\n  //       sugar: \"0.8 mmol/L\",\r\n  //       protein: \"None\",\r\n  //       leukocytes: \"None\",\r\n  //       rbc: \"None\",\r\n  //       date: \"05-24-2024 10:15\",\r\n  //       action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n  //       name: \"Urinalysis\",\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    id: 14,\r\n    icon: Assets.Urinalysis,\r\n    slug: \"urine\",\r\n    name: \"Urinalysis\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    // badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n    badge: [\r\n      { label: \"Color: Straw \", color: \"success\" },\r\n      { label: \"Clarity: Clear\", color: \"success\" },\r\n      { label: \"Specific Gravity: 1.008 \", color: \"success\" },\r\n      { label: \"PH: Normal (6-7)\", color: \"success\" },\r\n      { label: \"Protein: Trace\", color: \"success\" },\r\n      { label: \"Glucose: Negative\", color: \"success\" },\r\n    ],\r\n    chartLabel1: \"Specific gravity\",\r\n    chartLabel2: \"PH\",\r\n    chartLabel3: \"Urobilinogen\",\r\n    chartLabel4: \"Red Blood Cells\",\r\n    chartLabel5: \"White Blood Cells\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"Color\" },\r\n      { id: 3, label: \"Clarity\" },\r\n      { id: 4, label: \"PH\" },\r\n      { id: 5, label: \"Protein\" },\r\n      { id: 6, label: \"Glucose\" },\r\n      { id: 7, label: \"Leukocyte\" },\r\n      { id: 8, label: \"Bilirubin\" },\r\n      { id: 9, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        color: \"Straw\",\r\n        specific_gravity: \"1.308\",\r\n        ph: \"7\",\r\n        clarity: \"Clear\",\r\n        protein: \"Trace\",\r\n        glucose: \"Negative\",\r\n        leukocyte: \"79\",\r\n        bilirubin: \"120\",\r\n        urobilinogen: \"70\",\r\n        red_blood_cells: \"120\",\r\n        white_blood_cells: \"110\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Urinalysis\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        color: \"Straw\",\r\n        specific_gravity: \"1.308\",\r\n        ph: \"7\",\r\n        clarity: \"Clear\",\r\n        protein: \"Trace\",\r\n        glucose: \"Negative\",\r\n        leukocyte: \"79\",\r\n        bilirubin: \"120\",\r\n        urobilinogen: \"70\",\r\n        red_blood_cells: \"120\",\r\n        white_blood_cells: \"110\",\r\n\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Urinalysis\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 15,\r\n    icon: Assets.Urea,\r\n    slug: \"urea\",\r\n    name: \"Urea\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    badge: [{ label: \"32mg/dl\", color: \"error\" }],\r\n    chartLabel1: \"Urea (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"UREA\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        urea: \"20 mg/dL\",\r\n        urea_value: \"20\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Urea\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        urea: \"20 mg/dL\",\r\n        urea_value: \"20\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Urea\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 16,\r\n    icon: Assets.Creatinine,\r\n    name: \"Creatinine\",\r\n    slug: \"creatinine\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"1.7 mg/dL\", color: \"error\" }],\r\n    chartLabel1: \"Creatinine (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"CREATININE\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        creatinine: \"1.2 mg/dL\",\r\n        creatinine_value: \"1.2\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Creatinine\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        creatinine: \"1.2 mg/dL\",\r\n        creatinine_value: \"1.2\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Creatinine\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 17,\r\n    icon: Assets.GFR,\r\n    slug: \"gfr\",\r\n    name: \"GFR\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"55 mL/min/1.73m²\", color: \"error\" }],\r\n    chartLabel1: \"GFR (mL/min/1.73m²)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"GFR\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        gfr: \"92 mL/min/1.73m²\",\r\n        gfr_value: \"92\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"GFR\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        gfr: \"90 mL/min/1.73m²\",\r\n        gfr_value: \"90\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"GFR\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../../AssessmentTool/Psychiatric/PsychiatricForm\";\r\n\r\nconst Neurological = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"NIH Stroke Scale/Score (NIHSS)\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Level of consciousness\",\r\n          options: [\r\n            \"Alert, keenly responsive\",\r\n            \"Arouses to minor stimulation\",\r\n            \"Requires repeated stimulation to arouse\",\r\n            \"Movements to pain\",\r\n            \"Postures or unresponsive\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"2. Ask month and age\",\r\n          options: [\r\n            \"Both questions right\",\r\n            \"1 question right\",\r\n            \"0 questions right\",\r\n            \"Dysarthric/intubated/trauma/language barrier\",\r\n            \"Aphasic\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"3. Blink eyes & squeeze hands\",\r\n          options: [\r\n            \"Performs both tasks\",\r\n            \"Performs 1 task\",\r\n            \"Performs 0 tasks\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"4. Horizontal extraocular movements\",\r\n          options: [\r\n            \"Normal\",\r\n            \"Partial gaze palsy: can be overcome\",\r\n            \"Partial gaze palsy: corrects with oculocephalic reflex\",\r\n            \"Forced gaze palsy: cannot be overcome\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"5. Visual fields\",\r\n          options: [\r\n            \"No visual loss\",\r\n            \"Partial hemianopia\",\r\n            \"Complete hemianopia\",\r\n            \"Patient is bilaterally blind\",\r\n            \"Bilateral hemianopia\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Facial palsy\",\r\n          options: [\r\n            \"Normal symmetry\",\r\n            \"Minor paralysis (flat nasolabial fold, smile asymmetry)\",\r\n            \"Partial paralysis (lower face)\",\r\n            \"Unilateral complete paralysis (upper/lower face)\",\r\n            \"Bilateral complete paralysis (upper/lower face)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"7. Left arm motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"No effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"8. Right arm motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"No effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"9. Left leg motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"Some effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"10. Right leg motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"No effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"11. Limb Ataxia\",\r\n          options: [\r\n            \"No ataxia\",\r\n            \"Ataxia in 1 Limb\",\r\n            \"Ataxia in 2 Limbs\",\r\n            \"Does not understand\",\r\n            \"Paralyzed\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"12. Sensation\",\r\n          options: [\r\n            \"Normal: no sensory loss\",\r\n            \"Mild-moderate loss: less sharp/more dull\",\r\n            \"Mild-moderate loss: can sense being touched\",\r\n            \"Complete loss: cannot sense being touched at all\",\r\n            \"No response and quadriplegic\",\r\n            \"Coma/unresponsive\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"13. Language/aphasia\",\r\n          options: [\r\n            \"Normal: no aphasia\",\r\n            \"Mild-moderate aphasia: some obvious changes, without significant limitation\",\r\n            \"Severe aphasia: fragmentary expression, inference needed, cannot identify materials\",\r\n            \"Mute/global aphasia: no usable speech/auditory comprehension\",\r\n            \"Coma/unresponsive\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"14. Dysarthria\",\r\n          options: [\r\n            \"Normal\",\r\n            \"Mild-moderate dysarthria: slurring but can be understood\",\r\n            \"Severe dysarthria: unintelligible slurring or out of proportion to dysphasia\",\r\n            \"Mute/anarthric\",\r\n            \"Intubated/unable to test\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"15. Extinction/inattention\",\r\n          options: [\r\n            \"No abnormality\",\r\n            \"Visual/tactile/auditory/spatial/personal inattention\",\r\n            \"Extinction to bilateral simultaneous stimulation\",\r\n            \"Profound hemi-inattention (ex: does not recognize own hand)\",\r\n            \"Extinction to >1 modality\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const formTitle = \"NIH Stroke Scale/Score (NIHSS)\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n\r\n            {/* <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow> */}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Neurological;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../Psychiatric/PsychiatricForm\";\r\n\r\nconst Ophthalmic = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"Vision Symptoms\",\r\n      date: \"26-07-2024 \",\r\n      result: \"6 Score Medium\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. As a teacher or parent are you concerned with this student’s vision?\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"2. Tilts head, squints, closes or covers one eye when reading?\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"3. Gaze issues, eyes turn in or out, crossed eyes, eyes wander\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"4. Different size pupils or eyes\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"5. Watery eyes, eyes appear hazy or clouded\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"6. Words float, move, or jump around when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"7. Complains of headaches, dizziness, or nausea when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"8. Complains of itching, burning, or scratchy eyes\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"9. Complains of blurred or double vision, unusual sensitivity to light, or difficulty seeing\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"10. History of head injury with vision complaints\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"11. Loses place when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"12. Skips over or leaves out small words when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"13. Writes uphill or downhill; difficulty writing in a straight line\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"14. Has difficulty copying from the board\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"15. Avoids near work, such as reading or writing\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"16. Has difficulty lining up numbers when doing math\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"17. Has difficulty finishing assignments on time\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"18. Holds books too close; leans too close to a computer screen\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"19. Clumsy; bumps into things; knocks things over\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const formTitle = \"Vision Symptoms\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ophthalmic;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../Psychiatric/PsychiatricForm\";\r\n\r\nconst Peadiatric = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"APGAR Score\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Activity (muscle tone)\",\r\n          options: [\"Absent\", \"Flex arms and legs\", \"Active\"],\r\n        },\r\n        {\r\n          label: \"2. Pulse\",\r\n          options: [\"Absent\", \"Below 100 bpm\", \"Over 100 bpm\"],\r\n        },\r\n        {\r\n          label: \"3. Grimace (reflex irritability)\",\r\n          options: [\r\n            \"Floppy\",\r\n            \"Minimal response to stimulation\",\r\n            \"Prompt response to stimulation\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"4. Appearance (skin color)\",\r\n          options: [\"Blue, Pale\", \"Pink body, Blue Extremities\", \"Pink\"],\r\n        },\r\n        {\r\n          label: \"5. Respiration\",\r\n          options: [\"Absent\", \"Slow and irregular\", \"Vigorous cry\"],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const formTitle = \"APGAR Score\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Peadiatric;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"./PsychiatricForm\";\r\n\r\nconst Psychiatric = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"Physical Symptoms\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Stomach pain\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"2. Back pain\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"3. Pain in your arms, legs, or joints (knees, hips, etc.)\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"4. Menstrual cramps or other problems with your periods WOMEN ONLY\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"5. Headaches\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Chest pain\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"7. Dizziness\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"8. Fainting spells\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"9. Feeling your heart pound or race\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"10. Shortness of breath\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"11. Pain or problems during sexual intercourse\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"12. Constipation, loose bowels, or diarrhea\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"13. Nausea, gas, or indigestion\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"14. Feeling tired or having low energy\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"15. Trouble sleeping\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Anger\",\r\n      questions: [\r\n        {\r\n          label: \"1. I was irritated more than people knew\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"2. I felt angry\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"3. I felt like I was ready to explode\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"4. I was grouchy\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"5. I felt annoyed\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Anxiety\",\r\n      questions: [\r\n        {\r\n          label: \"1. I felt fearful\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"2. I felt anxious\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"3. I felt worried\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label:\r\n            \"4. I found it hard to focus on anything other than my anxiety\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"5. I felt nervous\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"6. I felt uneasy\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"7. I felt tense\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Depression\",\r\n      questions: [\r\n        {\r\n          label: \"1. I felt worthless\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"2. I felt that I had nothing to look forward to\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"3. I felt helpless\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"4. I felt sad\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"5. I felt like a failure\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"6. I felt depressed\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"7. I felt unhappy\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"8. I felt hopeless\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Mania\",\r\n      questions: [\r\n        {\r\n          label: \"Question 1\",\r\n          options: [\r\n            \"I do not feel happier or more cheerful than usual\",\r\n            \"I occasionally feel happier or more cheerful than usual\",\r\n            \"I often feel happier or more cheerful than usual\",\r\n            \"I feel happier or more cheerful than usual most of the time\",\r\n            \"I feel happier of more cheerful than usual all of the time\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 2\",\r\n          options: [\r\n            \"I do not feel more self-confident than usual\",\r\n            \"I occasionally feel more self-confident than usual\",\r\n            \"I often feel more self-confident than usual\",\r\n            \"I frequently feel more self-confident than usual\",\r\n            \"I feel extremely self-confident all of the time\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 3\",\r\n          options: [\r\n            \"I do not need less sleep than usual\",\r\n            \"I occasionally need less sleep than usual\",\r\n            \"I often need less sleep than usual\",\r\n            \"I frequently need less sleep than usual\",\r\n            \"I can go all day and all night without any sleep and still not feel tired\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 4\",\r\n          options: [\r\n            \"I do not talk more than usual\",\r\n            \"I occasionally talk more than usual\",\r\n            \"I often talk more than usual\",\r\n            \"I frequently talk more than usual\",\r\n            \"I talk constantly and cannot be interrupted\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 5\",\r\n          options: [\r\n            \"I have not been more active (either socially, sexually, at work, home, or school) than usual\",\r\n            \"I have occasionally been more active than usual\",\r\n            \"I have often been more active than usual\",\r\n            \"I have frequently been more active than usual\",\r\n            \"I am constantly more active or on the go all the time\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Autism Spectrum Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Autism Spectrum Disorder problems that are present for this individual\",\r\n          options: [\r\n            \"None\",\r\n            \"Mild Requiring support (i.e., Rituals and repetitive behaviors [RRBs] cause significant interference with functioning in one or more contexts. Resists attempts by others to interrupt RRBs or to be redirected from fixated interest.)\",\r\n            \"Moderate Requiring SUBSTANTIAL support (i.e., RRBs and/or preoccupations and/or fixated interests appear frequently enough to be obvious to the casual observer and interfere with functioning in a variety of contexts. Distress or frustration is apparent when RRBs are interrupted; difficult to redirect from fixated interest.)\",\r\n            \"Severe Requiring VERY SUBSTANTIAL support (i.e., Preoccupations, fixed rituals and/or repetitive behaviors markedly interfere with functioning in all spheres. Marked distress when rituals or routines are interrupted; very difficult to redirect from fixated interest or returns to it quickly.)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Social Communication Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Social Communication Disorder problems that are present for this individual\",\r\n          options: [\r\n            \"None\",\r\n            \"Mild Requiring support (i.e., Without supports in place, deficits in social communication cause noticeable impairments. Has difficulty initiating social interactions and demonstrates clear examples of atypical or unsuccessful responses to social overtures of others. May appear to have decreased interest in social interactions.)\",\r\n            \"Moderate Requiring SUBSTANTIAL support (i.e., Marked deficits in verbal and nonverbal social communication skills; social impairments apparent even with supports in place; limited initiation of social interactions and reduced or abnormal response to social overtures from others.)\",\r\n            \"Severe Requiring VERY SUBSTANTIAL support (i.e., Severe deficits in verbal and nonverbal social communication skills cause severe impairments in functioning; very limited initiation of social interactions and minimal response to social overtures from others.)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Dimensions Of Psychosis Symptom Severity\",\r\n      questions: [\r\n        {\r\n          label: \"1. Hallucinations\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered psychosis)\",\r\n            \"Present, but mild (little pressure to act upon voices, not very bothered by voices)\",\r\n            \"Present and moderate (some pressure to respond to voices, or is somewhat bothered by voices)\",\r\n            \"Present and severe (severe pressure to respond to voices, or is very bothered by voices)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"2. Delusions\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered psychosis)\",\r\n            \"Present, but mild (little pressure to act upon delusional beliefs, not very bothered by beliefs)\",\r\n            \"Present and moderate (some pressure to act upon beliefs, or is somewhat bothered by beliefs)\",\r\n            \"Present and severe (severe pressure to act upon beliefs, or is very bothered by beliefs)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"3. Disorganized speech\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered disorganization)\",\r\n            \"Present, but mild (some difficulty following speech)\",\r\n            \"Present and moderate (speech often difficult to follow)\",\r\n            \"Present and severe (speech almost impossible to follow)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"4. Abnormal psychomotor behavior\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered abnormal psychomotor behavior)\",\r\n            \"Present, but mild (occasional abnormal or bizarre motor behavior or catatonia)\",\r\n            \"Present and moderate (frequent abnormal or bizarre motor behavior or catatonia)\",\r\n            \"Present and severe (abnormal or bizarre motor behavior or catatonia almost constant)\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"5. Negative symptoms (restricted emotional expression or avolition)\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n            \"Present, but mild decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n            \"Present and moderate decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n            \"Present and severe decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Impaired cognition\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (cognitive function not clearly outside the range expected for age or SES; i.e., within 0.5 SD of mean)\",\r\n            \"Present, but mild (some reduction in cognitive function; below expected for age and SES, 0.5–1 SD from mean)\",\r\n            \"Present and moderate (clear reduction in cognitive function; below expected for age and SES, 1–2 SD from mean)\",\r\n            \"Present and severe (severe reduction in cognitive function; below expected for age and SES, > 2 SD from mean)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"7. Depression\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (occasionally feels sad, down, depressed, or hopeless; concerned about having failed someone or at something but not preoccupied)\",\r\n            \"Present, but mild (frequent periods of feeling very sad, down, moderately depressed, or hopeless; concerned about having failed someone or at something, with some preoccupation)\",\r\n            \"Present and moderate (frequent periods of deep depression or hopelessness; preoccupation with guilt, having done wrong)\",\r\n            \"Present and severe (deeply depressed or hopeless daily; delusional guilt or unreasonable self-reproach grossly out of proportion to circumstances)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"8. Mania\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (occasional elevated, expansive, or irritable mood or some restlessness)\",\r\n            \"Present, but mild (frequent periods of somewhat elevated, expansive, or irritable mood or restlessness)\",\r\n            \"Present and moderate (frequent periods of extensively elevated, expansive, or irritable mood or restlessness)\",\r\n            \"Present and severe (daily and extensively elevated, expansive, or irritable mood or restlessness)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Conduct Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the conduct problems that are present for this individual\",\r\n          options: [\r\n            \"None (No conduct problems)\",\r\n            \"Mild (Few if any conduct problems in excess of those required to make the diagnosis are present, and conduct problems cause relatively minor harm to others [e.g., lying, truancy, staying out after dark without permission, or other rule breaking])\",\r\n            \"Moderate (The number of conduct problems and the effect on others are intermediate between “mild” and “severe” [e.g., stealing without confronting a victim, vandalism])\",\r\n            \"Severe (Many conduct problems in excess of those required to make the diagnosis are present, or conduct problems cause considerable harm to others [e.g., forced sex, physical cruelty, use of a weapon, stealing while confronting a victim, breaking and entering])\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Nonsuicidal Self-Injury\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Nonsuicidal Self-injury problems that are present for this individual\",\r\n          options: [\r\n            \"None (No NSSI acts or NSSI acts on fewer than 3 days AND no urge to self- injure again.)\",\r\n            \"Subthreshold (NSSI acts on 2-4 days OR has self- injured in the past on 5 or more days and has reported urges to self-injure again.)\",\r\n            \"Mild (NSSI acts on 5–7 days using a single method and not requiring surgical treatment [other than cosmetic].)\",\r\n            \"Moderate (NSSI acts on 8–11 days using a single method and not requiring surgical treatment [other than cosmetic] OR NSSI acts on 5–7 days using more than one method.)\",\r\n            \"Severe (At least 1 NSSI act that required surgical treatment [other than cosmetic] OR NSSI acts on 12 or more days using a single method OR NSSI acts on 8 or more days using more than one method.)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"Oppositional Defiant Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Oppositional Defiant problems that are present for this individual\",\r\n          options: [\r\n            \"None (No oppositional defiant symptoms)\",\r\n            \"Mild (Symptoms are confined to only one setting [e.g., at home, at school, at work, with peers])\",\r\n            \"Moderate (Some symptoms are present in at least two settings)\",\r\n            \"Severe (Some symptoms are present in three or more settings)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Somatic Symptom Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Does the individual have or show disproportionate and persistent concerns about the medical seriousness of his/her symptoms?\",\r\n          options: [\r\n            \"Not at all\",\r\n            \"A little bit\",\r\n            \"Somewhat\",\r\n            \"Quite a bit\",\r\n            \"Very much\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"2. Does the individual have or show a high level of health-related anxiety?\",\r\n          options: [\r\n            \"Not at all\",\r\n            \"A little bit\",\r\n            \"Somewhat\",\r\n            \"Quite a bit\",\r\n            \"Very much\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"3. Does the individual spend excessive time and energy devoted to these symptoms or health concerns?\",\r\n          options: [\r\n            \"Not at all\",\r\n            \"A little bit\",\r\n            \"Somewhat\",\r\n            \"Quite a bit\",\r\n            \"Very much\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [formTitle, setFormTitle] = useState(\"\"); // State for form title\r\n\r\n  const itemsPerPage = 12; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    setFormTitle(data?.name); // Set form title based on selected data\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n\r\n            {/* <CRow className=\"mb-3\">\r\n                            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                                <Pagination\r\n                                    currentPage={currentPage}\r\n                                    onPageChange={onPageChange}\r\n                                    totalItems={rowData?.length}\r\n                                    itemsPerPage={itemsPerPage}\r\n                                />\r\n                            </CCol>\r\n                        </CRow> */}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Psychiatric;\r\n","import { CCol, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\n\r\nconst PsychiatricForm = ({ back, defaultValues, questions,formTitle }) => {\r\n    const [formData, setFormData] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(formData);\r\n        // Add your submit logic here\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <h3>{formTitle}</h3>\r\n                <hr />\r\n                {questions?.map((question, index) => (\r\n                    <CRow key={index} className=\"mb-3\">\r\n                        <CCol>\r\n                            <h5>{question?.label}</h5>\r\n                            {question?.options.map((option, cIndex) => (\r\n                                <CFormCheck\r\n                                    key={cIndex}\r\n                                    type=\"radio\"\r\n                                    name={`question${index + 1}`}\r\n                                    id={`question${index + 1}_choice${cIndex + 1}`}\r\n                                    value={option}\r\n                                    label={option}\r\n                                    onChange={handleChange}\r\n                                    checked={formData[`question${index + 1}`] === option}\r\n                                />\r\n                            ))}\r\n                        </CCol>\r\n                    </CRow>\r\n                ))}\r\n            </form>\r\n            <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PsychiatricForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst DiagnosisTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.condition}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.treatment}</CTableDataCell>\r\n              {/* <CTableDataCell>{dt?.remark}</CTableDataCell> */}\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\n\r\nconst DiagnosisForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const [disableText, setDisableText] = useState(false);\r\n  const gravidaoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n  const findgravidaIndex =\r\n    defaultValues?.condition &&\r\n    gravidaoptions?.indexOf(defaultValues?.condition);\r\n  const getSelectedGravida = (data) => {\r\n    console.log(data);\r\n    setDisableText(true);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.condition}\r\n              /> */}\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                  dateFormat={DATE_FORMAT}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.condition}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Description\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                // placeholder=\"Enter\"\r\n                disabled\r\n                defaultValue={defaultValues?.treatment}\r\n                value={\r\n                  disableText\r\n                    ? \"Type 2 diabetes mellitus without complications\"\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisForm;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DiagnosisTable from \"../../../../../Tables/DiagnosisTable\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DiagnosisForm from \"./DiagnosisForm\";\r\nimport DateSearch from \"../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Diagnosis = ({ onClose, from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"ICD CODE\" },\r\n    { id: 4, label: \"Description\" },\r\n    { id: 5, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024\",\r\n      condition: \"E11.8\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"07-06-2024\",\r\n      condition: \"E12.1\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"08-07-2024\",\r\n      condition: \"E12.0\",\r\n      treatment: \"Type 4 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-09-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from !== \"Consult\" && (\r\n        <CRow className=\"mb-0\">\r\n          <CCol md={4} className=\"mb-2\">\r\n            <div className=\"d-flex gap-2\">\r\n              <img\r\n                alt=\"BackBtn\"\r\n                src={Assets.BackBtn}\r\n                style={{ width: \"35px\" }}\r\n                onClick={onClose}\r\n                className=\"cursor\"\r\n              />\r\n              <span className=\"Obj-name d-flex align-items-center\">\r\n                Diagnosis (Including ICD)\r\n              </span>\r\n            </div>\r\n          </CCol>\r\n          <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n            <div className=\"d-flex mt-2\">\r\n              <Breadcrumb\r\n                paths={[\r\n                  { label: \"Home\", to: \"/patients\" },\r\n                  { label: \"Patient List\", to: \"/patients\" },\r\n                  { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                  {\r\n                    label: \"Diagnosis (Including ICD)\",\r\n                    to: \"/patients/history\",\r\n                  },\r\n                ]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <DiagnosisTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n                from={from}\r\n              />\r\n            </CRow>\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <DiagnosisForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Diagnosis;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ImmunizationForm = ({ back, defaultValues }) => {\r\n  console.log(\"first\", defaultValues);\r\n  const [date, setDate] = useState(null);\r\n  const [takendate, setTakenDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.dosage_date;\r\n    const defaultDateString1 = defaultValues?.taken_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.dosage_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n    const defaultDate1 = defaultValues?.taken_date\r\n      ? parseDateString(defaultDateString1)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setTakenDate(defaultDate1);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Vaccine *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.vaccine}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Period *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.period}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Status *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.status}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Dosage Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Taken Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={takendate}\r\n                onChange={(date) => setTakenDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImmunizationForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImmunizationTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.vaccine}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.period}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  {!dt.taken_date ? (\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.vaccined}\r\n                      className=\"cursor\"\r\n                      style={{ width: \"40px\" }}\r\n                      onClick={() => {\r\n                        if (from !== \"Consult\") {\r\n                          selectedData(dt, \"delete\");\r\n                        }\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      alt=\"delete\"\r\n                      style={{ width: \"40px\" }}\r\n                      src={Assets?.colorVaccined}\r\n                      className=\"cursor\"\r\n                      // onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.dosage_date}</CTableDataCell>\r\n              <CTableDataCell>{dt?.taken_date}</CTableDataCell>\r\n              {/* <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImmunizationTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport ImmunizationForm from \"./ImmunizationForm\";\r\nimport ImmunizationTable from \"../../../../../Tables/ImmunizationTable\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\n\r\nconst Immunization = ({ onClose, from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"VACCINE\" },\r\n    { id: 3, label: \"PERIOD\" },\r\n    { id: 4, label: \"STATUS\" },\r\n    { id: 5, label: \"DOSAGE DATE\" },\r\n    { id: 6, label: \"TAKEN DATE\" },\r\n    // { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 2,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 3,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"\",\r\n    },\r\n    {\r\n      id: 5,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 6,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 7,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 8,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 9,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"\",\r\n    },\r\n    {\r\n      id: 10,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [tkDate, setTkDate] = useState(new Date());\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n  const options = [\"Severity\", \"Option 2\", \"Option 3\"]; // Example options\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ImmunizationTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          <CRow className=\"mb-0\">\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Immunization Status\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Immunization Status\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                {/* <DateSelector /> */}\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  {/* <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div> */}\r\n                  <div>\r\n                    {/* onClick={() => addFormPage()} */}\r\n                    <PrimaryButton>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <ImmunizationTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ImmunizationForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure taken this Vaccine ?</h5>\r\n\r\n                    <div style={{ width: \"100%\" }} className=\"mb-3\">\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Taken Date *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            showIcon\r\n                            selected={tkDate}\r\n                            onChange={(date) => setTkDate(date)}\r\n                            maxDate={today}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Immunization;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./MedicalProfile.css\";\r\n\r\nconst MedicalTab = ({ tabs, getCurrentTab, defaultTab }) => {\r\n  const [currentTab, setCurrentTab] = useState(tabs[defaultTab]);\r\n\r\n  const switchTab = (data) => {\r\n    setCurrentTab(data);\r\n    getCurrentTab(data.id);\r\n  };\r\n  return (\r\n    <CCard className=\"medical-tabs\">\r\n      <CCardBody className=\"medical-tabs-container\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`medical-tab-items ${\r\n              data.id === currentTab?.id ? \"medical-tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <span\r\n              className={\r\n                data.id === currentTab?.id\r\n                  ? \"medical-tab-title-active\"\r\n                  : \"medical-tab-title\"\r\n              }\r\n            >\r\n              {data.title}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default MedicalTab;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst BKetone = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [keytone, setKeytone] = useState(defaultData?.blood_ketone || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!keytone) {\r\n      currentErrors.keytone = \"Blood keytone is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          keytone: Number(keytone),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"keytone\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          keytone: Number(keytone),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"keytone\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const deciNum = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{3})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setKeytone(deciNum);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Ketone(mmol/L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.blood_ketone)}\r\n                // onInput={numWithDecimal}\r\n                value={keytone}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n              {errors.keytone && (\r\n                <div className=\"error-text\">{errors.keytone}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BKetone;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst BMI = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{2})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{2})\\.(\\d{2}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n  };\r\n  const [height, setHeight] = useState(defaultData?.[\"height_(cm)\"] || \"\");\r\n  const [weight, setWeight] = useState(defaultData?.[\"weight_(kg)\"] || \"\");\r\n  const [heightUnit, setHeightUnit] = useState(\r\n    defaultData?.height_unit || \"cm\"\r\n  );\r\n  const [weightUnit, setWeightUnit] = useState(\r\n    defaultData?.weight_unit || \"kg\"\r\n  );\r\n  const [bmi, setBmi] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!height || isNaN(height) || height <= 0) {\r\n      currentErrors.height = \"Height is required\";\r\n      isValid = false;\r\n    }\r\n    if (!weight || isNaN(weight) || weight <= 0) {\r\n      currentErrors.weight = \"Weight is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    // if (!heightUnit) {\r\n    //   currentErrors.heightUnit = \"Height Unit is required\";\r\n    //   isValid = false;\r\n    // }\r\n    // if (!weightUnit) {\r\n    //   currentErrors.weightUnit = \"Weight Unit is required\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  // Function to handle BMI calculation\r\n  const calculateBMI = () => {\r\n    if (height && weight) {\r\n      const heightInMeters = height / 100;\r\n      const calculatedBMI = weight / (heightInMeters * heightInMeters);\r\n      setBmi(calculatedBMI.toFixed(2));\r\n    } else {\r\n      setBmi(\"\"); // Handle invalid input\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          height_unit: heightUnit,\r\n          height: height,\r\n          bmi: bmi,\r\n          weight_unit: weightUnit,\r\n          weight: weight,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"bmi\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          height_unit: heightUnit,\r\n          height: height,\r\n          bmi: bmi,\r\n          weight_unit: weightUnit,\r\n          weight: weight,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"bmi\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateBMI();\r\n  }, [weight, height]);\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Height) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                value={heightUnit}\r\n                onChange={(e) => setHeightUnit(e.target.value)}\r\n              />\r\n              {errors.heightUnit && (\r\n                <div className=\"error-text\">{errors.heightUnit}</div>\r\n              )}\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Height (cm) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.height)}\r\n                maxLength={3}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n                value={height}\r\n                onChange={(e) =>\r\n                  setHeight(e.target.value.replace(/[^0-9]/g, \"\"))\r\n                }\r\n              />\r\n              {errors.height && (\r\n                <div className=\"error-text\">{errors.height}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Weight)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={\"kg\"}\r\n                value={weightUnit}\r\n                onChange={(e) => setWeightUnit(e.target.value)}\r\n              />\r\n              {errors.weightUnit && (\r\n                <div className=\"error-text\">{errors.weightUnit}</div>\r\n              )}\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Weight (Kg) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.weight)}\r\n                maxLength={3}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n                value={weight}\r\n                onChange={(e) => {\r\n                  setWeight(e.target.value.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.weight && (\r\n                <div className=\"error-text\">{errors.weight}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                BMI (Kgm2) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.bmi}\r\n                defaultValue={bmi}\r\n                onInput={numWithDecimal}\r\n                disabled\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\"></CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BMI;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst BPForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [systolic, setSystolic] = useState(\r\n    (defaultData?.systolic || \"\").toString()\r\n  );\r\n  const [diastolic, setDiastolic] = useState(\r\n    (defaultData?.diastolic || \"\").toString()\r\n  );\r\n  const [pulse, setPulse] = useState(\r\n    (defaultData?.[\"pulse_(in_bpm)\"] || \"\").toString()\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const convertISOToTime = (isoString) => {\r\n    // Parse the ISO string into a Date object\r\n    const date = new Date(isoString);\r\n\r\n    // Ensure the Date object is valid\r\n    if (isNaN(date.getTime())) {\r\n      throw new Error(\"Invalid ISO string\");\r\n    }\r\n\r\n    // Extract hours and minutes\r\n    const hours = String(date.getUTCHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getUTCMinutes()).padStart(2, \"0\");\r\n\r\n    // Return the formatted time\r\n    return `${hours}:${minutes}`;\r\n  };\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n\r\n  console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     return new Date(year, month - 1, day, hours, minutes);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultData?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultData\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString1 = defaultData?.time;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate1 = defaultData ? defaultDateString1 : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setSelectedDate(defaultDate);\r\n  //   // setSelectedTime(defaultDate1);\r\n  // }, [defaultData]);\r\n\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!systolic?.trim()) {\r\n      newErrors.systolic = \"Systolic is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(systolic)) {\r\n      newErrors.systolic = \"Systolic must be a number.\";\r\n      isValid = false;\r\n    }\r\n    if (!diastolic?.trim()) {\r\n      newErrors.diastolic = \"Diastolic is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(diastolic)) {\r\n      newErrors.diastolic = \"Diastolic must be a number.\";\r\n      isValid = false;\r\n    }\r\n    if (!pulse?.trim()) {\r\n      newErrors.pulse = \"Pulse is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(pulse)) {\r\n      newErrors.pulse = \"Pulse must be a number.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          systolic: Number(systolic),\r\n          diastolic: Number(diastolic),\r\n          pulse: Number(pulse),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"blood-pressure\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          systolic: Number(systolic),\r\n          diastolic: Number(diastolic),\r\n          pulse: Number(pulse),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"blood-pressure\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Systolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"systolic\"\r\n                value={systolic}\r\n                onChange={(e) => setSystolic(e.target.value)}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n              />\r\n              {errors.systolic && (\r\n                <div className=\"error-text\">{errors.systolic}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Diastolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"diastolic\"\r\n                value={diastolic}\r\n                onChange={(e) => setDiastolic(e.target.value)}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n              />\r\n              {errors.diastolic && (\r\n                <div className=\"error-text\">{errors.diastolic}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse (in BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"pulse\"\r\n                value={pulse}\r\n                onChange={(e) => setPulse(e.target.value)}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n              />\r\n              {errors.pulse && <div className=\"error-text\">{errors.pulse}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BPForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { findItemIndex } from \"../../../../../../Utils/commonUtils\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst BSugar = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [type, setType] = useState(defaultData?.type || \"\");\r\n  const [bloodSugar, setBloodSugar] = useState(defaultData?.blood_sugar || \"\");\r\n\r\n  const [errors, setErrors] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    type: \"\",\r\n    bloodSugar: \"\",\r\n  });\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n  console.log(\"time\", getCurrentTime());\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const options = [\"Fasting\", \"Random\", \"Post Prandial \"];\r\n\r\n  const getSelectedValue = (data) => {\r\n    setType(data);\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{4})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{4})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n  };\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!type) {\r\n      currentErrors.type = \"Type is required\";\r\n      isValid = false;\r\n    }\r\n    if (!bloodSugar) {\r\n      currentErrors.bloodSugar = \"Blood Sugar is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          type: type,\r\n          blood_sugar: bloodSugar,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"blood-sugar\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          type: type,\r\n          blood_sugar: bloodSugar,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"blood-sugar\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultData?.type\r\n                      ? options[findItemIndex(options, defaultData?.type)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.type && <div className=\"error-text\">{errors.type}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'mg/dL'}\r\n              />\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Sugar (mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.blood_sugar}\r\n                onInput={numWithDecimal}\r\n                value={bloodSugar}\r\n                onChange={(e) => setBloodSugar(e.target.value)}\r\n              />\r\n              {errors.bloodSugar && (\r\n                <div className=\"error-text\">{errors.bloodSugar}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BSugar;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst BUricAcid = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [uricAcid, setUricAcid] = useState(defaultData?.blood_uric_acid || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!uricAcid) {\r\n      currentErrors.uricAcid = \"Blood Uric Acid is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          uric_acid: Number(uricAcid),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"uric_acid\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          uric_acid: Number(uricAcid),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"uric_acid\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const deciNum = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{3})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setUricAcid(deciNum);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Uric Acid(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.blood_uric_acid)}\r\n                // onInput={numWithDecimal}\r\n                value={uricAcid}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n              {errors.uricAcid && <div className=\"error-text\">{errors.uricAcid}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BUricAcid;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Creatinine = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [creatinine, setCreatinine] = useState(defaultData?.creatinine || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!creatinine) {\r\n      currentErrors.creatinine = \"Creatinine is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          creatinine: Number(creatinine),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"creatinine\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          creatinine: Number(creatinine),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"creatinine\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const deciNum = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{1})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{1})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setCreatinine(deciNum);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Creatinine(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.creatinine)}\r\n                // onInput={numWithDecimal}\r\n                value={creatinine}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n              {errors.creatinine && <div className=\"error-text\">{errors.creatinine}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Creatinine;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst GFR = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [gfr, setGfr] = useState(defaultData?.gfr || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!gfr) {\r\n      currentErrors.gfr = \"gfr is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mL/min/1.73 m²\",\r\n          gfr: Number(gfr),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"gfr\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mL/min/1.73 m²\",\r\n          gfr: Number(gfr),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"gfr\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const deciNum = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{1})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{1})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setGfr(deciNum);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                GFR(mL/min/1.73m²) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.gfr)}\r\n                // onInput={numWithDecimal}\r\n                value={gfr}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n              {errors.gfr && <div className=\"error-text\">{errors.gfr}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GFR;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { extractNum } from \"../../../../../../Utils/commonUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst HCT = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [hct, setHct] = useState(defaultData?.[\"hct_%\"] || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!hct) {\r\n      currentErrors.hct = \"HCT is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          hct: Number(hct),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"hct\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          hct: Number(hct),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"hct\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const deciNum = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{3})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setHct(deciNum);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HCT(%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.[\"hct_%\"])}\r\n                // onInput={numWithDecimal}\r\n                value={hct}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HCT;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport {\r\n  findItemIndex,\r\n  getFileTypeFromMime,\r\n  openFile,\r\n} from \"../../../../../../Utils/commonUtils\";\r\nimport { toast } from \"react-toastify\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst HeartRate = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [type, setType] = useState(defaultData?.type || null);\r\n  const [interpretation, setInterpretation] = useState(\r\n    defaultData?.interpretation === \"-\"\r\n      ? \"\"\r\n      : defaultData?.interpretation || null\r\n  );\r\n  const [ecgFile, setEcgFile] = useState({\r\n    name: \"\",\r\n    link: \"\",\r\n    contentType: \"\",\r\n  });\r\n  const [hr, setHr] = useState(defaultData?.[\"hr_(bpm)\"] || null);\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const options = [\r\n    \"1 Lead ECG\",\r\n    \"3 Lead ECG\",\r\n    \"12 Lead ECG\",\r\n    \"Auscultation\",\r\n    \"Cardiac Function Test\",\r\n  ];\r\n\r\n  const getSelectedValue = (data) => {\r\n    setType(data);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files) {\r\n      handleUpload(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (file) => {\r\n    if (file) {\r\n      // const fileType = getFileTypeFromMime(file.type);\r\n      setEcgFile({ name: file.name, link: \"\", contentType: file.type });\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        // Convert file to base64 string\r\n        const base64 = reader.result.split(\",\")[1]; // Remove the data URL part\r\n        setEcgFile((prevState) => ({\r\n          ...prevState,\r\n          link: base64,\r\n        }));\r\n      };\r\n\r\n      // Read the file as a data URL\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const [errors, setErrors] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    type: \"\",\r\n    hr: \"\",\r\n  });\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!type) {\r\n      currentErrors.type = \"ECG Type is required\";\r\n      isValid = false;\r\n    }\r\n    if (!hr) {\r\n      currentErrors.hr = \"Heart Rate is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"Bpm\",\r\n          heart: Number(hr),\r\n          type: type,\r\n          interpretation: interpretation,\r\n          // result_file: ecgFile,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"heart-rate\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"Bpm\",\r\n          heart: Number(hr),\r\n          type: type,\r\n          interpretation: interpretation,\r\n          // result_file: ecgFile,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"heart-rate\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const openInNewTab = () => {\r\n    if (ecgFile.link && ecgFile.contentType) {\r\n      const dataUrl = `data:${ecgFile.contentType};base64,${ecgFile.link}`;\r\n      window.open(dataUrl, \"_blank\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultData?.type\r\n                      ? options[findItemIndex(options, defaultData?.type)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.type && <div className=\"error-text\">{errors.type}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HR (in bpm) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.hr}\r\n                value={hr}\r\n                onChange={(e) => {\r\n                  setHr(e.target.value.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n                maxLength={3}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n              />\r\n              {errors.hr && <div className=\"error-text\">{errors.hr}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG\r\n              </label>\r\n              <input id=\"file\" type=\"file\" onChange={handleFileChange} />\r\n              <label htmlFor=\"file\">Choose file</label>\r\n\r\n              <div class=\"d-flex flex-column gap-1 justify-content-center h-100\">\r\n                {ecgFile?.link !== \"\" ? (\r\n                  <span className=\"cursor\" onClick={() => openInNewTab()}>\r\n                    ECG.{getFileTypeFromMime(ecgFile?.contentType)}\r\n                  </span>\r\n                ) : (\r\n                  <span className=\"\">No File Chosen</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Interpretation\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.interpretation}\r\n                value={interpretation}\r\n                onChange={(e) => {\r\n                  setInterpretation(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeartRate;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Hemogloin = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [hemoglobin, setHemoglobin] = useState(defaultData?.hemoglobin || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!hemoglobin) {\r\n      currentErrors.hemoglobin = \"Hemoglobin is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          hemoglobin: Number(hemoglobin),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"hemoglobin\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          hemoglobin: Number(hemoglobin),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"hemoglobin\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const deciNum = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{3})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setHemoglobin(deciNum);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Hemogloin(g/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.hemoglobin)}\r\n                // onInput={numWithDecimal}\r\n                value={hemoglobin}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n              {errors.hemoglobin && (\r\n                <div className=\"error-text\">{errors.hemoglobin}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hemogloin;\r\n","import { CCol, CContainer, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst LFTForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [fvcL, setFvcL] = useState(defaultData?.[\"fvc_(l)\"] || \"\");\r\n  const [fvcPercent, setFvcPercent] = useState(defaultData?.fvcPercent || \"\");\r\n  const [fev1L, setFev1L] = useState(defaultData?.[\"fev1_(l)\"] || \"\");\r\n  const [fev1Percent, setFev1Percent] = useState(\r\n    defaultData?.fev1Percent || \"\"\r\n  );\r\n  const [pefL, setPefL] = useState(defaultData?.[\"pef_(l/s)\"] || \"\");\r\n  const [pefPercent, setPefPercent] = useState(defaultData?.pefPercent || \"\");\r\n  const [fev1FvcPercent, setFev1FvcPercent] = useState(\r\n    defaultData?.[\"fev1/fvc_(%)\"] || \"\"\r\n  );\r\n  const [fef25L, setFef25L] = useState(defaultData?.fef25 || \"\");\r\n  const [fef25Percent, setFef25Percent] = useState(\r\n    defaultData?.fef25Percent || \"\"\r\n  );\r\n  const [fef50L, setFef50L] = useState(defaultData?.fef50 || \"\");\r\n  const [fef50Percent, setFef50Percent] = useState(\r\n    defaultData?.fef50Percent || \"\"\r\n  );\r\n  const [fef75L, setFef75L] = useState(defaultData?.fef75 || \"\");\r\n  const [fef75Percent, setFef75Percent] = useState(\r\n    defaultData?.fef75Percent || \"\"\r\n  );\r\n  const [fef2575L, setFef2575L] = useState(defaultData?.fef2575 || \"\");\r\n  const [fef2575Percent, setFef2575Percent] = useState(\r\n    defaultData?.fef2575Percent || \"\"\r\n  );\r\n  const [notes, setNotes] = useState(defaultData?.notes || \"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{2})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{2})\\.(\\d{2}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n  };\r\n\r\n  const convertNum = (e) => {\r\n    e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n  };\r\n  // Validate inputs\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    let isValid = true;\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    // if (!notes) {\r\n    //   newErrors.notes = \"Notes is required\";\r\n    //   isValid = false;\r\n    // }\r\n    // Check required numerical fields\r\n    const fields = [\r\n      {\r\n        name: \"fvcL\",\r\n        value: fvcL,\r\n        maxLength: 5,\r\n        required: true,\r\n        label: \"FVC (L)\",\r\n      },\r\n      {\r\n        name: \"fvcPercent\",\r\n        value: fvcPercent,\r\n        maxLength: 2,\r\n        required: true,\r\n        label: \"FVC (%)\",\r\n      },\r\n      {\r\n        name: \"fev1L\",\r\n        value: fev1L,\r\n        maxLength: 5,\r\n        required: true,\r\n        label: \"FEV1 (L)\",\r\n      },\r\n      {\r\n        name: \"fev1Percent\",\r\n        value: fev1Percent,\r\n        maxLength: 2,\r\n        required: true,\r\n        label: \"FEV1 (%)\",\r\n      },\r\n      // {\r\n      //   name: \"pefL\",\r\n      //   value: pefL,\r\n      //   maxLength: 5,\r\n      //   required: true,\r\n      //   label: \"PEF (L/s)\",\r\n      // },\r\n      // {\r\n      //   name: \"pefPercent\",\r\n      //   value: pefPercent,\r\n      //   maxLength: 2,\r\n      //   required: true,\r\n      //   label: \"PEF (%)\",\r\n      // },\r\n      {\r\n        name: \"fev1FvcPercent\",\r\n        value: fev1FvcPercent,\r\n        maxLength: 2,\r\n        required: true,\r\n        label: \"FEV1/FVC (%)\",\r\n      },\r\n    ];\r\n\r\n    fields?.forEach((field) => {\r\n      if (field?.required && !field?.value) {\r\n        newErrors[field?.name] = `${field?.label} is required`;\r\n        isValid = false;\r\n      } else if (field?.maxLength && field?.value?.length > field?.maxLength) {\r\n        newErrors[\r\n          field.name\r\n        ] = `Maximum length is ${field.maxLength} characters`;\r\n        isValid = false;\r\n      } else if (isNaN(field.value)) {\r\n        newErrors[field.name] = \"Must be a number\";\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateForm()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          fvc: Number(fvcL),\r\n          fvcPercent: Number(fvcPercent),\r\n          fev1: Number(fev1L),\r\n          fev1Percent: Number(fev1Percent),\r\n          fev1_fvc: Number(fev1FvcPercent),\r\n          pef: Number(pefL),\r\n          pefPercent: Number(pefPercent),\r\n          fef25: Number(fef25L),\r\n          fef25Percent: Number(fef25Percent),\r\n          fef50: Number(fef50L),\r\n          fef50Percent: Number(fef50Percent),\r\n          fef75: Number(fef75L),\r\n          fef75Percent: Number(fef75Percent),\r\n          fef2575: Number(fef2575L),\r\n          fef2575Percent: Number(fef2575Percent),\r\n          notes: notes,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"spirometer\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          fvc: Number(fvcL),\r\n          fvcPercent: Number(fvcPercent),\r\n          fev1: Number(fev1L),\r\n          fev1Percent: Number(fev1Percent),\r\n          fev1_fvc: Number(fev1FvcPercent),\r\n          pef: Number(pefL),\r\n          pefPercent: Number(pefPercent),\r\n          fef25: Number(fef25L),\r\n          fef25Percent: Number(fef25Percent),\r\n          fef50: Number(fef50L),\r\n          fef50Percent: Number(fef50Percent),\r\n          fef75: Number(fef75L),\r\n          fef75Percent: Number(fef75Percent),\r\n          fef2575: Number(fef2575L),\r\n          fef2575Percent: Number(fef2575Percent),\r\n          notes: notes,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"spirometer\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FVC (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fvc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fvcL}\r\n                onChange={(e) => setFvcL(e.target.value)}\r\n              />\r\n              {errors.fvcL && <div className=\"error-text\">{errors.fvcL}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FVC (%)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fvc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fvcPercent}\r\n                onChange={(e) => setFvcPercent(e.target.value)}\r\n              />\r\n              {errors.fvcPercent && (\r\n                <div className=\"error-text\">{errors.fvcPercent}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1 (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fev1_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fev1L}\r\n                onChange={(e) => setFev1L(e.target.value)}\r\n              />\r\n              {errors.fev1L && <div className=\"error-text\">{errors.fev1L}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1 (%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fev1_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fev1Percent}\r\n                onChange={(e) => setFev1Percent(e.target.value)}\r\n              />\r\n              {errors.fev1Percent && (\r\n                <div className=\"error-text\">{errors.fev1Percent}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                PEF (L/s) \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"pef_(l/min)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={pefL}\r\n                onChange={(e) => setPefL(e.target.value)}\r\n              />\r\n              {errors.pefL && <div className=\"error-text\">{errors.pefL}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                PEF (%) \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"pef_(l/min)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={pefPercent}\r\n                onChange={(e) => setPefPercent(e.target.value)}\r\n              />\r\n              {errors.pefPercent && (\r\n                <div className=\"error-text\">{errors.pefPercent}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1/FVC (%)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"fev1/fvc\"]}\r\n                maxLength={2}\r\n                onInput={numWithDecimal}\r\n                value={fev1FvcPercent}\r\n                onChange={(e) => setFev1FvcPercent(e.target.value)}\r\n              />\r\n              {errors.fev1FvcPercent && (\r\n                <div className=\"error-text\">{errors.fev1FvcPercent}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF25 (L/s)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fef25L}\r\n                onChange={(e) => setFef25L(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF25 (%)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fef25Percent}\r\n                onChange={(e) => setFef25Percent(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF50 (L/s)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fef50L}\r\n                onChange={(e) => setFef50L(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF50 (%)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fef50Percent}\r\n                onChange={(e) => setFef50Percent(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF75 (L/s)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fef75L}\r\n                onChange={(e) => setFef75L(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF75 (%)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fef75Percent}\r\n                onChange={(e) => setFef75Percent(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF2575 (L/s)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={5}\r\n                onInput={numWithDecimal}\r\n                value={fef2575L}\r\n                onChange={(e) => setFef2575L(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEF2575 (%)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"svc_(l)\"]}\r\n                maxLength={2}\r\n                onInput={convertNum}\r\n                value={fef2575Percent}\r\n                onChange={(e) => setFef2575Percent(e.target.value)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={8}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes \r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                rows={3}\r\n                value={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n              />\r\n              {errors.notes && <div className=\"error-text\">{errors.notes}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LFTForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { extractNum } from \"../../../../../../Utils/commonUtils\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst LipidProfileForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [ldl, setLdl] = useState(defaultData?.[\"ldl(mg/dl)\"] || \"\");\r\n  const [hdl, setHdl] = useState(defaultData?.[\"hdl(mg/dl)\"] || \"\");\r\n  const [vldl, setVldl] = useState(defaultData?.[\"vldl(mg/dl)\"] || \"\");\r\n  const [ldlHdl, setLdlHdl] = useState(defaultData?.[\"ldl/hdl(mg/dl)\"] || \"\");\r\n  const [triglycerides, setTriglycerides] = useState(\r\n    defaultData?.[\"triglycerides(mg/dl)\"] || \"\"\r\n  );\r\n  const [totalCholesterol, setTotalCholesterol] = useState(\r\n    defaultData?.[\"total_cholesterol(mg/dl)\"] || \"\"\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  // const convertNum = (e) => {\r\n  //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n  // };\r\n\r\n  // Validation function\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!ldl || isNaN(ldl) || ldl < 0) {\r\n      currentErrors.ldl = \"LDL is required\";\r\n      isValid = false;\r\n    }\r\n    if (!hdl || isNaN(hdl) || hdl < 0) {\r\n      currentErrors.hdl = \"HDL is required\";\r\n      isValid = false;\r\n    }\r\n    if (!vldl || isNaN(vldl) || vldl < 0) {\r\n      currentErrors.vldl = \"VLDL is required\";\r\n      isValid = false;\r\n    }\r\n    if (!ldlHdl || isNaN(ldlHdl) || ldlHdl < 0) {\r\n      currentErrors.ldlHdl = \"LDL/HDL is required\";\r\n      isValid = false;\r\n    }\r\n    if (!triglycerides || isNaN(triglycerides) || triglycerides < 0) {\r\n      currentErrors.triglycerides = \"Triglycerides is required\";\r\n      isValid = false;\r\n    }\r\n    if (!totalCholesterol || isNaN(totalCholesterol) || totalCholesterol < 0) {\r\n      currentErrors.totalCholesterol = \"Total Cholesterol is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          ldl_unit: \"mg/dL\",\r\n          hdl_unit: \"mg/dL\",\r\n          vldl_unit: \"mg/dL\",\r\n          hdl_ldl_unit: \"mg/dL\",\r\n          triglycerides_unit: \"mg/dL\",\r\n          total_unit: \"mg/dL\",\r\n          ldl: Number(ldl),\r\n          vldl: Number(vldl),\r\n          hdl: Number(hdl),\r\n          hdl_ldl: Number(ldlHdl),\r\n          triglycerides: Number(triglycerides),\r\n          total: Number(totalCholesterol),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"lipid-profile\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          ldl_unit: \"mg/dL\",\r\n          hdl_unit: \"mg/dL\",\r\n          vldl_unit: \"mg/dL\",\r\n          hdl_ldl_unit: \"mg/dL\",\r\n          triglycerides_unit: \"mg/dL\",\r\n          total_unit: \"mg/dL\",\r\n          ldl: Number(ldl),\r\n          vldl: Number(vldl),\r\n          hdl: Number(hdl),\r\n          hdl_ldl: Number(ldlHdl),\r\n          triglycerides: Number(triglycerides),\r\n          total: Number(totalCholesterol),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"lipid-profile\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.totalOnly}\r\n                maxLength={3}\r\n                // onInput={convertNum}\r\n                value={ldl}\r\n                onChange={(e) => {\r\n                  setLdl(e.target?.value?.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.ldl && <div className=\"error-text\">{errors.ldl}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HDL(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.totalOnly}\r\n                maxLength={3}\r\n                // onInput={convertNum}\r\n                value={hdl}\r\n                onChange={(e) => {\r\n                  setHdl(e.target?.value?.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.hdl && <div className=\"error-text\">{errors.hdl}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                VLDL(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.totalOnly}\r\n                maxLength={3}\r\n                // onInput={convertNum}\r\n                value={vldl}\r\n                onChange={(e) => {\r\n                  setVldl(e.target?.value?.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.vldl && <div className=\"error-text\">{errors.vldl}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL/HDL(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.totalOnly}\r\n                maxLength={3}\r\n                // onInput={convertNum}\r\n                value={ldlHdl}\r\n                onChange={(e) => {\r\n                  setLdlHdl(e.target?.value?.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.ldlHdl && (\r\n                <div className=\"error-text\">{errors.ldlHdl}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Triglycerides(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.triglycerides)}\r\n                maxLength={3}\r\n                // onInput={convertNum}\r\n                value={triglycerides}\r\n                onChange={(e) => {\r\n                  setTriglycerides(e.target?.value?.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.triglycerides && (\r\n                <div className=\"error-text\">{errors.triglycerides}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Total Cholesterol(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={extractNum(defaultData?.hdl)}\r\n                maxLength={3}\r\n                // onInput={convertNum}\r\n                value={totalCholesterol}\r\n                onChange={(e) => {\r\n                  setTotalCholesterol(e.target?.value?.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              {errors.totalCholesterol && (\r\n                <div className=\"error-text\">{errors.totalCholesterol}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        {/* <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (LDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.ldl)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL/HDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"ldl/hdl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (VLDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                VLDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"vldl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow> */}\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LipidProfileForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst RespirationRateForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [respiration, setRespiration] = useState(\r\n    defaultData?.[\"respiration_rate_(bpm)\"] || \"\"\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!respiration) {\r\n      currentErrors.respiration = \"Respiration rate is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          respiration: respiration,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"respiration\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          respiration: respiration,\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"respiration\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Respiration Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                // defaultValue={defaultData?.[\"respiration_rate_(bpm)\"]}\r\n                value={respiration}\r\n                onChange={(e) =>\r\n                  setRespiration(e.target.value.replace(/[^0-9]/g, \"\"))\r\n                }\r\n                maxLength={2}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n              />\r\n              {errors.respiration && (\r\n                <div className=\"error-text\">{errors.respiration}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RespirationRateForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Spo2 = ({ addBack, defaultData, getTableDatas }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const { post, patch } = useApi();\r\n  function removePercent(str) {\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [spO2, setSpO2] = useState(removePercent(defaultData?.spo2) || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!spO2) {\r\n      currentErrors.spO2 = \"SpO2 is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          spo2: Number(spO2),\r\n          unit: \"%\",\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"spO2\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          spo2: Number(spO2),\r\n          unit: \"%\",\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"spO2\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"pulse_rate_(bpm)\"]}\r\n              />\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                SpO2 (%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.spo2)}\r\n                maxLength={3}\r\n                // onInput={(e) => {\r\n                //   e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                // }}\r\n                value={spO2}\r\n                onChange={(e) => setSpO2(e.target.value.replace(/[^0-9]/g, \"\"))}\r\n              />\r\n              {errors.spO2 && <div className=\"error-text\">{errors.spO2}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spo2;\r\n","import { CCol, CContainer, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { toast } from \"react-toastify\";\r\nimport { extractNum, findItemIndex } from \"../../../../../../Utils/commonUtils\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Temperature = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [selectedMethod, setSelectedMethod] = useState(\r\n    defaultData?.method || null\r\n  );\r\n  const [selectedUnit, setSelectedUnit] = useState(defaultData?.unit || null);\r\n  const [temperature, setTemperature] = useState(\r\n    extractNum(defaultData?.temperature) || \"\"\r\n  );\r\n\r\n  const [errors, setErrors] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    method: \"\",\r\n    unit: \"\",\r\n    temperature: \"\",\r\n  });\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedMethod) {\r\n      currentErrors.method = \"Method is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedUnit) {\r\n      currentErrors.unit = \"Unit is required\";\r\n      isValid = false;\r\n    }\r\n    if (!temperature || isNaN(temperature)) {\r\n      currentErrors.temperature =\r\n        \"Temperature is required and must be a number\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n  const options = [\r\n    \"Oral\",\r\n    \"Rectal\",\r\n    \"Axillary\",\r\n    \"Tympanic\",\r\n    \"Temporal\",\r\n    \"Skin\",\r\n  ];\r\n\r\n  const getSelectedValue = (data) => {\r\n    setSelectedMethod(data);\r\n  };\r\n  const handleUnitChange = (e) => {\r\n    setSelectedUnit(e.target.value);\r\n  };\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          type: selectedMethod,\r\n          unit: selectedUnit,\r\n          temperature: Number(temperature),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"temperature\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          type: selectedMethod,\r\n          unit: selectedUnit,\r\n          temperature: Number(extractNum(temperature)),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"temperature\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const nums = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{3})\\.(\\d{3}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setTemperature(nums);\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Method *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultData?.method\r\n                      ? options[findItemIndex(options, defaultData?.method)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n            {errors.method && <div className=\"error-text\">{errors.method}</div>}\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            {/* <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'F'}\r\n              />\r\n            </div> */}\r\n\r\n            <p className=\"radio-label\">Unit *</p>\r\n            <div className=\"d-flex align-items-end w-100\">\r\n              <div\r\n                style={{\r\n                  boxSizing: \"border-box\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"1px solid #17171D33\",\r\n                  padding: \"10px\",\r\n                }}\r\n              >\r\n                <CFormCheck\r\n                  className=\"mb-0\"\r\n                  inline\r\n                  type=\"radio\"\r\n                  id=\"activityYes\"\r\n                  value=\"Celsius\"\r\n                  label={<label className=\"form-label mb-0\">Celsius</label>}\r\n                  name=\"unit\"\r\n                  checked={selectedUnit === \"Celsius\"} // Set the checked attribute\r\n                  onChange={handleUnitChange} // Handle the change event\r\n                />\r\n                <CFormCheck\r\n                  className=\"mb-0\"\r\n                  inline\r\n                  type=\"radio\"\r\n                  id=\"activityNo\"\r\n                  value=\"Fahrenheit\"\r\n                  label={<label className=\"form-label mb-0\">Fahrenheit</label>}\r\n                  name=\"unit\"\r\n                  checked={selectedUnit === \"Fahrenheit\"} // Set the checked attribute\r\n                  onChange={handleUnitChange} // Handle the change event\r\n                />\r\n              </div>\r\n            </div>\r\n            {errors.unit && <div className=\"error-text\">{errors.unit}</div>}\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Temperature *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                value={temperature}\r\n                onChange={numWithDecimal}\r\n              />\r\n              {errors.temperature && (\r\n                <div className=\"error-text\">{errors.temperature}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { getCurrentTime } from \"../../../../../../Utils/dateUtils\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Urea = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [urea, setUrea] = useState(defaultData?.urea || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  const defaultDateTime = defaultData?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let isValid = true;\r\n    let currentErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      currentErrors.date = \"Date is required\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      currentErrors.time = \"Time is required\";\r\n      isValid = false;\r\n    }\r\n    if (!urea) {\r\n      currentErrors.urea = \"Urea is required\";\r\n      isValid = false;\r\n    }\r\n    setErrors(currentErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validateInputs()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          urea: Number(urea),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"urea\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          unit: \"mg/dL\",\r\n          urea: Number(urea),\r\n        },\r\n        user_id: data?.user_id,\r\n        slug: \"urea\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const numWithDecimal = (e) => {\r\n    const deciNum = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")\r\n      .replace(/^(\\d{3})\\.(\\d{1}).*$/, \"$1.$2\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    setUrea(deciNum);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urea(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                //  defaultValue={extractNum(defaultData?.urea)}\r\n                // onInput={numWithDecimal}\r\n                value={urea}\r\n                onChange={(e) => numWithDecimal(e)}\r\n              />\r\n              {errors.urea && <div className=\"error-text\">{errors.urea}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urea;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Urinalysis = ({ addBack, defaultData }) => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [cell, setCell] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     return new Date(year, month - 1, day, hours, minutes);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultData?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultData\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setSelectedDate(defaultDate);\r\n  //   setSelectedTime(defaultDate);\r\n  // }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n\r\n  const oneNumWithOneDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{1})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{1})\\.(\\d{1}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n  \r\n  const oneNumWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{1})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{1})\\.(\\d{3}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n\r\n  const twoNumWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{2})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{2})\\.(\\d{2}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n  const threeNumWithDecimal = (e) => {\r\n    e.target.value = e.target.value\r\n      .replace(/[^0-9.]/g, \"\")               \r\n      .replace(/^(\\d{3})\\d*$/, \"$1\")        \r\n      .replace(/^(\\d{3})\\.(\\d{2}).*$/, \"$1.$2\") \r\n      .replace(/(\\..*)\\./g, \"$1\");         \r\n  }\r\n  \r\n  const wholeNumber = (e) => {\r\n    e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        {/* <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (μmol/kg/d)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.urine)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (pH)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Sugar (mg/dL)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.sugar}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.protein}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocytes*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.leukocytes}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                RBC*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.rbc}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow> */}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Color *\r\n              </label>\r\n              <select class=\"form-select\" aria-label=\"Disabled select example\">\r\n                <option>Select</option>\r\n                <option value=\"straw\">Straw</option>\r\n                <option value=\"yellow\">Yellow</option>\r\n                <option value=\"amber\">Amber</option>\r\n                <option value=\"red\">Red</option>\r\n                <option value=\"brown\">Brown</option>\r\n                <option value=\"green\">Green</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Clarity *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"clear\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"clear\">Clear</option>\r\n                <option value=\"slightly cloudy\">Slightly Cloudy</option>\r\n                <option value=\"cloudy\">Cloudy</option>\r\n                <option value=\"turbid\">Turbid</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Specific Gravity \r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.specific_gravity}\r\n                placeholder=\"Enter\"\r\n                onInput={oneNumWithDecimal}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            {/* <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                pH *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Normal\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Normal (6-7)\">Normal (6-7)</option>\r\n                <option value=\"Acidic(<6)\">Acidic ({\"<\"}6)</option>\r\n                <option value=\"Alkaline(>7)\">Alkaline ({\">\"}7)</option>\r\n              </select>\r\n            </div> */}\r\n             <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              pH *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n                onInput={twoNumWithDecimal}\r\n              />\r\n            </div>\r\n\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Trace\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"1+ (30 mg/dL)\">1+ (30 mg/dL)</option>\r\n                <option value=\"2+ (100 mg/dL)\">2+ (100 mg/dL)</option>\r\n                <option value=\"3+ (300 mg/dL)\">3+ (300 mg/dL)</option>\r\n                <option value=\"4+ (>2000 mg/dL)\">4+ ({\">\"}2000 mg/dL)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Glucose *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"1+ (100 mg/dL)\">1+ (100 mg/dL)</option>\r\n                <option value=\"2+ (250 mg/dL)\">2+ (250 mg/dL)</option>\r\n                <option value=\"3+ (500 mg/dL)\">3+ (500 mg/dL)</option>\r\n                <option value=\"4+ (1000 mg/dL)\">4+ (1000 mg/dL)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Ketones *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+) mg/dL\">Small (1+) mg/dL</option>\r\n                <option value=\"Moderate (2+) mg/dL\">Moderate (2+) mg/dL</option>\r\n                <option value=\"Large (3+) mg/dL\">Large (3+) mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood in Urine *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+) mg/dL\">Small (1+) mg/dL</option>\r\n                <option value=\"Moderate (2+) mg/dL\">Moderate (2+) mg/dL</option>\r\n                <option value=\"Large (3+) mg/dL\">Large (3+) mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocyte Esterase *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+) mg/dL\">Small (1+) mg/dL</option>\r\n                <option value=\"Moderate (2+) mg/dL\">Moderate (2+) mg/dL</option>\r\n                <option value=\"Large (3+) mg/dL\">Large (3+) mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Nitrites *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Positive\">Positive</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urobilinogen *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n                onInput={oneNumWithOneDecimal}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Bilirubin *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Positive\">Positive</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"vertical-line mb-3\"></div>\r\n        <CRow>\r\n        <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Red Blood Cells\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n                maxLength={2}\r\n                onInput={wholeNumber}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              White Blood Cells\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n                maxLength={2}\r\n                onInput={wholeNumber}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Epithelial Cells \r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Red Blood Cell\"}\r\n                // onChange={(e) => setCell(e.target.value)}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Red Blood Cell\">Squamous Epithelial Cells</option>\r\n                <option value=\"White Blood Cell\">Transitional Epithelial Cells</option>\r\n                <option value=\"Epithelial Cell\">Renal Tubular Epithelial Cells</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n         \r\n          {/* {cell === \"Epithelial Cell\" && (\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Epithelial Cells *\r\n                </label>\r\n                <select\r\n                  class=\"form-select\"\r\n                  aria-label=\"Disabled select example\"\r\n                  // defaultValue={\"Squamous Epithelial Cells\"}\r\n                >\r\n                  <option>Select</option>\r\n\r\n                  <option value=\"Squamous Epithelial Cells\">\r\n                    Squamous Epithelial Cells\r\n                  </option>\r\n                  <option value=\"Transitional Epithelial Cells\">\r\n                    Transitional Epithelial Cells\r\n                  </option>\r\n                  <option value=\"Renal Tubular Epithelial Cells\">\r\n                    Renal Tubular Epithelial Cells\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </CCol>\r\n          )} */}\r\n        </CRow>\r\n        <CRow className=\"mb-3\"> \r\n        <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Crystals \r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Uric Acid Crystals\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Uric Acid Crystals\">Uric Acid Crystals</option>\r\n                <option value=\"Calcium Oxalate Crystals\">\r\n                  Calcium Oxalate Crystals\r\n                </option>\r\n                <option value=\"Struvite Crystals\">Struvite Crystals</option>\r\n                <option value=\"Cystine Crystals \">Cystine Crystals </option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Microorganisms \r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Bacteria\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Bacteria\">Bacteria</option>\r\n                <option value=\"Yeast\">Yeast</option>\r\n                <option value=\"Parasites\">Parasites</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urinalysis;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst LabForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lab Test Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Upload Results / Image (pdf, jpg, jpeg, png)\r\n              </label>\r\n              <div class=\"input-file-container\">\r\n                <input class=\"input-file\" id=\"my-file\" type=\"file\" />\r\n                <label\r\n                  tabindex=\"0\"\r\n                  for=\"my-file\"\r\n                  className=\"input-file-trigger\"\r\n                >\r\n                  <img alt=\"upload\" src={Assets.Export} />\r\n                  <span>Choose File</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol className=\"d-flex align-items-center\">\r\n          <span className=\"fs-18 fw-400\">No Files Chosen</span>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DateCards from \"../../../../../DateCards/DateCards\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst PhysicalExam = ({ onClose, from }) => {\r\n  const dateCards = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    { id: 9, date: \"06-07-2024\" },\r\n    { id: 10, date: \"06-07-2024\" },\r\n    { id: 11, date: \"06-07-2024\" },\r\n    { id: 12, date: \"06-07-2024\" },\r\n    { id: 13, date: \"06-07-2024\" },\r\n    { id: 14, date: \"06-07-2024\" },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(true);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [skinselectedOptions, setSkinSelectedOptions] = useState([]);\r\n\r\n  const [labelName1, setLabelname1] = useState(\"\");\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState(\r\n    from === \"Consult\" ? dateCards[1] : {}\r\n  );\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const [labelName, setLabelname] = useState(selectedData?.ga?.status || \"\");\r\n  const [editView, setEditView] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setEditView(true);\r\n  }, [from]);\r\n\r\n  const options = [\r\n    \"Appearance (well, ill, distressed, etc.)\",\r\n    \"Level of Consciousness (alert, drowsy, unresponsive, etc.)\",\r\n    \"Posture and Gait\",\r\n  ];\r\n\r\n  const skinoptions = [\r\n    \"Appearance (well, ill, distressed, etc.)\",\r\n    \"Level of Consciousness (alert, drowsy, unresponsive, etc.)\",\r\n    \"Posture and Gait\",\r\n  ];\r\n\r\n  const itemsPerPage = 9; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return dateCards?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const handleSelect = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    } else {\r\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const handleSelectSkin = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSkinSelectedOptions([...skinselectedOptions, option]);\r\n    } else {\r\n      setSkinSelectedOptions(\r\n        skinselectedOptions.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const [nutritionOpen, setNutritionOpen] = useState(false);\r\n  const [constiOpen, setConstiOpen] = useState(false);\r\n  const [generalOpen, setGeneralOpen] = useState(false);\r\n  const [heentOpen, setHeentOpen] = useState(false);\r\n\r\n  const nutritionTabOpen = () => {\r\n    setNutritionOpen(true);\r\n  };\r\n\r\n  const nutritionTabClose = () => {\r\n    setNutritionOpen(false);\r\n  };\r\n\r\n  const constiTabOpen = () => {\r\n    setConstiOpen(true);\r\n  };\r\n\r\n  const constiTabClose = () => {\r\n    setConstiOpen(false);\r\n  };\r\n\r\n  const generalTabOpen = () => {\r\n    setGeneralOpen(true);\r\n  };\r\n\r\n  const generalTabClose = () => {\r\n    setGeneralOpen(false);\r\n  };\r\n\r\n  const heentTabOpen = () => {\r\n    setHeentOpen(true);\r\n  };\r\n\r\n  const heentTabClose = () => {\r\n    setHeentOpen(false);\r\n  };\r\n\r\n  const toggleSelected = (label) => {\r\n    setIsSelected(!isSelected);\r\n    setLabelname(label);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editView) {\r\n      setLabelname(selectedData?.ga?.status);\r\n      setLabelname1(selectedData?.skin?.status);\r\n      setSelectedOptions(selectedData?.ga?.select);\r\n      setSkinSelectedOptions(selectedData?.skin?.select);\r\n      if (selectedData?.ga?.status === \"Abnormal\") {\r\n        setGeneralOpen(true);\r\n      }\r\n      if (selectedData?.skin?.status === \"Abnormal\") {\r\n        setHeentOpen(true);\r\n      }\r\n    } else {\r\n      setLabelname(\"\");\r\n      setLabelname1(\"\");\r\n      setGeneralOpen(false);\r\n      setHeentOpen(false);\r\n      setSelectedOptions([]);\r\n    }\r\n  }, [editView]);\r\n\r\n  const getselected = (data, method) => {\r\n    setSelectedData(data);\r\n    if (method === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (method === \"edit\") {\r\n      addFormPage();\r\n      setEditView(true);\r\n    }\r\n  };\r\n\r\n  const toggleSelected1 = (label) => {\r\n    setLabelname1(label);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <CRow className=\"mb-2\">\r\n              <CCol className=\"d-flex align-items-center gap-2\">\r\n                <span>Date</span>\r\n                <SingleDatePicker defaultDate={selectedData?.date} />\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">General Appearance</span>\r\n              </CCol>\r\n              <CRow>\r\n                <CCol>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <label class=\"form-label\">Status:</label>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected(\"Normal\");\r\n                        setGeneralOpen(false);\r\n                      }}\r\n                    >\r\n                      {\"Normal\"}\r\n                    </div>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName === \"Abnormal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected(\"Abnormal\");\r\n                        setGeneralOpen(true);\r\n                      }}\r\n                    >\r\n                      {\"Abnormal\"}\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              {generalOpen && (\r\n                <>\r\n                  {labelName === \"Abnormal\" && (\r\n                    <CRow>\r\n                      {options?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelect}\r\n                            selected={selectedOptions.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={heentTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={heentTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Skin</span>\r\n              </CCol>\r\n              <CRow>\r\n                <CCol>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <label class=\"form-label\">Status:</label>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected1(\"Normal\");\r\n                        setHeentOpen(false);\r\n                      }}\r\n                    >\r\n                      {\"Normal\"}\r\n                    </div>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName1 === \"Abnormal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected1(\"Abnormal\");\r\n                        setHeentOpen(true);\r\n                      }}\r\n                    >\r\n                      {\"Abnormal\"}\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              {heentOpen && (\r\n                <>\r\n                  {/* <CRow>\r\n            <CCol>\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <label class=\"form-label\">Status:</label>\r\n                <div\r\n                  className={`option-item ${\r\n                    labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                  }`}\r\n                  onClick={() => toggleSelected1(\"Normal\")}\r\n                >\r\n                  {\"Normal\"}\r\n                </div>\r\n                <div\r\n                  className={`option-item ${\r\n                    labelName1 === \"Abnormal\"\r\n                      ? \"selected primary-bg\"\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => toggleSelected1(\"Abnormal\")}\r\n                >\r\n                  {\"Abnormal\"}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow> */}\r\n                  {labelName1 === \"Abnormal\" && (\r\n                    <>\r\n                      <CRow>\r\n                        {skinoptions?.map((option, index) => (\r\n                          <CCol lg={\"auto\"}>\r\n                            <OptionItem\r\n                              key={index}\r\n                              label={option}\r\n                              onSelect={handleSelectSkin}\r\n                              selected={skinselectedOptions?.includes(option)}\r\n                              disabled={editView}\r\n                            />\r\n                          </CCol>\r\n                        ))}\r\n                      </CRow>\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            disabled={editView}\r\n                            defaultValue={selectedData?.skin?.notes}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          <CRow className=\"mb-0\">\r\n            <CCol md={6} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Physical Exam\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Physical Exam\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton\r\n                      onClick={() => {\r\n                        addFormPage();\r\n                        setSelectedData({});\r\n                      }}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  {getCurrentPageItems()?.map((item, i) => (\r\n                    <CCol lg={4} className=\"mb-3\" key={i}>\r\n                      <DateCards data={item} onClick={getselected} />\r\n                    </CCol>\r\n                  ))}\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={dateCards?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <CRow className=\"mb-2\">\r\n                  <CCol className=\"d-flex align-items-center gap-2\">\r\n                    <span>Date</span>\r\n                    <SingleDatePicker defaultDate={selectedData?.date} />\r\n                  </CCol>\r\n                  <CCol className=\"d-flex justify-content-end\">\r\n                    <div style={{ width: \"120px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => {\r\n                          setAddFormView(false);\r\n                          setEditView(false);\r\n                          setSelectedData({});\r\n                        }}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets?.listview} alt=\"close\" />\r\n                          <span>List View</span>\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <div className=\"vertical-line mb-3\"></div>\r\n                {/* <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!nutritionOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={nutritionTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {nutritionOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={nutritionTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Nutritional</span>\r\n              </CCol>\r\n              {nutritionOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!constiOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={constiTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {constiOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={constiTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Constitutional</span>\r\n              </CCol>\r\n              {constiOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div> */}\r\n                <CRow className=\"mb-2\">\r\n                  <CCol\r\n                    lg={12}\r\n                    className=\"d-flex align-items-center gap-2 mb-1\"\r\n                  >\r\n                    {!generalOpen && (\r\n                      <img\r\n                        alt=\"plus\"\r\n                        src={Assets?.PlusIcon}\r\n                        // onClick={generalTabOpen}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                    {generalOpen && (\r\n                      <img\r\n                        alt=\"plus\"\r\n                        src={Assets?.MinusIcon}\r\n                        // onClick={generalTabClose}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                    <span className=\"fs-16 fw-600\">General Appearance</span>\r\n                  </CCol>\r\n                  <CRow>\r\n                    <CCol>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <label class=\"form-label\">Status:</label>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                          } ${editView ? \"disabled\" : \"\"}`}\r\n                          onClick={() => {\r\n                            toggleSelected(\"Normal\");\r\n                            setGeneralOpen(false);\r\n                          }}\r\n                        >\r\n                          {\"Normal\"}\r\n                        </div>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName === \"Abnormal\"\r\n                              ? \"selected primary-bg\"\r\n                              : \"\"\r\n                          } ${editView ? \"disabled\" : \"\"}`}\r\n                          onClick={() => {\r\n                            toggleSelected(\"Abnormal\");\r\n                            setGeneralOpen(true);\r\n                          }}\r\n                        >\r\n                          {\"Abnormal\"}\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  {generalOpen && (\r\n                    <>\r\n                      {labelName === \"Abnormal\" && (\r\n                        <CRow>\r\n                          {options?.map((option, index) => (\r\n                            <CCol lg={\"auto\"}>\r\n                              <OptionItem\r\n                                key={index}\r\n                                label={option}\r\n                                onSelect={handleSelect}\r\n                                selected={selectedOptions.includes(option)}\r\n                                disabled={editView}\r\n                              />\r\n                            </CCol>\r\n                          ))}\r\n                          <CCol lg={12} className=\"mb-2\">\r\n                            <div class=\"position-relative\">\r\n                              <label\r\n                                for=\"validationTooltip01\"\r\n                                class=\"form-label\"\r\n                              >\r\n                                Notes\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                defaultValue={selectedData?.ga?.notes}\r\n                                disabled={editView}\r\n                              />\r\n                            </div>\r\n                          </CCol>\r\n                        </CRow>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </CRow>\r\n                <div className=\"vertical-line mt-2 mb-3\"></div>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol\r\n                    lg={12}\r\n                    className=\"d-flex align-items-center gap-2 mb-1\"\r\n                  >\r\n                    {!heentOpen && (\r\n                      <img\r\n                        alt=\"plus\"\r\n                        src={Assets?.PlusIcon}\r\n                        // onClick={heentTabOpen}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                    {heentOpen && (\r\n                      <img\r\n                        alt=\"plus\"\r\n                        src={Assets?.MinusIcon}\r\n                        // onClick={heentTabClose}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                    <span className=\"fs-16 fw-600\">Skin</span>\r\n                  </CCol>\r\n                  <CRow>\r\n                    <CCol>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <label class=\"form-label\">Status:</label>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                          } ${editView ? \"disabled\" : \"\"}`}\r\n                          onClick={() => {\r\n                            toggleSelected1(\"Normal\");\r\n                            setHeentOpen(false);\r\n                          }}\r\n                        >\r\n                          {\"Normal\"}\r\n                        </div>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Abnormal\"\r\n                              ? \"selected primary-bg\"\r\n                              : \"\"\r\n                          } ${editView ? \"disabled\" : \"\"}`}\r\n                          onClick={() => {\r\n                            toggleSelected1(\"Abnormal\");\r\n                            setHeentOpen(true);\r\n                          }}\r\n                        >\r\n                          {\"Abnormal\"}\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  {heentOpen && (\r\n                    <>\r\n                      {/* <CRow>\r\n                    <CCol>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <label class=\"form-label\">Status:</label>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                          }`}\r\n                          onClick={() => toggleSelected1(\"Normal\")}\r\n                        >\r\n                          {\"Normal\"}\r\n                        </div>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Abnormal\"\r\n                              ? \"selected primary-bg\"\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => toggleSelected1(\"Abnormal\")}\r\n                        >\r\n                          {\"Abnormal\"}\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow> */}\r\n                      {labelName1 === \"Abnormal\" && (\r\n                        <>\r\n                          <CRow>\r\n                            {skinoptions?.map((option, index) => (\r\n                              <CCol lg={\"auto\"}>\r\n                                <OptionItem\r\n                                  key={index}\r\n                                  label={option}\r\n                                  onSelect={handleSelectSkin}\r\n                                  selected={skinselectedOptions?.includes(\r\n                                    option\r\n                                  )}\r\n                                  disabled={editView}\r\n                                />\r\n                              </CCol>\r\n                            ))}\r\n                          </CRow>\r\n                          <CCol lg={12} className=\"mb-2\">\r\n                            <div class=\"position-relative\">\r\n                              <label\r\n                                for=\"validationTooltip01\"\r\n                                class=\"form-label\"\r\n                              >\r\n                                Notes\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                disabled={editView}\r\n                                defaultValue={selectedData?.skin?.notes}\r\n                              />\r\n                            </div>\r\n                          </CCol>\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </CRow>\r\n                {!editView && (\r\n                  <>\r\n                    <div className=\"vertical-line mt-2 mb-3\"></div>\r\n                    <CRow className=\"mb-1\">\r\n                      <div style={{ width: \"128px\" }}>\r\n                        <PrimaryButton>SAVE</PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"128px\" }}>\r\n                        <SecondaryButton\r\n                          onClick={() => {\r\n                            setAddFormView(false);\r\n                            setEditView(false);\r\n                          }}\r\n                        >\r\n                          CANCEL\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </CRow>\r\n                  </>\r\n                )}\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhysicalExam;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst NextAppointmentTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.provider_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.reason}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextAppointmentTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst NextAppointmentForm = ({ back, defaultValues }) => {\r\n\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  \r\n    const options = [\"one\", \"Two\",\"Three\"];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Provider Name *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Reason *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"Enter\"\r\n              defaultValue={defaultValues?.reason}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NextAppointmentForm","import React, { useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PatientEducationForm from \"../../PatientEducation/PatientEducationTab/PatientEducationForm\";\r\nimport NextAppointmentTable from \"../../../../../../Tables/NextAppointmentTable\";\r\nimport NextAppointmentForm from \"./NextAppointmentForm\";\r\n\r\nconst NextAppointmentTab = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No\" },\r\n    { id: 2, label: \"Date & Time\" },\r\n    { id: 3, label: \"Provider Name\" },\r\n    { id: 3, label: \"Reason\" },\r\n    { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <NextAppointmentTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <NextAppointmentTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <NextAppointmentForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextAppointmentTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PatientEducationTab from \"./NextAppointmentTab/NextAppointmentTab\";\r\n\r\nconst NextAppointment = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Next Appointment\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Next Appointment\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <PatientEducationTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextAppointment;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst ImagingOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Raj Scan 1\", \"Raj Scan 2\", \"Raj Scan 3\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getbtnNames = () => {\r\n    console.log(\"getbtnNames\");\r\n  };\r\n  const eoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd_code}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={eoptions}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Imaging Order Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Scan Center *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"250px\" }}>\r\n          {/* <PrimaryButton>SEND TO LAB</PrimaryButton> */}\r\n          <DropdownButton\r\n            buttonName2={\"SEND TO SCAN CENTER\"}\r\n            getbtnNames={getbtnNames}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ImagingOrderForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\n\r\nconst ImagingOrder = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"NAME\" },\r\n    { id: 4, label: \"FILES\" },\r\n    // { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"SCAN CENTER & STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"01-01-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Accepted\",\r\n      scan_name: \"Raj Scan 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Prescribed\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ImagingOrderTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <ImagingOrderTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ImagingOrderForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"lg\"\r\n              >\r\n                <CModalBody className=\"p-5\">\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12}>\r\n                      <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.date}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Scan Name\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          ICD Code\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Scan Center\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.scan_name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                        <div\r\n                          className=\"w-100\"\r\n                          // style={{\r\n                          //   border: \"1px solid #17171D33\",\r\n                          //   borderRadius: \"5px\",\r\n                          // }}\r\n                        >\r\n                          {/* <Dropdown\r\n                        options={options}\r\n                        getSelectedValue={getSelectedValue}\r\n                      /> */}\r\n                          <CFormSelect\r\n                            aria-label=\"Default select example\"\r\n                            disabled={\r\n                              selectedData.scan_status === \"Uploaded\" ||\r\n                              (selectedData.scan_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          >\r\n                            <option>Select</option>\r\n                            <option value=\"Morning\">Morning</option>\r\n                            <option value=\"Afternoon\">Afternoon</option>\r\n                            <option value=\"Evening\">Evening</option>\r\n                            <option value=\"Night\">Night</option>\r\n                          </CFormSelect>\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <PrimaryButton>SAVE</PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <SecondaryButton onClick={() => setDetailView(false)}>\r\n                        CANCEL\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </CRow>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrder;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst LabOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Raj Scan 1\", \"Raj Scan 2\", \"Raj Scan 3\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getbtnNames = () => {\r\n    console.log(\"getbtnNames\");\r\n  };\r\n  const eoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd_code}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={eoptions}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lab Test Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Lab *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"250px\" }}>\r\n          {/* <PrimaryButton>SEND TO LAB</PrimaryButton> */}\r\n          <DropdownButton\r\n            buttonName2={\"SEND TO LAB\"}\r\n            getbtnNames={getbtnNames}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrderForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport LabOrderForm from \"./LabOrderForm\";\r\n\r\nconst LabOrder = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"NAME\" },\r\n    { id: 4, label: \"FILE\" },\r\n    // { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"LAB & STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Accepted\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <LabOrderTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <LabOrderTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <LabOrderForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"lg\"\r\n              >\r\n                <CModalBody className=\"p-5\">\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12}>\r\n                      <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.date}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Test Name\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          ICD Code\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Lab/Scan Center\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.lab_name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                        <div\r\n                          className=\"w-100\"\r\n                          // style={{\r\n                          //   border: \"1px solid #17171D33\",\r\n                          //   borderRadius: \"5px\",\r\n                          // }}\r\n                        >\r\n                          {/* <Dropdown\r\n                        options={options}\r\n                        getSelectedValue={getSelectedValue}\r\n                      /> */}\r\n                          <CFormSelect\r\n                            aria-label=\"Default select example\"\r\n                            disabled={\r\n                              selectedData.lab_status === \"Uploaded\" ||\r\n                              (selectedData.lab_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          >\r\n                            <option>Select</option>\r\n                            <option value=\"Morning\">Morning</option>\r\n                            <option value=\"Afternoon\">Afternoon</option>\r\n                            <option value=\"Evening\">Evening</option>\r\n                            <option value=\"Night\">Night</option>\r\n                          </CFormSelect>\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Test Type\r\n                        </span>\r\n                        <div>\r\n                          <CFormCheck\r\n                            inline\r\n                            type=\"radio\"\r\n                            name=\"inlineRadioOptions\"\r\n                            id=\"inlineCheckbox1\"\r\n                            value=\"Lab Test\"\r\n                            label=\"Lab Test\"\r\n                            defaultChecked\r\n                            disabled={\r\n                              selectedData.lab_status === \"Uploaded\" ||\r\n                              (selectedData.lab_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          />\r\n                          <CFormCheck\r\n                            inline\r\n                            type=\"radio\"\r\n                            name=\"inlineRadioOptions\"\r\n                            id=\"inlineCheckbox2\"\r\n                            value=\"Home Test\"\r\n                            label=\"Home Test\"\r\n                            disabled={\r\n                              selectedData.lab_status === \"Uploaded\" ||\r\n                              (selectedData.lab_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <PrimaryButton>SAVE</PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <SecondaryButton onClick={() => setDetailView(false)}>\r\n                        CANCEL\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </CRow>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrder;\r\n","import {\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst MedicationOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState(\r\n    defaultValues.medicines\r\n      ? defaultValues.medicines\r\n      : [\r\n          {\r\n            id: 1,\r\n            type: \"\",\r\n            name: \"\",\r\n            strength: \"\",\r\n            strengthMeasurement: \"\",\r\n            days: \"\",\r\n            totalQty: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            instruction: \"\",\r\n            reason: \"\",\r\n            status: \"\",\r\n            m: 0,\r\n            a: 0,\r\n            e: 0,\r\n            n: 0,\r\n            food: \"bf\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, value, fieldName) => {\r\n    console.log(fieldName, value);\r\n    const newValue = value?.replace(/[^0-9]/g, \"\");\r\n    const processedValue =\r\n      fieldName === \"startDate\" || fieldName === \"endDate\"\r\n        ? value\r\n          ? value.toISOString()\r\n          : \"\" // Convert date to ISO string\r\n        : fieldName === \"strength\"\r\n        ? newValue\r\n        : fieldName === \"totalQty\"\r\n        ? newValue\r\n        : fieldName === \"days\"\r\n        ? newValue\r\n        : value;\r\n\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [fieldName]: processedValue };\r\n      }\r\n      return medicine;\r\n    });\r\n\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  console.log(\"first\", medicines);\r\n  const [btnValue, setBtnValue] = useState();\r\n  const [btnView, setBtnView] = useState(false);\r\n\r\n  const getbtnNames = (data) => {\r\n    setBtnValue(data);\r\n    if (data === \"SEND TO PHARMACY\") {\r\n      setBtnView(true);\r\n    }\r\n  };\r\n  console.log(btnValue, \"SEND TO PHARMACY\");\r\n\r\n  const [strength, setStrength] = useState(defaultValues?.strength || \"\");\r\n  const [qty, setQty] = useState(defaultValues?.strength || \"\");\r\n  const [timeTaken, setTimeTaken] = useState(defaultValues?.strength || \"\");\r\n\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newValue = input.replace(/[^0-9]/g, \"\");\r\n    if (name === \"strength\") {\r\n      setStrength(newValue);\r\n    }\r\n    if (name === \"totalQty\") {\r\n      setQty(newValue);\r\n    }\r\n    if (name === \"days\") {\r\n      setTimeTaken(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">\r\n              {defaultValues?.medicines?.length >= 1 ? \"Edit \" : \"Add \"} New\r\n              Medicine\r\n            </span>\r\n          </CCol>\r\n\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3 h-100 d-flex align-items-center justify-content-between\">\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              <CCol\r\n                lg={8}\r\n                className=\"mt-4 d-flex justify-content-between\"\r\n                style={{ width: \"42%\" }}\r\n              >\r\n                <CRow className=\"mb-3\">\r\n                  <div style={{ width: \"250px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                    {/* <DropdownButton /> */}\r\n                  </div>\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                  </div>\r\n                </CRow>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ) : null}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine, index) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\" key={index}>\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"type\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"Brand\">Brand</option>\r\n                          <option value=\"Generic\">Generic</option>\r\n                        </CFormSelect>\r\n                        {/* <input\r\n                          name=\"type\"\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"name\"\r\n                          defaultValue={medicine?.name}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"strength\"\r\n                          value={medicine?.strength}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Route of administration\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strengthMeasurement\"\r\n                          defaultValue={medicine?.strengthMeasurement}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"days\"\r\n                          value={medicine?.days}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"totalQty\"\r\n                          value={medicine?.totalQty}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"startDate\"\r\n                          defaultValue={medicine?.startDate}\r\n                          onChange={(e) => handleMedicineInputChange(medicine?.id, e.target.value, e.target.name)}\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : defaultValues?.medicines?.length >= 1\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            name=\"startDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.startDate\r\n                                ? new Date(medicine?.startDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"startDate\"\r\n                              )\r\n                            }\r\n                            dateFormat={DATE_FORMAT}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"endDate\"\r\n                          defaultValue={medicine?.endDate}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : defaultValues?.medicines?.length >= 1\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            name=\"endDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.endDate\r\n                                ? new Date(medicine?.endDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"endDate\"\r\n                              )\r\n                            }\r\n                            dateFormat={DATE_FORMAT}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"m\"\r\n                          defaultValue={medicine?.m}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"a\"\r\n                          defaultValue={medicine?.a}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"e\"\r\n                          defaultValue={medicine?.e}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"n\"\r\n                          defaultValue={medicine?.n}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          key={index}\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"bf\"\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"bf\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"af\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"af\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"instruction\"\r\n                          defaultValue={medicine?.instruction}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"reason\"\r\n                          defaultValue={medicine?.reason}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              {defaultValues?.medicines?.length >= 1 ? (\r\n                defaultValues?.lab_status === \"Prescribed\" &&\r\n                (medicine?.id === 1 ? null : (\r\n                  <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => handleRemoveMedicine(medicine.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                ))\r\n              ) : medicine.id === 1 ? null : (\r\n                <CCol lg={1}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton\r\n                      onClick={() => handleRemoveMedicine(medicine.id)}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteDel} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              )}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          defaultValues?.lab_status === \"Prescribed\" && (\r\n            <>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton onClick={handleAddMedicine}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteAdd} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div className=\"vertical-line\"></div>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddMedicine}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? null : (\r\n          <>\r\n            <CRow>\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"250px\" }}>\r\n                {/* <PrimaryButton>SEND TO PHARMACY</PrimaryButton> */}\r\n                <DropdownButton\r\n                  buttonName2={\"SEND TO PHARMACY\"}\r\n                  getbtnNames={getbtnNames}\r\n                />\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {btnView && (\r\n          <BlurBackground>\r\n            <CModal\r\n              alignment=\"center\"\r\n              visible={btnView}\r\n              onClose={() => setBtnView(false)}\r\n              aria-labelledby=\"VerticallyCenteredExample\"\r\n              size=\"md\"\r\n            >\r\n              <CModalBody className=\"p-3\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Select a Pharmacy\r\n                </label>\r\n                <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                  <CFormSelect\r\n                    size=\"lg\"\r\n                    className=\"mb-3\"\r\n                    aria-label=\"Large select example\"\r\n                    name=\"strength\"\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"1\">One</option>\r\n                    <option value=\"2\">Two</option>\r\n                    <option value=\"3\">Three</option>\r\n                  </CFormSelect>\r\n                  <div className=\"d-flex gap-2 mt-2\">\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <PrimaryButton onClick={() => setBtnView(false)}>\r\n                        Save\r\n                      </PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <SecondaryButton onClick={() => setBtnView(false)}>\r\n                        Cancel\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CModalBody>\r\n            </CModal>\r\n          </BlurBackground>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrderForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport Badge from \"../../../../../../Badge/Badge\";\r\n\r\nconst DetailsTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"detailsTable\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.rx}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.frequency[0]}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.qty}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {i === 0 && (\r\n                <CTableDataCell\r\n                  style={{ height: \"10px\" }}\r\n                  rowSpan={rowData.length}\r\n                >\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.TickCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.PlusCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                        style={{transform:'rotate(45deg)'}}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsTable;\r\n","import { CCol, CFormCheck, CFormSelect, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\n\r\nconst MedicationCompleted = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState(\r\n    defaultValues.medicines\r\n      ? defaultValues.medicines\r\n      : [\r\n          {\r\n            id: 1,\r\n            type: \"\",\r\n            name: \"\",\r\n            strength: \"\",\r\n            strengthMeasurement: \"\",\r\n            days: \"\",\r\n            totalQty: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            instruction: \"\",\r\n            reason: \"\",\r\n            status: \"\",\r\n            m: 0,\r\n            a: 0,\r\n            e: 0,\r\n            n: 0,\r\n            food: \"bf\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, value, fieldName) => {\r\n    // Handle date values differently\r\n    const processedValue =\r\n      fieldName === \"startDate\" || fieldName === \"endDate\"\r\n        ? value\r\n          ? value.toISOString()\r\n          : \"\" // Convert date to ISO string\r\n        : value; // For non-date fields, just use the value directly\r\n\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [fieldName]: processedValue };\r\n      }\r\n      return medicine;\r\n    });\r\n\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  console.log(\"first\", medicines);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">View Medicine</span>\r\n          </CCol>\r\n\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine, index) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\" key={index}>\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <input\r\n                          name=\"type\"\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"name\"\r\n                          defaultValue={medicine?.name}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Route of administration\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strengthMeasurement\"\r\n                          defaultValue={medicine?.strengthMeasurement}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"days\"\r\n                          defaultValue={medicine?.days}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"totalQty\"\r\n                          defaultValue={medicine?.totalQty}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"startDate\"\r\n                          defaultValue={medicine?.startDate}\r\n                          onChange={(e) => handleMedicineInputChange(medicine?.id, e.target.value, e.target.name)}\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                            name=\"startDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.startDate\r\n                                ? new Date(medicine?.startDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"startDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"endDate\"\r\n                          defaultValue={medicine?.endDate}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                            name=\"endDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.endDate\r\n                                ? new Date(medicine?.endDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"endDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"m\"\r\n                          defaultValue={medicine?.m}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"a\"\r\n                          defaultValue={medicine?.a}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"e\"\r\n                          defaultValue={medicine?.e}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"n\"\r\n                          defaultValue={medicine?.n}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          key={index}\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"bf\"\r\n                          disabled={true}\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"bf\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"af\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                          disabled={true}\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"af\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"instruction\"\r\n                          defaultValue={medicine?.instruction}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"reason\"\r\n                          defaultValue={medicine?.reason}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              {defaultValues?.medicines?.length >= 1 ? (\r\n                defaultValues?.lab_status === \"Prescribed\" && (\r\n                  <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => handleRemoveMedicine(medicine.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                )\r\n              ) : (\r\n                <CCol lg={1}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton\r\n                      onClick={() => handleRemoveMedicine(medicine.id)}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteDel} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              )}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          defaultValues?.lab_status === \"Prescribed\" && (\r\n            <>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton onClick={handleAddMedicine}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteAdd} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div className=\"vertical-line\"></div>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddMedicine}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? null : (\r\n          <>\r\n            <CRow>\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"250px\" }}>\r\n                {/* <PrimaryButton>SEND TO PHARMACY</PrimaryButton> */}\r\n                <DropdownButton />\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationCompleted;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicationOrderForm from \"./MedicationOrderForm\";\r\nimport MedicationOrderTable from \"../../../../../../Tables/MedicationOrderTable\";\r\nimport DetailsTable from \"./DetailsTable\";\r\nimport MedicationCompleted from \"./MedicationCompleted\";\r\n\r\nconst MedicationOrder = ({ from }) => {\r\n  const detailsData = [\r\n    { id: 1, label: \"\" },\r\n    { id: 2, label: \"RX\" },\r\n    { id: 3, label: \"FREQUENCY\" },\r\n    { id: 4, label: \"DURATION\" },\r\n    { id: 5, label: \"QTY/TAKEN\" },\r\n    { id: 6, label: \"ACTIONS​\" },\r\n  ];\r\n\r\n  const detailsValue = [\r\n    {\r\n      id: 1,\r\n      name: \"Prescribed\",\r\n      rx: \"Medicine 1\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Alternative\",\r\n      rx: \"Medicine 2\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n  ];\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"MEDICATION DATE\" },\r\n    { id: 3, label: \"MEDICATION NAME\" },\r\n    { id: 4, label: \"Strength & Dosage\" },\r\n    { id: 5, label: \"M | A | E | N\" },\r\n    { id: 6, label: \"BF/AF\" },\r\n    { id: 7, label: \"Pharmacy & STATUS\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Received\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine A\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine C\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Waiting For Approval\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine D\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine A\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine AB\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine J\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1,\r\n          n: 1,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [completedView, setCompletedView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (type === \"completed\") {\r\n      setCompletedView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <MedicationOrderTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          <>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSelector />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"mb-2\">\r\n              <CRow>\r\n                <MedicationOrderTable\r\n                  rowData={getCurrentPageItems()}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            </div>\r\n          </>\r\n          {addFormView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={addFormView}\r\n                onClose={() => setAddFormView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"xl\"\r\n              >\r\n                <CModalBody className=\"p-0\">\r\n                  <div\r\n                    className=\"close-modal\"\r\n                    onClick={() => {\r\n                      setAddFormView(false);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={Assets.CloseBtn}\r\n                      alt=\"close-btn\"\r\n                      style={{ width: \"100%\" }}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <MedicationOrderForm\r\n                    back={() => {\r\n                      setAddFormView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                    defaultValues={selectedData}\r\n                  />\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n\r\n          {completedView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={completedView}\r\n                onClose={() => setCompletedView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"xl\"\r\n              >\r\n                <CModalBody className=\"p-0\">\r\n                  <div\r\n                    className=\"close-modal\"\r\n                    onClick={() => {\r\n                      setCompletedView(false);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={Assets.CloseBtn}\r\n                      alt=\"close-btn\"\r\n                      style={{ width: \"100%\" }}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <MedicationCompleted\r\n                    back={() => {\r\n                      setCompletedView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                    defaultValues={selectedData}\r\n                  />\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"lg\"\r\n              >\r\n                <CModalBody className=\"p-0\">\r\n                  <div\r\n                    className=\"close-modal\"\r\n                    onClick={() => setDetailView(false)}\r\n                  >\r\n                    <img\r\n                      src={Assets.CloseBtn}\r\n                      alt=\"close-btn\"\r\n                      style={{ width: \"100%\" }}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <DetailsTable\r\n                    rowData={detailsValue}\r\n                    columns={detailsData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrder;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { format, parse } from \"date-fns\";\r\n\r\nconst PatientEducationTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  const formattedDate = (dateStr) => {\r\n    const parsedDate = parse(dateStr, \"yyyy-MM-dd\", new Date());\r\n    return format(parsedDate, \"dd-MM-yyyy\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{formattedDate(dt?.date)}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.time}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.title}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.notes}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducationTable;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PatientEducationTable from \"../../../../../../Tables/PatientEducationTable\";\r\nimport PatientEducationForm from \"./PatientEducationForm\";\r\n\r\nconst PatientEducationTab = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Time\" },\r\n    { id: 4, label: \"Title\" },\r\n    { id: 5, label: \"Notes\" },\r\n    { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"2024-08-16\",\r\n      time: \"12:30\",\r\n      title: \"Lorem ipsum\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"2024-08-16\",\r\n      time: \"12:20\",\r\n      title: \"Lorem ipsum\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"2024-08-16\",\r\n      time: \"15:30\",\r\n      title: \"Lorem ipsum\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"2024-08-16\",\r\n      time: \"12:30\",\r\n      title: \"Lorem ipsum\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"2024-08-16\",\r\n      time: \"12:30\",\r\n      title: \"Lorem ipsum\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <PatientEducationTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <PatientEducationTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <PatientEducationForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducationTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PatientEducationTab from \"./PatientEducationTab/PatientEducationTab\";\r\n\r\nconst PatientEducation = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Patient Education\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Patient Education\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <PatientEducationTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducation;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { isValid, parse } from \"date-fns\";\r\n\r\nconst PatientEducationForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [time, setTime] = useState(null);\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultValues?.time || \"00:00\";\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setDate(date);\r\n    setTime(date);\r\n  }, [defaultDate, defaultTime]);\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(date || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setDate(updatedDateTime); // Optionally update date as well\r\n      setTime(time);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={time}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Title *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.title}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n                rows={3}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducationForm;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { isValid, parse } from \"date-fns\";\r\n\r\nconst ProcedureForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [time, setTime] = useState(null);\r\n\r\n  const [disableText, setDisableText] = useState(false);\r\n  const gravidaoptions = [\"93000\", \"93009\", \"93001\", \"93002\", \"93003\"];\r\n  const findgravidaIndex =\r\n    defaultValues?.id &&\r\n    gravidaoptions?.indexOf(defaultValues?.id);\r\n  const getSelectedGravida = (data) => {\r\n    console.log(data);\r\n    setDisableText(true);\r\n  };\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultValues?.time || \"00:00\";\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setDate(date);\r\n    setTime(date);\r\n  }, [defaultDate, defaultTime]);\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(date || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setDate(updatedDateTime); // Optionally update date as well\r\n      setTime(time);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                  dateFormat={DATE_FORMAT}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={time}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                CPT Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.treatment}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Description *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                // defaultValue={defaultValues?.remark}\r\n                disabled\r\n                defaultValue={defaultValues?.description}\r\n                value={\r\n                  disableText\r\n                    ? \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\"\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ProcedurerTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.no}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.time}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.description}</CTableDataCell>\r\n              {/* <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.visibleEye}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"details\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell> */}\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedurerTable;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport ProcedureForm from \"./ProcedureForm\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ProcedurerTable from \"../../../../../../Tables/ProcedurerTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst ProcedureTab = ({ onClose, from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"TIME\" },\r\n    { id: 4, label: \"CPT Code\" },\r\n    { id: 5, label: \"DESCRIPTION\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      no: 1,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      time: \"12:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 2,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 3,\r\n      date: \"06-07-2024\",\r\n      id: \"93008\",\r\n      time: \"19:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 4,\r\n      date: \"06-07-2024\",\r\n      id: \"93006\",\r\n      time: \"18:43\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 5,\r\n      date: \"06-07-2024\",\r\n      id: \"93005\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 6,\r\n      date: \"06-07-2024\",\r\n      id: \"93002\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 7,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 8,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 9,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 10,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      time: \"18:30\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    // {\r\n    //   no: 11,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12321\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n    // {\r\n    //   no: 12,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12322\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n    // {\r\n    //   no: 13,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12323\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ProcedurerTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <ProcedurerTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ProcedureForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport ProcedureTab from \"./ProcedureTab/ProcedureTab\";\r\n\r\nconst Cpt = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Procedure (CPT Code)\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Procedure (CPT Code)\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <ProcedureTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cpt;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst TherapiesTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date_time}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.therapy_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.therapist_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.duration}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TherapiesTable;\r\n","import { CCol, CFormCheck, CFormSelect, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst TherapiesForm = ({ back, defaultValues }) => {\r\n\r\n\r\n    const [date, setDate] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n        const parseDateString = (dateString) => {\r\n            const parts = dateString?.split(\" \");\r\n            const datePart = parts[0];\r\n            const timePart = parts[1];\r\n            const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n            const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n            const date = new Date(year, month - 1, day, hours, minutes);\r\n            return date;\r\n        };\r\n\r\n        // Example default date string\r\n        const defaultDateString = defaultValues?.date;\r\n\r\n        // Parse default date string to Date object\r\n        const defaultDate = defaultValues?.date\r\n            ? parseDateString(defaultDateString)\r\n            : new Date();\r\n\r\n        // Set default date in state\r\n        setDate(defaultDate);\r\n    }, [defaultValues]);\r\n\r\n    const options = [\"Physical\", \"Occupational\", \"Speech\", \"Psychotherapy\", \"Others\"];\r\n\r\n    const getSelectedValue = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={4}>\r\n                    <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Date *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={date}\r\n                                onChange={(date) => setDate(date)}\r\n                                dateFormat={DATE_FORMAT}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                    <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Time *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={date}\r\n                                onChange={(date) => setDate(date)}\r\n                                showTimeSelect\r\n                                showTimeSelectOnly\r\n                                timeIntervals={15}\r\n                                timeCaption=\"Time\"\r\n                                dateFormat=\"h:mm aa\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div class=\"position-relative\">\r\n                            <label for=\"validationTooltip01\" class=\"form-label\">\r\n                                Type *\r\n                            </label>\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{\r\n                                    border: \"1px solid #17171D33\",\r\n                                    borderRadius: \"5px\",\r\n                                }}\r\n                            >\r\n                                <Dropdown\r\n                                    options={options}\r\n                                    getSelectedValue={getSelectedValue}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n            <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                            Therapy Name *\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                defaultValue={defaultValues?.therapy_name}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                            Therapist Name \r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                defaultValue={defaultValues?.therapist_name}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                                Duration (in days)\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"00\"\r\n                                defaultValue={defaultValues?.duration}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                                Notes\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                defaultValue={defaultValues?.notes}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n\r\n\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TherapiesForm","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport TherapiesTable from \"../../../../../../Tables/TherapiesTable\";\r\nimport TherapiesForm from \"./TherapiesForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst TherapiesTab = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date & Time\" },\r\n    { id: 3, label: \"Type\" },\r\n    { id: 4, label: \"Therapy Name\" },\r\n    { id: 5, label: \"Therapist Name\" },\r\n    { id: 6, label: \"Duration (in days)\" },\r\n    { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date_time: \"06-07-2024 12:15\",\r\n      type: \"Physical\",\r\n      therapy_name: \"Lorem ipsum\",\r\n      therapist_name: \"Lorem ipsum\",\r\n      duration: \"5\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date_time: \"06-07-2024 12:15\",\r\n      type: \"Occupational\",\r\n      therapy_name: \"Lorem ipsum\",\r\n      therapist_name: \"Lorem ipsum\",\r\n      duration: \"5\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <TherapiesTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <TherapiesTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <TherapiesForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TherapiesTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport TherapiesTab from \"./TherapiesTab/TherapiesTab\";\r\n\r\nconst Therapies = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            {\" \"}\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Therapies\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Therapies\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <TherapiesTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Therapies;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport { tableDateTime } from \"../../../Utils/dateUtils\";\r\n\r\nconst ChiefComplaintTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data,id, type) => {\r\n\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {dt?.addition_info?.date ? dt?.addition_info?.date : \"-\"}\r\n                  {\" \"}\r\n                </span>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {dt?.addition_info?.time ? dt?.addition_info?.time : \"-\"}\r\n                </span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.addition_info?.title ? dt?.addition_info?.title :'-'}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.addition_info?.notes ? dt?.addition_info?.notes : '-'}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaintTable;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState,useCallback } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { format } from \"date-fns\";\r\nimport moment  from \"moment\";\r\n\r\nconst parseDate = (dateString) => {\r\n  if (!dateString) return null;\r\n  const [day, month, year] = dateString.split('-').map(Number);\r\n  return new Date(year, month - 1, day);\r\n};\r\n\r\nconst parseTime = (timeString) => {\r\n  if (!timeString) return null;\r\n  const [hours, minutes] = timeString.split(':').map(Number);\r\n  const now = new Date();\r\n  now.setHours(hours, minutes, 0, 0);\r\n  return now;\r\n};\r\n\r\nconst ChiefComplaintsForm = ({ back,setAddFormView,getChiefComplaints, defaultValues }) => {\r\n\r\n  const { loading, error, post,clearCache } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(\r\n  );\r\n  const [selectedDate, setSelectedDate] = useState(\r\n  );\r\n  const [complaints, setComplaints] = useState(\r\n  );\r\n  const [notes, setNotes] = useState(defaultValues?.addition_info?.notes || \"\");\r\n  const [errors, setErrors] = useState({});\r\n  useEffect(() => {\r\n    // Initialize the state with default values if available\r\n    if (defaultValues?.addition_info) {\r\n      setSelectedDate(parseDate(defaultValues.addition_info.date));\r\n      setSelectedTime(parseTime(defaultValues.addition_info.time));\r\n      setComplaints(defaultValues.addition_info.title || \"\");\r\n      setNotes(defaultValues.addition_info.notes || \"\");\r\n    }\r\n  }, [defaultValues]);\r\n\r\n  // const handleDateChange = (date) => {\r\n  //   setSelectedDate(date);\r\n  //   if (date && selectedTime) {\r\n  //     const updatedDateTime = new Date(date);\r\n  //     updatedDateTime.setHours(selectedTime.getHours(), selectedTime.getMinutes(), 0, 0);\r\n  //     setSelectedTime(updatedDateTime);\r\n  //   }\r\n  // };\r\n\r\n  // const handleTimeChange = (time) => {\r\n  //   if (time) {\r\n  //     const updatedDateTime = new Date(selectedDate || time);\r\n  //     updatedDateTime.setHours(time.getHours(), time.getMinutes(), 0, 0);\r\n  //     setSelectedDate(updatedDateTime);\r\n  //     setSelectedTime(updatedDateTime);\r\n  //   }\r\n  // };\r\n\r\n  const handleDateChange = (date) => {\r\n    if (date) {\r\n      // const formattedDate = format(date, \"dd-MM-yyyy\");\r\n      setSelectedDate(date);\r\n    } else {\r\n      setSelectedDate(null);\r\n    }\r\n  };\r\n  \r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      // console.log(\"Time-----\",moment(time).format(\"hh:mm \"))\r\n      // const formattedTime = moment(time).format(\"hh:mm\");\r\n      setSelectedTime(time);\r\n    } else {\r\n      setSelectedTime(null);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  // Validate the form\r\n  const validate = () => {\r\n    let valid = true;\r\n    let newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      console.log(\"Validate\");\r\n      newErrors.date = \"Date is required\";\r\n      valid = false;\r\n    }\r\n\r\n    if (!selectedTime) {\r\n      console.log(\"Validate\");\r\n      newErrors.time = \"Time is required\";\r\n      valid = false;\r\n    }\r\n\r\n    if (!complaints?.trim()) {\r\n      console.log(\"Validate\");\r\n      newErrors.complaints = \"Chief Complaints is required\";\r\n      valid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return valid;\r\n  };\r\n\r\n\r\n  const addChiefComplaints = async () => {\r\n    const formattedDate = format(selectedDate, \"dd-MM-yyyy\");\r\n    const formattedTime = moment(selectedTime).format(\"hh:mm\");\r\n    try {\r\n      const body = {\r\n        addition_info: {\r\n          date:formattedDate,\r\n          time:formattedTime,\r\n          title:complaints,\r\n          notes:notes,\r\n        },\r\n        user_id: \"10\",\r\n        document_source: \"chief-complaints\",\r\n      };\r\n  \r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/docs`, body);\r\n  \r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await getChiefComplaints();\r\n        setAddFormView(false);\r\n         \r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n \r\n\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultValues.id !== undefined) {\r\n        console.log(\"Edit clicked\");\r\n      \r\n      }\r\n      if (defaultValues.id === undefined) {\r\n        console.log(\"Add clicked\");\r\n        addChiefComplaints();\r\n        \r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative d-flex flex-column gap-1\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <DatePicker\r\n              showIcon\r\n              selected={selectedDate}\r\n              onChange={handleDateChange}\r\n              isClearable\r\n              closeOnScroll={true}\r\n              wrapperClassName=\"date-picker-wrapper\"\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n            {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative d-flex flex-column gap-1\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <DatePicker\r\n              showIcon\r\n              selected={selectedTime}\r\n              onChange={handleTimeChange}\r\n              showTimeSelect\r\n              showTimeSelectOnly\r\n              isClearable\r\n              closeOnScroll={true}\r\n              timeIntervals={5}\r\n              dateFormat=\"h:mm aa\"\r\n            />\r\n            {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Chief Complaints *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                // defaultValue={defaultValues?.complaints}\r\n                value={complaints}\r\n                onChange={(e) => setComplaints(e.target.value)}\r\n              />\r\n              {errors.complaints && (\r\n                <div className=\"error-text\">{errors.complaints}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                // defaultValue={defaultValues?.notes}\r\n                value={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n                rows={3}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaintsForm;\r\n","// import React from \"react\";\r\n// import Table from \"../../../../../Tables/Table\";\r\n// import { Assets } from \"../../../../../../assets/Assets\";\r\n// import { CCol, CRow } from \"@coreui/react\";\r\n// import Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\n// import ChiefComplaintTable from \"../../../../../Tables/Subjective/ChiefComplaintTable\";\r\n\r\n// const ChiefComplaints = ({ OnClose }) => {\r\n//   const columns = [\r\n//     { label: \"No.\" },\r\n//     { label: \"Complaints\" },\r\n//     { label: \"Notes\" },\r\n//     { label: \"Actions\" },\r\n//   ];\r\n\r\n//   const data = {\r\n//     columnsData: columns,\r\n//     tableData: [\r\n//       {\r\n//         no_: 1,\r\n//         complaints:\r\n//           \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n//         notes: \"Taking dole\",\r\n//         action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n//       },\r\n//     ],\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <CRow>\r\n//         <CCol md={6} className=\"mb-2\">\r\n//           <div className=\"d-flex gap-2\">\r\n//             <img\r\n//               alt=\"BackBtn\"\r\n//               src={Assets.BackBtn}\r\n//               style={{ width: \"35px\" }}\r\n//               onClick={OnClose}\r\n//               className=\"cursor\"\r\n//             />\r\n//             <span className=\"Obj-name d-flex align-items-center\">\r\n//               Chief Complaints\r\n//             </span>\r\n//           </div>\r\n//         </CCol>\r\n//         <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n//           <div className=\"d-flex mt-2\">\r\n//             <Breadcrumb\r\n//               paths={[\r\n//                 { label: \"Home\", to: \"/patients\" },\r\n//                 { label: \"Patient List\", to: \"/patients\" },\r\n//                 { label: \"Medical Profile\", to: \"/patients/history\" },\r\n//                 { label: \"Chief Complaints\", to: \"/patients/history\" },\r\n//               ]}\r\n//             />\r\n//           </div>\r\n//         </CCol>\r\n//       </CRow>\r\n//       <CRow>\r\n//         <CCol md={6} xl={6} className=\"mb-3 chief-complaints\">\r\n//           <div className=\"search-bar\">\r\n//             <input type=\"text\" placeholder=\"Search\" />\r\n//             <button type=\"submit\">\r\n//               <i className=\"fas fa-search\"></i>\r\n//             </button>\r\n//           </div>\r\n//         </CCol>\r\n//         <CCol\r\n//           md={6}\r\n//           xl={6}\r\n//           className=\"mb-3 d-flex justify-content-end align-items-center gap-15\"\r\n//         >\r\n//           <div className=\"patient-adding\">\r\n//             <button>+ ADD</button>\r\n//           </div>\r\n//           <div className=\"patient-adding\">\r\n//             <button>\r\n//               <img src={Assets.ThreeDots} alt=\"settings\" />\r\n//             </button>\r\n//           </div>\r\n//         </CCol>\r\n//       </CRow>\r\n//       <Table columns={columns} data={data} />\r\n//       <ChiefComplaintTable/>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ChiefComplaints;\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ChiefComplaintTable from \"../../../../../Tables/Subjective/ChiefComplaintTable\";\r\nimport ChiefComplaintsForm from \"./ChiefComplaintsForm\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../DateRangePicker/DateRangePicker\";\r\n\r\nconst ChiefComplaints = ({ OnClose, from }) => {\r\n  const columnData = [\r\n    { label: \"No.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Complaints\" },\r\n    { label: \"Notes\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-07-05 17:52\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-07-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 03:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 6,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 7,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  //   {\r\n  //     id: 8,\r\n  //     complaints:\r\n  //       \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n  //     notes: \"Taking dole\",\r\n  //     date: \"2024-08-05 18:15\",\r\n  //   },\r\n  // ];\r\n\r\n  const { loading, error, get,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n   \r\n  };\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data,id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id);\r\n      detailPage();\r\n      \r\n    }\r\n  };\r\n\r\n  const getChiefComplaints = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/docs?limit=${itemsPerPage}&page=${currentPage}&from=${startDate ?? \"\"}&to=${endDate ?? \"\"}&searchkey=${searchValue ?? \"\"}&order_by=created_at&dir=2&slug=chief-complaints&user_id=10&scanOrdersOnly=&scanstatus=`\r\n      );\r\n      if (response.code === 200) {\r\n        console.log(response.data.docs);\r\n        \r\n        setRowData(response.data.docs);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage,addFormView,startDate,endDate,searchValue]);\r\n\r\n  useEffect(() => {\r\n    getChiefComplaints();\r\n  }, [getChiefComplaints]);\r\n\r\n  \r\n  const deleteChiefComplaints = async () => {\r\n    try {\r\n      const response = await del(`resource/docs/${id}`);\r\n  \r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        getChiefComplaints();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {from !== \"Consult\" && (\r\n        <CRow>\r\n          <CCol md={6} className=\"mb-2\">\r\n            <div className=\"d-flex gap-2\">\r\n              <img\r\n                alt=\"BackBtn\"\r\n                src={Assets.BackBtn}\r\n                style={{ width: \"35px\" }}\r\n                onClick={() => {\r\n                  OnClose();\r\n                }}\r\n                className=\"cursor\"\r\n              />\r\n              <span className=\"Obj-name d-flex align-items-center\">\r\n                Chief Complaints\r\n              </span>\r\n            </div>\r\n          </CCol>\r\n          <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n            <div className=\"d-flex mt-2\">\r\n              <Breadcrumb\r\n                paths={[\r\n                  { label: \"Home\", to: \"/patients\" },\r\n                  { label: \"Patient List\", to: \"/patients\" },\r\n                  { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                  { label: \"Chief Complaints\", to: \"/patients/history\" },\r\n                ]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow>\r\n              <CCol lg={8} md={8} xl={8} className=\"mb-3 chief-complaints\">\r\n                {/* <div className=\"search-bar\">\r\n                <input type=\"text\" placeholder=\"Search\" />\r\n                <button type=\"submit\">\r\n                  <i className=\"fas fa-search\"></i>\r\n                </button>\r\n              </div> */}\r\n                <DateRangePicker getFilterValues={getFilterValues} />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                md={4}\r\n                xl={4}\r\n                className=\"mb-3 d-flex justify-content-end align-items-center gap-15\"\r\n              >\r\n                <div className=\"patient-adding\" onClick={() => addFormPage()}>\r\n                  <button>+ ADD</button>\r\n                </div>\r\n                <div className=\"patient-adding\">\r\n                  <button>\r\n                    <img src={Assets.ThreeDots} alt=\"settings\" />\r\n                  </button>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <ChiefComplaintTable\r\n              rowData={rowData}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={pagination?.total}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ChiefComplaintsForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              setAddFormView={setAddFormView}\r\n              getChiefComplaints={getChiefComplaints}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => deleteChiefComplaints()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaints;\r\n","import {\r\n  CFormCheck,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst FamilyHistoryTable = ({\r\n  columns,\r\n  rowData,\r\n  getselectedData,\r\n  addFormView,\r\n}) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.disease}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.grandparents === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.father === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.mother === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Brother === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Sister === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Daughter === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Son === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyHistoryTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport FamilyHistoryTable from \"../../../../../../Tables/Subjective/FamilyHistoryTable\";\r\n\r\nconst FamilyHistory = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Disease\" },\r\n    { id: 3, label: \"Grandparents\" },\r\n    { id: 4, label: \"Father\" },\r\n    { id: 5, label: \"Mother\" },\r\n    { id: 6, label: \"Brother(s)\" },\r\n    { id: 7, label: \"Sister(s)\" },\r\n    { id: 8, label: \"Daughter(s)\" },\r\n    { id: 9, label: \"Son(s)\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      disease: \"Migraine\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"yes\",\r\n      Daughter: \"yes\",\r\n      Son: \"no\",\r\n    },\r\n    {\r\n      id: 2,\r\n      disease: \"Stroke\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"no\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 3,\r\n      disease: \"Thyroid Disease\",\r\n      grandparents: \"no\",\r\n      father: \"no\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 4,\r\n      disease: \"Sinus\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"yes\",\r\n      Brother: \"no\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 5,\r\n      disease: \"Tuberculosis\",\r\n      grandparents: \"no\",\r\n      father: \"no\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"no\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        {from !== \"Consult\" && (\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                {!addFormView ? (\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.EditPencil} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Edit</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                ) : (\r\n                  <div style={{ width: \"100px\" }}>\r\n                    <PrimaryButton onClick={() => setAddFormView(false)}>\r\n                      <div className=\"d-flex justify-content-center gap-2 w-100\">\r\n                        <span className=\"fs-16 fw-600\">Save</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n        )}\r\n        <div className=\"mb-2\">\r\n          <FamilyHistoryTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            addFormView={addFormView}\r\n          />\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n        </div>\r\n      </>\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyHistory;\r\n","import { CCol, CFormCheck, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst MedHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.onset;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.onset\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Yes\", \"No\"];\r\n  const findIndex = defaultValues?.prev_illness\r\n    ? options?.indexOf(defaultValues?.prev_illness)\r\n    : 0;\r\n\r\n  const findIndex1 = defaultValues?.chronic\r\n    ? options?.indexOf(defaultValues?.chronic)\r\n    : 0;\r\n\r\n  const icdoptions = [\r\n    \"E11.5 - Type 2 diabetes mellitus without complications\",\r\n    \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n    \"E11.7 - Type 2 diabetes mellitus without complications\",\r\n  ];\r\n\r\n  const findIndex2 = defaultValues?.icd10\r\n    ? icdoptions?.indexOf(defaultValues?.icd10)\r\n    : 0;\r\n\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Onset Date *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                  isClearable\r\n                  closeOnScroll={true}\r\n                  wrapperClassName=\"date-picker-wrapper\"\r\n                  dateFormat={DATE_FORMAT}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Conditions *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.conditions}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd10}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={icdoptions}\r\n                  defaultValue={\r\n                    defaultValues?.icd10 ? icdoptions[findIndex2] : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Chronic\r\n              </label>\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={defaultValues?.chronic === \"Yes\"}\r\n                // onChange={handleChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={defaultValues?.chronic === \"No\"}\r\n              />\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.chronic}\r\n              /> */}\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultValues?.chronic ? options[findIndex1] : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Previous Illness\r\n              </label>\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault1\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={defaultValues?.prev_illness === \"Yes\"}\r\n                // onChange={handleChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={defaultValues?.prev_illness === \"No\"}\r\n              />\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.prev_illness}\r\n              /> */}\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultValues?.prev_illness ? options[findIndex] : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedHistoryForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedHistoryForm from \"./MedHistoryForm\";\r\nimport MedicalHistoryTable from \"../../../../../../Tables/Subjective/MedicalHistoryTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst MedicalHistory = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"ONSET DATE\" },\r\n    { id: 3, label: \"CONDITIONS\" },\r\n    { id: 4, label: \"ICD\" },\r\n    { id: 5, label: \"Chronic\" },\r\n    { id: 6, label: \"Previous Illness\" },\r\n    // { id: 7, label: \"Notes\" },\r\n    { id: 7, label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"No\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      onset: \"01-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"No\",\r\n      prev_illness: \"No\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      onset: \"01-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"No\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"No\",\r\n      prev_illness: \"No\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      onset: \"12-03-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      onset: \"02-03-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <MedicalHistoryTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MedHistoryForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistory;\r\n","import { CCol, CFormCheck, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst ObstericHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  const [fert_treatment, setFert_treatment] = useState(\r\n    defaultValues?.fert_treatment || \"No\"\r\n  );\r\n  const [para, setPara] = useState(\"\");\r\n  const [lacating, setLacating] = useState(\"\");\r\n  const [gravida, setGravida] = useState(\"\");\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedTrimster = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getSelectedGravida = (data) => {\r\n    setGravida(data);\r\n  };\r\n  const getSelectedLacating = (data) => {\r\n    setLacating(data);\r\n  };\r\n  const getSelectedPara = (data) => {\r\n    setPara(data);\r\n  };\r\n  const getSelectedFertValue = (data) => {\r\n    setFert_treatment(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.lmp_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.lmp_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.ed_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.ed_date\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n  }, [defaultValues]);\r\n  const options = [\"First\", \"Second\", \"Third\"];\r\n  const findIndex = defaultValues?.trimster\r\n    ? options?.indexOf(defaultValues?.trimster)\r\n    : 0;\r\n\r\n  const lacatingoptions = [\"Yes\", \"No\"];\r\n  const findlacatingIndex = defaultValues?.lacating\r\n    ? lacatingoptions?.indexOf(defaultValues?.lacating)\r\n    : 1;\r\n  const findtreatmentIndex = defaultValues?.fert_treatment\r\n    ? lacatingoptions?.indexOf(defaultValues?.fert_treatment)\r\n    : 1;\r\n  const gravidaoptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n  const findgravidaIndex = defaultValues?.gravida\r\n    ? gravidaoptions?.indexOf(defaultValues?.gravida)\r\n    : 0;\r\n  const findparaIndex = defaultValues?.para\r\n    ? gravidaoptions?.indexOf(defaultValues?.para)\r\n    : 0;\r\n  const findingIndex5 = defaultValues?.lacating\r\n    ? lacatingoptions?.indexOf(defaultValues?.lacating)\r\n    : 1;\r\n  const getSelectedValue5 = (data) => {\r\n    console.log(data);\r\n  };\r\n  const [bad, setBad] = useState(\"No\");\r\n  const findingIndex6 = defaultValues?.bad\r\n    ? lacatingoptions?.indexOf(defaultValues?.bad)\r\n    : 1;\r\n  const getSelectedValue6 = (data) => {\r\n    setBad(data);\r\n  };\r\n\r\n  const [preg, setPreg] = useState(defaultValues?.pregnant || \"No\");\r\n  const [fertTreat, setFertTreat] = useState(\r\n    defaultValues?.fert_treatment || \"No\"\r\n  );\r\n  const [lact, setLact] = useState(defaultValues?.lacating || \"No\");\r\n  const [cesarean, setCesarean] = useState(defaultValues?.cesarean || \"No\");\r\n  const [obstetric, setObsteric] = useState(defaultValues?.obstetric || \"No\");\r\n\r\n  const handleChangeObste = (e) => {\r\n    setObsteric(e.target.value);\r\n  };\r\n\r\n  const handleChangeCesa = (e) => {\r\n    setCesarean(e.target.value);\r\n  };\r\n  const handleChangeLact = (e) => {\r\n    setLact(e.target.value);\r\n  };\r\n  const handleChangeFert = (e) => {\r\n    setFertTreat(e.target.value);\r\n  };\r\n  const findingIndex7 = defaultValues?.bad\r\n    ? lacatingoptions?.indexOf(defaultValues?.bad)\r\n    : 1;\r\n  const getSelectedValue7 = (data) => {\r\n    setPreg(data);\r\n  };\r\n  const handleChange = (e) => {\r\n    setPreg(e.target.value);\r\n  };\r\n  const [gravidaValue, setGravidaValue] = useState(\r\n    defaultValues?.gravida || \"\"\r\n  );\r\n  const [paraValue, setParaValue] = useState(defaultValues?.para || \"\");\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newstrValue = input.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (name === \"gravida\") {\r\n      setGravidaValue(newstrValue);\r\n    }\r\n    if (name === \"para\") {\r\n      setParaValue(newstrValue);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pregnant *\r\n              </label>\r\n\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"exampleRadios\"\r\n                id=\"exampleRadios1\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={preg === \"Yes\"}\r\n                onChange={handleChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={preg === \"No\"}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {preg === \"Yes\" && (\r\n          <>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  LMP Date *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date}\r\n                    onChange={(date) => setDate(date)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  ED Date\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date2}\r\n                    onChange={(date) => setDate2(date)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Trimester *\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.trimster}\r\n              /> */}\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={options}\r\n                      defaultValue={options[findIndex]}\r\n                      getSelectedValue={getSelectedTrimster}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Gravida *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    name=\"gravida\"\r\n                    placeholder=\"00\"\r\n                    defaultValue={defaultValues?.gravida}\r\n                    value={gravidaValue}\r\n                    onChange={numCheck}\r\n                  />\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedGravida}\r\n                      options={gravidaoptions}\r\n                      defaultValue={gravidaoptions[findgravidaIndex]}\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Para *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"00\"\r\n                    defaultValue={defaultValues?.para}\r\n                    name=\"para\"\r\n                    value={paraValue}\r\n                    onChange={numCheck}\r\n                  />\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedPara}\r\n                      options={gravidaoptions}\r\n                      defaultValue={gravidaoptions[findparaIndex]}\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Fertility Treament\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.fert_treatment}\r\n              /> */}\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={lacatingoptions}\r\n                      defaultValue={lacatingoptions[findtreatmentIndex]}\r\n                      getSelectedValue={getSelectedFertValue}\r\n                    />\r\n                  </div> */}\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"Yes\"\r\n                    value=\"Yes\"\r\n                    checked={fertTreat === \"Yes\"}\r\n                    onChange={handleChangeFert}\r\n                  />\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"No\"\r\n                    value=\"No\"\r\n                    checked={fertTreat === \"No\"}\r\n                    onChange={handleChangeFert}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            {fertTreat === \"Yes\" && (\r\n              <CCol lg={4} className=\"mb-3\">\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Treament Description*\r\n                    </label>\r\n                    <CFormTextarea\r\n                      type=\"text\"\r\n                      class=\"form-control  pad-10\"\r\n                      id=\"validationTooltip01\"\r\n                      placeholder=\"Enter\"\r\n                      // defaultValue={defaultValues?.fert_treatment}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            )}\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Lacatating\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.lacating}\r\n              /> */}\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedLacating}\r\n                      options={lacatingoptions}\r\n                      defaultValue={lacatingoptions[findlacatingIndex]}\r\n                    />\r\n                  </div> */}\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"Yes\"\r\n                    value=\"Yes\"\r\n                    checked={lact === \"Yes\"}\r\n                    onChange={handleChangeLact}\r\n                  />\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"No\"\r\n                    value=\"No\"\r\n                    checked={lact === \"No\"}\r\n                    onChange={handleChangeLact}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n      </CRow>\r\n      <CRow>\r\n        <CCol lg={6} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Previous Cesarean Sections\r\n              </label>\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={lacatingoptions}\r\n                  defaultValue={lacatingoptions[findingIndex5]}\r\n                  getSelectedValue={getSelectedValue5}\r\n                />\r\n              </div> */}\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={cesarean === \"Yes\"}\r\n                onChange={handleChangeCesa}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={cesarean === \"No\"}\r\n                onChange={handleChangeCesa}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol lg={6} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Bad Obstetric History\r\n              </label>\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={lacatingoptions}\r\n                  defaultValue={lacatingoptions[findingIndex6]}\r\n                  getSelectedValue={getSelectedValue6}\r\n                />\r\n              </div> */}\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={obstetric === \"Yes\"}\r\n                onChange={handleChangeObste}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={obstetric === \"No\"}\r\n                onChange={handleChangeObste}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {obstetric === \"Yes\" && (\r\n          <CCol lg={6} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Bad Obstetric History Description*\r\n                </label>\r\n                <CFormTextarea\r\n                  type=\"text\"\r\n                  class=\"form-control  pad-10\"\r\n                  id=\"validationTooltip01\"\r\n                  placeholder=\"Enter\"\r\n                  // defaultValue={defaultValues?.fert_treatment}\r\n                />\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"130px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObstericHistoryForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst ObstetricHistoryTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.lmp_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.ed_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.trimster}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.gravida}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.para}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.boh}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lacating}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObstetricHistoryTable;\r\n","import { CCol, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst MensturalHistoryForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.lmp;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.lmp\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.ed_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.ed_date\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n  }, [defaultValues]);\r\n\r\n  const options = [\"Yes\", \"No\"];\r\n  const flow_duration = [\"2-7 days\", \"< 2 Days\", \"> 7 Days\"];\r\n  const flow_type = [\"Less\", \"Moderate\", \"Severe\"];\r\n\r\n  const findIndex = defaultValues?.trimster\r\n    ? options?.indexOf(defaultValues?.trimster)\r\n    : 1;\r\n\r\n  const [menopause, setMenopause] = useState(defaultValues.menopause || \"No\");\r\n\r\n  const handleClick = (event) => {\r\n    setMenopause(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n  const getSelected = (data) => {\r\n    console.log(data);\r\n    setMenopause(data);\r\n  };\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedBleeding = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedCycle = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedDysmen = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const [value, setValue] = useState(\r\n    defaultValues?.age ? defaultValues?.age : \"\"\r\n  );\r\n  const [value1, setValue1] = useState(\r\n    defaultValues?.age ? defaultValues?.age : \"\"\r\n  );\r\n  const [value2, setValue2] = useState(\r\n    defaultValues?.cycle_per_year ? defaultValues?.cycle_per_year : \"\"\r\n  );\r\n  const [value3, setValue3] = useState(\r\n    defaultValues?.cycle_in_days ? defaultValues?.cycle_in_days : \"\"\r\n  );\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const input = e.target.value;\r\n\r\n    // Remove non-digit characters and limit to two digits\r\n    const newValue = input.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (input.length > 2 && newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      if (e.target.name === \"MenopauseAge\") {\r\n        setValue(newValue);\r\n      } else if (e.target.name === \"MenarcheAge\") {\r\n        setValue1(newValue);\r\n      } else if (e.target.name === \"cycle_per_year\") {\r\n        setValue2(newValue);\r\n      } else if (e.target.name === \"cycle_in_days\") {\r\n        setValue3(newValue);\r\n      }\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const paste = e.clipboardData.getData(\"text\");\r\n    const newValue = paste.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      if (e.target.name === \"MenopauseAge\") {\r\n        setValue(newValue);\r\n      } else if (e.target.name === \"MenarcheAge\") {\r\n        setValue1(newValue);\r\n      } else if (e.target.name === \"cycle_per_year\") {\r\n        setValue2(newValue);\r\n      } else if (e.target.name === \"cycle_in_days\") {\r\n        setValue3(newValue);\r\n      }\r\n      setError(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Menarche Age *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={}\r\n                name=\"MenarcheAge\"\r\n                value={value1}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycles per Year {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={defaultValues?.cycle_per_year}\r\n                name=\"cycle_per_year\"\r\n                value={value2}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycle Length in days {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={defaultValues?.cycle_in_days}\r\n                name=\"cycle_in_days\"\r\n                value={value3}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Flow Duration {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={flow_duration}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Flow Type {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={flow_type}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\"> InterMenstrual Bleeding </p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menstrualYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"menstrual\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menstrualNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"menstrual\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\"> Cycle Irregularity </p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"irregularityYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"irregularity\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"irregularityNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"irregularity\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">Dysmenorrhea</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"dysmenorrheaYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"dysmenorrhea\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"dysmenorrheaNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"dysmenorrhea\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              LMP Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">Menopause</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menopauseYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"menopause\"\r\n                checked={menopause === \"Yes\"}\r\n                onChange={handleClick}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menopauseNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"menopause\"\r\n                checked={menopause === \"No\"}\r\n                onChange={handleClick}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {menopause === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Menopause Age\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control  pad-10\"\r\n                  id=\"validationTooltip01\"\r\n                  placeholder=\"00\"\r\n                  // defaultValue={defaultValues?.age}\r\n                  name=\"MenopauseAge\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  onPaste={handlePaste}\r\n                  disabled={from === \"Consult-Gynaec\" ? true : false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n\r\n      {from !== \"Consult-Gynaec\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"130px\" }}>\r\n            <PrimaryButton>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MensturalHistoryForm;\r\n","import { CCol, CFormTextarea, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst ScreeningHistoryForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  const [date3, setDate3] = useState(null);\r\n  const [abnormalStatus, setAbnormalStatus] = useState(\r\n    defaultValues?.history_of_abnormal || \"No\"\r\n  );\r\n  const [mamogramStatus, setMamogramStatus] = useState(\r\n    defaultValues?.history_of_mamogram || \"No\"\r\n  );\r\n  const [breastStatus, setBreastStatus] = useState(\r\n    defaultValues?.history_of_breast || \"No\"\r\n  );\r\n\r\n  const handleAbnormalStatus = (event) => {\r\n    setAbnormalStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  const handleMamogramStatus = (event) => {\r\n    setMamogramStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  const handleBreastStatus = (event) => {\r\n    setBreastStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date_of_last_pap;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date_of_last_pap\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.date_of_last_mamogram;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.date_of_last_mamogram\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString3 = defaultValues?.date_of_last_breast;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate3 = defaultValues?.date_of_last_breast\r\n      ? parseDateString(defaultDateString3)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n    setDate3(defaultDate3);\r\n  }, [defaultValues]);\r\n  const options = [\"Yes\", \"No\"];\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    setAbnormalStatus(data);\r\n  };\r\n\r\n  const findIndex = defaultValues?.history_of_abnormal\r\n    ? options?.indexOf(defaultValues?.history_of_abnormal)\r\n    : 1;\r\n\r\n  const getSelectedValue3 = (data) => {\r\n    setMamogramStatus(data);\r\n  };\r\n\r\n  const getSelectedValue4 = (data) => {\r\n    setBreastStatus(data);\r\n  };\r\n\r\n  const findIndex3 = defaultValues?.history_of_mamogram\r\n    ? options?.indexOf(defaultValues?.history_of_mamogram)\r\n    : 1;\r\n\r\n  const findIndex4 = defaultValues?.history_of_breast\r\n    ? options?.indexOf(defaultValues?.history_of_breast)\r\n    : 1;\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last pap smear\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">History of abnormal pap smear</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"abnormalYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"abnormal\"\r\n                checked={abnormalStatus === \"Yes\"}\r\n                onChange={handleAbnormalStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"abnormalNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"abnormal\"\r\n                checked={abnormalStatus === \"No\"}\r\n                onChange={handleAbnormalStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {abnormalStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Abnormal pap smear details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult-Screen\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last mamogram\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date2}\r\n                onChange={(date) => setDate2(date)}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">History of mamogram</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"mamogramYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"mamogram\"\r\n                checked={mamogramStatus === \"Yes\"}\r\n                onChange={handleMamogramStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"mamogramNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"mamogram\"\r\n                checked={mamogramStatus === \"No\"}\r\n                onChange={handleMamogramStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {mamogramStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Mamogram details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult-Screen\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last breast exam\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date3}\r\n                onChange={(date) => setDate3(date)}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">History of breast exam</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"breastYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"breast\"\r\n                checked={breastStatus === \"Yes\"}\r\n                onChange={handleBreastStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"breastNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"breast\"\r\n                checked={breastStatus === \"No\"}\r\n                onChange={handleBreastStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {breastStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Breast exam details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult-Screen\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n\r\n      {from !== \"Consult-Screen\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"130px\" }}>\r\n            <PrimaryButton>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScreeningHistoryForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ObstericHistoryForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\nimport MedicalTab from \"../../../MedicalTab\";\r\nimport ObstetricHistoryTable from \"../../../../../../Tables/Subjective/ObstetricHistoryTable\";\r\nimport GynaecHistoryTable from \"../../../../../../Tables/Subjective/GynaecHistoryTable\";\r\nimport ScreeningHistory from \"../../../../../../Tables/Subjective/ScreeningHistory\";\r\nimport MensturalHistoryForm from \"./MensturalHistoryForm\";\r\nimport ScreeningHistoryForm from \"./ScreeningHistoryForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst OGHistory = ({ from, back }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"LMP Date\" },\r\n    { id: 3, label: \"ED Date\" },\r\n    { id: 4, label: \"Trimester\" },\r\n    { id: 5, label: \"Gravida\" },\r\n    { id: 6, label: \"Para\" },\r\n    { id: 7, label: \"Bad Obstetric History\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 3,\r\n      para: 5,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      pregnant: \"Yes\",\r\n      cesarean: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      cesarean: \"Yes\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 3,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"No\",\r\n      lacating: \"Yes\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 4,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"No\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 5,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"No\",\r\n      lacating: \"No\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 6,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 7,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 8,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 9,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 10,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n  ];\r\n\r\n  const MensuralcolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 3, label: \"Menarche Age\" },\r\n    // { id: 3, label: \"Cycles per Year\" },\r\n    // { id: 4, label: \"Cycle Length in days\" },\r\n    // { id: 5, label: \"Flow Duration\" },\r\n    // { id: 6, label: \"Flow Type\" },\r\n    // { id: 7, label: \"InterMenstrual Bleeding\" },\r\n    { id: 3, label: \"cycle irregularity\" },\r\n    { id: 4, label: \"dysmenorrhea\" },\r\n    { id: 5, label: \"LMP\" },\r\n    { id: 2, label: \"Menopause\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const MenstrualrowData = [\r\n    {\r\n      id: 1,\r\n      age: \"18\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"20\",\r\n      cycle_in_days: \"30\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 2,\r\n      age: \"25\",\r\n      menopause: \"No\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 3,\r\n      age: \"25\",\r\n      menopause: \"No\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 4,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 5,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 6,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 7,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 8,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 9,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 10,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n  ];\r\n\r\n  const ScreeningcolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"date of last pap smear\" },\r\n    { id: 3, label: \"History of abnormal pap smear\" },\r\n    { id: 4, label: \"date of last mamogram\" },\r\n    { id: 5, label: \"History of mamogram\" },\r\n    { id: 6, label: \"date of last Breast Exam\" },\r\n    { id: 7, label: \"History of Breast Exam\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const ScreeningrowData = [\r\n    {\r\n      id: 1,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"08-06-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-07-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentMenstrualPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return MenstrualrowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentScreeningItem = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return ScreeningrowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Yes\", \"No\"];\r\n  const PatientSubMenu4 = localStorage.getItem(\"PatientSubMenu-4\");\r\n  const ParsedPatientSubMenu = PatientSubMenu4\r\n    ? JSON.parse(PatientSubMenu4)\r\n    : 1;\r\n  const tabs = [\r\n    { id: 1, title: \"Obstetric History\" },\r\n    { id: 2, title: \"Gynaec History\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n\r\n  const PatientSubMenu5 = localStorage.getItem(\"PatientSubMenu-5\");\r\n  const ParsedPatientSubMenu5 = PatientSubMenu5\r\n    ? JSON.parse(PatientSubMenu5)\r\n    : 1;\r\n  const [currentHistoryTab, setCurrentHistoryTab] = useState(\r\n    ParsedPatientSubMenu5\r\n  );\r\n\r\n  const GynaecTabs = [\r\n    { id: 1, title: \"Menstrual History\" },\r\n    { id: 2, title: \"Screening and Diagnostic History\" },\r\n  ];\r\n\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n    setAddFormView(false);\r\n  };\r\n\r\n  const getHistoryCurrentTab = (data) => {\r\n    setCurrentHistoryTab(data);\r\n    setAddFormView(false);\r\n  };\r\n\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedValue1 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ObstetricHistoryTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from === \"Consult-Gynaec\" && (\r\n        <CRow>\r\n          <CCard className=\"p-2 cursor-default mb-5\">\r\n            <CCardBody className=\"mb-3\">\r\n              <MensturalHistoryForm\r\n                back={back}\r\n                defaultValues={selectedData}\r\n                from={from}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CRow>\r\n      )}\r\n      {from === \"Consult-Screen\" && (\r\n        <CRow>\r\n          <CCard className=\"p-2 cursor-default mb-5\">\r\n            <CCardBody className=\"mb-3\">\r\n              <ScreeningHistoryForm\r\n                back={back}\r\n                defaultValues={selectedData}\r\n                from={from}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CRow>\r\n      )}\r\n      {from === \"\" && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={5} className=\"\">\r\n              <MedicalTab\r\n                tabs={tabs}\r\n                getCurrentTab={getCurrentTab}\r\n                defaultTab={currentTab - 1}\r\n              />\r\n            </CCol>\r\n            <CCol lg={7}>\r\n              {currentTab === 1 && (\r\n                // <CRow>\r\n                //   <CCol lg={4}>\r\n                //     <div style={{ width: \"100%\" }}>\r\n                //       <div class=\"position-relative\">\r\n                //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n                //           Pregnant\r\n                //         </label>\r\n                //         <div\r\n                //           className=\"w-100\"\r\n                //           style={{\r\n                //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                //           }}\r\n                //         >\r\n                //           <Dropdown\r\n                //             options={options}\r\n                //             defaultValue={options[0]}\r\n                //             getSelectedValue={getSelectedValue}\r\n                //           />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   </CCol>\r\n                //   <CCol lg={4}>\r\n                //     <div style={{ width: \"100%\" }}>\r\n                //       <div class=\"position-relative\">\r\n                //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n                //           Previous Cesarean Sections\r\n                //         </label>\r\n                //         <div\r\n                //           className=\"w-100\"\r\n                //           style={{\r\n                //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                //           }}\r\n                //         >\r\n                //           <Dropdown\r\n                //             options={options}\r\n                //             defaultValue={options[1]}\r\n                //             getSelectedValue={getSelectedValue1}\r\n                //           />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   </CCol>\r\n                //   <CCol lg={4}>\r\n                //     <div style={{ width: \"100%\" }}>\r\n                //       <div class=\"position-relative\">\r\n                //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n                //           Bad Obstetric History\r\n                //         </label>\r\n                //         <div\r\n                //           className=\"w-100\"\r\n                //           style={{\r\n                //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                //           }}\r\n                //         >\r\n                //           <Dropdown\r\n                //             options={options}\r\n                //             defaultValue={options[1]}\r\n                //             getSelectedValue={getSelectedValue2}\r\n                //           />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   </CCol>\r\n                // </CRow>\r\n                <></>\r\n              )}\r\n              {currentTab === 2 && (\r\n                <MedicalTab\r\n                  tabs={GynaecTabs}\r\n                  getCurrentTab={getHistoryCurrentTab}\r\n                  defaultTab={currentHistoryTab - 1}\r\n                />\r\n              )}\r\n            </CCol>\r\n          </CRow>\r\n\r\n          {!addFormView && currentTab === 1 && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <div className=\"mb-2\">\r\n                {currentTab === 1 && (\r\n                  <>\r\n                    <CRow>\r\n                      <ObstetricHistoryTable\r\n                        rowData={getCurrentPageItems()}\r\n                        columns={columnData}\r\n                        getselectedData={getselectedData}\r\n                        from={from}\r\n                      />\r\n                    </CRow>\r\n\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={rowData?.length}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                )}\r\n                {/* {currentTab === 2 && currentHistoryTab === 1 && (\r\n                  <>\r\n                    <CRow>\r\n                      <GynaecHistoryTable\r\n                        rowData={getCurrentMenstrualPageItems()}\r\n                        columns={MensuralcolumnData}\r\n                        getselectedData={getselectedData}\r\n                      />\r\n                    </CRow>\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={rowData?.length}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                )}\r\n                {currentTab === 2 && currentHistoryTab === 2 && (\r\n                  <>\r\n                    <CRow>\r\n                      <ScreeningHistory\r\n                        rowData={getCurrentScreeningItem()}\r\n                        columns={ScreeningcolumnData}\r\n                        getselectedData={getselectedData}\r\n                      />\r\n                    </CRow>\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={rowData?.length}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                )} */}\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {from === \"\" && (\r\n        <>\r\n          {addFormView && (\r\n            <CRow className=\"mb-2\">\r\n              <CCard className=\"p-2 cursor-default mb-5\">\r\n                <CCardBody className=\"mb-3\">\r\n                  {currentTab === 1 && (\r\n                    <ImagingOrderForm\r\n                      back={() => {\r\n                        setAddFormView(false);\r\n                        setSelectedData({});\r\n                      }}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                  {/* {currentTab === 2 && currentHistoryTab === 1 && (\r\n                <MensturalHistoryForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )}\r\n              {currentTab === 2 && currentHistoryTab === 2 && (\r\n                <ScreeningHistoryForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )} */}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CRow>\r\n          )}\r\n\r\n          {currentTab !== 1 && (\r\n            <CRow className=\"mb-2\">\r\n              <CCard className=\"p-2 cursor-default mb-5\">\r\n                <CCardBody className=\"mb-3\">\r\n                  {currentTab === 2 && currentHistoryTab === 1 && (\r\n                    <MensturalHistoryForm\r\n                      back={back}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                  {currentTab === 2 && currentHistoryTab === 2 && (\r\n                    <ScreeningHistoryForm\r\n                      back={back}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CRow>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OGHistory;\r\n","import { CCol, CFormTextarea, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst MedHistoryForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [smokingStatus, setSmokingStatus] = useState(\r\n    defaultValues?.smoking || \"No\"\r\n  );\r\n\r\n  const [alcoholStatus, setAlcoholStatus] = useState(\r\n    defaultValues?.alcohol || \"No\"\r\n  );\r\n\r\n  const [drugStatus, setDrugStatus] = useState(defaultValues?.drugs || \"No\");\r\n\r\n  const handleSmokingStatus = (event) => {\r\n    setSmokingStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  const handleAlcoholStatus = (event) => {\r\n    setAlcoholStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  const handleDrugStatus = (event) => {\r\n    setDrugStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.onset;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.onset\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Yes\", \"No\"];\r\n\r\n  const getSelectedValue1 = (data) => {\r\n    setSmokingStatus(data);\r\n  };\r\n\r\n  const findIndex = defaultValues?.smoking\r\n    ? options?.indexOf(defaultValues?.smoking)\r\n    : 1;\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    setAlcoholStatus(data);\r\n  };\r\n\r\n  const findIndex2 = defaultValues?.alcohol\r\n    ? options?.indexOf(defaultValues?.alcohol)\r\n    : 1;\r\n\r\n  const getSelectedValue3 = (data) => {\r\n    setDrugStatus(data);\r\n  };\r\n\r\n  const findIndex3 = defaultValues?.drugs\r\n    ? options?.indexOf(defaultValues?.drugs)\r\n    : 1;\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <p className=\"radio-label\">Smoking</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"smokingYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"smoking\"\r\n                checked={smokingStatus === \"Yes\"}\r\n                onChange={handleSmokingStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"smokingNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"smoking\"\r\n                checked={smokingStatus === \"No\"}\r\n                onChange={handleSmokingStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {smokingStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Smoking details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4}>\r\n          <p className=\"radio-label\">Alcohol</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"alcoholYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"alcohol\"\r\n                checked={alcoholStatus === \"Yes\"}\r\n                onChange={handleAlcoholStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"alcoholNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"alcohol\"\r\n                checked={alcoholStatus === \"No\"}\r\n                onChange={handleAlcoholStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {alcoholStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Alcohol details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4}>\r\n          <p className=\"radio-label\">Drugs</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"drugsYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"drugs\"\r\n                checked={drugStatus === \"Yes\"}\r\n                onChange={handleDrugStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"drugsNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"drugs\"\r\n                checked={drugStatus === \"No\"}\r\n                onChange={handleDrugStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {drugStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Drugs details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 4-20 words long.\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n      {from !== \"Consult\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedHistoryForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SocialHistoryTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.smoking}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.alcohol}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.drugs}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialHistoryTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedHistoryForm from \"./MedHistoryForm\";\r\nimport MedicalHistoryTable from \"../../../../../../Tables/Subjective/MedicalHistoryTable\";\r\nimport SocialHistoryTable from \"../../../../../../Tables/Subjective/SocialHistoryTable\";\r\n\r\nconst SocialHistory = ({ from, back }) => {\r\n  const Data = {\r\n    id: 1,\r\n    smoking: \"No\",\r\n    alcohol: \"No\",\r\n    drugs: \"No\",\r\n  };\r\n  return (\r\n    <>\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <MedHistoryForm back={back} defaultValues={Data} from={from} />\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialHistory;\r\n","import { CCol, CRow ,CFormTextarea} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst SurgicalForm = ({ back, defaultValues }) => {\r\n\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  const gravidaoptions = [\"Lorem Ipsum\", \"Lorem Ipsum\"];\r\n  const findgravidaIndex = defaultValues?.gravida\r\n    ? gravidaoptions?.indexOf(defaultValues?.gravida)\r\n    : 0;\r\n  const getSelectedGravida = (data) => {\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeCaption=\"Time\"\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Surgery Name *\r\n              </label>\r\n\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  // defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Surgery Reason *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code\r\n              </label>\r\n\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  // defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Performed by Doctor *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Referred by Doctor\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Hospital *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n      <CCol lg={6}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Notes\r\n            </label>\r\n            <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3} >\r\n                \r\n                </CFormTextarea>\r\n          </div>\r\n        </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SurgicalTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.icd_code}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.Performed_by}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.hospital}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SurgicalForm from \"./SurgicalForm\";\r\nimport MedicationTable from \"../../../../../../Tables/Subjective/MedicationTable\";\r\nimport SurgicalTable from \"../../../../../../Tables/Subjective/SurgicalTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst SurgicalHistory = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Surgery Name\" },\r\n    { id: 4, label: \" ICD Code\" },\r\n    { id: 5, label: \"Performed by\" },\r\n    { id: 5, label: \"Hospital\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <SurgicalTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <SurgicalForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalHistory;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState,useEffect,useCallback } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicationForm from \"./MedicationForm\";\r\nimport MedicationTable from \"../../../../../../Tables/Subjective/MedicationTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\n\r\nconst Medication = ({ from }) => {\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Medication Name\" },\r\n    // { id: 3, label: \"Strength\" },\r\n    // { id: 4, label: \" strength measurement\" },\r\n    // { id: 5, label: \"dosage \" },\r\n    { id: 6, label: \"M | A | E | N \" },\r\n    { id: 7, label: \"BF/AF\" },\r\n    { id: 8, label: \"Quantity\" },\r\n    { id: 9, label: \" start date\" },\r\n    { id: 10, label: \"Status\" },\r\n    { id: 11, label: \"ACTIONS\" },\r\n  ];\r\n\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"bf\",\r\n  //     m: 0,\r\n  //     a: 0.5,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 6,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 7,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 8,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 9,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  //   {\r\n  //     id: 10,\r\n  //     start_date: \"06-07-2024\",\r\n  //     end_date: \"06-08-2024\",\r\n  //     name: \"Paracetamol\",\r\n  //     strength: \"650\",\r\n  //     strength_measurement: \"mg\",\r\n  //     qty: \"1456\",\r\n  //     dosage: \"Tablet\",\r\n  //     time_taken: \"5\",\r\n  //     status: \"Not Taking\",\r\n  //     food_times: \"af\",\r\n  //     m: 0,\r\n  //     a: 1,\r\n  //     e: 1,\r\n  //     n: 1,\r\n  //   },\r\n  // ];\r\n\r\n\r\n  const { loading, error, get,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n   \r\n  };\r\n \r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };  \r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data,id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      console.log(\"Add Clicked\")\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      console.log(\"Delete Clicked\")\r\n      setId(id)\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const fetchMedication = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHealth?limit=${itemsPerPage}&page=${currentPage}&from=${startDate ?? \"\"}&to=${endDate ?? \"\"}&searchkey=${searchValue ?? \"\"}&order_by=values-%3Estart_date&dir=2&user_id=10&slug=medicine&slug_array=`\r\n      );\r\n      if (response.code === 200) {\r\n        setRowData(response?.data?.patient_healths);\r\n        setPagination(response?.data?.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage,startDate,endDate,searchValue]);\r\n\r\n  useEffect(() => {\r\n    fetchMedication();\r\n  }, [fetchMedication]);\r\n\r\n  // Delte Signs Symptoms\r\n  const deleteMedication = async () => {\r\n    try {\r\n      const response = await del(`resource/patientHealth/${id}`);\r\n  \r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        fetchMedication();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n              <DateRangePicker getFilterValues={getFilterValues} />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <MedicationTable\r\n             rowData={rowData}\r\n             columns={columnData}\r\n             getselectedData={getselectedData}\r\n             from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={pagination?.total}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MedicationForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              setAddFormView={setAddFormView}\r\n              fetchMedication={fetchMedication}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => deleteMedication()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Medication;\r\n","import { CCol, CFormCheck, CFormSelect, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { getCurrentTime } from \"../../../../../../../Utils/dateUtils\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport {\r\n  findItemIndex,\r\n  getFileTypeFromMime,\r\n  openFile,\r\n} from \"../../../../../../../Utils/commonUtils\";\r\n\r\n\r\nconst MedicationForm = ({ back, setAddFormView, fetchMedication, defaultValues }) => {\r\n\r\n\r\n\r\n  const { loading, error, get, post, clearCache, patch } = useApi();\r\n  const [selectedStartDate, setSelectedStartDate] = useState(null);\r\n  const [selectedEndDate, setSelectedEndDate] = useState(null);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    medicine_type: defaultValues?.values?.medicine_type || \"\",\r\n    medicine_name: defaultValues?.values?.medicine_name || \"\",\r\n    dosage: defaultValues?.values?.dosage || \"\",\r\n    strength : defaultValues?.values?.strength  || \"\",\r\n    strength_measurement: defaultValues?.values?.strength_measurement || \"\",\r\n    total_qty: defaultValues?.values?.total_qty || \"\",\r\n    route_administration: defaultValues?.values?.route_administration || \"\",\r\n    no_of_days: defaultValues?.values?.no_of_days || \"\",\r\n    m: defaultValues?.values?.m || \"\",\r\n    a: defaultValues?.values?.a || \"\",\r\n    e: defaultValues?.values?.e || \"\",\r\n    n: defaultValues?.values?.n || \"\",\r\n    medicine_taken: defaultValues?.values?.medicine_taken || \"\",\r\n    notes: defaultValues?.values?.notes || \"\",\r\n    status: defaultValues?.values?.status || \"\",\r\n\r\n\r\n\r\n  });\r\n  const [location, setLocation] = useState([defaultValues?.values?.locationy || \"\"]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n\r\n  useEffect(() => {\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0);\r\n    }\r\n\r\n    setSelectedStartDate(date);\r\n    setSelectedEndDate(date);\r\n    setSelectedTime(date);\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  // Separate handlers for start and end date changes\r\n  const handleStartDateChange = (date) => {\r\n    setSelectedStartDate(date);\r\n    if (date) {\r\n      setSelectedTime(date);\r\n    }\r\n  };\r\n\r\n  const handleEndDateChange = (date) => {\r\n    setSelectedEndDate(date);\r\n    if (date) {\r\n      setSelectedTime(date);\r\n    }\r\n  };\r\n\r\n  // Function to handle time change\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedStartDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0);\r\n\r\n      setSelectedStartDate(updatedDateTime);\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const options = [\"Taking\", \"Not Taking\", \"Discontinued\", \"Status Unknown\"];\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const options1 = [\"Brand\", \"Generic\"];\r\n   // Function to update symptoms\r\n   const getSelectedValue1 = (data) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      symptoms: data,\r\n    }));\r\n  };\r\n\r\n  const options2 = [\r\n    \"Tablet\",\r\n    \"Chewable tablet\",\r\n    \"Sublingual tablet\",\r\n    \"Buccal tablet\",\r\n    \"Capsule\",\r\n    \"Hard capsule\",\r\n    \"Soft gelatin capsule\",\r\n    \"Powder\",\r\n    \"Oral powder\",\r\n    \"Topical powder\",\r\n    \"Liquid\",\r\n    \"Syrup\",\r\n    \"Elixir\",\r\n    \"Suspension\",\r\n    \"Solution\",\r\n    \"Tincture\",\r\n    \"Ointment\",\r\n    \"Cream\",\r\n    \"Gel\",\r\n    \"Paste\",\r\n    \"Suppository\",\r\n    \"Patch\",\r\n    \"Inhaler\",\r\n    \"Metered-dose inhaler (MDI)\",\r\n    \"Dry powder inhaler (DPI)\",\r\n    \"Nasal Spray\",\r\n    \"Eye Drop\",\r\n    \"Ear Drop\",\r\n    \"Intravenous (IV) solution\",\r\n    \"Intramuscular (IM) injection\",\r\n    \"Subcutaneous (SC) injection\",\r\n    \"Intradermal (ID) injection\",\r\n    \"Implant\",\r\n  ];\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedStartDate) {\r\n      newErrors.date = \" Start Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedEndDate) {\r\n      newErrors.date = \"End Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.medicine_type) {\r\n      newErrors.medicine_type = \"Medication Type is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.medicine_name) {\r\n      newErrors.medicine_name = \"Medication Name is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.dosage) {\r\n      newErrors.dosage = \"Dosage is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.strength) {\r\n      newErrors.strength = \"Strength is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.strength_measurement) {\r\n      newErrors.strength_measurement = \"Strength Measurement is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.total_qty) {\r\n      newErrors.total_qty = \"Quantity is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.route_administration) {\r\n      newErrors.route_administration = \"Administration is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.no_of_days) {\r\n      newErrors.no_of_days = \"Number of days is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.status) {\r\n      newErrors.status = \"Status is required.\";\r\n      isValid = false;\r\n    }\r\n\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n\r\n  const onSubmit = () => {\r\n    console.log('clicked checking')\r\n    if (validate()) {\r\n      if (defaultValues.id !== undefined) {\r\n        console.log(\"Edit clicked\");\r\n         editMedication()\r\n\r\n      }\r\n      if (defaultValues.id === undefined) {\r\n        console.log(\"Add clicked\");\r\n         addMedication();\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const addMedication = async () => {\r\n\r\n    try {\r\n      const body = {\r\n\r\n        slug: \"prescription\",\r\n        patient_id: \"10\",\r\n       \r\n        values: {\r\n          start_date: format(selectedStartDate, \"dd-MM-yyyy\"),\r\n          end_date: format(selectedEndDate, \"dd-MM-yyyy\"),\r\n          dosage: formData.dosage,\r\n          strength: formData.strength,\r\n          strength_measurement: formData.strength_measurement,\r\n          total_qty: formData.total_qty,\r\n          route_administration: formData.route_administration,\r\n          no_of_days: formData.no_of_days,\r\n          m: formData.m,\r\n          a: formData.a,\r\n          e: formData.e,\r\n          n: formData.n,\r\n          medicine_taken: formData.medicine_taken,\r\n          notes: formData.notes,\r\n          status: formData.status\r\n        }\r\n      };\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/patientHealth`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchMedication();\r\n        setAddFormView(false);\r\n        toast.success(\"Added successfully\");\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const editMedication = async () => {\r\n    try {\r\n     \r\n      const body = {\r\n\r\n        slug: \"prescription\",\r\n        patient_id: \"10\",\r\n       \r\n        values: {\r\n          start_date: format(selectedStartDate, \"dd-MM-yyyy\"),\r\n          end_date: format(selectedEndDate, \"dd-MM-yyyy\"),\r\n          dosage: formData.dosage,\r\n          strength: formData.strength,\r\n          strength_measurement: formData.strength_measurement,\r\n          total_qty: formData.total_qty,\r\n          route_administration: formData.route_administration,\r\n          no_of_days: formData.no_of_days,\r\n          m: formData.m,\r\n          a: formData.a,\r\n          e: formData.e,\r\n          n: formData.n,\r\n          medicine_taken: formData.medicine_taken,\r\n          notes: formData.notes,\r\n          status: formData.status\r\n        }\r\n      };\r\n      // Use the provided `post` function to send the request\r\n      const response = await patch(`resource/patientHealth/${defaultValues.id}`, body);\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchMedication();\r\n        setAddFormView(false);\r\n        toast.success(\"Updated successfully\");\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Medication Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options1}\r\n                  defaultValue={\r\n                    defaultValues?.values?.type\r\n                      ? options1[findItemIndex(options1, defaultValues?.values?.type)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue1}\r\n                />\r\n              </div>\r\n              {errors.medicine_type && <div className=\"error-text\">{errors.medicine_type}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Medication Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n             {errors.medicine_name && <div className=\"error-text\">{errors.medicine_name}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Dosage *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options2}\r\n                  // defaultValue={options[1]}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n              {errors.dosage && <div className=\"error-text\">{errors.dosage}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Strength *\r\n              </label>\r\n                <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                // value={formData?.duration_days}\r\n                name=\"duration_days\"\r\n                onChange={handleChange}\r\n                maxLength={4}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n               \r\n              />\r\n              {errors.strength && <div className=\"error-text\">{errors.strength}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Strength measurement *\r\n              </label>\r\n              <CFormSelect\r\n                size=\"lg\"\r\n                className=\"mb-3\"\r\n                aria-label=\"Large select example\"\r\n                name=\"strength\"\r\n                defaultValue={'mg'}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"cfu/ml\">\r\n                  Colony forming units per milliliter (cfu/ml)\r\n                </option>\r\n                <option value=\"iu\">International unit (iu) </option>\r\n                <option value=\"meq/ml\">\r\n                  Milliequivalent per liter (meq/ml)\r\n                </option>\r\n                <option value=\"meq\">Milliequivalent(meq)</option>\r\n                <option value=\"Milligram per milliliter\">\r\n                  Milligram per milliliter{\" \"}\r\n                </option>\r\n                <option value=\"mg\">Milligram(mg)</option>{\" \"}\r\n                <option value=\"ml\">milliliter(ml)</option>\r\n                <option value=\"%\">percentage(%) </option>\r\n                <option value=\"unt\">Unit (unt)</option>\r\n                <option value=\"unt/ml\">Unit per milliliter (unt/ml)</option>\r\n                <option value=\"kg\">Kilogram (kg) </option>\r\n                <option value=\"mcg\">Microgram (mcg)</option>\r\n              </CFormSelect>\r\n              {errors.strength_measurement && <div className=\"error-text\">{errors.strength_measurement}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Total Qty / Taken *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                name=\"total_qty\"\r\n                value={formData.total_qty}\r\n                onChange={handleChange}\r\n                maxLength={4}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n              \r\n              />\r\n              {errors.total_qty && <div className=\"error-text\">{errors.total_qty}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Route of administration *\r\n              </label>\r\n              <CFormSelect\r\n                size=\"lg\"\r\n                className=\"mb-3\"\r\n                aria-label=\"Large select example\"\r\n                name=\"strengthMeasurement\"\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Oral\">Oral</option>{\" \"}\r\n                <option value=\"Sublingual\">Sublingual</option>\r\n                <option value=\"Buccal\">Buccal </option>\r\n                <option value=\"Intravenous\">Intravenous </option>\r\n                <option value=\"Intramuscular\">Intramuscular</option>\r\n                <option value=\"Subcutaneous\">Subcutaneous</option>\r\n                <option value=\"Intradermal\">Intradermal</option>\r\n                <option value=\"Topical\">Topical</option>{\" \"}\r\n                <option value=\"Transdermal\">Transdermal</option>\r\n                <option value=\"Ocular\">Ocular </option>\r\n                <option value=\"Otic\">Otic </option>\r\n                <option value=\"Nasal\">Nasal</option>\r\n                <option value=\"Inhalation\">Inhalation</option>\r\n                <option value=\"Rectal\">Rectal</option>\r\n                <option value=\"Vaginal\">Vaginal </option>\r\n                <option value=\"Implant\">Implant </option>\r\n                <option value=\"Intrathecal\">Intrathecal</option>\r\n                <option value=\"Epidural\">Epidural</option>\r\n              </CFormSelect>\r\n              {errors.route_administration && <div className=\"error-text\">{errors.route_administration}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Start Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedStartDate}\r\n                onChange={handleStartDateChange}\r\n                dateFormat=\"MM-dd-yyyy\"\r\n                disabled\r\n              />\r\n               {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                No. of Day(s) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"000\"\r\n                name=\"days\"\r\n                // value={timeTaken}\r\n                onChange={handleChange}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n                \r\n              />\r\n              {errors.no_of_days && <div className=\"error-text\">{errors.no_of_days}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              End Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedEndDate}\r\n                onChange={handleEndDateChange}\r\n                dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n               {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\" style={{ paddingRight: \"0\" }}>\r\n          <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                M\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"m\"\r\n              />\r\n              {errors.m && <div className=\"error-text\">{errors.m}</div>}\r\n            </div>\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                A\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"a\"\r\n              />\r\n              {errors.a && <div className=\"error-text\">{errors.a}</div>}\r\n            </div>\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                E\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"e\"\r\n              />\r\n              {errors.e && <div className=\"error-text\">{errors.e}</div>}\r\n            </div>\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                N\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"n\"\r\n              />\r\n              {errors.n && <div className=\"error-text\">{errors.n}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3} className=\"mb-3\">\r\n          <div className=\"h-100 d-flex align-items-end w-100 justify-content-start\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"inlineCheckbox1\"\r\n                value=\"bf\"\r\n                disabled={\r\n                  defaultValues?.lab_status === \"Prescribed\"\r\n                    ? false\r\n                    : defaultValues?.medicines?.length >= 1\r\n                      ? true\r\n                      : false\r\n                }\r\n                label={\r\n                  <label for=\"validationTooltip01\" class=\"form-label mb-0\">\r\n                    BF\r\n                  </label>\r\n                }\r\n                name=\"food\"\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"inlineCheckbox2\"\r\n                value=\"af\"\r\n                label={\r\n                  <label for=\"validationTooltip01\" class=\"form-label mb-0\">\r\n                    AF\r\n                  </label>\r\n                }\r\n                name=\"food\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={5} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                id=\"exampleFormControlTextarea1\"\r\n                rows={3} >\r\n              </CFormTextarea>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {/* <CCol lg={7} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Reason for medication\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                name=\"reason\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol> */}\r\n        <CCol lg={5} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Status *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[1]}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.status && <div className=\"error-text\">{errors.status}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationForm;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { toast } from \"react-toastify\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { duration } from \"moment\";\r\nimport { getCurrentTime } from \"../../../../../../../Utils/dateUtils\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport {\r\n  findItemIndex,\r\n  getFileTypeFromMime,\r\n  openFile,\r\n} from \"../../../../../../../Utils/commonUtils\";\r\n\r\nconst SignsSymptomsForm = ({ back, defaultValues, setAddFormView, fetchSignsSymptoms }) => {\r\n\r\n  const { loading,error, get, post, clearCache, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    // location: defaultValues?.values?.location || \"\",\r\n    duration_days: defaultValues?.values?.duration || \"\",\r\n    symptoms: defaultValues?.values?.symptoms || \"\",\r\n    aggravating_factors: defaultValues?.values?.aggravating_factors || \"\",\r\n    releiving_factors: defaultValues?.values?.releiving_factors || \"\",\r\n    temporal_factors: defaultValues?.values?.temporal_factors || \"\",\r\n    severity: defaultValues?.values?.severity || \"\",\r\n    notes: defaultValues?.values?.notes || \"\",\r\n\r\n  });\r\n  const [location, setLocation] = useState([defaultValues?.values?.locationy || \"\"]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n\r\n  // console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || getCurrentTime();\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const options = [\r\n    \"Normal\",\r\n    \"Mild\",\r\n    \"Moderate\",\r\n    \"Severe\",\r\n    \"Very Severe\",\r\n    \"Worst\",\r\n  ];\r\n  const options1 = [\"Headache\", \"Fracture\", \"Fever\"];\r\n\r\n  // Function to update symptoms\r\n  const getSelectedValue = (data) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      symptoms: data,\r\n    }));\r\n  };\r\n\r\n  // Function to update severity\r\n  const getSelectedValue1 = (data) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      severity: data,\r\n    }));\r\n  };\r\n\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!location) {\r\n      newErrors.location = \"Location is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.duration_days) {\r\n      newErrors.duration_days = \"Duration is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.symptoms) {\r\n      newErrors.symptoms = \"Symptoms is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!formData.severity) {\r\n      newErrors.severity = \"Severity is required.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n\r\n  const onSubmit = () => {\r\n    console.log('clicked checking')\r\n    if (validate()) {\r\n      if (defaultValues.id !== undefined) {\r\n        console.log(\"Edit clicked\");\r\n        editSymptoms()\r\n\r\n      }\r\n      if (defaultValues.id === undefined) {\r\n        console.log(\"Add clicked\");\r\n        addSymptoms();\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  //api integration of medical conditions list\r\n  useEffect(() => {\r\n    const getLocation = async () => {\r\n      if (searchTerm) {\r\n        try {\r\n          const response = await get(\r\n            `resource/masters/all?slug=hpi_location&order_by=name&dir=1&searchkey=${searchTerm}`\r\n          );\r\n          if (response.code === 200) {\r\n            console.log(\"data\", response.data.masters);\r\n            setLocation(response.data.masters);\r\n          } else {\r\n            console.error(\"Failed to fetch data:\", response.message);\r\n            setLocation([]);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n          setLocation([]);\r\n        }\r\n      } else {\r\n        setLocation([]);\r\n      }\r\n    };\r\n\r\n    getLocation();\r\n  }, [searchTerm, get]);\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  // console.log('searchvalue111111',searchTerm);\r\n \r\n  const addSymptoms = async () => {\r\n\r\n    try {\r\n      const body = {\r\n\r\n        slug: \"hpi\",\r\n        patient_id: \"261\",\r\n        consult_id: null,\r\n        values: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          location: searchTerm,\r\n          duration: formData.duration_days,\r\n          symptoms: formData.symptoms,\r\n          aggravating_factors: formData.aggravating_factors,\r\n          releiving_factors: formData.releiving_factors,\r\n          temporal_factors: formData.temporal_factors,\r\n          severity: formData.severity,\r\n          notes: formData.notes,\r\n          quality: \"\"\r\n        }\r\n      };\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/patientHealth`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchSignsSymptoms();\r\n        setAddFormView(false);\r\n        toast.success(\"Added successfully\");\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const editSymptoms = async () => {\r\n    try {\r\n      const body = {\r\n\r\n        slug: \"hpi\",\r\n        patient_id: \"261\",\r\n        consult_id: null,\r\n        values: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          location: formData.location,\r\n          duration: Number(formData.duration_days),\r\n          symptoms: formData.symptoms,\r\n          aggravating_factors: formData.aggravating_factors,\r\n          releiving_factors: formData.releiving_factors,\r\n          temporal_factors: formData.temporal_factors,\r\n          severity: formData.severity,\r\n          notes: formData.notes,\r\n          quality: \"\"\r\n        }\r\n      };\r\n\r\n      // Use the provided `post` function to send the request\r\n      const response = await patch(`resource/patientHealth/${defaultValues.id}`, body);\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchSignsSymptoms();\r\n        setAddFormView(false);\r\n        toast.success(\"Updated successfully\");\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={3}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                dateFormat=\"MM-dd-yyyy\"\r\n                disabled\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeCaption=\"Time\"\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3}> \r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative dropdown-container\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Location *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={defaultValues?.values?.location}\r\n                onChange={handleInputChange}\r\n              />\r\n              {loading ? (\r\n                <p>Loading...</p>\r\n              ) : error ? (\r\n                <p>{error}</p>\r\n              ) : location?.length > 0 ? (\r\n                <ul className=\"dropdown-list\">\r\n                  {location?.map((location) => (\r\n                    <li\r\n                      key={location?.id}\r\n                      className=\"list-group-item\"\r\n                      onClick={() => {\r\n                        setSearchTerm(location?.name);\r\n                        setLocation([]);\r\n                      }}\r\n                    >\r\n                      {location?.name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : null}\r\n              {errors.location && <div className=\"error-text\">{errors.location}</div>}\r\n\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Duration in Days *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                value={formData?.duration_days}\r\n                name=\"duration_days\"\r\n                onChange={handleChange}\r\n                maxLength={4}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\r\n                }}\r\n\r\n              />\r\n              {errors.duration_days && <div className=\"error-text\">{errors.duration_days}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Symptoms *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.characteristics}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultValues?.values?.symptoms\r\n                      ? options[findItemIndex(options, defaultValues?.values?.symptoms)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.symptoms && <div className=\"error-text\">{errors.symptoms}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Aggravating factors\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={formData?.aggravating_factors}\r\n                name=\"aggravating_factors\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Relieving factors\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={formData?.releiving_factors}\r\n                name=\"releiving_factors\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Temporal factors\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={formData?.temporal_factors}\r\n                name=\"temporal_factors\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Severity *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options1}\r\n                  defaultValue={\r\n                    defaultValues?.values?.severity\r\n                      ? options1[findItemIndex(options1, defaultValues?.values?.severity)]\r\n                      : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue1}\r\n                />\r\n              </div>\r\n              {errors.severity && <div className=\"error-text\">{errors.severity}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                value={formData?.notes}\r\n                name=\"notes\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={() => back()}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignsSymptomsForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SymtomsTable = ({ columns, rowData, getselectedData, from }) => {\r\n\r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {dt?.values?.date ? dt?.values?.date : \"-\"}\r\n                  {\" \"}\r\n                </span>\r\n                <span className=\"fs-16 fw-500\">\r\n                  {dt?.values?.time ? dt?.values?.time : \"-\"}\r\n                </span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.location ? dt?.values?.location : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.values?.symptoms ? dt?.values?.symptoms : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.values?.duration ? dt?.values?.duration : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.aggravating}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.relieving}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.temporal}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.values?.severity ? dt?.values?.severity : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SymtomsTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState,useCallback,useEffect } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SignsSymptomsForm from \"./SignsSymptomsForm\";\r\nimport MedicationOrderTable from \"../../../../../../Tables/MedicationOrderTable\";\r\nimport SymtomsTable from \"../../../../../../Tables/Subjective/SymtomsTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\n\r\nconst SignsSymptoms = ({ from }) => {\r\n  const detailsData = [\r\n    { id: 1, label: \"\" },\r\n    { id: 2, label: \"RX\" },\r\n    { id: 3, label: \"FREQUENCY\" },\r\n    { id: 4, label: \"DURATION\" },\r\n    { id: 5, label: \"QTY/TAKEN\" },\r\n    { id: 6, label: \"ACTIONS​\" },\r\n  ];\r\n\r\n  const detailsValue = [\r\n    {\r\n      id: 1,\r\n      name: \"Prescribed\",\r\n      rx: \"Medicine 1\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Alternative\",\r\n      rx: \"Medicine 2\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n  ];\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"LOCATION\" },\r\n    { id: 5, label: \"Symptoms\" },\r\n    { id: 4, label: \"DURATION IN DAYS\" },\r\n    { id: 6, label: \"Severity\" },\r\n    // { id: 10, label: \"Notes\" },\r\n    { id: 6, label: \"Actions\" },\r\n  ];\r\n\r\n\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     onset: \"2024-07-15 03:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     onset: \"2024-08-15 10:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"150\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Mild\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     onset: \"2024-07-18 20:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"120\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Moderate\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 5,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Worst\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 6,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Severe\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 7,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 8,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 9,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  //   {\r\n  //     id: 10,\r\n  //     onset: \"2024-07-15 18:15\",\r\n  //     location: \"Knee\",\r\n  //     duration_days: \"20\",\r\n  //     characteristics: \"Fracture\",\r\n  //     aggravating: \"Fracture\",\r\n  //     relieving: \"Fracture\",\r\n  //     temporal: \"Fracture\",\r\n  //     severity: \"Normal\",\r\n  //     notes: \"-\",\r\n  //   },\r\n  // ];\r\n\r\n  const { loading, error, get,del,clearCache } = useApi();\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pagination, setPagination] = useState({});\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n   \r\n  };\r\n \r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };  \r\n\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data,id, type) => {\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id)\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  \r\n  const fetchSignsSymptoms = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/patientHealth?slug=hpi&user_id=261&limit=${itemsPerPage}&page=${currentPage}&dir=2&from=${startDate ?? \"\"}&to=${endDate ?? \"\"}&searchkey=${searchValue ?? \"\"}`\r\n      );\r\n      if (response.code === 200) {\r\n        console.log(response.data.patient_healths);\r\n        setRowData(response.data.patient_healths);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage,startDate,endDate,searchValue]);\r\n\r\n  useEffect(() => {\r\n    fetchSignsSymptoms();\r\n  }, [fetchSignsSymptoms]);\r\n\r\n  // Delte Signs Symptoms\r\n  const deleteSignsSymptoms = async () => {\r\n    try {\r\n      const response = await del(`resource/patientHealth/${id}`);\r\n  \r\n      if (response.code === 200) {\r\n        setDetailView(false);\r\n        clearCache();\r\n        fetchSignsSymptoms();\r\n\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n              <DateRangePicker getFilterValues={getFilterValues} />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <SymtomsTable\r\n              rowData={rowData}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={pagination?.total}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <SignsSymptomsForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              setAddFormView={setAddFormView}\r\n              fetchSignsSymptoms={fetchSignsSymptoms}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => deleteSignsSymptoms()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignsSymptoms;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst ExcerciseHabitForm = ({ back, defaultValues ,setAddFormView,fetchExciseHabit}) => {\r\n  const [exercises, setExercises] = useState([\r\n    {\r\n      id: 1,\r\n      type: \"\",\r\n      date:  new Date(),\r\n      time: new Date(),\r\n      duration: \"\",\r\n      intensity: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleAddExercise = () => {\r\n    const newExercises = [\r\n      ...exercises,\r\n      {\r\n        id: exercises.length + 1,\r\n        type: \"\",\r\n        date: new Date(),\r\n        time: new Date(),\r\n        duration: \"\",\r\n        intensity: \"\",\r\n      },\r\n    ];\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  const handleRemoveExercise = (id) => {\r\n    const newExercises = exercises.filter((exercise) => exercise.id !== id);\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  const handleChange = (id, updatedData) => {\r\n    const newExercises = exercises.map((ex) =>\r\n      ex.id === id ? { ...ex, ...updatedData } : ex\r\n    );\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {exercises.map((exercise, index) => (\r\n        <div key={index}>\r\n          <CRow className=\"mb-3\">\r\n             <CCol lg={12}>\r\n               <div className=\"vertical-line\"></div>\r\n             </CCol>\r\n           </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={4}>\r\n              <div className=\"position-relative\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Date *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={exercise.date}\r\n                    onChange={(date) => handleChange(exercise.id, { date })}\r\n                    dateFormat={DATE_FORMAT}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4}>\r\n              <div className=\"position-relative\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Time *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={exercise.date}\r\n                    onChange={(date) => handleChange(exercise.id, { date })}\r\n                    showTimeSelect\r\n                    showTimeSelectOnly\r\n                    timeIntervals={15}\r\n                    timeCaption=\"Time\"\r\n                    dateFormat=\"h:mm aa\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Type *\r\n                  </label>\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={[\"One\", \"Two\"]}\r\n                      defaultValue={exercise.type}\r\n                      getSelectedValue={(value) =>\r\n                        handleChange(exercise.id, { type: value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Duration (in minutes)\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"000\"\r\n                    maxLength={3}\r\n                    defaultValue={defaultValues?.duration}\r\n                    onInput={(e) => {\r\n                      e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Intensity *\r\n                  </label>\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={[\"One\", \"Two\"]}\r\n                      defaultValue={exercise.intensity}\r\n                      getSelectedValue={(value) =>\r\n                        handleChange(exercise.id, { intensity: value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {index > 0 && (\r\n            <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton hgdf\r\n                        onClick={() => handleRemoveExercise(exercise.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n            </CRow>\r\n           </>\r\n            \r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddExercise}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExcerciseHabitForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useCallback, useEffect } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExerciseHabitTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/ExerciseHabitTable\";\r\nimport ExcerciseHabitForm from \"./ExcerciseHabitForm\";\r\n// import DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\n\r\nconst ExerciseHabit = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Type\" },\r\n    { label: \"DURATION\" },\r\n    { label: \"INTENSITY\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n\r\n  const [pagination, setPagination] = useState({});\r\n  const [rowData, setRowData] = useState([]);\r\n  const [habitData, setHabitData] = useState([]);\r\n  const [rowFluidata, setRowFluiData] = useState([]);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filters, setFilters] = useState(true);\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const { loading, error, get, del, clearCache } = useApi();\r\n\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return habitData?.slice(startIndex, endIndex);\r\n  };\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    console.log(startDate,endDate,searchValue,\"ghghhghg\")\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n    \r\n  };\r\n\r\n  const fetchExciseHabit = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/activity_wellness?limit=${itemsPerPage}&page=${currentPage}&order_by=act_date&dir=2&act_catagory=activity&user_id=10`\r\n      );\r\n      if (response.code === 200) {\r\n        console.log(response?.data?.activity_wellnesses);\r\n        setHabitData(response?.data?.activity_wellnesses);\r\n        setPagination(response?.data?.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage, startDate, endDate]);\r\n  useEffect(() => {\r\n    fetchExciseHabit();\r\n  }, [fetchExciseHabit]);\r\n\r\n  const getselectedData = (data, id, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id);\r\n      detailPage();\r\n    }\r\n  };\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const deleteDiet = async () => {\r\n    try {\r\n      if (id) {\r\n        const response = await del(`resource/activity_wellness/${id}`);\r\n        if (response.code === 200) {\r\n          setDetailView(false);\r\n          clearCache();\r\n          fetchExciseHabit();\r\n        } else {\r\n          console.error(\"Failed to delete data:\", response.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <ExerciseHabitTable\r\n        habitData={habitData}\r\n          columns={columnData}\r\n          getselectedData={getselectedData}\r\n          from={from}\r\n        />\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                <DateRangePicker\r\n                    \r\n                    getFilterValues={getFilterValues}\r\n                   />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <ExerciseHabitTable\r\n                 habitData={habitData}\r\n                 columns={columnData}\r\n                 getselectedData={getselectedData}\r\n                 from={from}\r\n                />\r\n\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                            currentPage={currentPage}\r\n                            onPageChange={onPageChange}\r\n                            totalItems={pagination?.total}\r\n                            itemsPerPage={itemsPerPage}\r\n                          />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ExcerciseHabitForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  setAddFormView={setAddFormView}\r\n                  fetchExciseHabit={fetchExciseHabit}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={deleteDiet}>Yes</PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExerciseHabit;\r\n","import { CCol, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\n\r\nconst MoodForm = ({ back, defaultValues }) => {\r\n\r\n    const [date, setDate] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n        const parseDateString = (dateString) => {\r\n            const parts = dateString?.split(\" \");\r\n            const datePart = parts[0];\r\n            const timePart = parts[1];\r\n            const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n            const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n            const date = new Date(year, month - 1, day, hours, minutes);\r\n            return date;\r\n        };\r\n\r\n        // Example default date string\r\n        const defaultDateString = defaultValues?.date;\r\n\r\n        // Parse default date string to Date object\r\n        const defaultDate = defaultValues?.date\r\n            ? parseDateString(defaultDateString)\r\n            : new Date();\r\n\r\n        // Set default date in state\r\n        setDate(defaultDate);\r\n    }, [defaultValues]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Date *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={date}\r\n                                onChange={(date) => setDate(date)}\r\n                                dateFormat={DATE_FORMAT}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Time *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={date}\r\n                                onChange={(date) => setDate(date)}\r\n                                showTimeSelect\r\n                                showTimeSelectOnly\r\n                                timeIntervals={15}\r\n                                timeCaption=\"Time\"\r\n                                dateFormat=\"h:mm aa\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n                <p className=\"radio-label\">Type *</p>\r\n                <CCol lg={12}>\r\n\r\n                    <div className=\"h-100 d-flex align-items-end w-100 \">\r\n\r\n                        <div\r\n                            style={{\r\n                                boxSizing: \"border-box\",\r\n                                borderRadius: \"5px\",\r\n                                border: \"1px solid #17171D33\",\r\n                                padding: \"10px\",\r\n                            }}\r\n                        >\r\n                            <CFormCheck\r\n\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox1\"\r\n                                value=\"bf\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Happy\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox2\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Sad\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox3\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Angry\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox4\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Relaxed\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox5\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Excited\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox6\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Anxious\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox7\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Content\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox8\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Frustrated\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox9\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Surprised\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox10\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Confident\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MoodForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport MoodTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/MoodTable\";\r\nimport MoodForm from \"./MoodForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Mood = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Type\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <MoodTable\r\n          rowData={getCurrentPageItems()}\r\n          columns={columnData}\r\n          getselectedData={getselectedData}\r\n          from={from}\r\n        />\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <MoodTable\r\n                  rowData={getCurrentPageItems()}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <MoodForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  //  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mood;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst NutritionDietTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.detail?.notes}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NutritionDietTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst NutritionFluidTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data,id, type) => {\r\n\r\n    getselectedData(data,id, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult-Intake\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.act_intake}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult-Intake\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NutritionFluidTable;\r\n","import { CCol, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { format } from \"date-fns\";\r\nimport moment from \"moment\";\r\n\r\nconst DietForm = ({ back, defaultValues, fetchDiet, setAddFormView }) => {\r\n  const [date, setDate] = useState(null);\r\n  const { loading, error, post, patch, clearCache } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [dietType, setDietType] = useState(defaultValues?.act_type || \"\"); // Initialize diet type\r\n  const [notes, setNotes] = useState(defaultValues?.detail?.notes || \"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Initialize the state with default values if available\r\n    if (defaultValues) {\r\n      setSelectedDate(parseDate(defaultValues.act_date)); // Update to use `act_date`\r\n      setSelectedTime(parseTime(defaultValues.act_time)); // Update to use `act_time`\r\n      setDietType(defaultValues.act_type || \"\"); // Set the diet type from default values\r\n      setNotes(defaultValues.detail?.notes || \"\"); // Set the notes from the new format\r\n    }\r\n  }, [defaultValues]);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [year, month, day] = dateString.split(\"-\").map(Number);\r\n    return new Date(year, month - 1, day);\r\n  };\r\n\r\n  const parseTime = (timeString) => {\r\n    if (!timeString) return null;\r\n    const [hours, minutes] = timeString.split(\":\").map(Number);\r\n    const date = new Date();\r\n    date.setHours(hours, minutes, 0, 0);\r\n    return date;\r\n  };\r\n\r\n  const options = [\"Veg\", \"Non-Veg\", \"Others\"];\r\n  const findIndex = defaultValues?.act_type\r\n    ? options?.indexOf(defaultValues?.act_type)\r\n    : 0;\r\n\r\n  const getSelectedValue = (data) => {\r\n    setDietType(data); // Set the selected diet type\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date || null);\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    setSelectedTime(time || null);\r\n  };\r\n\r\n  const addDiet = async () => {\r\n    const formattedDate = format(selectedDate, \"yyyy-MM-dd\"); // Format date to \"YYYY-MM-DD\"\r\n    const formattedTime = moment(selectedTime).format(\"HH:mm\"); // Format time to \"HH:mm\"\r\n    try {\r\n      // Construct the request body in the desired format\r\n      const body = {\r\n        patient_id: \"10\", // Use the appropriate patient ID\r\n        act_catagory: \"diet\",\r\n        act_date: formattedDate,\r\n        act_time: formattedTime,\r\n        act_type: dietType, // Assuming `dietType` is the selected diet type like \"Veg\", \"Non-Veg\", etc.\r\n        detail: {\r\n          notes: notes, // The notes from the form\r\n        },\r\n      };\r\n  \r\n      // Use the provided `post` function to send the request\r\n      const response = await post(`resource/activity_wellness`, body);\r\n  \r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchDiet(); // Refresh the list data here\r\n        setAddFormView(false); // Close the form view\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  \r\n  const editDiet = async () => {\r\n    const formattedDate = format(selectedDate, \"yyyy-MM-dd\"); // Format date to \"YYYY-MM-DD\"\r\n    const formattedTime = moment(selectedTime).format(\"HH:mm\"); // Format time to \"HH:mm\"\r\n    try {\r\n      // Construct the request body in the desired format\r\n      const body = {\r\n        act_date: formattedDate,\r\n        act_time: formattedTime,\r\n        act_type: dietType,\r\n        detail: {\r\n          notes: notes,\r\n        },\r\n      };\r\n  \r\n      // Use the provided `patch` function to send the request\r\n      const response = await patch(`resource/activity_wellness/${defaultValues.id}`, body);\r\n  \r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchDiet(); // Refresh the list data here\r\n        setAddFormView(false); // Close the form view\r\n      } else {\r\n        console.error(\"Failed to update data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  const validate = () => {\r\n    // Add validation logic here if needed\r\n    // Example: Check if all required fields are filled\r\n    let validationErrors = {};\r\n    if (!selectedDate) validationErrors.date = \"Date is required.\";\r\n    if (!selectedTime) validationErrors.time = \"Time is required.\";\r\n    if (!dietType) validationErrors.dietType = \"Diet type is required.\";\r\n    setErrors(validationErrors);\r\n    return Object.keys(validationErrors).length === 0;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultValues?.id) {\r\n        console.log(\"Edit clicked\");\r\n        editDiet(); // Call edit function if id is present\r\n      } else {\r\n        console.log(\"Add clicked\");\r\n        addDiet(); // Call add function if id is not present\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n            {errors.date && <p className=\"text-danger\">{errors.date}</p>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n            {errors.time && <p className=\"text-danger\">{errors.time}</p>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Type of Diet *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={defaultValues?.act_type ? options[findIndex] : null}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {errors.dietType && <p className=\"text-danger\">{errors.dietType}</p>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Add Notes\"\r\n                value={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DietForm;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport { format } from \"date-fns\";\r\nimport moment from \"moment\";\r\n\r\nconst FluidIntakeForm = ({ back, defaultValues, setAddFormView, fetchFluid }) => {\r\n  const [date, setDate] = useState(null);\r\n  const { loading, error, post, patch, clearCache } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [fluidType, setFluidType] = useState(defaultValues?.act_type || \"\");\r\n  const [water, setWater] = useState(\"\");\r\n  const [intake, setIntake] = useState(defaultValues?.act_intake || \"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Initialize the state with default values if available\r\n    if (defaultValues) {\r\n      setSelectedDate(parseDate(defaultValues.act_date));\r\n      setSelectedTime(parseTime(defaultValues.act_time));\r\n      setFluidType(defaultValues.act_type || \"\");\r\n      setWater(defaultValues.act_intake?.water || \"\"); // Set water for add mode\r\n      setIntake(defaultValues.act_intake || \"\"); // Set intake for edit mode\r\n    }\r\n  }, [defaultValues]);\r\n\r\n  const parseDate = (dateString) => {\r\n    if (!dateString) return null;\r\n    const [year, month, day] = dateString.split(\"-\").map(Number);\r\n    return new Date(year, month - 1, day);\r\n  };\r\n\r\n  const parseTime = (timeString) => {\r\n    if (!timeString) return null;\r\n    const [hours, minutes] = timeString.split(\":\").map(Number);\r\n    const date = new Date();\r\n    date.setHours(hours, minutes, 0, 0);\r\n    return date;\r\n  };\r\n\r\n  const options = [\r\n    \"Water\", \"Oral Rehydration Solutions\", \"Clear Broth\", \"Milk\",\r\n    \"Fruit Juices\", \"Herbal Teas\", \"Coffee\", \"Tea\", \"Sports Drinks\",\r\n    \"Soft Drinks\", \"Energy Drinks\", \"Coconut Water\", \"Infused Water\",\r\n    \"Soup\", \"Electrolyte Solutions\", \"Alcoholic Beverages\",\r\n  ];\r\n\r\n  const getSelectedValue = (data) => {\r\n    setFluidType(data); // Update the fluid type when selected\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date || null);\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    setSelectedTime(time || null);\r\n  };\r\n\r\n  const addFluid = async () => {\r\n    const formattedDate = format(selectedDate, \"yyyy-MM-dd\"); // Format date to \"YYYY-MM-DD\"\r\n    const formattedTime = moment(selectedTime).format(\"HH:mm\"); // Format time to \"HH:mm\"\r\n    try {\r\n      const body = {\r\n        patient_id: \"10\", // Use the appropriate patient ID\r\n        act_catagory: \"fluid\",\r\n        act_date: formattedDate,\r\n        act_time: formattedTime,\r\n        actual_value: true, // New field for add\r\n        act_intake: {\r\n          [fluidType.toLowerCase()]: water, // Use fluid type as key\r\n        },\r\n        unit: \"ml\",\r\n      };\r\n\r\n      const response = await post(`resource/activity_wellness`, body);\r\n\r\n      if (response.code === 201) {\r\n        clearCache();\r\n        await fetchFluid(); // Refresh the list data here\r\n        setAddFormView(false); // Close the form view\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const editFluid = async () => {\r\n    const formattedDate = format(selectedDate, \"yyyy-MM-dd\"); // Format date to \"YYYY-MM-DD\"\r\n    const formattedTime = moment(selectedTime).format(\"HH:mm\"); // Format time to \"HH:mm\"\r\n    try {\r\n      const body = {\r\n        patient_id: \"10\",\r\n        act_catagory: \"fluid\",\r\n        act_date: formattedDate,\r\n        act_time: formattedTime,\r\n        act_type: fluidType.toLowerCase(), // Assuming `act_type` is required\r\n        act_intake: intake, // Use intake for editing\r\n        unit: \"ml\",\r\n      };\r\n\r\n      // Use the PATCH function for editing\r\n      const response = await patch(\r\n        `resource/activity_wellness/${defaultValues.id}`, // Use the ID from default values\r\n        body\r\n      );\r\n\r\n      if (response.code === 200) {\r\n        clearCache();\r\n        await fetchFluid(); // Refresh the list data here\r\n        setAddFormView(false); // Close the form view\r\n      } else {\r\n        console.error(\"Failed to update data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n    if (!selectedDate) newErrors.date = \"Date is required\";\r\n    if (!selectedTime) newErrors.time = \"Time is required\";\r\n    if (!fluidType) newErrors.fluidType = \"Fluid type is required\";\r\n    if (!water && !intake) newErrors.intake = \"Intake is required\"; // Validate based on edit mode\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultValues?.id) {\r\n        console.log(\"Edit clicked\");\r\n        editFluid(); // Call edit function if id is present\r\n      } else {\r\n        console.log(\"Add clicked\");\r\n        addFluid(); // Call add function if id is not present\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"text-danger\">{errors.date}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"text-danger\">{errors.time}</div>}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={defaultValues?.act_type || null}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n                {errors.fluidType && <div className=\"text-danger\">{errors.fluidType}</div>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Intake *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={defaultValues?.id ? intake : water} // Adjust based on mode\r\n              onChange={(e) =>\r\n                defaultValues?.id ? setIntake(e.target.value) : setWater(e.target.value)\r\n              }\r\n            />\r\n            {errors.intake && <div className=\"text-danger\">{errors.intake}</div>}\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FluidIntakeForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useCallback, useEffect } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicalTab from \"../../../MedicalTab\";\r\nimport ExerciseHabitTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/ExerciseHabitTable\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport NutritionDietTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/NutritionDietTable\";\r\nimport NutritionFluidTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/NutritionFluidTable\";\r\nimport DietForm from \"./DietForm\";\r\nimport FluidIntakeForm from \"./FluidIntakeForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\nimport useApi from \"../../../../../../../ApiServices/useApi\";\r\nimport DateRangePicker from \"../../../../../../DateRangePicker/DateRangePicker\";\r\n\r\nconst Nutrition = ({ from }) => {\r\n\r\n\r\n\r\n  const [pagination, setPagination] = useState({});\r\n  const [rowData, setRowData] = useState([]);\r\n  const [rowFluidata, setRowFluiData] = useState([]);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [id, setId] = useState(null);\r\n\r\n  const [ startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filters, setFilters] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const { loading, error, get, del, clearCache } = useApi();\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Type of Diet\" },\r\n    { id: 4, label: \"Notes\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  // const rowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     type_of_diet: \"Non-Veg\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     type_of_diet: \"Non-Veg\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     type_of_diet: \"Non-Veg\",\r\n  //     notes: \"Lorem ipsum\",\r\n  //   },\r\n  // ];\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    console.log(startDate,endDate,searchValue,\"ghghhghg\")\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n    \r\n  };\r\n\r\n  const fetchDiet = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/activity_wellness?act_catagory=diet&user_id=10&limit=${itemsPerPage}&page=${currentPage ?? \"\"}&from=${startDate ?? \"\"}&to=${\r\n          endDate ?? \"\"\r\n        }&order_by=act_date&dir=2`\r\n      );\r\n      if (response.code === 200) {\r\n        console.log(response?.data?.activity_wellnesses);\r\n        setRowData(response?.data?.activity_wellnesses);\r\n        setPagination(response?.data?.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage, startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    fetchDiet();\r\n  }, [fetchDiet]);\r\n\r\n  const fetchFluid = useCallback(async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/activity_wellness?&limit=${itemsPerPage}&page=${currentPage}&order_by=act_date&dir=2&act_catagory=fluid&user_id=10`\r\n      );\r\n      // &from=${startDate}&to=${endDate}&\r\n      if (response.code === 200) {\r\n        console.log(response?.data?.activity_wellnesses);\r\n        setRowFluiData(response?.data?.activity_wellnesses);\r\n        setPagination(response?.data?.pagination);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }, [get, currentPage, startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    fetchFluid();\r\n  }, [fetchFluid]);\r\n\r\n\r\n  const FluidIntakecolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 3, label: \"Date\" },\r\n    { id: 3, label: \"Type\" },\r\n    { id: 4, label: \"INTAKE (ML)\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  // const FluidIntakerowData = [\r\n  //   {\r\n  //     id: 1,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     type: \"Water\",\r\n  //     intake: \"1500\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     date: \"02-04-2024 12:13\",\r\n  //     type: \"Water\",\r\n  //     intake: \"1500\",\r\n  //   },\r\n  // ];\r\n\r\n  const tabs = [\r\n    { id: 1, title: \"Diet\" },\r\n    { id: 2, title: \"Fluid Intake\" },\r\n  ];\r\n\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-4\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 1;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  // const getCurrentFluidPageItems = () => {\r\n  //   const startIndex = (currentPage - 1) * itemsPerPage;\r\n  //   const endIndex = startIndex + itemsPerPage;\r\n  //   return FluidIntakerowData?.slice(startIndex, endIndex);\r\n  // };\r\n  const getselectedData = (data,id, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setId(id);\r\n      detailPage();\r\n    }\r\n  };\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n  const deleteDiet = async () => {\r\n    try {\r\n      if (id) {\r\n        const response = await del(`resource/activity_wellness/${id}`);\r\n        if (response.code === 200) {\r\n          setDetailView(false);\r\n          clearCache();\r\n          fetchDiet();\r\n        } else {\r\n          console.error(\"Failed to delete data:\", response.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <NutritionDietTable\r\n            rowData={rowData}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from === \"Consult-Intake\" && (\r\n        <CRow>\r\n          <NutritionFluidTable\r\n            rowData={rowFluidata}\r\n            columns={FluidIntakecolumnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && from !== \"Consult-Intake\" && (\r\n        <>\r\n          <>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"\">\r\n                <MedicalTab\r\n                  tabs={tabs}\r\n                  getCurrentTab={getCurrentTab}\r\n                  defaultTab={ParsedPatientSubMenu - 1}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n            {!addFormView && (\r\n              <>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={8} className=\"\">\r\n                   \r\n                    <DateRangePicker\r\n                    \r\n                     getFilterValues={getFilterValues}\r\n                    />\r\n                  </CCol>\r\n                  <CCol\r\n                    lg={4}\r\n                    className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                  >\r\n                    <div>\r\n                      <PrimaryButton onClick={() => addFormPage()}>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.Add} alt=\"add\" />\r\n                          <span className=\"fs-16 fw-600\">Add</span>\r\n                        </div>\r\n                      </PrimaryButton>\r\n                    </div>\r\n                    <div>\r\n                      <PrimaryButton onClick={() => addFormPage()}>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                        </div>\r\n                      </PrimaryButton>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <div className=\"mb-2\">\r\n                  {currentTab === 1 && (\r\n                    <>\r\n                      <CRow>\r\n                        <NutritionDietTable\r\n                          rowData={rowData}\r\n                          columns={columnData}\r\n                          getselectedData={getselectedData}\r\n                          from={from}\r\n                        />\r\n                      </CRow>\r\n                      <CRow className=\"mb-3\">\r\n                        <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                          <Pagination\r\n                            currentPage={currentPage}\r\n                            onPageChange={onPageChange}\r\n                            totalItems={pagination?.total}\r\n                            itemsPerPage={itemsPerPage}\r\n                          />\r\n                        </CCol>\r\n                      </CRow>\r\n                    </>\r\n                  )}\r\n                  {currentTab === 2 && (\r\n                    <>\r\n                      <CRow>\r\n                        <NutritionFluidTable\r\n                          rowData={rowFluidata}\r\n                          columns={FluidIntakecolumnData}\r\n                          getselectedData={getselectedData}\r\n                          from={from}\r\n                        />\r\n                      </CRow>\r\n                      <CRow className=\"mb-3\">\r\n                        <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                          <Pagination\r\n                            currentPage={currentPage}\r\n                            onPageChange={onPageChange}\r\n                            totalItems={pagination?.total}\r\n                            itemsPerPage={itemsPerPage}\r\n                          />\r\n                        </CCol>\r\n                      </CRow>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n\r\n          {addFormView && (\r\n            <CRow className=\"mb-2\">\r\n              <CCard className=\"p-2 cursor-default mb-5\">\r\n                <CCardBody className=\"mb-3\">\r\n                  {currentTab === 1 && (\r\n                    <DietForm\r\n                      back={() => {\r\n                        setAddFormView(false);\r\n                        setSelectedData({});\r\n                      }}\r\n                      setAddFormView={setAddFormView}\r\n                      fetchDiet={fetchDiet}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                  {currentTab === 2 && (\r\n                    <FluidIntakeForm\r\n                      back={() => {\r\n                        setAddFormView(false);\r\n                        setSelectedData({});\r\n                      }}\r\n                      setAddFormView={setAddFormView}\r\n                      fetchFluid={fetchFluid}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CRow>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                      <PrimaryButton onClick={deleteDiet}>Yes</PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nutrition;\r\n\r\n","import { CCol, CRow, CFormCheck, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst SexualStatusForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [historySti, setHistorySti] = useState(false);\r\n  const [currentSti, setCurrentSti] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    const defaultDateString = defaultValues?.date;\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  const handleHistoryStiClick = (event) => {\r\n    setHistorySti(event.target.value === \"yes\");\r\n  };\r\n\r\n  const handleCurrentStiClick = (event) => {\r\n    setCurrentSti(event.target.value === \"positive\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <p className=\"radio-label\">Sexual Activity</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"activityYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"activity\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"activityNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"activity\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol lg={6}>\r\n          <p className=\"radio-label\">History of STI</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"historyYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"sti\"\r\n                checked={historySti === true}\r\n                onChange={handleHistoryStiClick}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"historyNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"sti\"\r\n                checked={historySti === false}\r\n                onChange={handleHistoryStiClick}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      {historySti && (\r\n        <>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <div className=\"position-relative\">\r\n                <label className=\"form-label\">Last STI Screening Date *</label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date}\r\n                    onChange={(date) => setDate(date)}\r\n                    dateFormat={DATE_FORMAT}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label className=\"form-label\">STI History Notes</label>\r\n                  <CFormTextarea\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"Enter\"\r\n                    defaultValue={defaultValues?.sti_current_notes}\r\n                    disabled={from === \"Consult\" ? true : false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <p className=\"radio-label\">Current STI Status</p>\r\n              <div className=\"d-flex align-items-end w-100\">\r\n                <div\r\n                  style={{\r\n                    boxSizing: \"border-box\",\r\n                    borderRadius: \"5px\",\r\n                    border: \"1px solid #17171D33\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <CFormCheck\r\n                    className=\"mb-0\"\r\n                    inline\r\n                    type=\"radio\"\r\n                    id=\"statusPositive\"\r\n                    value=\"positive\"\r\n                    label={<label className=\"form-label mb-0\">Positive</label>}\r\n                    name=\"sti_status\"\r\n                    checked={currentSti === true}\r\n                    onChange={handleCurrentStiClick}\r\n                    disabled={from === \"Consult\" ? true : false}\r\n                  />\r\n                  <CFormCheck\r\n                    className=\"mb-0\"\r\n                    inline\r\n                    type=\"radio\"\r\n                    id=\"statusNegative\"\r\n                    value=\"negative\"\r\n                    label={<label className=\"form-label mb-0\">Negative</label>}\r\n                    name=\"sti_status\"\r\n                    checked={currentSti === false}\r\n                    onChange={handleCurrentStiClick}\r\n                    disabled={from === \"Consult\" ? true : false}\r\n                  />\r\n                  <CFormCheck\r\n                    className=\"mb-0\"\r\n                    inline\r\n                    type=\"radio\"\r\n                    id=\"statusUnknown\"\r\n                    value=\"unknown\"\r\n                    label={<label className=\"form-label mb-0\">Unknown</label>}\r\n                    name=\"sti_status\"\r\n                    checked={currentSti === false}\r\n                    onChange={handleCurrentStiClick}\r\n                    disabled={from === \"Consult\" ? true : false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            {currentSti && (\r\n              <CCol lg={6}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div className=\"position-relative\">\r\n                    <label className=\"form-label\">Current STI Notes</label>\r\n                    <CFormTextarea\r\n                      type=\"text\"\r\n                      class=\"form-control  pad-10\"\r\n                      id=\"validationTooltip01\"\r\n                      placeholder=\"Enter\"\r\n                      defaultValue={defaultValues?.name}\r\n                      disabled={from === \"Consult\" ? true : false}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            )}\r\n          </CRow>\r\n        </>\r\n      )}\r\n\r\n      {from !== \"Consult\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SexualStatusForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport MoodTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/MoodTable\";\r\nimport SexualStatusTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/SexualStatusTable\";\r\nimport SexualStatusForm from \"./SexualStatusForm\";\r\n\r\nconst SexualStatus = ({ back, from }) => {\r\n  const Data = {\r\n    id: 1,\r\n    sexual_activity: \"Active\",\r\n    history: \"Yes \",\r\n    screening_date: \"06-06-2024 \",\r\n    current_status: \"Active \",\r\n    sti_current_notes: \"lorem\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <SexualStatusForm back={back} defaultValues={Data} from={from} />\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SexualStatus;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst SleepTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SleepTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst SleepForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  \r\n    const options = [\"Disturbed\", \"Undisturbed\",\"Excess Dreams\",];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n           Duration (mins)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"0000\"\r\n              maxLength={4}\r\n              defaultValue={defaultValues?.name}\r\n              onInput={(e) => {\r\n                e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default SleepForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport SleepTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/SleepTable\";\r\nimport SleepForm from \"./SleepForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Sleep = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Type\" },\r\n    { label: \"DURATION (IN MINS)\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <SleepTable\r\n          rowData={getCurrentPageItems()}\r\n          columns={columnData}\r\n          getselectedData={getselectedData}\r\n          from={from}\r\n        />\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <SleepTable\r\n                  rowData={getCurrentPageItems()}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <SleepForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  // defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sleep;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst DateCards = ({ data, onClick }) => {\r\n  return (\r\n    <>\r\n      <CCard className=\"date-card cursor-default\">\r\n        <CCardBody>\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <div onClick={() => onClick(data, \"edit\")} className=\"cursor\">\r\n              <span className=\"fs-20 fw-600\">\r\n                {format(data?.date, \"dd-MM-yyyy\")}\r\n              </span>\r\n            </div>\r\n            <div onClick={() => onClick(data, \"delete\")}>\r\n              <img src={Assets.deleteorg} alt=\"Del\" className=\"cursor\" />\r\n            </div>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateCards;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport ActiveButton from \"../Buttons/ActiveButton/ActiveButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { formatDate } from \"../../Utils/dateUtils\";\r\n\r\nconst DateRangePicker = ({ onClose, getFilterValues }) => {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  // Get today's date\r\n  const today = new Date();\r\n\r\n  const onSearch = () => {\r\n    const formattedStart =\r\n      formatDate(startDate) === \"01-01-1970\" ? null : formatDate(startDate);\r\n    const formattedEnd =\r\n      formatDate(endDate) === \"01-01-1970\" ? null : formatDate(endDate);\r\n    getFilterValues(formattedStart, formattedEnd, searchValue);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2 p-3\">\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span>From Date *</span>\r\n          <DatePicker\r\n            showIcon\r\n            selected={startDate}\r\n            onChange={(date) => {\r\n              if (date === null) {\r\n                // Explicitly set to null if the clear button is clicked\r\n                setStartDate(null);\r\n              } else {\r\n                setStartDate(date);\r\n              }\r\n            }}\r\n            isClearable\r\n            className=\"date-range-picker\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </CCol>\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span>To Date *</span>\r\n          <DatePicker\r\n            showIcon\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            isClearable\r\n            className=\"date-range-picker\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </CCol>\r\n        {/* <CCol md={3} className=\"d-flex flex-column gap-1 justify-content-end\">\r\n          <div\r\n            className=\"search-bar\"\r\n            style={{ width: \"100%\", borderRadius: \"10px\" }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              style={{ padding: \"7px\" }}\r\n              value={searchValue}\r\n              onChange={(e) => setSearchValue(e.target.value)}\r\n            />\r\n          </div>\r\n        </CCol> */}\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton onClick={() => onSearch()}>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateRangePicker;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst DateSearch = () => {\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n  \r\n    // Get today's date\r\n    const today = new Date();\r\n\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-2\">\r\n      <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n        <span className=\"fs-18 fw-400 label-color\">Start Date *</span>\r\n        <div style={{ width: \"100%\" }}>\r\n          <DatePicker\r\n            showIcon\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n            className=\"date-range-selector\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n        <span className=\"fs-18 fw-400 label-color\">End Date *</span>\r\n        <div style={{ width: \"100%\" }}>\r\n          <DatePicker\r\n            showIcon\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            className=\"date-range-selector\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol\r\n       md={3}\r\n        className=\"d-flex flex-column gap-1 justify-content-end\"\r\n      >\r\n      <div className=\"search-bar\"  style={{ width: \"100%\",borderRadius: \"10px\" }}>\r\n            <input type=\"text\" placeholder=\"Search\" style={{ padding: \"7px\" }} />\r\n          </div>\r\n      </CCol>\r\n      <CCol\r\n        md={3}\r\n        className=\"d-flex flex-column gap-1 justify-content-end\"\r\n        style={{ width: \"60px\" }}\r\n      >\r\n        <PrimaryButton>\r\n          <div className=\"d-flex align-items-center gap-2\">\r\n            <img src={Assets.search} alt=\"close\" />\r\n          </div>\r\n        </PrimaryButton>\r\n      </CCol>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default DateSearch","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst DateSelector = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span className=\"fs-18 fw-400 label-color\">Start Date *</span>\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span className=\"fs-18 fw-400 label-color\">End Date *</span>\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={endDate}\r\n              onChange={(date) => setEndDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateSelector;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst SingleDatePicker = ({ defaultDate }) => {\r\n  const [startDate, setStartDate] = useState(\r\n    defaultDate ? new Date(defaultDate) : new Date()\r\n  );\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={12} className=\"d-flex flex-column gap-1\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleDatePicker;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst Dropdown = ({ options, defaultValue, getSelectedValue }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\r\n    defaultValue || \"Select\" || options[0]\r\n  );\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    setSelectedOption(option);\r\n    setIsOpen(false); // Close the dropdown after selecting an option\r\n    getSelectedValue(option);\r\n  };\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Attach the event listener for clicks outside\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    \r\n    // Cleanup event listener on component unmount\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"dropdown-container\" ref={dropdownRef}>\r\n      <div className=\"dropdown-header\" onClick={toggleDropdown}>\r\n        <span>{selectedOption || \"Select an option\"}</span>\r\n        <span className={`arrow ${isOpen ? \"open\" : \"\"}`}></span>\r\n      </div>\r\n      {isOpen && (\r\n        <ul className=\"dropdown-list\">\r\n          {options.map((option, index) => (\r\n            <li key={index} onClick={() => handleOptionClick(option)}>\r\n              {option}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst OptionItem = ({ label, onSelect, selected, disabled }) => {\r\n  const [isSelected, setIsSelected] = useState(selected);\r\n  useEffect(() => {\r\n    setIsSelected(selected);\r\n  }, [selected]);\r\n  const toggleSelected = () => {\r\n    setIsSelected(!isSelected);\r\n    onSelect(label, !isSelected); // Notify parent component of selection change\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`option-item ${isSelected ? \"selected\" : \"\"} ${\r\n        disabled ? \"disabled\" : \"\"\r\n      }`}\r\n      onClick={toggleSelected}\r\n    >\r\n      {label}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../assets/Css/PaginationHome.css\";\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  totalItems,\r\n  onPageChange,\r\n  itemsPerPage,\r\n}) => {\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // Calculate total pages based on totalItems and itemsPerPage\r\n    const pagesCount = Math.ceil(totalItems / itemsPerPage);\r\n    setTotalPages(pagesCount);\r\n  }, [totalItems, itemsPerPage]);\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      onPageChange(page);\r\n    }\r\n  };\r\n\r\n  const getPageNumbers = () => {\r\n    const pageNumbers = [];\r\n    const range = 1; // Number of pages to show around the current page\r\n\r\n    if (totalPages <= 5) {\r\n      // Less than or equal to 5 pages, show all\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n    } else {\r\n      // More than 5 pages, use ellipses\r\n      if (currentPage <= 3) {\r\n        // Show first few pages and the last page\r\n        for (let i = 1; i <= 3; i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n        pageNumbers.push(\"...\");\r\n        pageNumbers.push(totalPages);\r\n      } else if (currentPage >= totalPages - 2) {\r\n        // Show last few pages and the first page\r\n        pageNumbers.push(1);\r\n        pageNumbers.push(\"...\");\r\n        for (let i = totalPages - 2; i <= totalPages; i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n      } else {\r\n        // Show a range around the current page\r\n        pageNumbers.push(1);\r\n        pageNumbers.push(\"...\");\r\n        for (let i = currentPage - range; i <= currentPage + range; i++) {\r\n          if (i > 0 && i <= totalPages) {\r\n            pageNumbers.push(i);\r\n          }\r\n        }\r\n        pageNumbers.push(\"...\");\r\n        pageNumbers.push(totalPages);\r\n      }\r\n    }\r\n\r\n    // Remove duplicate ellipses\r\n    return pageNumbers.filter(\r\n      (item, index, arr) =>\r\n        item !== \"...\" || (index > 0 && arr[index - 1] !== \"...\")\r\n    );\r\n  };\r\n\r\n  const pageNumbers = getPageNumbers();\r\n\r\n  return (\r\n    <div\r\n      // className=\"pagination-home\"\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      <div\r\n        onClick={() => handlePageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n        aria-label=\"Previous\"\r\n        // className=\"div-pagination\"\r\n        style={{\r\n          width: \"56px\",\r\n          height: \"56px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          gap: \"0px\",\r\n          borderRadius: \"8px\",\r\n          opacity: \"0px\",\r\n          boxShadow: \"0px 4px 24px 0px #0084CF14\",\r\n          marginLeft: \"10px\",\r\n          outline: \"none\",\r\n          border: \"none\",\r\n          fontSize: \"20px\",\r\n          fontWeight: \"600\",\r\n          lineHeight: \"28.9px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        &lt;\r\n      </div>\r\n      {pageNumbers.map((number, index) => (\r\n        <div\r\n          key={index}\r\n          onClick={() => {\r\n            if (number !== \"...\") {\r\n              handlePageChange(number);\r\n            }\r\n          }}\r\n          className={number === currentPage ? \"active-home-page\" : \"\"}\r\n          disabled={number === \"...\"}\r\n          aria-current={number === currentPage ? \"page\" : undefined}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            gap: \"0px \",\r\n            borderRadius: \"8px \",\r\n            opacity: \"0px \",\r\n            boxShadow: \"0px 4px 24px 0px #0084CF14 \",\r\n            marginLeft: \"10px \",\r\n            outline: \"none \",\r\n            border: \"none \",\r\n            fontSize: \"20px \",\r\n            fontWeight: \"600 \",\r\n            lineHeight: \"28.9px \",\r\n            cursor: \"pointer\",\r\n            width: \"56px\",\r\n            height: \"56px\",\r\n          }}\r\n        >\r\n          {number}\r\n        </div>\r\n      ))}\r\n      <div\r\n        onClick={() => handlePageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n        aria-label=\"Next\"\r\n        style={{\r\n          width: \"56px\",\r\n          height: \"56px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          gap: \"0px\",\r\n          borderRadius: \"8px\",\r\n          opacity: \"0px\",\r\n          boxShadow: \"0px 4px 24px 0px #0084CF14\",\r\n          marginLeft: \"10px\",\r\n          outline: \"none\",\r\n          border: \"none\",\r\n          fontSize: \"20px\",\r\n          fontWeight: \"600\",\r\n          lineHeight: \"28.9px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        &gt;\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst SearchBar = () => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={6} className=\"d-flex flex-column gap-1\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Search\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst PsychiatricTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{dt?.result}</span>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <Badge label={dt?.result} color={dt?.result ? \"error\" : \"\"} />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={\r\n                        i === 0 ? Assets?.testSubIcon : Assets?.testUnSubIcon\r\n                      }\r\n                      className=\"cursor\"\r\n                    />\r\n                    {i === 0 && (\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.testViewIcon}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"view\")}\r\n                    />\r\n                     )} \r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PsychiatricTable;\r\n","import React, { useState } from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { CModal, CModalBody, CModalHeader } from \"@coreui/react\";\r\nimport BlurBackground from \"../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../Buttons/SecondaryButton/SecondaryButton\";\r\nimport RespirationRateForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm\";\r\nimport Spo2 from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2\";\r\nimport Temperature from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature\";\r\nimport LFTForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm\";\r\nimport HeartRate from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate\";\r\nimport BSugar from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar\";\r\nimport LipidProfileForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm\";\r\nimport HCT from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT\";\r\nimport Hemogloin from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin\";\r\nimport BKetone from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone\";\r\nimport BUricAcid from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid\";\r\nimport GFR from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR\";\r\nimport Creatinine from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine\";\r\nimport Urea from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea\";\r\nimport Urinalysis from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis\";\r\nimport BMI from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI\";\r\nimport BPForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm\";\r\nimport useApi from \"../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\n\r\nconst DynamicTable = ({\r\n  columnsData,\r\n  tableData,\r\n  getTableDatas,\r\n  from,\r\n  render,\r\n}) => {\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [selectedData, setSelectedData] = useState(\"\");\r\n  const { loading, del, clearCache } = useApi();\r\n\r\n  const deleteData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setDeleteModal(true);\r\n    }\r\n  };\r\n\r\n  const editData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setEditModal(true);\r\n    }\r\n  };\r\n\r\n  const onDelete = async () => {\r\n    try {\r\n      const url = `resource/vitals/${selectedData?.id}`; // Replace with your API endpoint\r\n      await del(url);\r\n      await getTableDatas(selectedData);\r\n      toast.success(\"Deleted successfully\");\r\n      setDeleteModal(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"responsive-table-container\">\r\n        <table\r\n          class=\"responsive-table\"\r\n          style={{ background: from === \"Consult\" ? \"white\" : \"transparent\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              {columnsData?.map(\r\n                (data, i) =>\r\n                  from === \"Consult\" && i === columnsData.length - 1 ? null : (\r\n                    <th key={i}>{data?.label}</th>\r\n                  )\r\n                // <th key={column.id}>{column.label}</th>\r\n              )}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableData?.length <= 0 ? (\r\n              <tr>\r\n                <td colSpan={columnsData.length} className=\"no-data-message\">\r\n                  No data available\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              tableData?.map((row, rowIndex) => (\r\n                <tr key={rowIndex}>\r\n                  {columnsData.map((column, i) =>\r\n                    from === \"Consult\" &&\r\n                    i === columnsData.length - 1 ? null : (\r\n                      <td key={`${rowIndex}-${column?.id}`}>\r\n                        {renderCell(row, column)}\r\n                      </td>\r\n                    )\r\n                  )}\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Delete Modal */}\r\n      {deleteModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteModal}\r\n            onClose={() => setDeleteModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => onDelete()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteModal(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {/* Edit Modal */}\r\n      {editModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={editModal}\r\n            onClose={() => setEditModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalHeader>\r\n              <h4 className=\"fw-600\">Edit {selectedData?.name}</h4>\r\n            </CModalHeader>\r\n            <CModalBody className=\"p-3\">\r\n              {selectedData?.name === \"BMI\" && (\r\n                <BMI\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Pressure\" && (\r\n                <BPForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Respiration Rate\" && (\r\n                <RespirationRateForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"SpO2\" && (\r\n                <Spo2\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Temperature\" && (\r\n                <Temperature\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Lung Function Test (LFT)\" && (\r\n                <LFTForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Heart\" && (\r\n                <HeartRate\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Sugar\" && (\r\n                <BSugar\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Lipid Profile\" && (\r\n                <LipidProfileForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Hematocrit (HCT)\" && (\r\n                <HCT\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Hemoglobin\" && (\r\n                <Hemogloin\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Ketone\" && (\r\n                <BKetone\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Uric Acid\" && (\r\n                <BUricAcid\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"GFR\" && (\r\n                <GFR\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Creatinine\" && (\r\n                <Creatinine\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urea\" && (\r\n                <Urea\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={() => getTableDatas(selectedData)}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urinalysis\" && (\r\n                <Urinalysis\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const renderImage = (contentUrl) => {\r\n    return (\r\n      <img\r\n        src={contentUrl}\r\n        alt=\"Image\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  function renderCell(row, column) {\r\n    const columnKey = getColumnKey(column?.label);\r\n    const value = row[columnKey];\r\n\r\n    if (columnKey === \"result_file\") {\r\n      // Function to render PDF content\r\n      const renderPdf = (contentUrl) => {\r\n        window.open(contentUrl, \"_blank\");\r\n      };\r\n      return (\r\n        <div style={{ width: \"80px\" }} onClick={() => renderPdf(value.link)}>\r\n          <span className=\"hyperlink\">{value?.name}</span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"result\") {\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          {value?.name !== \"\" ? (\r\n            <Badge label={value?.name ?? \"-\"} color={value?.status ?? \"-\"} />\r\n          ) : value?.name === \"\" ? (\r\n            <>--</>\r\n          ) : (\r\n            <span>{value}</span>\r\n          )}\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"date\") {\r\n      // Function to format date-time string\r\n      const formatDateTime = (dateTimeString) => {\r\n        if (!dateTimeString) {\r\n          return \"Invalid date-time\"; // Handle empty or invalid input\r\n        }\r\n\r\n        // Parse the date and time string\r\n        const parsedDate = parse(\r\n          dateTimeString,\r\n          \"yyyy-MM-dd HH:mm\",\r\n          new Date()\r\n        );\r\n\r\n        // Check if the parsed date is valid\r\n        if (!isValid(parsedDate)) {\r\n          return \"Invalid date-time\"; // Handle invalid date\r\n        }\r\n\r\n        // Format the date and time into 'dd-MM-yyyy HH:mm'\r\n        return format(parsedDate, \"dd-MM-yyyy HH:mm\");\r\n      };\r\n\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          <span>{formatDateTime(value)} </span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"action\") {\r\n      return (\r\n        <div className=\"d-flex gap-2\">\r\n          {value.map((data, i) => (\r\n            <div key={i} className=\"d-flex\">\r\n              {renderActionButton(data, row)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      // Default rendering for regular data\r\n      return <span className=\"fs-16 fw-500\">{value}</span>;\r\n    }\r\n  }\r\n\r\n  function renderActionButton(data, row) {\r\n    switch (data.type) {\r\n      case \"warning\":\r\n        return <img src={Assets.Warning} alt=\"warn\" className=\"cursor\" />;\r\n      case \"edit\":\r\n        return (\r\n          <img\r\n            src={Assets.EditPencil}\r\n            alt=\"edit\"\r\n            className=\"cursor\"\r\n            onClick={() => editData(row)}\r\n          />\r\n        );\r\n      case \"delete\":\r\n        return (\r\n          <img\r\n            src={Assets.Delete}\r\n            alt=\"delete\"\r\n            className=\"cursor\"\r\n            onClick={() => deleteData(row)}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function getColumnKey(columnLabel) {\r\n    // Convert label to a key format used in your data object\r\n    // Example: \"Heart Rate (BPM)\" -> \"heart_rate_(bpm)\"\r\n    return columnLabel.toLowerCase().replace(/\\s+/g, \"_\");\r\n  }\r\n};\r\n\r\nexport default DynamicTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImagingOrderTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.file !== \"-\" ? (\r\n                    <Badge label={dt?.file} color={\"primary\"} />\r\n                  ) : (\r\n                    \"-\"\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.notes}\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.link}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.icd_code}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.scan_name}</span>\r\n                  <Badge\r\n                    label={dt?.scan_status}\r\n                    color={\r\n                      dt?.scan_status === \"Accepted\"\r\n                        ? \"yellow\"\r\n                        : dt?.scan_status === \"Uploaded\"\r\n                        ? \"success\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                    >\r\n                      {dt?.scan_status === \"Accepted\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.Approve}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.scan_status === \"Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.scan_status === \"Not Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.EditPencil}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                          />\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.TableDelete}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"delete\")}\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                    }}\r\n                    className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                  >\r\n                    {dt?.scan_status === \"Accepted\" && (\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.Accept}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                      />\r\n                    )}\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst LabOrderTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.file !== \"-\" ? (\r\n                    <Badge label={dt?.file} color={\"primary\"} />\r\n                  ) : (\r\n                    \"-\"\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.notes}\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.link}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.icd_code}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lab_name}</span>\r\n                  <Badge\r\n                    label={dt?.lab_status}\r\n                    color={\r\n                      dt?.lab_status === \"Accepted\"\r\n                        ? \"yellow\"\r\n                        : dt?.lab_status === \"Uploaded\"\r\n                        ? \"success\"\r\n                        : dt?.lab_status === \"Prescribed\"\r\n                        ? \"warning\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                    >\r\n                      {dt?.lab_status === \"Accepted\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.Approve}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.lab_status === \"Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.lab_status === \"Not Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.EditPencil}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                          />\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.TableDelete}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"delete\")}\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst LabTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <Badge label={dt?.file} color={\"primary\"} />\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.notes}</CTableDataCell>\r\n              <CTableDataCell>{dt?.link}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst MedicationOrderTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  console.log(\"first\", rowData[0]);\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span className=\"fs-16 fw-500\">{dat?.name}</span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span className=\"fs-16 fw-500\">{dat?.strength} mg</span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span className=\"fs-16 fw-500\">\r\n                        {dat?.m} | {dat?.a} | {dat?.e} | {dat?.n}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span\r\n                        className=\"fs-16 fw-500\"\r\n                        style={{\r\n                          textTransform: \"capitalize\",\r\n                        }}\r\n                      >\r\n                        {dat?.food}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lab_name}</span>\r\n                  <Badge\r\n                    label={dt?.lab_status}\r\n                    color={\r\n                      dt?.lab_status === \"Received\"\r\n                        ? \"primary\"\r\n                        : dt?.lab_status === \"Delivered\"\r\n                        ? \"success\"\r\n                        : dt?.lab_status === \"Prescribed\"\r\n                        ? \"warning\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                    >\r\n                      {dt?.lab_status === \"Waiting For Approval\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          // src={Assets?.UpdateIcon}\r\n                          src={Assets?.Approve}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.lab_status === \"Prescribed\" ? (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.EditPencil}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                          />\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.TableDelete}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"delete\")}\r\n                          />\r\n                        </>\r\n                      ) : dt?.lab_status === \"Received\" ? (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.UStatus}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                            style={{ width: \"35px\" }}\r\n                          />\r\n                        </>\r\n                      ) : dt?.lab_status === \"Delivered\" ? (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.visibleEye}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"completed\")}\r\n                            style={{ width: \"30px\" }}\r\n                          />\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n                    {/* <div\r\n                    style={{\r\n                      width: dt?.lab_status === \"Accepted\" ? \"50%\" : \"100%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.visibleEye}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div> */}\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst MedicalHistoryTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.onset}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.conditions}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.icd10}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.chronic}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.prev_illness}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistoryTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst MedicationTable = ({ columns, rowData, getselectedData, from }) => {\r\n\r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100 flex-column\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.name?.name ? dt?.values?.name?.name : \"-\" }</span>\r\n                  <small>\r\n                    {dt?.values?.strength ? dt?.values?.strength : \"-\"} {dt?.values?.strength_measurement ? dt?.values?.strength_measurement : \"-\"} {dt?.values?.dosage ? dt?.values?.dosage : \"-\"}\r\n                  </small>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">\r\n                    {dt?.values?.m ? dt?.values?.m : \"-\"} | {dt?.values?.a}  | {dt?.values?.e} | {dt?.values?.n}\r\n                  </span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.food_times ? dt?.values?.food_times : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.quantity ? dt?.values?.quantity : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.values?.start_date ? dt?.values?.start_date : \"-\"}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\"> {dt?.values?.status ? dt?.values?.status : \"-\"} </span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nfunction ExerciseHabitTable({ columns, habitData, getselectedData, from }) {\r\n  const selectedData = (data,id, type) => {\r\n    getselectedData(data,id, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {habitData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.act_type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.act_duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.act_intensity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt,dt?.id, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExerciseHabitTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst MoodTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"20%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"20%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoodTable;\r\n","// Define your constants\r\nconst DATE_FORMAT = \"dd-MM-yyyy\";\r\n\r\nexport { DATE_FORMAT };\r\n","export const findItemIndex = (options, value) => {\r\n  // Use findIndex to get the index of the item with the specified id\r\n  const index = options.findIndex((item) => item === value);\r\n  return index;\r\n};\r\n\r\nexport const extractNum = (data) => {\r\n  const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n  return numbers || \"\";\r\n};\r\n\r\nexport const getFileTypeFromMime = (mimeType) => {\r\n  const mimeTypes = {\r\n    'application/pdf': 'pdf',\r\n    'image/jpeg': 'jpg',\r\n    'image/png': 'png',\r\n    'text/plain': 'txt',\r\n    // Add more MIME types as needed\r\n  };\r\n\r\n  return mimeTypes[mimeType] || 'unknown';\r\n};\r\n\r\nexport const openFile = (contentUrl) => {\r\n  window.open(contentUrl, \"_blank\");\r\n};","import { format, isValid, parse } from \"date-fns\";\r\n\r\n// Function to format date as DD-MM-YYYY HH:mm AM/PM\r\nexport function formatDateTime(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n\r\n  const options = {\r\n    day: \"2-digit\",\r\n    month: \"2-digit\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  };\r\n\r\n  return date.toLocaleString(\"en-GB\", options).replace(\",\", \"\");\r\n}\r\n\r\n// Function to format date as DD-MM-YYYY\r\nexport function formatDate(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are zero-indexed\r\n  const year = date.getFullYear();\r\n\r\n  return `${day}-${month}-${year}`;\r\n}\r\n\r\n// Function to format time as HH:mm AM/PM\r\nexport function formatTime(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n  const options = {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  };\r\n\r\n  return date.toLocaleTimeString(\"en-GB\", options);\r\n}\r\n\r\nexport function tableDateTime(dateTimeString) {\r\n  if (!dateTimeString) {\r\n    return \"Invalid date-time\"; // Handle empty or invalid input\r\n  }\r\n\r\n  // Parse the date and time string\r\n  const parsedDate = parse(dateTimeString, \"yyyy-MM-dd HH:mm\", new Date());\r\n\r\n  // Check if the parsed date is valid\r\n  if (!isValid(parsedDate)) {\r\n    return \"Invalid date-time\"; // Handle invalid date\r\n  }\r\n\r\n  // Format the date and time into 'dd-MM-yyyy HH:mm'\r\n  return format(parsedDate, \"dd-MM-yyyy HH:mm\");\r\n}\r\n\r\nexport function getCurrentTime() {\r\n  const now = new Date();\r\n  const hours = now.getHours().toString().padStart(2, \"0\");\r\n  const minutes = now.getMinutes().toString().padStart(2, \"0\");\r\n  return `${hours}:${minutes}`;\r\n}\r\n"],"names":["useApi","apiUrl","process","apiKey","loading","setLoading","useState","error","setError","cache","useRef","fetchData","useCallback","async","url","options","current","startsWith","response","fetch","ok","Error","concat","statusText","data","json","message","get","method","headers","Authorization","sessionStorage","getItem","post","body","JSON","stringify","patch","del","clearCache","_ref","label","color","_jsx","className","children","paths","lastIndex","length","_Fragment","CBreadcrumb","map","index","CBreadcrumbItem","href","to","onClick","buttonName2","getbtnNames","buttonText","setButtonText","isOpen","setIsOpen","handleItemClick","text","_jsxs","toggleDropdown","src","Assets","cUp","alt","cDown","ObjectiveDatas","id","icon","VitalBP","slug","name","date","category","badge","columnsData","tableData","result","status","systolic","diastolic","chartLabel1","action","type","VitalBs","blood_sugar","blood_sugar_value","VitalBMI","bmi","height","weight","VitalHCT","VitalHBeat","interpretation","result_file","contentType","link","ecgSample","VitalHae","hemoglobin","hemoglobinValue","BKetone","blood_ketone","blood_ketone_value","VitalLipid","chartLabel2","chartLabel3","chartLabel4","chartLabel5","chartLabel6","VitalRespi","SpO2","spo2","Temp","temperature","unit","LFT","BUAcid","blood_uric_acid","blood_uric_acid_value","Urinalysis","specific_gravity","ph","clarity","protein","glucose","leukocyte","bilirubin","urobilinogen","red_blood_cells","white_blood_cells","Urea","urea","urea_value","Creatinine","creatinine","creatinine_value","GFR","gfr","gfr_value","from","rowData","questions","addFormView","setAddFormView","currentPage","setCurrentPage","selectedData","setSelectedData","PsychiatricTable","getCurrentPageItems","startIndex","endIndex","slice","columns","getselectedData","console","log","CCard","CCardBody","PsychiatricForm","back","defaultValues","formTitle","setFormTitle","formData","setFormData","handleChange","e","value","target","prevState","onSubmit","preventDefault","question","CRow","CCol","option","cIndex","CFormCheck","onChange","checked","style","width","PrimaryButton","SecondaryButton","CTable","CTableHead","CTableRow","i","CTableHeaderCell","CTableBody","dt","CTableDataCell","condition","treatment","TableEdit","TableDelete","setDate","useEffect","defaultDateString","defaultDate","dateString","_datePart$split","datePart","split","month","day","year","Number","Date","parseDateString","disableText","setDisableText","gravidaoptions","findgravidaIndex","indexOf","lg","class","for","DatePicker","showIcon","selected","dateFormat","DATE_FORMAT","border","borderRadius","Dropdown","getSelectedValue","defaultValue","disabled","onClose","remark","deleteView","setDeleteView","addFormPage","md","BackBtn","Breadcrumb","DateSearch","Add","OptionsIcon","DiagnosisTable","Pagination","onPageChange","pageNumber","totalItems","itemsPerPage","DiagnosisForm","BlurBackground","CModal","alignment","visible","CModalBody","takendate","setTakenDate","dosage_date","defaultDateString1","taken_date","defaultDate1","placeholder","vaccine","period","colorVaccined","vaccined","columnData","startDate","setStartDate","endDate","setEndDate","tkDate","setTkDate","today","ImmunizationTable","ImmunizationForm","maxDate","tabs","getCurrentTab","defaultTab","currentTab","setCurrentTab","switchTab","title","_location$state","addBack","defaultData","getTableDatas","useLocation","state","PatientDetail","selectedTime","setSelectedTime","selectedDate","setSelectedDate","keytone","setKeytone","errors","setErrors","defaultDateTime","defaultTime","getCurrentTime","parsedDate","parse","isValid","hours","minutes","setHours","setMinutes","setSeconds","validateInputs","currentErrors","time","onEdit","onAdd","details","format","user_id","toast","success","CContainer","isClearable","closeOnScroll","wrapperClassName","updatedDateTime","getHours","getMinutes","showTimeSelect","showTimeSelectOnly","timeIntervals","deciNum","replace","numWithDecimal","xs","extractNum","parseFloat","match","setHeight","setWeight","heightUnit","setHeightUnit","height_unit","weightUnit","setWeightUnit","weight_unit","setBmi","isNaN","calculateBMI","heightInMeters","toFixed","maxLength","onInput","setSystolic","toString","setDiastolic","pulse","setPulse","formattedDate","String","getDate","padStart","getMonth","getFullYear","getFormattedDate","validate","newErrors","trim","setType","bloodSugar","setBloodSugar","findItemIndex","uricAcid","setUricAcid","uric_acid","setCreatinine","setGfr","hct","setHct","setInterpretation","ecgFile","setEcgFile","hr","setHr","handleUpload","file","reader","FileReader","onloadend","base64","readAsDataURL","heart","files","htmlFor","openInNewTab","dataUrl","window","open","getFileTypeFromMime","setHemoglobin","fvcL","setFvcL","fvcPercent","setFvcPercent","fev1L","setFev1L","fev1Percent","setFev1Percent","pefL","setPefL","pefPercent","setPefPercent","fev1FvcPercent","setFev1FvcPercent","fef25L","setFef25L","fef25","fef25Percent","setFef25Percent","fef50L","setFef50L","fef50","fef50Percent","setFef50Percent","fef75L","setFef75L","fef75","fef75Percent","setFef75Percent","fef2575L","setFef2575L","fef2575","fef2575Percent","setFef2575Percent","notes","setNotes","convertNum","validateForm","fields","required","forEach","field","_field$value","fvc","fev1","fev1_fvc","pef","CFormTextarea","rows","ldl","setLdl","hdl","setHdl","vldl","setVldl","ldlHdl","setLdlHdl","triglycerides","setTriglycerides","totalCholesterol","setTotalCholesterol","ldl_unit","hdl_unit","vldl_unit","hdl_ldl_unit","triglycerides_unit","total_unit","hdl_ldl","total","_e$target","_e$target$value","_e$target2","_e$target2$value","_e$target3","_e$target3$value","_e$target4","_e$target4$value","_e$target5","_e$target5$value","_e$target6","_e$target6$value","respiration","setRespiration","spO2","setSpO2","str","selectedMethod","setSelectedMethod","selectedUnit","setSelectedUnit","setTemperature","handleUnitChange","boxSizing","padding","inline","nums","setUrea","cell","setCell","wholeNumber","tabindex","Export","_selectedData$ga","_selectedData$ga5","_selectedData$skin4","_getCurrentPageItems","_selectedData$ga6","_selectedData$skin5","dateCards","ga","select","skin","selectedOptions","setSelectedOptions","skinselectedOptions","setSkinSelectedOptions","labelName1","setLabelname1","isSelected","setIsSelected","labelName","setLabelname","editView","setEditView","skinoptions","handleSelect","filter","item","handleSelectSkin","nutritionOpen","setNutritionOpen","constiOpen","setConstiOpen","generalOpen","setGeneralOpen","heentOpen","setHeentOpen","toggleSelected","_selectedData$ga2","_selectedData$skin","_selectedData$ga3","_selectedData$skin2","_selectedData$ga4","_selectedData$skin3","getselected","toggleSelected1","SingleDatePicker","PlusIcon","MinusIcon","OptionItem","onSelect","includes","DateSelector","DateCards","ActiveButton","listview","provider_name","reason","_timePart$split","parts","timePart","findIndex","prev_illness","timeCaption","NextAppointmentTable","NextAppointmentForm","PatientEducationTab","trimester","setTrimester","DropdownButton","icd_code","scan_status","scan_name","detailView","setDetailView","ImagingOrderTable","ImagingOrderForm","size","CFormSelect","lab_status","lab_name","LabOrderTable","LabOrderForm","defaultChecked","_defaultValues$medici","_defaultValues$medici2","_defaultValues$medici21","_defaultValues$medici22","medicines","setMedicines","strength","strengthMeasurement","days","totalQty","instruction","m","a","n","food","handleAddMedicine","newMedicines","push","handleRemoveMedicine","medicine","handleMedicineInputChange","fieldName","newValue","processedValue","toISOString","btnValue","setBtnValue","btnView","setBtnView","setStrength","qty","setQty","timeTaken","setTimeTaken","_defaultValues$medici3","_defaultValues$medici4","_defaultValues$medici5","_defaultValues$medici6","_defaultValues$medici7","_defaultValues$medici8","_defaultValues$medici9","_defaultValues$medici10","_defaultValues$medici11","_defaultValues$medici12","_defaultValues$medici13","_defaultValues$medici14","_defaultValues$medici15","_defaultValues$medici16","_defaultValues$medici17","_defaultValues$medici18","_defaultValues$medici19","_defaultValues$medici20","paddingRight","whiteDel","whiteAdd","rx","frequency","duration","rowSpan","TickCircle","display","justifyContent","PlusCircle","transform","completedView","setCompletedView","MedicationOrderTable","CloseBtn","MedicationOrderForm","MedicationCompleted","DetailsTable","dateStr","PatientEducationTable","PatientEducationForm","setTime","description","no","ProcedurerTable","ProcedureForm","ProcedureTab","date_time","therapy_name","therapist_name","TherapiesTable","TherapiesForm","TherapiesTab","_dt$addition_info","_dt$addition_info2","_dt$addition_info3","_dt$addition_info4","_dt$addition_info5","_dt$addition_info6","_dt$addition_info7","_dt$addition_info8","addition_info","EditPencil","Delete","_defaultValues$additi","getChiefComplaints","complaints","setComplaints","parseDate","timeString","now","parseTime","valid","undefined","formattedTime","moment","document_source","code","addChiefComplaints","OnClose","setRowData","pagination","setPagination","setId","searchValue","setSearchValue","docs","xl","DateRangePicker","getFilterValues","ThreeDots","ChiefComplaintTable","ChiefComplaintsForm","deleteChiefComplaints","disease","grandparents","father","mother","Brother","Sister","Daughter","Son","FamilyHistoryTable","onset","icdoptions","chronic","findIndex2","icd10","conditions","MedicalHistoryTable","MedHistoryForm","date2","setDate2","fert_treatment","setFert_treatment","para","setPara","lacating","setLacating","gravida","setGravida","lmp_date","defaultDateString2","ed_date","defaultDate2","trimster","lacatingoptions","bad","setBad","preg","setPreg","pregnant","fertTreat","setFertTreat","lact","setLact","cesarean","setCesarean","obstetric","setObsteric","handleChangeObste","handleChangeCesa","handleChangeLact","handleChangeFert","gravidaValue","setGravidaValue","paraValue","setParaValue","numCheck","input","newstrValue","boh","lmp","menopause","setMenopause","handleClick","event","getSelectedValue2","setValue","age","value1","setValue1","value2","setValue2","cycle_per_year","value3","setValue3","cycle_in_days","handlePaste","clipboardData","getData","onPaste","date3","setDate3","abnormalStatus","setAbnormalStatus","history_of_abnormal","mamogramStatus","setMamogramStatus","history_of_mamogram","breastStatus","setBreastStatus","history_of_breast","handleAbnormalStatus","handleMamogramStatus","handleBreastStatus","date_of_last_pap","date_of_last_mamogram","defaultDateString3","date_of_last_breast","defaultDate3","PatientSubMenu4","localStorage","ParsedPatientSubMenu","PatientSubMenu5","ParsedPatientSubMenu5","currentHistoryTab","setCurrentHistoryTab","ObstetricHistoryTable","MensturalHistoryForm","ScreeningHistoryForm","MedicalTab","smokingStatus","setSmokingStatus","smoking","alcoholStatus","setAlcoholStatus","alcohol","drugStatus","setDrugStatus","drugs","handleSmokingStatus","handleAlcoholStatus","handleDrugStatus","getSelectedGravida","Performed_by","hospital","SurgicalTable","SurgicalForm","fetchMedication","_response$data","_response$data2","patient_healths","MedicationTable","MedicationForm","deleteMedication","_defaultValues$values","_defaultValues$values2","_defaultValues$values3","_defaultValues$values4","_defaultValues$values5","_defaultValues$values6","_defaultValues$values7","_defaultValues$values8","_defaultValues$values9","_defaultValues$values10","_defaultValues$values11","_defaultValues$values12","_defaultValues$values13","_defaultValues$values14","_defaultValues$values15","_defaultValues$values16","_defaultValues$values17","_defaultValues$values18","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","medicine_type","values","medicine_name","dosage","strength_measurement","total_qty","route_administration","no_of_days","medicine_taken","location","setLocation","locationy","searchTerm","setSearchTerm","options1","editMedication","addMedication","patient_id","start_date","end_date","symptoms","fetchSignsSymptoms","duration_days","aggravating_factors","releiving_factors","temporal_factors","severity","editSymptoms","addSymptoms","masters","getLocation","consult_id","quality","_dt$values","_dt$values2","_dt$values3","_dt$values4","_dt$values5","_dt$values6","_dt$values7","_dt$values8","_dt$values9","_dt$values10","_dt$values11","_dt$values12","SymtomsTable","SignsSymptomsForm","deleteSignsSymptoms","fetchExciseHabit","exercises","setExercises","intensity","updatedData","newExercises","ex","exercise","hgdf","handleRemoveExercise","handleAddExercise","habitData","setHabitData","rowFluidata","setRowFluiData","filters","setFilters","_response$data3","activity_wellnesses","detailPage","ExerciseHabitTable","ExcerciseHabitForm","MoodTable","MoodForm","_dt$detail","act_date","act_type","detail","act_intake","_defaultValues$detail","fetchDiet","dietType","setDietType","_defaultValues$detail2","act_time","validationErrors","Object","keys","editDiet","act_catagory","addDiet","fetchFluid","fluidType","setFluidType","water","setWater","intake","setIntake","_defaultValues$act_in","toLowerCase","editFluid","actual_value","addFluid","_response$data4","_response$data5","_response$data6","FluidIntakecolumnData","PatientSubMenu2","NutritionDietTable","NutritionFluidTable","DietForm","FluidIntakeForm","historySti","setHistorySti","currentSti","setCurrentSti","handleHistoryStiClick","handleCurrentStiClick","sti_current_notes","SexualStatusForm","sexual_activity","history","screening_date","current_status","SleepTable","SleepForm","deleteorg","onSearch","formattedStart","formatDate","formattedEnd","search","dropdownRef","selectedOption","setSelectedOption","handleClickOutside","contains","document","addEventListener","removeEventListener","ref","handleOptionClick","totalPages","setTotalPages","pagesCount","Math","ceil","handlePageChange","page","pageNumbers","getPageNumbers","arr","alignItems","gap","opacity","boxShadow","marginLeft","outline","fontSize","fontWeight","lineHeight","cursor","number","SearchBar","Badge","testSubIcon","testUnSubIcon","testViewIcon","render","deleteModal","setDeleteModal","editModal","setEditModal","deleteData","editData","background","colSpan","row","rowIndex","column","renderCell","onDelete","CModalHeader","BMI","BPForm","RespirationRateForm","Spo2","Temperature","LFTForm","HeartRate","BSugar","LipidProfileForm","HCT","Hemogloin","BUricAcid","columnKey","renderPdf","contentUrl","_value$name","_value$status","formatDateTime","dateTimeString","renderActionButton","Warning","Approve","visibleEye","_dt$medicines","_dt$medicines2","_dt$medicines3","_dt$medicines4","dat","textTransform","UStatus","_dt$values$name","_dt$values2$name","_dt$values13","_dt$values14","_dt$values15","_dt$values16","_dt$values17","_dt$values18","_dt$values19","_dt$values20","_dt$values21","food_times","quantity","act_duration","act_intensity","mimeType","originalDateStr","toLocaleString","hour","minute","hour12"],"sourceRoot":""}