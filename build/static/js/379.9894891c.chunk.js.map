{"version":3,"file":"static/js/379.9894891c.chunk.js","mappings":"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","sources":["Components/Breadcrumb/Breadcrumb.jsx","Components/Buttons/PrimaryButton/PrimaryButton.jsx","Components/Dashboard/PatentProfile/PatentProfile.jsx","Components/Dashboard/PatientTabs/PatientTabs.jsx","Components/DoctorCards/DoctorCards.jsx","Components/FilterModal/FilterModal.jsx","Views/CallHistory/CallHistoryView.jsx","Components/Badge/Badge.jsx","Components/Charts/CardChart.jsx","Components/Dashboard/PatientTabs/VitalsTab/VitalsTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalTab.jsx","Components/Cards/Card.jsx","Components/Modal/Modal.jsx","Components/Tables/Table.jsx","Components/Buttons/ActiveButton/ActiveButton.jsx","Components/Charts/LineChart.jsx","Components/Charts/ColumnChartDetails.jsx","Components/Charts/ChartTab.jsx","Components/BlurBackground/BlurBackground.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm.jsx","Components/Tables/DynamicTable.jsx","Components/DateRangePicker/DateRangePicker.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/DetailPage/ObjectiveDetailPage.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/VitalSign/VitalSign.jsx","Components/DateRangePicker/DateSelector.jsx","Components/DateCards/DateCards.jsx","Components/Pagination/Pagination.jsx","Components/DateRangePicker/SingleDatePicker.jsx","Components/OptionItems/OptionItem.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/PhysicalExam/PhysicalExam.jsx","Components/SearchBar/SearchBar.jsx","Components/Tables/LabTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Lab/LabForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Lab/Lab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Objective.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalProfile.jsx","Components/Dashboard/PatientTabs/PairTab/PairTab.jsx","Views/Dashboard/PatientDetails/PatientDetailsView.jsx"],"sourcesContent":["import { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\nimport React from \"react\";\nimport \"./Breadcrumb.css\";\n\nconst Breadcrumb = ({ paths }) => {\n  const lastIndex = paths.length - 1;\n  const url = \"/telegaruda-caregiver\";\n  return (\n    <>\n      <CBreadcrumb>\n        {paths.map((data, index) => (\n          <CBreadcrumbItem\n            href={url + data?.to}\n            className={`breadcrumb-item-custom ${\n              lastIndex === index && \"black\"\n            }`}\n          >\n            <span className=\"breadcrumb-label\">{data.label}</span>\n          </CBreadcrumbItem>\n        ))}\n      </CBreadcrumb>\n    </>\n  );\n};\n\nexport default Breadcrumb;\n","import React from \"react\";\nimport \"./PrimaryButton.css\";\n\nconst PrimaryButton = ({ children, onClick }) => {\n  return (\n    <button className=\"button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default PrimaryButton;\n","import { CCard, CCardBody } from \"@coreui/react\";\nimport React from \"react\";\nimport \"./PatentProfile.css\";\nimport { Assets } from \"../../../assets/Assets\";\n\nconst PatentProfile = () => {\n  return (\n    <>\n      <CCard className=\"card-profile\">\n        <CCardBody className=\"d-flex gap-4\">\n          <div className=\"img-container\">\n            <img src={Assets.patient1} alt=\"profile-img\" />\n          </div>\n          <div className=\"user-details\">\n            <span className=\"user-title\">Ramesh H</span>\n            <div className=\"d-flex flex-wrap gap-2\">\n              <p className=\"user-email\">rammohan@cure.com</p>\n              <p className=\"user-email\">|</p>\n              <p className=\"user-email\">+91 98765 43210</p>\n            </div>\n            <div className=\"d-flex flex-wrap gap-2\">\n              <p className=\"user-email\">MRN: MRN 3</p>\n              <p className=\"user-email\">|</p>\n              <p className=\"user-email\">34 yrs (M)</p>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n    </>\n  );\n};\n\nexport default PatentProfile;\n","import { CCard, CCardBody } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport \"./PatientTabs.css\";\nimport { Assets } from \"../../../assets/Assets\";\n\nconst PatientTabs = ({ getCurrentTab }) => {\n  const tabs = [\n    {\n      id: 1,\n      title: \"Call\",\n      image: Assets.Call,\n    },\n    {\n      id: 2,\n      title: \"Medical Profile\",\n      image: Assets.Notes,\n    },\n\n    {\n      id: 3,\n      title: \"Camera Control\",\n      image: Assets.Camera,\n    },\n    {\n      id: 4,\n      title: \"Pair\",\n      image: Assets.Qr,\n    },\n  ];\n\n\n  const [currentTab, setCurrentTab] = useState(() => {\n    // Initial state setup using localStorage\n    const storedCount = localStorage.getItem(\"patiendDetailTab\");\n    return storedCount ? JSON.parse(storedCount) : tabs[0];\n  });\n\n  const switchTab = (data) => {\n    localStorage.setItem(\"patiendDetailTab\", JSON.stringify(data));\n    setCurrentTab(data);\n    getCurrentTab(data.id);\n  };\n  return (\n    <CCard className=\"card-tabs\">\n      <CCardBody className=\"tabs-container\">\n        {tabs.map((data, index) => (\n          <div\n            key={index}\n            className={`tab-items ${\n              data.id === currentTab?.id ? \"tab-active\" : \"\"\n            }`}\n            onClick={() => switchTab(data)}\n          >\n            <img src={data.image} alt=\"call\" className=\"tab-icon\" />\n            <span className=\"tab-title\">{data.title}</span>\n          </div>\n        ))}\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default PatientTabs;\n","import React from 'react'\nimport { Assets } from '../../assets/Assets'\n\nfunction DoctorCards({ DoctorDetail }) {\n    return (\n        <div className='card-sec'>\n            <div className='row align-items-center'>\n                <div className='profile col-4'>\n                    <img src={DoctorDetail.profile} alt=\"Patient-image\" />\n                </div>\n                <div className='patient-details col-8'>\n                    <h5>{DoctorDetail.name}</h5>\n                    <p className='flex-sec-wrap gap-sec'>\n                        <small className=\"fs-10 fw-500\">{DoctorDetail.email}</small>\n                        <small className=\"fs-10 fw-500\">|</small>\n                        <small className=\"fs-10 fw-500\">{DoctorDetail.mobile}</small>\n                    </p>\n                    <p className='flex-sec-wrap gap-sec'>\n                        <small className=\"fs-10 fw-600\">MRN: {DoctorDetail.mrn}</small>\n                        <small className=\"fs-10 fw-600\">|</small>\n                        <small className=\"fs-10 fw-600\">{DoctorDetail.age}</small>\n                    </p>\n                </div>\n            </div>\n            <img src={Assets.notes} className='edit-icon' alt=\"edit-icon\" />\n        </div>\n    )\n}\n\nexport default DoctorCards\n","import React, { useState } from 'react'\nimport { CModal, CModalBody, CModalHeader, CModalTitle, CButton, CModalFooter, CFormSelect, CRow, CCol } from '@coreui/react'\n// import { useState } from 'react'\nimport DatePicker from \"react-datepicker\";\n\nfunction FilterModal({ visible, setVisible }) {\n\n    const today = new Date();\n\n    const [startDate, setStartDate] = useState(today);\n    const [endDate, setEndDate] = useState(today);\n\n    function ClearFunction() {\n        setStartDate();\n        setEndDate();\n    }\n    return (\n        <CModal\n            visible={visible}\n            onClose={() => setVisible(false)}\n            aria-labelledby=\"LiveDemoExampleLabel\"\n            className='modal-cutomize'\n            backdrop=\"static\"\n        >\n            <CModalHeader>\n                <CModalTitle id=\"LiveDemoExampleLabel\">FILTER</CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n                <CFormSelect\n                    aria-label=\"Default select example\"\n                    options={[\n                        'Filter with Doctor',\n                        { label: 'Doctor One', value: '1' },\n                        { label: 'Doctor Two', value: '2' },\n                        { label: 'Dcotor Three', value: '3' }\n                    ]}\n                />\n                <CRow>\n                    <CCol lg={6} sm={12}>\n                        <p className='date-sec'>From Date</p>\n                        <DatePicker\n                            showIcon\n                            selected={startDate}\n                            onChange={(date) => setStartDate(date)}\n                            isClearable\n                            className=\"date-range-picker picker-sec\"\n                            dateFormat=\"MM/dd/yyyy\"\n                        />\n                    </CCol>\n                    <CCol lg={6} sm={12}>\n                        <p className='date-sec'>End Date</p>\n                        <DatePicker\n                            showIcon\n                            selected={endDate}\n                            onChange={(date) => setEndDate(date)}\n                            isClearable\n                            className=\"date-range-picker picker-sec\"\n                        />\n                    </CCol>\n                </CRow>\n            </CModalBody>\n            <CModalFooter>\n                <CButton color=\"secondary\" onClick={() => ClearFunction()} className='clear-filter-btn'>\n                    Clear Filter\n                </CButton>\n                <CButton color=\"primary\" className='apply-filter-sec' onClick={() => setVisible(false)}>Apply Filter</CButton>\n            </CModalFooter>\n        </CModal>\n    )\n}\n\nexport default FilterModal\n","import React from \"react\";\nimport PatentProfile from \"../../Components/Dashboard/PatentProfile/PatentProfile\";\nimport PatientTabs from \"../../Components/Dashboard/PatientTabs/PatientTabs\";\nimport { CCol, CRow } from \"@coreui/react\";\nimport { Assets } from \"../../assets/Assets\";\nimport { useState } from \"react\";\nimport DoctorCards from \"../../Components/DoctorCards/DoctorCards\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport FilterModal from '../../Components/FilterModal/FilterModal';\n\nfunction CallHistoryView() {\n\n  const [visible, setVisible] = useState(false)\n  const navigate = useNavigate();\n\n  const DoctorDetail = [\n    {\n      name: \"Ram Mohan S R\",\n      email: \"rammohan@cure.com\",\n      mobile: \"+91 98765 43210\",\n      mrn: \"MRN 3\",\n      age: \"34 yrs (M)\",\n      profile: Assets.Patient,\n    },\n    {\n      name: \"Ram Mohan S R\",\n      email: \"rammohan@cure.com\",\n      mobile: \"+91 98765 43210\",\n      mrn: \"MRN 3\",\n      age: \"34 yrs (M)\",\n      profile: Assets.Patient,\n    },\n    {\n      name: \"Ram Mohan S R\",\n      email: \"rammohan@cure.com\",\n      mobile: \"+91 98765 43210\",\n      mrn: \"MRN 3\",\n      age: \"34 yrs (M)\",\n      profile: Assets.Patient,\n    },\n    {\n      name: \"Ram Mohan S R\",\n      email: \"rammohan@cure.com\",\n      mobile: \"+91 98765 43210\",\n      mrn: \"MRN 3\",\n      age: \"34 yrs (M)\",\n      profile: Assets.Patient,\n    },\n  ];\n\n  const DetailSec = () => {\n    navigate(\"/patients/summary\");\n  };\n\n  return (\n    <section className=\"call-history-sec\">\n      <div className=\"flex-sec top-sec\">\n        <div className=\"bread-crumbs\">\n          <p className=\"mb-0\">\n            <Link to=\"/patients\">Patient</Link> /{\" \"}\n            <Link to=\"/patients\" className=\"active\">\n              Existing Patient\n            </Link>\n          </p>\n          <h4>Appointments - Call History</h4>\n        </div>\n        <div className=\"patient-adding\">\n          <button onClick={() => setVisible(!visible)}>\n            <img src={Assets.filter} alt=\"filter-sec\" className=\"filter-icon\" />{\" \"}\n            Filter\n          </button>\n        </div>\n      </div>\n      <div className=\"doctor-card-sec\">\n        <div className=\"row\">\n          {DoctorDetail.map((data, i) => (\n            <div className=\"col-4\" onClick={() => DetailSec()}>\n              <Link className=\"card-link\">\n                <DoctorCards DoctorDetail={data} />\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className='modal-sec'>\n        <FilterModal visible={visible} setVisible={setVisible} />\n      </div>\n    </section>\n  );\n}\n\nexport default CallHistoryView;\n","import React from \"react\";\n\nconst Badge = ({ label, color }) => {\n  return <div className={`badge badge-${color} fs-14 fw-500`}>{label}</div>;\n};\n\nexport default Badge;\n","import React from \"react\";\nimport { Line, LineChart, ResponsiveContainer, Tooltip, XAxis } from \"recharts\";\n\nconst CardChart = ({ datas }) => {\n  function removePercent(str) {\n    // Remove trailing percent sign (%) using String.replace() method\n    // Replace '%' with an empty string ''\n    return str?.replace(\"%\", \"\");\n  }\n\n  // Transform tableData to the desired format\n  const formattedData = datas?.tableData?.map((item) => {\n    const datePart = item?.date?.split(\" \")[0]; // Extract date part only\n\n    return {\n      name: datePart,\n      data1: parseInt(\n        item?.[\"blood_ketone_value\"] ||\n          item?.[\"hemoglobinValue\"] ||\n          item?.[\"bmi\"] ||\n          item?.[\"blood_sugar_value\"] ||\n          item?.[\"pulse_(in_bpm)\"] ||\n          item?.[\"heart_rate_(bpm)\"] ||\n          item?.[\"respiration_rate_(bpm)\"] ||\n          removePercent(item?.[\"spo2\"]) ||\n          removePercent(item?.[\"hct_rate\"]) ||\n          item?.[\"fvc_(l)\"] ||\n          item?.[\"totalOnly\"] ||\n          item?.[\"chartValue\"] ||\n          item?.[\"temperature_value\"] ||\n          item?.[\"blood_uric_acid_value\"] ||\n          item?.[\"urea_value\"] ||\n          item?.[\"creatinine_value\"] ||\n          item?.[\"gfr_value\"]\n      ),\n    };\n  });\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      return (\n        <div\n          style={{\n            backgroundColor: \"#fff\",\n            border: \"1px solid #ccc\",\n            padding: \"10px\",\n          }}\n        >\n          <h5>{payload[0].payload.name}</h5>\n          <p className=\"label\">{`${datas?.chartLabel1} : ${payload[0].value}`}</p>\n          {/* <p className=\"intro\">{getIntroOfPage(label)}</p> */}\n        </div>\n      );\n    }\n\n    return null;\n  };\n  return (\n    <>\n      <LineChart\n        width={250}\n        height={90}\n        data={formattedData}\n        margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\n      >\n        <Tooltip content={<CustomTooltip />} />\n        <Line\n          type=\"monotone\"\n          dataKey=\"data1\"\n          stroke=\"#0084CF\"\n          strokeWidth={2}\n        />\n      </LineChart>\n    </>\n  );\n};\n\nexport default CardChart;\n","import { CBadge, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport React from \"react\";\nimport \"./VitalsTab.css\";\nimport { Assets } from \"../../../../assets/Assets\";\nimport Badge from \"../../../Badge/Badge\";\nimport CardChart from \"../../../Charts/CardChart\";\n\nconst VitalsTab = ({ category, openModal }) => {\n  const data = [\n    {\n      id: 1,\n      icon: Assets.VitalBP,\n      name: \"Blood Pressure\",\n      date: \"Recently Added 27-03-2024\",\n      category: \"Primary Vitals\",\n      badge: [\n        { label: \"SYS : 112\", color: \"success\" },\n        { label: \"DIA : 71\", color: \"success\" },\n        { label: \"Pulse : 89\", color: \"success\" },\n      ],\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"SYSTOLIC\" },\n        { id: 4, label: \"DIASTOLIC\" },\n        { id: 5, label: \"PULSE (IN BPM)\" },\n        { id: 6, label: \"DATE\" },\n        { id: 7, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          systolic: \"112\",\n          diastolic: \"25\",\n          \"pulse_(in_bpm)\": \"89\",\n          chartLabel1: \"PULSE (IN BPM)\",\n          date: \"02-04-2024 12:13\",\n          action: [{ type: \"warning\" }],\n          name: \"Blood Pressure\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"error\",\n            name: \"High Blood Pressure (Hypertension) Stage 1\",\n          },\n          systolic: \"112\",\n          diastolic: \"25\",\n          \"pulse_(in_bpm)\": \"125\",\n          date: \"05-04-2024 13:15\",\n          action: [ { type: \"warning\" }],\n          name: \"Blood Pressure\",\n        },\n      ],\n      chartLabel1: \"PULSE (IN BPM)\",\n    },\n    {\n      id: 2,\n      icon: Assets.VitalBs,\n      name: \"Blood Sugar\",\n      category: \"Metabolic And Biochemical Profile\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"110 mg/DL\", color: \"success\" }],\n      chartLabel1: \"Blood Sugar\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"Blood Sugar\" },\n        { id: 4, label: \"Type\" },\n        { id: 5, label: \"DATE\" },\n        { id: 6, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          blood_sugar: \"110 mg/dL\",\n          blood_sugar_value: \"110\",\n          type: \"Random\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"Blood Sugar\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          blood_sugar: \"110 mg/dL\",\n          blood_sugar_value: \"110\",\n          type: \"Random\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"Blood Sugar\",\n        },\n      ],\n    },\n    {\n      id: 3,\n      icon: Assets.VitalBMI,\n      name: \"BMI\",\n      category: \"Primary Vitals\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"24.13\", color: \"success\" }],\n      chartLabel1: \"BMI\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"BMI\" },\n        { id: 4, label: \"Height\" },\n        { id: 5, label: \"Weight\" },\n        { id: 6, label: \"DATE\" },\n        { id: 7, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          bmi: \"24.13\",\n          height: \"159cm\",\n          weight: \"61kg\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"BMI\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"error\",\n            name: \"Overweight\",\n          },\n          bmi: \"27.01\",\n          height: \"180cm\",\n          weight: \"87.5kg\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"BMI\",\n        },\n      ],\n    },\n    {\n      id: 4,\n      icon: Assets.VitalHCT,\n      name: \"HCT\",\n      category: \"Hematologic Profile\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"23\", color: \"error\" }],\n      chartLabel1: \"HCT Rate (in %)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"HCT Rate\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          hct_rate: \"42%\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"HCT\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          hct_rate: \"45%\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"HCT\",\n        },\n      ],\n    },\n    {\n      id: 5,\n      icon: Assets.VitalHBeat,\n      name: \"Heart Rate\",\n      category: \"Primary Vitals\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"1 Bpm\", color: \"success\" }],\n      chartLabel1: \"Heart Rate (BPM)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"ECG RESULT\" },\n        { id: 3, label: \"ECG\" },\n        { id: 4, label: \"Heart Rate (BPM)\" },\n        { id: 5, label: \"DATE\" },\n        { id: 6, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          ecg_result: { status: \"error\", name: \"Abnormal Heart Rate\" },\n          ecg: \"ecg1.png\",\n          \"heart_rate_(bpm)\": \"120\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"Heart Rate\",\n        },\n        {\n          \"no.\": 2,\n          ecg_result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          ecg: \"ecg.png\",\n          \"heart_rate_(bpm)\": \"70\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"Heart Rate\",\n        },\n      ],\n    },\n    {\n      id: 6,\n      icon: Assets.VitalHae,\n      name: \"Hemoglobin\",\n      category: \"Hematologic Profile\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"1212\", color: \"error\" }],\n      chartLabel1: \"Hemoglobin (g/dL)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"Hemoglobin\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          hemoglobin: \"15 g/dL\",\n          hemoglobinValue: \"15\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"Hemoglobin\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          hemoglobin: \"15 g/dL\",\n          hemoglobinValue: \"15\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"Hemoglobin\",\n        },\n      ],\n    },\n    {\n      id: 7,\n      icon: Assets.BKetone,\n      name: \"Blood Ketone\",\n      category: \"Hematologic Profile\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"121\", color: \"error\" }],\n      chartLabel1: \"Blood Ketone (mmol/L)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"BLOOD KETONE\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          blood_ketone: \"0.33 mmol/L\",\n          blood_ketone_value: \"0.33\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"Blood Ketone\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"warning\",\n            name: \"Normal\",\n          },\n          blood_ketone: \"0.33 mmol/L\",\n          blood_ketone_value: \"0.33\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"Blood Ketone\",\n        },\n      ],\n    },\n    {\n      id: 8,\n      icon: Assets.VitalLipid,\n      name: \"Lipid Profile\",\n      category: \"Metabolic And Biochemical Profile\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [\n        { label: \"LDL: Optimal\", color: \"success\" },\n        { label: \"MDL: High\", color: \"error\" },\n        { label: \"VLDL: High\", color: \"error\" },\n        { label: \"TG: Optimal\", color: \"error\" },\n        { label: \"Total: Optimal\", color: \"success\" },\n      ],\n      chartLabel1: \"Lipid Profile (mg/dL)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"Total\" },\n        { id: 4, label: \"Triglycerides\" },\n        { id: 5, label: \"HDL\" },\n        { id: 6, label: \"LDL\" },\n        { id: 7, label: \"HDL/LDL\" },\n        { id: 8, label: \"VLDL\" },\n        { id: 9, label: \"DATE\" },\n        { id: 10, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          total: \"180 mg/dL\",\n          totalOnly: \"180\",\n          triglycerides: \"140 mg/dL\",\n          hdl: \"60 mg/dL\",\n          ldl: \"60 mg/dL\",\n          \"hdl/ldl\": \"1\",\n          vldl: \"5 mg/dL\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"Lipid Profile\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          total: \"180 mg/dL\",\n          totalOnly: \"190\",\n          triglycerides: \"140 mg/dL\",\n          hdl: \"60 mg/dL\",\n          ldl: \"60 mg/dL\",\n          \"hdl/ldl\": \"1\",\n          vldl: \"5 mg/dL\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"Lipid Profile\",\n        },\n      ],\n    },\n    {\n      id: 9,\n      icon: Assets.VitalRespi,\n      name: \"Respiration Rate\",\n      category: \"Primary Vitals\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"44\", color: \"error\" }],\n      chartLabel1: \"Respiration Rate (BPM)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"Respiration Rate (BPM)\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"error\", name: \"High\" },\n          \"respiration_rate_(bpm)\": \"44\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"Respiration Rate\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          \"respiration_rate_(bpm)\": \"18\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"Respiration Rate\",\n        },\n      ],\n    },\n    {\n      id: 10,\n      icon: Assets.SpO2,\n      name: \"SpO2\",\n      category: \"Primary Vitals\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"92%\", color: \"success\" }],\n      chartLabel1: \"SpO2 (%)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"Pulse Rate (BPM)\" },\n        { id: 4, label: \"SpO2\" },\n        { id: 5, label: \"DATE\" },\n        { id: 6, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"error\", name: \"Abnormal\" },\n          \"pulse_rate_(bpm)\": \"120\",\n          spo2: \"99%\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"SpO2\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          spo2: \"90%\",\n          \"pulse_rate_(bpm)\": \"70\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"SpO2\",\n        },\n      ],\n    },\n    {\n      id: 11,\n      icon: Assets.Temp,\n      name: \"Temperature\",\n      category: \"Primary Vitals\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"36.6*C\", color: \"success\" }],\n      chartLabel1: \"Temperature (°F)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"Temperature\" },\n        { id: 4, label: \"Type\" },\n        { id: 5, label: \"DATE\" },\n        { id: 6, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          temperature: \"96.80 ° F, 36 ° C\",\n          temperature_value: \"96.8\",\n          type: \"Oral\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"Temperature\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          temperature: \"97.88 ° F, 36.6 ° C\",\n          temperature_value: \"97.8\",\n          type: \"Oral\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"Temperature\",\n        },\n      ],\n    },\n    {\n      id: 12,\n      icon: Assets.LFT,\n      name: \"Lung Function Test (LFT)\",\n      date: \"Recently Added 27-03-2024\",\n      category: \"Primary Vitals\",\n      chartLabel1: \"FVC (L)\",\n      badge: [\n        { label: \"FEV1: 1L\", color: \"error\" },\n        { label: \"FVC: 1L\", color: \"error\" },\n        { label: \"FEV1/FVC: 40\", color: \"error\" },\n        { label: \"PEF: 1L/min\", color: \"error\" },\n      ],\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"FVC (L)\" },\n        { id: 3, label: \"FEV1 (L)\" },\n        { id: 4, label: \"FEV1/FVC\" },\n        { id: 5, label: \"PEF (L/MIN)\" },\n        { id: 6, label: \"SVC (L)\" },\n        { id: 7, label: \"DATE\" },\n        { id: 8, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          \"fvc_(l)\": \"5.94\",\n          \"fev1_(l)\": \"2.45\",\n          \"fev1/fvc\": \"41\",\n          \"pef_(l/min)\": \"2.62\",\n          \"svc_(l)\": \"3.51\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"Lung Function Test (LFT)\",\n        },\n        {\n          \"no.\": 2,\n          \"fvc_(l)\": \"6.94\",\n          \"fev1_(l)\": \"2.45\",\n          \"fev1/fvc\": \"41\",\n          \"pef_(l/min)\": \"2.62\",\n          \"svc_(l)\": \"3.51\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"Lung Function Test (LFT)\",\n        },\n      ],\n    },\n    {\n      id: 13,\n      icon: Assets.BUAcid,\n      name: \"Blood Uric Acid\",\n      category: \"Hematologic Profile\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"6mg/dl\", color: \"error\" }],\n      chartLabel1: \"Blood Uric Acid (mg/dL)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"BLOOD URIC ACID\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          blood_uric_acid: \"5 mg/dL\",\n          blood_uric_acid_value: \"5\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"Blood Uric Acid\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"warning\",\n            name: \"Normal\",\n          },\n          blood_uric_acid: \"5 mg/dL\",\n          blood_uric_acid_value: \"5\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"Blood Uric Acid\",\n        },\n      ],\n    },\n    {\n      id: 14,\n      icon: Assets.Urinalysis,\n      name: \"Urinalysis\",\n      category: \"Renal and Metabolic Markers\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"100pmol/d\", color: \"error\" }],\n      chartLabel1: \"Urine (μmol/kg/d)\",\n      chartLabel2: \"ph\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"URINE\" },\n        { id: 4, label: \"PH\" },\n        { id: 5, label: \"SUGAR\" },\n        { id: 6, label: \"PROTEIN\" },\n        { id: 7, label: \"LEUKOCYTES\" },\n        { id: 8, label: \"RBC\" },\n        { id: 9, label: \"DATE\" },\n        { id: 10, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          urine: \"100 μmol/kg/d\",\n          chartValue: \"100\",\n          ph: \"17.5\",\n          sugar: \"0.8 mmol/L\",\n          protein: \"None\",\n          leukocytes: \"None\",\n          rbc: \"None\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"Urinalysis\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          urine: \"110 μmol/kg/d\",\n          chartValue: \"110\",\n          ph: \"6.5\",\n          sugar: \"0.8 mmol/L\",\n          protein: \"None\",\n          leukocytes: \"None\",\n          rbc: \"None\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"Urinalysis\",\n        },\n      ],\n    },\n    {\n      id: 15,\n      icon: Assets.Urea,\n      name: \"Urea\",\n      date: \"Recently Added 27-03-2024\",\n      category: \"Renal and Metabolic Markers\",\n      badge: [{ label: \"20mg/dl\", color: \"error\" }],\n      chartLabel1: \"Urea (mg/dL)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"UREA\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          urea: \"20 mg/dL\",\n          urea_value: \"20\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"Urea\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"warning\",\n            name: \"Normal\",\n          },\n          urea: \"20 mg/dL\",\n          urea_value: \"20\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"Urea\",\n        },\n      ],\n    },\n    {\n      id: 16,\n      icon: Assets.Creatinine,\n      name: \"Creatinine\",\n      category: \"Renal and Metabolic Markers\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"85pmol/L\", color: \"error\" }],\n      chartLabel1: \"Creatinine (μmol/L)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"CREATININE\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          creatinine: \"88 μmol/L\",\n          creatinine_value: \"88\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"Creatinine\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"warning\",\n            name: \"Normal\",\n          },\n          creatinine: \"88 μmol/L\",\n          creatinine_value: \"88\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"Creatinine\",\n        },\n      ],\n    },\n    {\n      id: 17,\n      icon: Assets.GFR,\n      name: \"GFR\",\n      category: \"Renal and Metabolic Markers\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"90ml/min\", color: \"error\" }],\n      chartLabel1: \"GFR (ml/min)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"GFR\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          gfr: \"90 mL/min\",\n          gfr_value: \"90\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n          name: \"GFR\",\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"warning\",\n            name: \"Normal\",\n          },\n          gfr: \"90 mL/min\",\n          gfr_value: \"90\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n          name: \"GFR\",\n        },\n      ],\n    },\n  ];\n\n  const filteredProducts = data.filter(\n    (product) => product.category === category\n  );\n  return (\n    <>\n      <CRow className=\"mb-1\">\n        <CCol md={12}>\n          <CRow className=\"mt-3 \">\n            {filteredProducts?.map((item, index) => (\n              <CCol md={6} xl={4} key={index} className=\"mb-3\">\n                <CCard className=\"vital-cards\" onClick={() => openModal(item)}>\n                  <CCardBody>\n                    <div className=\"vital-icon-and-title\">\n                      <div>\n                        <img alt=\"bp\" src={item.icon} />\n                      </div>\n                      <div className=\"vital-card-title\">\n                        <span className=\"vital-card-text-bold\">\n                          {item.name}\n                        </span>\n                        <span className=\"vital-card-text\">{item.date}</span>\n                      </div>\n                    </div>\n                    <div className=\"vital-badge\">\n                      <div className=\"vital-badge-list\">\n                        {item.badge.map((dt, i) => (\n                          <div key={i} style={{ height: \"24px\" }}>\n                            <Badge label={dt?.label} color={dt?.color} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                    <div className=\"vital-line-container\">\n                      {/* <img alt=\"line\" src={Assets.Vitalline} /> */}\n                      <CardChart datas={item} />\n                    </div>\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            ))}\n          </CRow>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default VitalsTab;\n","import { CCard, CCardBody } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport \"./MedicalProfile.css\";\n\nconst MedicalTab = ({ tabs, getCurrentTab, defaultTab }) => {\n  const [currentTab, setCurrentTab] = useState(tabs[defaultTab]);\n\n  const switchTab = (data) => {\n    setCurrentTab(data);\n    getCurrentTab(data.id);\n  };\n  return (\n    <CCard className=\"medical-tabs\">\n      <CCardBody className=\"medical-tabs-container\">\n        {tabs.map((data, index) => (\n          <div\n            key={index}\n            className={`medical-tab-items ${\n              data.id === currentTab?.id ? \"medical-tab-active\" : \"\"\n            }`}\n            onClick={() => switchTab(data)}\n          >\n            <span\n              className={\n                data.id === currentTab?.id\n                  ? \"medical-tab-title-active\"\n                  : \"medical-tab-title\"\n              }\n            >\n              {data.title}\n            </span>\n          </div>\n        ))}\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default MedicalTab;\n","import { CCard, CCardBody } from \"@coreui/react\";\nimport React from \"react\";\nimport \"./Cards.css\";\n\nconst Card = ({ data, getSelectedData }) => {\n  return (\n    <>\n      <CCard className=\"card\" onClick={() => getSelectedData(data)}>\n        <CCardBody\n          key={data.id}\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n        >\n          <img alt=\"images\" src={data?.image} />\n          <span className=\"mt-2 card-text-title\">{data?.name}</span>\n        </CCardBody>\n      </CCard>\n    </>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./Modal.css\"; // Import your CSS file for styling modal (optional)\nimport { CModal, CModalBody } from \"@coreui/react\";\nimport { Assets } from \"../../assets/Assets\";\n\nconst Modal = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n\n  return (\n    <CModal\n      visible={isOpen}\n      onClose={onClose}\n      aria-labelledby=\"LiveDemoExampleLabel\"\n      alignment=\"center\"\n      size=\"lg\"\n    >\n      <CModalBody className=\"p-0\">\n        <div className=\"close-modal\" onClick={onClose}>\n          <img\n            src={Assets.CloseBtn}\n            alt=\"close-btn\"\n            style={{ width: \"100%\" }}\n          />{\" \"}\n        </div>\n        <div>{children}</div>\n      </CModalBody>\n    </CModal>\n  );\n};\n\nexport default Modal;\n","import {\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport React from \"react\";\nimport Badge from \"../Badge/Badge\";\nimport { Assets } from \"../../assets/Assets\";\n\nconst Table = ({ columns, rowData, data }) => {\n  const formattedColumns = data?.columnsData.map((column) => ({\n    ...column,\n    accessor: column.label.toLowerCase().replace(/\\s/g, \"_\"), // Create accessor for dynamic data access\n  }));\n\n  // Handle potential missing rows\n  const formattedData = data?.tableData.map((row) => {\n    return formattedColumns.reduce((acc, column) => {\n      const value = row[column.label.toLowerCase().replace(/\\s/g, \"_\")]; // Access data based on accessor\n      acc[column.accessor === \"ecg_result\" ? \"result\" : column.accessor] =\n        value || \"-\"; // Set default value if data is missing\n      return acc;\n    }, {});\n  });\n\n  console.log(data, formattedColumns, \"first formattedData\", formattedData);\n\n  return (\n    // <>\n    //   <CTable className=\"responsive-table\">\n    //     <CTableHead color=\"dark\">\n    //       <CTableRow>\n    //         {columns?.map((data, i) => (\n    //           <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\n    //         ))}\n    //       </CTableRow>\n    //     </CTableHead>\n    //     <CTableBody>\n    //       {rowData?.map((dt, i) => (\n    //         <CTableRow key={i}>\n    //           <CTableHeaderCell>{dt?.id}</CTableHeaderCell>\n    //           <CTableDataCell>\n    //             <Badge label={dt?.result?.name} color={dt?.result?.status} />\n    //           </CTableDataCell>\n    //           <CTableDataCell>{dt?.systolic}</CTableDataCell>\n    //           <CTableDataCell>{dt?.diastolic}</CTableDataCell>\n    //           <CTableDataCell>{dt?.pluse}</CTableDataCell>\n    //           <CTableDataCell>{dt?.date}</CTableDataCell>\n    //           <CTableDataCell>{dt?.diastolic}</CTableDataCell>\n    //         </CTableRow>\n    //       ))}\n    //     </CTableBody>\n    //   </CTable>\n    // </>\n    <>\n      <div className=\"responsive-table-container\">\n        <table class=\"responsive-table\">\n          <thead>\n            <tr>\n              {formattedColumns?.map((data, i) => (\n                <th key={i}>{data?.label}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {formattedData?.map((dt, i) => (\n              <tr key={i}>\n                <td>{dt?.id}</td>\n                <td>\n                  <div style={{ width: \"180px\" }}>\n                    <Badge\n                      label={dt?.result?.name}\n                      color={dt?.result?.status}\n                    />\n                  </div>\n                </td>\n                <td>\n                  <span className=\"fs-16 fw-500\">{dt?.systolic}</span>\n                </td>\n                <td>\n                  <span className=\"fs-16 fw-500\">{dt?.diastolic}</span>\n                </td>\n                <td>\n                  <span className=\"fs-16 fw-500\">{dt?.pluse}</span>\n                </td>\n                <td>\n                  <div style={{ width: \"100px\" }}>\n                    <div className=\"table-content fs-16 fw-500\">{dt?.date}</div>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex gap-2\">\n                    {dt?.action?.map((data, i) => (\n                      <div className=\"d-flex\">\n                        {data.type === \"warning\" && (\n                          <img\n                            src={Assets.Warning}\n                            alt=\"warn\"\n                            className=\"cursor\"\n                          />\n                        )}\n                        {data.type === \"edit\" && (\n                          <img\n                            src={Assets.EditPencil}\n                            alt=\"warn\"\n                            className=\"cursor\"\n                          />\n                        )}\n                        {data.type === \"delete\" && (\n                          <img\n                            src={Assets.Delete}\n                            alt=\"warn\"\n                            className=\"cursor\"\n                          />\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </td>\n              </tr>\n            ))}\n            \n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport \"./ActiveButton.css\";\n\nconst ActiveButton = ({ children, onClick }) => {\n  return (\n    <button className=\"act-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default ActiveButton;\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nconst LineChartDetails = ({ datas }) => {\n  function removePercent(str) {\n    // Remove trailing percent sign (%) using String.replace() method\n    // Replace '%' with an empty string ''\n    return str?.replace(\"%\", \"\");\n  }\n\n  // Transform tableData to the desired format\n  const formattedData = datas?.tableData?.map((item) => ({\n    name: item?.date?.split(\" \")[0], // Extract date part only\n    data1: parseInt(\n      item?.[\"blood_ketone_value\"] ||\n        item?.[\"hemoglobinValue\"] ||\n        item?.[\"bmi\"] ||\n        item?.[\"blood_sugar_value\"] ||\n        item?.[\"pulse_(in_bpm)\"] ||\n        item?.[\"heart_rate_(bpm)\"] ||\n        item?.[\"respiration_rate_(bpm)\"] ||\n        removePercent(item?.[\"spo2\"]) ||\n        removePercent(item?.[\"hct_rate\"]) ||\n        item?.[\"fvc_(l)\"] ||\n        item?.[\"totalOnly\"] ||\n        item?.[\"chartValue\"] ||\n        item?.[\"temperature_value\"] ||\n        item?.[\"blood_uric_acid_value\"] ||\n        item?.[\"urea_value\"] ||\n        item?.[\"creatinine_value\"] ||\n        item?.[\"gfr_value\"]\n    ), // Convert pluse to integer if needed\n    data2: parseInt(item?.[\"ph\"] ? item?.[\"ph\"] : \"\"),\n  }));\n\n  const data = [\n    {\n      name: \"21-03-2024\",\n      amt: 70,\n    },\n    {\n      name: \"22-03-2024\",\n      amt: 70,\n    },\n    {\n      name: \"23-03-2024\",\n      amt: 100,\n    },\n    {\n      name: \"24-03-2024\",\n      amt: 95,\n    },\n    {\n      name: \"25-03-2024\",\n      amt: 70,\n    },\n    {\n      name: \"26-03-2024\",\n      amt: 77,\n    },\n    {\n      name: \"27-03-2024\",\n      amt: 100,\n    },\n  ];\n\n  const minValue = Math?.min(...formattedData?.map((item) => item.data1));\n  const maxValue = Math?.max(\n    ...formattedData?.map((item) =>\n      !isNaN(item?.data1) ? item?.data1 : -Infinity\n    )\n  );\n  // Custom tooltip formatter function\n  const tooltipFormatter = (value, name, props) => {\n    if (name === \"data1\") {\n      return [value, datas?.chartLabel1];\n    }\n    if (name === \"data2\") {\n      return [value, datas?.chartLabel2];\n    }\n    return [name, value];\n  };\n\n  return (\n    <LineChart\n      width={750}\n      height={300}\n      data={formattedData}\n      margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\n    >\n      <XAxis\n        dataKey=\"name\"\n        padding={{ left: 30, right: 30, bottom: 20 }}\n        axisLine={false}\n        tickLine={false}\n      />\n      <YAxis\n        yMax={Math.min(...formattedData?.map((item) => item?.data1))}\n        domain={[minValue, maxValue + 10]}\n        axisLine={false}\n        tickLine={false}\n      />\n      <Tooltip formatter={tooltipFormatter} />\n      {!formattedData[0].data2 ? (\n        <Legend\n          payload={[\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\n          ]}\n        />\n      ) : (\n        <Legend\n          payload={[\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\n            { value: datas?.chartLabel2, type: \"line\", color: \"#0194CF\" },\n          ]}\n        />\n      )}\n      <CartesianGrid horizontal={true} vertical={false} strokeWidth={1} />\n      <Line type=\"linear\" dataKey=\"data1\" stroke=\"#0084CF\" />\n      {formattedData[0].data2 && (\n        <Line type=\"linear\" dataKey=\"data2\" stroke=\"#0194CF\" />\n      )}\n    </LineChart>\n  );\n};\n\nexport default LineChartDetails;\n","import React from \"react\";\nimport {\n  Bar,\n  BarChart,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nconst ColumnChartDetails = ({ datas }) => {\n  function removePercent(str) {\n    // Remove trailing percent sign (%) using String.replace() method\n    // Replace '%' with an empty string ''\n    return str?.replace(\"%\", \"\");\n  }\n  // Transform tableData to the desired format\n  const formattedData = datas?.tableData?.map((item) => ({\n    name: item?.date.split(\" \")[0],\n    data1: parseInt(\n      item?.[\"blood_ketone_value\"] ||\n        item?.[\"hemoglobinValue\"] ||\n        item?.[\"bmi\"] ||\n        item?.[\"blood_sugar_value\"] ||\n        item?.[\"pulse_(in_bpm)\"] ||\n        item?.[\"heart_rate_(bpm)\"] ||\n        item?.[\"respiration_rate_(bpm)\"] ||\n        removePercent(item?.[\"spo2\"]) ||\n        removePercent(item?.[\"hct_rate\"]) ||\n        item?.[\"fvc_(l)\"] ||\n        item?.[\"totalOnly\"] ||\n        item?.[\"chartValue\"] ||\n        item?.[\"temperature_value\"] ||\n        item?.[\"blood_uric_acid_value\"] ||\n        item?.[\"urea_value\"] ||\n        item?.[\"creatinine_value\"] ||\n        item?.[\"gfr_value\"]\n    ),\n    data2: parseInt(item?.[\"ph\"] ? item?.[\"ph\"] : \"\"),\n  }));\n  const data = [\n    {\n      name: \"21-03-2024\",\n      bloodPressure: 70,\n    },\n    {\n      name: \"22-03-2024\",\n      bloodPressure: 70,\n    },\n    {\n      name: \"23-03-2024\",\n      bloodPressure: 100,\n    },\n    {\n      name: \"24-03-2024\",\n      bloodPressure: 95,\n    },\n    {\n      name: \"25-03-2024\",\n      bloodPressure: 70,\n    },\n    {\n      name: \"26-03-2024\",\n      bloodPressure: 77,\n    },\n    {\n      name: \"27-03-2024\",\n      bloodPressure: 100,\n    },\n  ];\n  const minValue = Math?.min(...formattedData?.map((item) => item.data1));\n  const maxValue = Math?.max(\n    ...formattedData?.map((item) =>\n      !isNaN(item?.data1) ? item?.data1 : -Infinity\n    )\n  );\n  const bloodPressureValues = new Set(\n    formattedData?.map((item) => datas?.name)\n  ); // Create a Set with \"Blood Pressure\"\n\n  const tooltipFormatter = (value, name, props) => {\n    if (name === \"data1\") {\n      return [value, datas?.chartLabel1];\n    }\n    if (name === \"data2\") {\n      return [value, datas?.chartLabel2];\n    }\n    return [name, value];\n  };\n  return (\n    <BarChart\n      width={720}\n      height={300}\n      data={formattedData}\n      margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\n    >\n      <XAxis dataKey=\"name\" padding={{ left: 30, right: 30 }} />\n      <YAxis domain={[0, maxValue + 10]} axisLine={false} tickLine={false} />\n      {/* {datas.name === \"SpO2\" ? (\n        <Tooltip formatter={(value) => `${value}%`} />\n      ) : ( */}\n      <Tooltip formatter={tooltipFormatter} />\n      {/* )} */}\n      {/* <Legend\n        payload={[...bloodPressureValues]?.map((value) => ({\n          id: value, // Set id (optional)\n          value: value, // Legend label\n          color: \"#0084CF\",\n        }))}\n      /> */}\n\n      {!formattedData[0].data2 ? (\n        <Legend\n          payload={[{ value: datas?.name, type: \"square\", color: \"#0084CF\" }]}\n        />\n      ) : (\n        <Legend\n          payload={[\n            { value: datas?.chartLabel1, type: \"square\", color: \"#0084CF\" },\n            { value: datas?.chartLabel2, type: \"square\", color: \"#0194CF\" },\n          ]}\n        />\n      )}\n      <Bar dataKey=\"data1\" fill=\"#0084CF\" />\n      {formattedData[0].data2 && <Bar dataKey=\"data2\" fill=\"#0094CF\" />}\n    </BarChart>\n  );\n};\n\nexport default ColumnChartDetails;\n","import React, { useState } from \"react\";\nimport LineChartDetails from \"./LineChart\";\nimport ColumnChartDetails from \"./ColumnChartDetails\";\n\nconst ChartTab = ({ data }) => {\n  console.log(data, \"data d\");\n  const tabs = [\n    {\n      id: 1,\n      title: \"LINE\",\n    },\n    {\n      id: 2,\n      title: \"COLUMN\",\n    },\n  ];\n  const [currentTab, setCurrentTab] = useState(tabs[0]);\n\n  const switchTab = (data) => {\n    setCurrentTab(data);\n  };\n  return (\n    <div>\n      <div className=\"chart-tabs-container mb-3\">\n        {tabs.map((data, index) => (\n          <div\n            key={index}\n            className={`chart-tab-items ${\n              data.id === currentTab?.id ? \"chart-tab-active\" : \"\"\n            }`}\n            onClick={() => switchTab(data)}\n          >\n            <span\n              className={`chart-tab-title ${\n                data.id === currentTab?.id ? \"chart-tab-title-active\" : \"\"\n              }`}\n            >\n              {data.title}\n            </span>\n          </div>\n        ))}\n      </div>\n      <div className=\"mt-2\">\n        {currentTab?.id === 1 && <LineChartDetails datas={data} />}\n        {currentTab?.id === 2 && <ColumnChartDetails datas={data}/>}\n      </div>\n    </div>\n  );\n};\n\nexport default ChartTab;\n","import React from 'react';\n\nconst BlurBackground = ({ children }) => {\n  return <div className=\"blur-background\">{children}</div>;\n};\n\nexport default BlurBackground;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst RespirationRateForm = ({ addBack, defaultData }) => {\n  // const [selectedDate, setSelectedDate] = useState(new Date());\n  // const [selectedTime, setSelectedTime] = useState(new Date());\n\n  // const handleDateChange = (date) => {\n  //   setSelectedDate(date);\n  // };\n\n  // const handleTimeChange = (date) => {\n  //   setSelectedTime(date);\n  // };\n\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Respiration Rate(BPM) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.[\"respiration_rate_(bpm)\"]}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default RespirationRateForm;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst Spo2 = ({ addBack, defaultData }) => {\n\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || '';\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Pulse Rate(BPM) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.[\"pulse_rate_(bpm)\"]}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                SpO2 (%) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.spo2)}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default Spo2;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst Temperature = ({ addBack, defaultData }) => {\n\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Type *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.type}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={'F'}\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Temperature *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.temperature_value}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default Temperature;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst LFTForm = ({ addBack, defaultData }) => {\n  console.log(\"first\", defaultData);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                FVC (L) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.[\"fvc_(l)\"]}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                FEV1 (L) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.[\"fev1_(l)\"]}\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                FEV1/FVC Ratio *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.[\"fev1/fvc\"]}\n\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                PEF (L/Min) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.[\"pef_(l/min)\"]}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                SVC (L) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.[\"svc_(l)\"]}\n              />\n            </div>\n          </CCol>\n          <CCol lg={8}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Notes *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default LFTForm;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst HeartRate = ({ addBack, defaultData }) => {\n\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Heart Rate *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.[\"heart_rate_(bpm)\"]}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                ECG *\n              </label>\n              <input type=\"file\" id=\"file\" />\n              <label for=\"file\">Choose file</label>\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1 justify-content-center h-100\">\n              {defaultData?.ecg ? (\n                <span className=\"mt-2\">{defaultData?.ecg}</span>\n              ) : (\n                <span className=\"mt-2\">No File Chosen</span>\n              )}\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default HeartRate;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst BSugar = ({ addBack, defaultData }) => {\n  console.log(\"first\", defaultData);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Type *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.type}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={'mg/dL'}\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Blood Sugar *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.blood_sugar_value}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default BSugar;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst LipidProfileForm = ({ addBack, defaultData }) => {\n\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Result *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                placeholder=\"Enter\"\n                defaultValue={defaultData?.result?.name}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (Total) *\n              </label>\n              <select\n                class=\"form-select\"\n                aria-label=\"Disabled select example\"\n                defaultValue={\"mg/dL\"}\n              >\n                <option value=\"dL\">dL</option>\n                <option value=\"mg\">mg</option>\n                <option value=\"mg/dL\">mg/dL</option>\n              </select>\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Total *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.totalOnly}\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (Triglycerides) *\n              </label>\n              <select\n                class=\"form-select\"\n                aria-label=\"Disabled select example\"\n                defaultValue={\"mg/dL\"}\n              >\n                <option value=\"dL\">dL</option>\n                <option value=\"mg\">mg</option>\n                <option value=\"mg/dL\">mg/dL</option>\n              </select>\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Triglycerides *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.triglycerides)}\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (HDL) *\n              </label>\n              <select\n                class=\"form-select\"\n                aria-label=\"Disabled select example\"\n                defaultValue={\"mg/dL\"}\n              >\n                <option value=\"dL\">dL</option>\n                <option value=\"mg\">mg</option>\n                <option value=\"mg/dL\">mg/dL</option>\n              </select>\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                HDL *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.hdl)}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (LDL) *\n              </label>\n              <select\n                class=\"form-select\"\n                aria-label=\"Disabled select example\"\n                defaultValue={\"mg/dL\"}\n              >\n                <option value=\"dL\">dL</option>\n                <option value=\"mg\">mg</option>\n                <option value=\"mg/dL\">mg/dL</option>\n              </select>\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                LDL *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.ldl)}\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                HDL/LDL *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.[\"hdl/ldl\"])}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (VLDL) *\n              </label>\n              <select\n                class=\"form-select\"\n                aria-label=\"Disabled select example\"\n                defaultValue={\"mg/dL\"}\n              >\n                <option value=\"dL\">dL</option>\n                <option value=\"mg\">mg</option>\n                <option value=\"mg/dL\">mg/dL</option>\n              </select>\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                VLDL *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.[\"vldl\"])}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default LipidProfileForm;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst HCT = ({ addBack, defaultData }) => {\n  console.log(\"first\", defaultData);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                HCT(%) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.hct_rate)}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default HCT;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst Hemogloin = ({ addBack, defaultData }) => {\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Hemogloin(g/dL) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.hemoglobin)}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default Hemogloin;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst BKetone = ({ addBack, defaultData }) => {\n  console.log(\"first\", defaultData);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Blood Ketone(mmol/L) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.blood_ketone)}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default BKetone;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst BUricAcid = ({ addBack, defaultData }) => {\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Blood Uric Acid(mg/dL) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.blood_uric_acid)}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default BUricAcid;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst GFR = ({ addBack, defaultData }) => {\n\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                GFR(mL/min) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.gfr)}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default GFR;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst Creatinine = ({ addBack, defaultData }) => {\n\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Creatinine(μmol/L) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.creatinine)}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default Creatinine;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst Urea = ({ addBack, defaultData }) => {\n  console.log(\"first\", defaultData);\n\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Urea(mg/dL) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.urea)}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default Urea;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst Urinalysis = ({ addBack, defaultData }) => {\n  console.log(\"first\", defaultData);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Urine (μmol/kg/d)*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.urine)}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Urine (pH)*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.ph}\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Sugar (mg/dL)*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.sugar}\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Protein*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.protein}\n\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Leukocytes*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.leukocytes}\n\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                RBC*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.rbc}\n\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default Urinalysis;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst BMI = ({ addBack, defaultData }) => {\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (Height)*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={\"cm\"}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Height *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.height)}\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (Weight)*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={\"kg\"}\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Weight *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={extractNum(defaultData?.weight)}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                BMI *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.bmi}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default BMI;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst BPForm = ({ addBack, defaultData }) => {\n  console.log(\"first\", defaultData);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\n    const parseDateString = (dateString) => {\n      const parts = dateString?.split(\" \");\n      const datePart = parts[0];\n      const timePart = parts[1];\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\n      return new Date(year, month - 1, day, hours, minutes);\n    };\n\n    // Example default date string\n    const defaultDateString = defaultData?.date;\n\n    // Parse default date string to Date object\n    const defaultDate = defaultData\n      ? parseDateString(defaultDateString)\n      : new Date();\n\n    // Set default date in state\n    setSelectedDate(defaultDate);\n    setSelectedTime(defaultDate);\n  }, [defaultData]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  const extractNum = (data) => {\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\n\n    return numbers || \"\";\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Systolic *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.systolic}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={6}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Diastolic *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.diastolic}\n              />\n            </div>\n          </CCol>\n          <CCol lg={6}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Pulse (in BPM) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                defaultValue={defaultData?.[\"pulse_(in_bpm)\"]}\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default BPForm;\n","import React, { useState } from \"react\";\nimport Badge from \"../Badge/Badge\";\nimport { Assets } from \"../../assets/Assets\";\nimport { CModal, CModalBody, CModalHeader } from \"@coreui/react\";\nimport BlurBackground from \"../BlurBackground/BlurBackground\";\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../Buttons/SecondaryButton/SecondaryButton\";\nimport RespirationRateForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm\";\nimport Spo2 from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2\";\nimport Temperature from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature\";\nimport LFTForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm\";\nimport HeartRate from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate\";\nimport BSugar from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar\";\nimport LipidProfileForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm\";\nimport HCT from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT\";\nimport Hemogloin from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin\";\nimport BKetone from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone\";\nimport BUricAcid from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid\";\nimport GFR from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR\";\nimport Creatinine from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine\";\nimport Urea from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea\";\nimport Urinalysis from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis\";\nimport BMI from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI\";\nimport BPForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm\";\n\nconst DynamicTable = ({ columnsData, tableData }) => {\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n  const [selectedData, setSelectedData] = useState(\"\");\n\n  const deleteData = (data) => {\n    if (data) {\n      setDeleteModal(true);\n    }\n  };\n\n  const editData = (data) => {\n    setSelectedData(data);\n    if (data) {\n      setEditModal(true);\n    }\n  };\n  return (\n    <>\n      <div className=\"responsive-table-container\">\n        <table class=\"responsive-table\">\n          <thead>\n            <tr>\n              {columnsData?.map((column) => (\n                <th key={column.id}>{column.label}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {tableData?.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                {columnsData.map((column) => (\n                  <td key={`${rowIndex}-${column?.id}`}>\n                    {renderCell(row, column)}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Delete Modal */}\n      {deleteModal && (\n        <BlurBackground>\n          <CModal\n            alignment=\"center\"\n            visible={deleteModal}\n            onClose={() => setDeleteModal(false)}\n            aria-labelledby=\"VerticallyCenteredExample\"\n          >\n            <CModalBody className=\"p-3\">\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\n                <h5>Are you sure want to delete ?</h5>\n                <div className=\"d-flex gap-2 mt-2\">\n                  <div style={{ width: \"80px\" }}>\n                    <PrimaryButton onClick={() => setDeleteModal(false)}>\n                      Yes\n                    </PrimaryButton>\n                  </div>\n                  <div style={{ width: \"80px\" }}>\n                    <SecondaryButton onClick={() => setDeleteModal(false)}>\n                      No\n                    </SecondaryButton>\n                  </div>\n                </div>\n              </div>\n            </CModalBody>\n          </CModal>\n        </BlurBackground>\n      )}\n\n      {/* Edit Modal */}\n      {editModal && (\n        <BlurBackground>\n          <CModal\n            alignment=\"center\"\n            visible={editModal}\n            onClose={() => setEditModal(false)}\n            aria-labelledby=\"VerticallyCenteredExample\"\n            size=\"lg\"\n          >\n            <CModalHeader>\n              <h4 className=\"fw-600\">Edit {selectedData?.name}</h4>\n            </CModalHeader>\n            <CModalBody className=\"p-3\">\n              {selectedData?.name === \"BMI\" && (\n                <BMI\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n              {selectedData?.name === \"Blood Pressure\" && (\n                <BPForm\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n\n              {selectedData?.name === \"Respiration Rate\" && (\n                <RespirationRateForm\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n              {selectedData?.name === \"SpO2\" && (\n                <Spo2\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n\n              {selectedData?.name === \"Temperature\" && (\n                <Temperature\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n\n              {selectedData?.name === \"Lung Function Test (LFT)\" && (\n                <LFTForm\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n              {selectedData?.name === \"Heart Rate\" && (\n                <HeartRate\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n              {selectedData?.name === \"Blood Sugar\" && (\n                <BSugar\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n              {selectedData?.name === \"Lipid Profile\" && (\n                <LipidProfileForm\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n              {selectedData?.name === \"HCT\" && (\n                <HCT\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n              {selectedData?.name === \"Hemoglobin\" && (\n                <Hemogloin\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n\n              {selectedData?.name === \"Blood Ketone\" && (\n                <BKetone\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n\n              {selectedData?.name === \"Blood Uric Acid\" && (\n                <BUricAcid\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n\n              {selectedData?.name === \"GFR\" && (\n                <GFR\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n              {selectedData?.name === \"Creatinine\" && (\n                <Creatinine\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n              {selectedData?.name === \"Urea\" && (\n                <Urea\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n              {selectedData?.name === \"Urinalysis\" && (\n                <Urinalysis\n                  addBack={() => setEditModal(false)}\n                  defaultData={selectedData}\n                />\n              )}\n            </CModalBody>\n          </CModal>\n        </BlurBackground>\n      )}\n    </>\n  );\n\n  function renderCell(row, column) {\n    const columnKey = getColumnKey(column?.label);\n    const value = row[columnKey];\n\n    if (columnKey === \"ecg_result\") {\n      return (\n        <div style={{ width: \"180px\" }}>\n          <Badge label={value?.name} color={value?.status} />\n        </div>\n      );\n    } else if (columnKey === \"result\") {\n      return (\n        <div style={{ width: \"180px\" }}>\n          <Badge label={value?.name} color={value?.status} />\n        </div>\n      );\n    } else if (columnKey === \"action\") {\n      return (\n        <div className=\"d-flex gap-2\">\n          {value.map((data, i) => (\n            <div key={i} className=\"d-flex\">\n              {renderActionButton(data, row)}\n            </div>\n          ))}\n        </div>\n      );\n    } else {\n      // Default rendering for regular data\n      return <span className=\"fs-16 fw-500\">{value}</span>;\n    }\n  }\n\n  function renderActionButton(data, row) {\n    switch (data.type) {\n      case \"warning\":\n        return <img src={Assets.Warning} alt=\"warn\" className=\"cursor\" />;\n      case \"edit\":\n        return (\n          <img\n            src={Assets.EditPencil}\n            alt=\"edit\"\n            className=\"cursor\"\n            onClick={() => editData(row)}\n          />\n        );\n      case \"delete\":\n        return (\n          <img\n            src={Assets.Delete}\n            alt=\"delete\"\n            className=\"cursor\"\n            onClick={() => deleteData(row)}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  function getColumnKey(columnLabel) {\n    // Convert label to a key format used in your data object\n    // Example: \"Heart Rate (BPM)\" -> \"heart_rate_(bpm)\"\n    return columnLabel.toLowerCase().replace(/\\s+/g, \"_\");\n  }\n};\n\nexport default DynamicTable;\n","import { CCol, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { Assets } from \"../../assets/Assets\";\nimport ActiveButton from \"../Buttons/ActiveButton/ActiveButton\";\n\nconst DateRangePicker = ({ onClose }) => {\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  // Get today's date\n  const today = new Date();\n  return (\n    <>\n      <CRow className=\"mb-2 p-3\">\n        <CCol md={4} className=\"d-flex flex-column gap-1\">\n          <span>From Date *</span>\n          <DatePicker\n            showIcon\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            isClearable\n            className=\"date-range-picker\"\n            maxDate={today}\n          />\n        </CCol>\n        <CCol md={4} className=\"d-flex flex-column gap-1\">\n          <span>To Date *</span>\n          <DatePicker\n            showIcon\n            selected={endDate}\n            onChange={(date) => setEndDate(date)}\n            isClearable\n            className=\"date-range-picker\"\n            maxDate={today}\n          />\n        </CCol>\n        <CCol\n          md={4}\n          className=\"d-flex flex-column gap-1 justify-content-center\"\n          style={{ width: \"60px\" }}\n        >\n          <ActiveButton onClick={onClose}>\n            <div className=\"d-flex align-items-center gap-2\">\n              <img src={Assets.CloseX} alt=\"close\" />\n            </div>\n          </ActiveButton>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default DateRangePicker;\n","import {\n  CBadge,\n  CCol,\n  CContainer,\n  CFormInput,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport { Assets } from \"../../../../../../assets/Assets\";\nimport Table from \"../../../../../Tables/Table\";\nimport Badge from \"../../../../../Badge/Badge\";\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\nimport ChartTab from \"../../../../../Charts/ChartTab\";\nimport DynamicTable from \"../../../../../Tables/DynamicTable\";\n\nimport BPForm from \"../Forms/BPForm\";\nimport HeartRate from \"../Forms/HeartRate\";\nimport LFTForm from \"../Forms/LFTForm\";\nimport LipidProfileForm from \"../Forms/LipidProfileForm\";\nimport Temperature from \"../Forms/Temperature\";\nimport Spo2 from \"../Forms/Spo2\";\nimport RespirationRateForm from \"../Forms/RespirationRateForm\";\nimport BMI from \"../Forms/BMI\";\nimport BSugar from \"../Forms/BSugar\";\nimport Hemogloin from \"../Forms/Hemogloin\";\nimport HCT from \"../Forms/HCT\";\nimport BUricAcid from \"../Forms/BUricAcid\";\nimport BKetone from \"../Forms/BKetone\";\nimport Urea from \"../Forms/Urea\";\nimport Creatinine from \"../Forms/Creatinine\";\nimport GFR from \"../Forms/GFR\";\nimport Urinalysis from \"../Forms/Urinalysis\";\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\nimport DateRangePicker from \"../../../../../DateRangePicker/DateRangePicker\";\n\nconst ObjectiveDetailPage = ({ data }) => {\n  const [chartView, setChartView] = useState(false);\n  const [addView, setAddView] = useState(false);\n  const [filterView, setFilterView] = useState(false);\n\n  const columns = [\n    { id: 1, label: \"NO.\" },\n    { id: 2, label: \"RESULT\" },\n    { id: 3, label: \"SYSTOLIC\" },\n    { id: 4, label: \"DIASTOLIC\" },\n    { id: 5, label: \"PLUSE (IN BPM\" },\n    { id: 6, label: \"DATE\" },\n    { id: 7, label: \"ACTION\" },\n  ];\n\n  const rowData = [\n    {\n      id: 1,\n      result: { status: \"success\", name: \"Normal\" },\n      systolic: \"112\",\n      diastolic: \"25\",\n      pluse: \"89\",\n      date: \"02-04-2024 12:13PM\",\n      action: [{ type: \"warning\" }],\n    },\n    {\n      id: 2,\n      result: {\n        status: \"error\",\n        name: \"High Blood Pressure (Hypertension) Stage 1\",\n      },\n      systolic: \"112\",\n      diastolic: \"25\",\n      pluse: \"89\",\n      date: \"02-04-2024 12:13PM\",\n      action: [{ type: \"edit\" }, { type: \"delete\" }],\n    },\n    {\n      id: 3,\n      result: { status: \"error\", name: \"Normal\" },\n      systolic: \"118\",\n      diastolic: \"12\",\n      pluse: \"-\",\n      date: \"02-04-2024 12:13PM\",\n      action: [{ type: \"edit\" }, { type: \"delete\" }],\n    },\n    {\n      id: 4,\n      result: {\n        status: \"error\",\n        name: \"High Blood Pressure (Hypertension) Stage 1\",\n      },\n      systolic: \"112\",\n      diastolic: \"25\",\n      pluse: \"89\",\n      date: \"02-04-2024 12:13PM\",\n      action: [{ type: \"edit\" }, { type: \"delete\" }],\n    },\n    {\n      id: 5,\n      result: { status: \"success\", name: \"Normal\" },\n      systolic: \"118\",\n      diastolic: \"12\",\n      pluse: \"45\",\n      date: \"02-04-2024 12:13PM\",\n      action: [{ type: \"edit\" }, { type: \"delete\" }],\n    },\n  ];\n\n  const chartPage = () => {\n    setChartView(true);\n  };\n  const tablePage = () => {\n    setChartView(false);\n  };\n  const addPage = () => {\n    setAddView(true);\n  };\n  const addBack = () => {\n    setAddView(false);\n  };\n\n  const filterPage = () => {\n    setFilterView(true);\n  };\n  const filterBack = () => {\n    setFilterView(false);\n  };\n  return (\n    <>\n      <CContainer className=\"p-0\">\n        <CContainer className=\"mt-2 mb-3\">\n          <CRow>\n            <CCol lg={7}>\n              <div className=\"d-flex flex-row gap-3\">\n                <img src={data?.icon} alt=\"icon\" />\n                <div className=\"d-flex flex-column gap-2\">\n                  <span className=\"fs-20 fw-600\">{data?.name}</span>\n                  <div className=\"d-flex flex-row gap-2 flex-wrap\">\n                    {data?.badge?.map((dt, i) => (\n                      <Badge label={dt?.label} color={dt?.color} />\n                    ))}\n                  </div>\n                  <span className=\"fs-14 fw-500\">{data?.date}</span>\n                </div>\n              </div>\n            </CCol>\n            <CCol lg={5} className=\"d-flex align-items-center mt-2\">\n              <CRow className=\"w-100 d-flex justify-content-around\">\n                <CCol xs={4} md={4} lg={4}>\n                  {!addView && (\n                    <PrimaryButton onClick={() => addPage()}>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <img src={Assets.Add} alt=\"add\" />\n                        <span className=\"fs-16 fw-600\">Add</span>\n                      </div>\n                    </PrimaryButton>\n                  )}\n                  {addView && (\n                    <ActiveButton onClick={() => addBack()}>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <img src={Assets.CloseX} alt=\"add\" />\n                        <span className=\"fs-16 fw-600\">Add</span>\n                      </div>\n                    </ActiveButton>\n                  )}\n                </CCol>\n                <CCol xs={4} md={4} lg={4}>\n                  {filterView && (\n                    <ActiveButton onClick={() => filterBack()}>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <img src={Assets.CloseX} alt=\"add\" />\n                        <span className=\"fs-16 fw-600\">Filter</span>\n                      </div>\n                    </ActiveButton>\n                  )}\n                  {!filterView && (\n                    <PrimaryButton>\n                      <div\n                        className=\"d-flex align-items-center gap-2\"\n                        onClick={() => filterPage()}\n                      >\n                        <img src={Assets.Filter} alt=\"add\" />\n                        <span className=\"fs-16 fw-600\">Filter</span>\n                      </div>\n                    </PrimaryButton>\n                  )}\n                </CCol>\n                {!chartView && (\n                  <CCol xs={4} md={4} lg={4}>\n                    <PrimaryButton onClick={() => chartPage()}>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <img src={Assets.Chart} alt=\"add\" />\n                        <span className=\"fs-16 fw-600\">Chart</span>\n                      </div>\n                    </PrimaryButton>\n                  </CCol>\n                )}\n                {chartView && (\n                  <CCol xs={4} md={4} lg={4}>\n                    <ActiveButton onClick={() => tablePage()}>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <img src={Assets.CloseX} alt=\"add\" />\n                        <span className=\"fs-16 fw-600\">Chart</span>\n                      </div>\n                    </ActiveButton>\n                  </CCol>\n                )}\n              </CRow>\n            </CCol>\n          </CRow>\n        </CContainer>\n        <CRow>\n          <CCol xl={12}>\n            {chartView ? (\n              <ChartTab data={data} />\n            ) : (\n              <>\n                {filterView && <DateRangePicker onClose={filterBack} />}\n                <DynamicTable\n                  columnsData={data?.columnsData}\n                  tableData={data?.tableData}\n                />\n              </>\n            )}\n          </CCol>\n        </CRow>\n\n        {/* Modal for add  */}\n        {addView && (\n          <BlurBackground>\n            <CModal\n              alignment=\"center\"\n              visible={addView}\n              onClose={addBack}\n              aria-labelledby=\"VerticallyCenteredExample\"\n              size=\"lg\"\n            >\n              <CModalHeader>\n                <h4 className=\"fw-600\">Add {data?.name}</h4>\n              </CModalHeader>\n              <CModalBody className=\"p-4\">\n                {data?.name === \"Blood Pressure\" && (\n                  <BPForm addBack={addBack} />\n                )}\n                {data?.name === \"Heart Rate\" && <HeartRate addBack={addBack} />}\n                {data?.name === \"Lung Function Test (LFT)\" && (\n                  <LFTForm addBack={addBack} />\n                )}\n                {data?.name === \"Lipid Profile\" && (\n                  <LipidProfileForm addBack={addBack} />\n                )}\n                {data?.name === \"Temperature\" && (\n                  <Temperature addBack={addBack} />\n                )}\n                {data?.name === \"SpO2\" && <Spo2 addBack={addBack} />}\n                {data?.name === \"Respiration Rate\" && (\n                  <RespirationRateForm addBack={addBack} />\n                )}\n                {data?.name === \"BMI\" && <BMI addBack={addBack} />}\n                {data?.name === \"Blood Sugar\" && <BSugar addBack={addBack} />}\n                {data?.name === \"Hemoglobin\" && <Hemogloin addBack={addBack} />}\n                {data?.name === \"HCT\" && <HCT addBack={addBack} />}\n                {data?.name === \"Blood Uric Acid\" && (\n                  <BUricAcid addBack={addBack} />\n                )}\n                {data?.name === \"Blood Ketone\" && <BKetone addBack={addBack} />}\n                {data?.name === \"Urea\" && <Urea addBack={addBack} />}\n                {data?.name === \"Creatinine\" && (\n                  <Creatinine addBack={addBack} />\n                )}\n                {data?.name === \"GFR\" && <GFR addBack={addBack} />}\n                {data?.name === \"Urinalysis\" && (\n                  <Urinalysis addBack={addBack} />\n                )}\n              </CModalBody>\n            </CModal>\n          </BlurBackground>\n        )}\n      </CContainer>\n    </>\n  );\n};\n\nexport default ObjectiveDetailPage;\n","import React, { useState } from \"react\";\nimport VitalsTab from \"../../../VitalsTab/VitalsTab\";\nimport { CCol, CContainer, CRow } from \"@coreui/react\";\nimport { Assets } from \"../../../../../../assets/Assets\";\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\nimport MedicalTab from \"../../MedicalTab\";\nimport Modal from \"../../../../../Modal/Modal\";\nimport ObjectiveDetailPage from \"../DetailPage/ObjectiveDetailPage\";\n\nconst VitalSign = ({ setVitalView }) => {\n  const tabs = [\n    { id: 1, title: \"Primary Vitals\" },\n    { id: 2, title: \"Metabolic And Biochemical Profile\" },\n    { id: 3, title: \"Hematologic Profile\" },\n    { id: 4, title: \"Renal and Metabolic Markers\" },\n  ];\n  const [currentTab, setCurrentTab] = useState({\n    id: 1,\n    title: \"Primary Vitals\",\n  });\n  const getCurrentTab = (data) => {\n    setCurrentTab(data);\n  };\n  function findTitleById(id) {\n    const titleObject = tabs?.find((title) => title.id === id);\n    return titleObject ? titleObject?.title : \"Primary Vitals\"; // Return the title or a message if not found\n  }\n\n  const currentTabtitle = findTitleById(currentTab);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [cardSelectedData, setSelectedCardData] = useState();\n\n  const openModal = (data) => {\n    setSelectedCardData(data);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <>\n      <CRow>\n        <CCol md={6} className=\"mb-2\">\n          <div className=\"d-flex gap-2\">\n            <img\n              alt=\"BackBtn\"\n              src={Assets.BackBtn}\n              style={{ width: \"35px\" }}\n              onClick={setVitalView}\n              className=\"cursor\"\n            />\n            <span className=\"Obj-name d-flex align-items-center\">\n              Vital Signs\n            </span>\n          </div>\n        </CCol>\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\n          <div className=\"d-flex mt-2\">\n            <Breadcrumb\n              paths={[\n                { label: \"Home\", to: \"/patients\" },\n                { label: \"Patient List\", to: \"/patients\" },\n                { label: \"Medical Profile\", to: \"/patients/history\" },\n                { label: \"Vital Signs\", to: \"/patients/history\" },\n              ]}\n            />\n          </div>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol md={12}>\n          <MedicalTab\n            tabs={tabs}\n            getCurrentTab={getCurrentTab}\n            defaultTab={0}\n          />\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol md={12}>\n          <VitalsTab category={currentTabtitle} openModal={openModal} />\n        </CCol>\n      </CRow>\n\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\n        <CContainer className=\"p-0\">\n          <CRow>\n            <CCol className=\"mb-3\">\n              <ObjectiveDetailPage data={cardSelectedData} />\n            </CCol>\n          </CRow>\n        </CContainer>\n      </Modal>\n    </>\n  );\n};\n\nexport default VitalSign;\n","import { CCol, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { Assets } from \"../../assets/Assets\";\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\n\nconst DateSelector = () => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  // Get today's date\n  const today = new Date();\n  return (\n    <>\n      <CRow className=\"mb-2\">\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\n          <span className=\"fs-18 fw-400\">Start Date *</span>\n          <div style={{ width: \"100%\" }}>\n            <DatePicker\n              showIcon\n              selected={startDate}\n              onChange={(date) => setStartDate(date)}\n              className=\"date-range-selector\"\n              maxDate={today}\n            />\n          </div>\n        </CCol>\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\n          <span className=\"fs-18 fw-400\">End Date *</span>\n          <div style={{ width: \"100%\" }}>\n            <DatePicker\n              showIcon\n              selected={endDate}\n              onChange={(date) => setEndDate(date)}\n              className=\"date-range-selector\"\n              maxDate={today}\n            />\n          </div>\n        </CCol>\n        <CCol\n          md={3}\n          className=\"d-flex flex-column gap-1 justify-content-end\"\n          style={{ width: \"60px\" }}\n        >\n          <PrimaryButton>\n            <div className=\"d-flex align-items-center gap-2\">\n              <img src={Assets.search} alt=\"close\" />\n            </div>\n          </PrimaryButton>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default DateSelector;\n","import { CCard, CCardBody } from \"@coreui/react\";\nimport React from \"react\";\nimport { Assets } from \"../../assets/Assets\";\n\nconst DateCards = ({ data }) => {\n  return (\n    <>\n      <CCard className=\"date-card cursor-default\">\n        <CCardBody>\n          <div className=\"d-flex align-items-center justify-content-between\">\n            <span className=\"fs-20 fw-600\">{data?.date}</span>\n            <div>\n              <img src={Assets.deleteorg} alt=\"Del\" className=\"cursor\"/>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n    </>\n  );\n};\n\nexport default DateCards;\n","import React, { useState, useEffect } from \"react\";\n\nconst Pagination = ({\n  currentPage,\n  onPageChange,\n  totalItems,\n  itemsPerPage,\n}) => {\n  const [totalPages, setTotalPages] = useState(1);\n  const [pages, setPages] = useState([]);\n\n  useEffect(() => {\n    // Calculate total pages based on totalItems and itemsPerPage\n    const pagesCount = Math.ceil(totalItems / itemsPerPage);\n    setTotalPages(pagesCount);\n\n    // Generate array of pages dynamically\n    setPages(Array.from(Array(pagesCount).keys()));\n  }, [totalItems, itemsPerPage]);\n\n  const handlePageClick = (pageNumber) => {\n    onPageChange(pageNumber);\n  };\n\n  return (\n    <div className=\"pagination\">\n      {pages.map((page) => (\n        <button\n          key={page}\n          onClick={() => handlePageClick(page + 1)}\n          className={currentPage === page + 1 ? \"active-page\" : \"\"}\n        >\n          {page + 1}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import { CCol, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\n\nconst SingleDatePicker = () => {\n  const [startDate, setStartDate] = useState(new Date());\n\n  // Get today's date\n  const today = new Date();\n  return (\n    <>\n      <CRow className=\"mb-2\">\n        <CCol md={12} className=\"d-flex flex-column gap-1\">\n          <div style={{ width: \"100%\" }}>\n            <DatePicker\n              showIcon\n              selected={startDate}\n              onChange={(date) => setStartDate(date)}\n              className=\"date-range-selector\"\n              maxDate={today}\n            />\n          </div>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default SingleDatePicker;\n","import React, { useState } from \"react\";\n\nconst OptionItem = ({ label, onSelect }) => {\n  const [isSelected, setIsSelected] = useState(false);\n\n  const toggleSelected = () => {\n    setIsSelected(!isSelected);\n    onSelect(label, !isSelected); // Notify parent component of selection change\n  };\n\n  return (\n    <div\n      className={`option-item ${isSelected ? \"selected\" : \"\"}`}\n      onClick={toggleSelected}\n    >\n      {label}\n    </div>\n  );\n};\n\nexport default OptionItem;\n","import React, { useEffect, useState } from \"react\";\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\nimport { CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport { Assets } from \"../../../../../../assets/Assets\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\nimport DateCards from \"../../../../../DateCards/DateCards\";\nimport Pagination from \"../../../../../Pagination/Pagination\";\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst PhysicalExam = ({ onClose }) => {\n  const dateCards = [\n    { id: 1, date: \"06/07/2024\" },\n    { id: 2, date: \"06/07/2024\" },\n    { id: 3, date: \"06/07/2024\" },\n    { id: 4, date: \"06/07/2024\" },\n    { id: 5, date: \"06/07/2024\" },\n    { id: 6, date: \"06/07/2024\" },\n    { id: 7, date: \"06/07/2024\" },\n    { id: 8, date: \"06/07/2024\" },\n    { id: 9, date: \"06/07/2024\" },\n    { id: 10, date: \"06/07/2024\" },\n    { id: 11, date: \"06/07/2024\" },\n    { id: 12, date: \"06/07/2024\" },\n    { id: 13, date: \"06/07/2024\" },\n    { id: 14, date: \"06/07/2024\" },\n  ];\n  const [currentPage, setCurrentPage] = useState(1);\n  const [addFormView, setAddFormView] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  const options = [\n    \"Lorem ipsum\",\n    \"Lorem ipsum\",\n    \"Lorem ipsum\",\n    \"Lorem ipsum\",\n    \"Lorem ipsum\",\n    \"Lorem ipsum\",\n    \"Lorem ipsum 2\",\n  ];\n\n  const itemsPerPage = 9; // Number of items to display per page\n\n  // Function to handle page change\n  const onPageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Function to get items for the current page\n  const getCurrentPageItems = () => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    return dateCards?.slice(startIndex, endIndex);\n  };\n\n  const addFormPage = () => {\n    setAddFormView(true);\n  };\n\n  const handleSelect = (option, isSelected) => {\n    if (isSelected) {\n      setSelectedOptions([...selectedOptions, option]);\n    } else {\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\n    }\n  };\n\n  const [nutritionOpen, setNutritionOpen] = useState(false);\n  const [constiOpen, setConstiOpen] = useState(false);\n  const [generalOpen, setGeneralOpen] = useState(false);\n  const [heentOpen, setHeentOpen] = useState(false);\n\n  const nutritionTabOpen = () => {\n    setNutritionOpen(true);\n  };\n\n  const nutritionTabClose = () => {\n    setNutritionOpen(false);\n  };\n\n  const constiTabOpen = () => {\n    setConstiOpen(true);\n  };\n\n  const constiTabClose = () => {\n    setConstiOpen(false);\n  };\n\n  const generalTabOpen = () => {\n    setGeneralOpen(true);\n  };\n\n  const generalTabClose = () => {\n    setGeneralOpen(false);\n  };\n\n  const heentTabOpen = () => {\n    setHeentOpen(true);\n  };\n\n  const heentTabClose = () => {\n    setHeentOpen(false);\n  };\n\n  return (\n    <>\n      <CRow className=\"mb-0\">\n        <CCol md={6} className=\"mb-2\">\n          <div className=\"d-flex gap-2\">\n            <img\n              alt=\"BackBtn\"\n              src={Assets.BackBtn}\n              style={{ width: \"35px\" }}\n              onClick={onClose}\n              className=\"cursor\"\n            />\n            <span className=\"Obj-name d-flex align-items-center\">\n              Physical Exam\n            </span>\n          </div>\n        </CCol>\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\n          <div className=\"d-flex mt-2\">\n            <Breadcrumb\n              paths={[\n                { label: \"Home\", to: \"/patients\" },\n                { label: \"Patient List\", to: \"/patients\" },\n                { label: \"Medical Profile\", to: \"/patients/history\" },\n                { label: \"Physical Exam\", to: \"/patients/history\" },\n              ]}\n            />\n          </div>\n        </CCol>\n      </CRow>\n      {!addFormView && (\n        <>\n          <CRow className=\"mb-2\">\n            <CCol lg={8} className=\"\">\n              <DateSelector />\n            </CCol>\n            <CCol\n              lg={4}\n              className=\"d-flex justify-content-end align-items-center\"\n            >\n              <div>\n                <PrimaryButton onClick={() => addFormPage()}>\n                  <div className=\"d-flex align-items-center gap-2\">\n                    <img src={Assets.Add} alt=\"add\" />\n                    <span className=\"fs-16 fw-600\">Add</span>\n                  </div>\n                </PrimaryButton>\n              </div>\n            </CCol>\n          </CRow>\n          <div className=\"mb-2\">\n            <CRow>\n              {getCurrentPageItems()?.map((item, i) => (\n                <CCol lg={4} className=\"mb-3\" key={i}>\n                  <DateCards data={item} />\n                </CCol>\n              ))}\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CCol lg={12} className=\"d-flex justify-content-center\">\n                <Pagination\n                  currentPage={currentPage}\n                  onPageChange={onPageChange}\n                  totalItems={dateCards?.length}\n                  itemsPerPage={itemsPerPage}\n                />\n              </CCol>\n            </CRow>\n          </div>\n        </>\n      )}\n      {addFormView && (\n        <CCard className=\"p-2 cursor-default mb-5\">\n          <CCardBody className=\"mb-3\">\n            <CRow className=\"mb-2\">\n              <CCol className=\"d-flex align-items-center gap-2\">\n                <span>Date</span>\n                <SingleDatePicker />\n              </CCol>\n              <CCol className=\"d-flex justify-content-end\">\n                <div style={{ width: \"120px\" }}>\n                  <ActiveButton onClick={() => setAddFormView(false)}>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <img src={Assets?.listview} alt=\"close\" />\n                      <span>List View</span>\n                    </div>\n                  </ActiveButton>\n                </div>\n              </CCol>\n            </CRow>\n            <div className=\"vertical-line mb-3\"></div>\n            <CRow className=\"mb-2\">\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\n                {!nutritionOpen && (\n                  <img\n                    alt=\"plus\"\n                    src={Assets?.PlusIcon}\n                    onClick={nutritionTabOpen}\n                    className=\"cursor\"\n                  />\n                )}\n                {nutritionOpen && (\n                  <img\n                    alt=\"plus\"\n                    src={Assets?.MinusIcon}\n                    onClick={nutritionTabClose}\n                    className=\"cursor\"\n                  />\n                )}\n                <span className=\"fs-16 fw-600\">Nutritional</span>\n              </CCol>\n              {nutritionOpen && (\n                <>\n                  <CCol lg={12} className=\"mb-2\">\n                    <div class=\"position-relative\">\n                      <label for=\"validationTooltip01\" class=\"form-label\">\n                        Custom Entry\n                      </label>\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        id=\"validationTooltip01\"\n                        placeholder=\"Custom Entry\"\n                      />\n                    </div>\n                  </CCol>\n                  <CRow>\n                    {options?.map((option, index) => (\n                      <CCol lg={\"auto\"}>\n                        <OptionItem\n                          key={index}\n                          label={option}\n                          onSelect={handleSelect}\n                        />\n                      </CCol>\n                    ))}\n                  </CRow>\n                </>\n              )}\n            </CRow>\n            <div className=\"vertical-line mt-2 mb-3\"></div>\n            <CRow className=\"mb-2\">\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\n                {!constiOpen && (\n                  <img\n                    alt=\"plus\"\n                    src={Assets?.PlusIcon}\n                    onClick={constiTabOpen}\n                    className=\"cursor\"\n                  />\n                )}\n                {constiOpen && (\n                  <img\n                    alt=\"plus\"\n                    src={Assets?.MinusIcon}\n                    onClick={constiTabClose}\n                    className=\"cursor\"\n                  />\n                )}\n                <span className=\"fs-16 fw-600\">Constitutional</span>\n              </CCol>\n              {constiOpen && (\n                <>\n                  <CCol lg={12} className=\"mb-2\">\n                    <div class=\"position-relative\">\n                      <label for=\"validationTooltip01\" class=\"form-label\">\n                        Custom Entry\n                      </label>\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        id=\"validationTooltip01\"\n                        placeholder=\"Custom Entry\"\n                      />\n                    </div>\n                  </CCol>\n                  <CRow>\n                    {options?.map((option, index) => (\n                      <CCol lg={\"auto\"}>\n                        <OptionItem\n                          key={index}\n                          label={option}\n                          onSelect={handleSelect}\n                        />\n                      </CCol>\n                    ))}\n                  </CRow>\n                </>\n              )}\n            </CRow>\n            <div className=\"vertical-line mt-2 mb-3\"></div>\n            <CRow className=\"mb-2\">\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\n                {!generalOpen && (\n                  <img\n                    alt=\"plus\"\n                    src={Assets?.PlusIcon}\n                    onClick={generalTabOpen}\n                    className=\"cursor\"\n                  />\n                )}\n                {generalOpen && (\n                  <img\n                    alt=\"plus\"\n                    src={Assets?.MinusIcon}\n                    onClick={generalTabClose}\n                    className=\"cursor\"\n                  />\n                )}\n                <span className=\"fs-16 fw-600\">General</span>\n              </CCol>\n              {generalOpen && (\n                <>\n                  <CCol lg={12} className=\"mb-2\">\n                    <div class=\"position-relative\">\n                      <label for=\"validationTooltip01\" class=\"form-label\">\n                        Custom Entry\n                      </label>\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        id=\"validationTooltip01\"\n                        placeholder=\"Custom Entry\"\n                      />\n                    </div>\n                  </CCol>\n                  <CRow>\n                    {options?.map((option, index) => (\n                      <CCol lg={\"auto\"}>\n                        <OptionItem\n                          key={index}\n                          label={option}\n                          onSelect={handleSelect}\n                        />\n                      </CCol>\n                    ))}\n                  </CRow>\n                </>\n              )}\n            </CRow>\n            <div className=\"vertical-line mt-2 mb-3\"></div>\n            <CRow className=\"mb-2\">\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\n                {!heentOpen && (\n                  <img\n                    alt=\"plus\"\n                    src={Assets?.PlusIcon}\n                    onClick={heentTabOpen}\n                    className=\"cursor\"\n                  />\n                )}\n                {heentOpen && (\n                  <img\n                    alt=\"plus\"\n                    src={Assets?.MinusIcon}\n                    onClick={heentTabClose}\n                    className=\"cursor\"\n                  />\n                )}\n                <span className=\"fs-16 fw-600\">HEENT</span>\n              </CCol>\n              {heentOpen && (\n                <>\n                  <CCol lg={12} className=\"mb-2\">\n                    <div class=\"position-relative\">\n                      <label for=\"validationTooltip01\" class=\"form-label\">\n                        Custom Entry\n                      </label>\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        id=\"validationTooltip01\"\n                        placeholder=\"Custom Entry\"\n                      />\n                    </div>\n                  </CCol>\n                  <CRow>\n                    {options?.map((option, index) => (\n                      <CCol lg={\"auto\"}>\n                        <OptionItem\n                          key={index}\n                          label={option}\n                          onSelect={handleSelect}\n                        />\n                      </CCol>\n                    ))}\n                  </CRow>\n                </>\n              )}\n            </CRow>\n            <div className=\"vertical-line mt-2 mb-3\"></div>\n            <CRow className=\"mb-1\">\n              <div style={{ width: \"128px\" }}>\n                <PrimaryButton>SAVE</PrimaryButton>\n              </div>\n              <div style={{ width: \"128px\" }}>\n                <SecondaryButton>CANCEL</SecondaryButton>\n              </div>\n            </CRow>\n          </CCardBody>\n        </CCard>\n      )}\n    </>\n  );\n};\n\nexport default PhysicalExam;\n","import { CCol, CRow } from \"@coreui/react\";\nimport React from \"react\";\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\nimport { Assets } from \"../../assets/Assets\";\n\nconst SearchBar = () => {\n  return (\n    <>\n      <CRow className=\"mb-2\">\n        <CCol md={6} className=\"d-flex flex-column gap-1\">\n          <div style={{ width: \"100%\" }}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Search\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                placeholder=\"Enter\"\n              />\n            </div>\n          </div>\n        </CCol>\n        <CCol\n          md={3}\n          className=\"d-flex flex-column gap-1 justify-content-end\"\n          style={{ width: \"60px\" }}\n        >\n          <PrimaryButton>\n            <div className=\"d-flex align-items-center gap-2\">\n              <img src={Assets.search} alt=\"close\" />\n            </div>\n          </PrimaryButton>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import {\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport React from \"react\";\nimport Badge from \"../Badge/Badge\";\nimport { Assets } from \"../../assets/Assets\";\n\nconst LabTable = ({ columns, rowData }) => {\n  return (\n    <>\n      <CTable className=\"lab-responsive-table\">\n        <CTableHead color=\"dark\">\n          <CTableRow>\n            {columns?.map((data, i) => (\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\n            ))}\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          {rowData?.map((dt, i) => (\n            <CTableRow key={i}>\n              <CTableHeaderCell>\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\n              </CTableHeaderCell>\n              <CTableDataCell>\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\n              </CTableDataCell>\n              <CTableDataCell>\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\n              </CTableDataCell>\n              <CTableDataCell>\n                <Badge label={dt?.file} color={\"primary\"} />\n              </CTableDataCell>\n              <CTableDataCell>{dt?.notes}</CTableDataCell>\n              <CTableDataCell>{dt?.link}</CTableDataCell>\n              <CTableDataCell>\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\n                  <img alt=\"edit\" src={Assets?.TableEdit} className=\"cursor\" />\n                  <img alt=\"delete\" src={Assets?.TableDelete} />\n                </div>\n              </CTableDataCell>\n            </CTableRow>\n          ))}\n        </CTableBody>\n      </CTable>\n    </>\n  );\n};\n\nexport default LabTable;\n","import { CCol, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\nimport { Assets } from \"../../../../../../assets/Assets\";\nimport DatePicker from \"react-datepicker\";\n\nconst LabForm = ({ back }) => {\n  const [date, setDate] = useState(new Date());\n\n  return (\n    <>\n      <CRow className=\"mb-3\">\n        <CCol lg={4}>\n          <div class=\"position-relative\">\n            <label for=\"validationTooltip01\" class=\"form-label\">\n              Date *\n            </label>\n            <div className=\"date-size\">\n              <DatePicker\n                showIcon\n                selected={date}\n                onChange={(date) => setDate(date)}\n              />\n            </div>\n          </div>\n        </CCol>\n        <CCol lg={4}>\n          <div style={{ width: \"100%\" }}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Lab Test Name *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control pad-10\"\n                id=\"validationTooltip01\"\n                placeholder=\"Enter\"\n              />\n            </div>\n          </div>\n        </CCol>\n        <CCol lg={4}>\n          <div style={{ width: \"100%\" }}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Notes\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control  pad-10\"\n                id=\"validationTooltip01\"\n                placeholder=\"Enter\"\n              />\n            </div>\n          </div>\n        </CCol>\n      </CRow>\n      <CRow className=\"mb-3\">\n        <CCol lg={4}>\n          <div style={{ width: \"100%\" }}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Link of Imaging File URL\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control  pad-10\"\n                id=\"validationTooltip01\"\n                placeholder=\"Enter\"\n              />\n            </div>\n          </div>\n        </CCol>\n        <CCol lg={4}>\n          <div style={{ width: \"100%\" }}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Upload Results / Image (pdf, jpg, jpeg, png)\n              </label>\n              <div class=\"input-file-container\">\n                <input class=\"input-file\" id=\"my-file\" type=\"file\" />\n                <label\n                  tabindex=\"0\"\n                  for=\"my-file\"\n                  className=\"input-file-trigger\"\n                >\n                  <img alt=\"upload\" src={Assets.Export} />\n                  <span>Choose File</span>\n                </label>\n              </div>\n            </div>\n          </div>\n        </CCol>\n        <CCol className=\"d-flex align-items-center\">\n          <span className=\"fs-18 fw-400\">No Files Chosen</span>\n        </CCol>\n      </CRow>\n      <CRow className=\"mb-1\">\n        <div style={{ width: \"128px\" }}>\n          <PrimaryButton>SAVE</PrimaryButton>\n        </div>\n        <div style={{ width: \"128px\" }}>\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\n        </div>\n      </CRow>\n    </>\n  );\n};\n\nexport default LabForm;\n","import React, { useState } from \"react\";\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\nimport { CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport { Assets } from \"../../../../../../assets/Assets\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport Pagination from \"../../../../../Pagination/Pagination\";\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\nimport LabTable from \"../../../../../Tables/LabTable\";\nimport LabForm from \"./LabForm\";\n\nconst Lab = ({ onClose }) => {\n  const columnData = [\n    { id: 1, label: \"No.\" },\n    { id: 2, label: \"LAB TEST DATE\" },\n    { id: 3, label: \"LAB TEST NAME\" },\n    { id: 4, label: \"FILE\" },\n    { id: 5, label: \"NOTES\" },\n    { id: 6, label: \"LINK\" },\n    { id: 6, label: \"ACTIONS\" },\n  ];\n  const rowData = [\n    {\n      id: 1,\n      date: \"06/07/2024\",\n      name: \"Complete Blood Count\",\n      file: \"PDF\",\n      notes: \"-\",\n      link: \"-\",\n    },\n    {\n      id: 2,\n      date: \"06/07/2024\",\n      name: \"Complete Blood Count\",\n      file: \"PNG\",\n      notes: \"-\",\n      link: \"-\",\n    },\n    {\n      id: 3,\n      date: \"06/07/2024\",\n      name: \"Complete Blood Count\",\n      file: \"PDF\",\n      notes: \"-\",\n      link: \"-\",\n    },\n    {\n      id: 4,\n      date: \"06/07/2024\",\n      name: \"Complete Blood Count\",\n      file: \"PDF\",\n      notes: \"-\",\n      link: \"-\",\n    },\n    {\n      id: 5,\n      date: \"06/07/2024\",\n      name: \"Complete Blood Count\",\n      file: \"PDF\",\n      notes: \"-\",\n      link: \"-\",\n    },\n    {\n      id: 6,\n      date: \"06/07/2024\",\n      name: \"Complete Blood Count\",\n      file: \"PDF\",\n      notes: \"-\",\n      link: \"-\",\n    },\n    {\n      id: 7,\n      date: \"06/07/2024\",\n      name: \"Complete Blood Count\",\n      file: \"PDF\",\n      notes: \"-\",\n      link: \"-\",\n    },\n    {\n      id: 8,\n      date: \"06/07/2024\",\n      name: \"Complete Blood Count\",\n      file: \"PNG\",\n      notes: \"-\",\n      link: \"-\",\n    },\n    {\n      id: 9,\n      date: \"06/07/2024\",\n      name: \"Complete Blood Count\",\n      file: \"PDF\",\n      notes: \"-\",\n      link: \"-\",\n    },\n    {\n      id: 10,\n      date: \"06/07/2024\",\n      name: \"Complete Blood Count\",\n      file: \"PDF\",\n      notes: \"-\",\n      link: \"-\",\n    },\n  ];\n  const [currentPage, setCurrentPage] = useState(1);\n  const [addFormView, setAddFormView] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  const options = [\n    \"Lorem ipsum\",\n    \"Lorem ipsum\",\n    \"Lorem ipsum\",\n    \"Lorem ipsum\",\n    \"Lorem ipsum\",\n    \"Lorem ipsum\",\n    \"Lorem ipsum 2\",\n  ];\n\n  const itemsPerPage = 5; // Number of items to display per page\n\n  // Function to handle page change\n  const onPageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Function to get items for the current page\n  const getCurrentPageItems = () => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    return rowData?.slice(startIndex, endIndex);\n  };\n\n  const addFormPage = () => {\n    setAddFormView(true);\n  };\n\n  const handleSelect = (option, isSelected) => {\n    if (isSelected) {\n      setSelectedOptions([...selectedOptions, option]);\n    } else {\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\n    }\n  };\n\n  const [nutritionOpen, setNutritionOpen] = useState(false);\n  const [constiOpen, setConstiOpen] = useState(false);\n  const [generalOpen, setGeneralOpen] = useState(false);\n  const [heentOpen, setHeentOpen] = useState(false);\n\n  const nutritionTabOpen = () => {\n    setNutritionOpen(true);\n  };\n\n  const nutritionTabClose = () => {\n    setNutritionOpen(false);\n  };\n\n  const constiTabOpen = () => {\n    setConstiOpen(true);\n  };\n\n  const constiTabClose = () => {\n    setConstiOpen(false);\n  };\n\n  const generalTabOpen = () => {\n    setGeneralOpen(true);\n  };\n\n  const generalTabClose = () => {\n    setGeneralOpen(false);\n  };\n\n  const heentTabOpen = () => {\n    setHeentOpen(true);\n  };\n\n  const heentTabClose = () => {\n    setHeentOpen(false);\n  };\n\n  return (\n    <>\n      <CRow className=\"mb-0\">\n        <CCol md={6} className=\"mb-2\">\n          <div className=\"d-flex gap-2\">\n            <img\n              alt=\"BackBtn\"\n              src={Assets.BackBtn}\n              style={{ width: \"35px\" }}\n              onClick={onClose}\n              className=\"cursor\"\n            />\n            <span className=\"Obj-name d-flex align-items-center\">Lab</span>\n          </div>\n        </CCol>\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\n          <div className=\"d-flex mt-2\">\n            <Breadcrumb\n              paths={[\n                { label: \"Home\", to: \"/patients\" },\n                { label: \"Patient List\", to: \"/patients\" },\n                { label: \"Medical Profile\", to: \"/patients/history\" },\n                { label: \"Lab\", to: \"/patients/history\" },\n              ]}\n            />\n          </div>\n        </CCol>\n      </CRow>\n      {!addFormView && (\n        <>\n          <CRow className=\"mb-2\">\n            <CCol lg={8} className=\"\">\n              <SearchBar />\n            </CCol>\n            <CCol\n              lg={4}\n              className=\"d-flex justify-content-end align-items-center gap-2\"\n            >\n              <div>\n                <PrimaryButton onClick={() => addFormPage()}>\n                  <div className=\"d-flex align-items-center gap-2\">\n                    <img src={Assets.Add} alt=\"add\" />\n                    <span className=\"fs-16 fw-600\">Add</span>\n                  </div>\n                </PrimaryButton>\n              </div>\n              <div>\n                <PrimaryButton onClick={() => addFormPage()}>\n                  <div className=\"d-flex align-items-center gap-2\">\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\n                  </div>\n                </PrimaryButton>\n              </div>\n            </CCol>\n          </CRow>\n          <div className=\"mb-2\">\n            <CRow>\n              <LabTable rowData={getCurrentPageItems()} columns={columnData} />\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CCol lg={12} className=\"d-flex justify-content-center\">\n                <Pagination\n                  currentPage={currentPage}\n                  onPageChange={onPageChange}\n                  totalItems={rowData?.length}\n                  itemsPerPage={itemsPerPage}\n                />\n              </CCol>\n            </CRow>\n          </div>\n        </>\n      )}\n      {addFormView && (\n        <CCard className=\"p-2 cursor-default mb-5\">\n          <CCardBody className=\"mb-3\">\n            <LabForm back={() => setAddFormView(false)} />\n          </CCardBody>\n        </CCard>\n      )}\n    </>\n  );\n};\n\nexport default Lab;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport { Assets } from \"../../../../../assets/Assets\";\nimport Card from \"../../../../Cards/Card\";\nimport Breadcrumb from \"../../../../Breadcrumb/Breadcrumb\";\nimport \"./Objective.css\";\nimport MedicalTab from \"../MedicalTab\";\nimport VitalsTab from \"../../VitalsTab/VitalsTab\";\nimport Modal from \"../../../../Modal/Modal\";\nimport ObjectiveDetailPage from \"./DetailPage/ObjectiveDetailPage\";\nimport VitalSign from \"./VitalSign/VitalSign\";\nimport PhysicalExam from \"./PhysicalExam/PhysicalExam\";\nimport Lab from \"./Lab/Lab\";\n\nconst Objective = () => {\n  const cardData = [\n    { id: 1, name: \"Vital Signs\", image: Assets.VitalSig },\n    { id: 2, name: \"Physical Exam\", image: Assets.PhyExam },\n    { id: 3, name: \"Lab\", image: Assets.Lab },\n    { id: 4, name: \"Imaging\", image: Assets.Imaging },\n  ];\n\n  // const [selectedData, setSelectedData] = useState();\n  const [vitalView, setVitalView] = useState(false);\n  const [phyView, setPhyView] = useState(false);\n  const [labView, setLabView] = useState(false);\n\n  const getSelectedData = (data) => {\n    console.log(\"first data\", data);\n    // setSelectedData(data);\n    if (data?.id === 1) {\n      setVitalView(true);\n    }\n    if (data?.id === 2) {\n      setPhyView(true);\n    }\n    if (data?.id === 3) {\n      setLabView(true);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"mt-3\">\n        {!vitalView && !phyView && !labView ? (\n          <CRow>\n            {cardData.map((dt, i) => (\n              <CCol md={4} xl={3} className=\"mb-3\">\n                <Card data={dt} getSelectedData={getSelectedData} />\n              </CCol>\n            ))}\n          </CRow>\n        ) : vitalView ? (\n          <VitalSign setVitalView={() => setVitalView(false)} />\n        ) : phyView ? (\n          <PhysicalExam onClose={() => setPhyView(false)} />\n        ) : labView ? (\n          <Lab onClose={() => setLabView(false)} />\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport default Objective;\n","import React, { useState } from \"react\";\nimport MedicalTab from \"./MedicalTab\";\nimport Objective from \"./Objective/Objective\";\n\nconst MedicalProfile = () => {\n  const tabs = [\n    { id: 1, title: \"Subjective\" },\n    { id: 2, title: \"Objective\" },\n    { id: 3, title: \"Assesment\" },\n    { id: 4, title: \"Plan\" },\n  ];\n  const [currentTab, setCurrentTab] = useState(2);\n\n  const getCurrentTab = (data) => {\n    setCurrentTab(data);\n  };\n\n\n\n  return (\n    <>\n      <div>\n        <MedicalTab tabs={tabs} getCurrentTab={getCurrentTab} defaultTab={1}/>\n        {currentTab === 2 && <Objective />}\n      </div>\n    </>\n  );\n};\n\nexport default MedicalProfile;\n","import { CCard, CCardBody, CCol, CContainer, CRow } from \"@coreui/react\";\nimport React from \"react\";\nimport { Assets } from \"../../../../assets/Assets\";\n\nconst PairTab = () => {\n  return (\n    <CContainer>\n      <CRow>\n        <CCol md={12} className=\"p-0\">\n          <CCard>\n            <CCardBody>\n              <div className=\"d-flex justify-content-center align-items-center gap-3\">\n                <div>\n                  <img alt=\"qrCode\" src={Assets.QrCode} />\n                </div>\n                <div className=\"d-flex flex-column mb-3\">\n                  <span className=\"fs-16 fw-600 text-secondary\">\n                    User Name : <strong style={{ color: \"black\" }}>10</strong>\n                  </span>\n                  <span className=\"fs-16 fw-600 text-secondary\">\n                    Password : <strong style={{ color: \"black\" }}>98786</strong>\n                  </span>\n                </div>\n              </div>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </CContainer>\n  );\n};\n\nexport default PairTab;\n","import React, { useState } from \"react\";\nimport \"./PatientDetailsView.css\";\nimport PatentProfile from \"../../../Components/Dashboard/PatentProfile/PatentProfile\";\nimport { CCol, CContainer, CRow } from \"@coreui/react\";\nimport PatientTabs from \"../../../Components/Dashboard/PatientTabs/PatientTabs\";\nimport Breadcrumb from \"../../../Components/Breadcrumb/Breadcrumb\";\nimport VitalsTab from \"../../../Components/Dashboard/PatientTabs/VitalsTab/VitalsTab\";\nimport { Assets } from \"../../../assets/Assets\";\nimport MedicalProfile from \"../../../Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalProfile\";\nimport PairTab from \"../../../Components/Dashboard/PatientTabs/PairTab/PairTab\";\nimport CallHistoryView from \"../../CallHistory/CallHistoryView\";\n\nconst PatientDetailsView = () => {\n  const [currentTab, setCurrentTab] = useState(() => {\n    // Initial state setup using localStorage\n    const storedCount = localStorage.getItem(\"patiendDetailTab\");\n    const parsedData = storedCount && JSON.parse(storedCount);\n    return storedCount ? parsedData?.id : 1;\n  });\n  const getCurrentTab = (data) => {\n    setCurrentTab(data);\n  };\n  return (\n    <div className=\"\">\n      {/* <CContainer> */}\n      <CRow className=\"mb-2\">\n        <CCol md={12} xl={5} className=\"mb-2\">\n          <PatentProfile />\n        </CCol>\n        <CCol md={12} xl={7}>\n          {/* tabs={tabs} */}\n          <PatientTabs getCurrentTab={getCurrentTab} />\n        </CCol>\n      </CRow>\n      {currentTab === 1 && <CallHistoryView />}\n\n      {currentTab === 2 && (\n        <CRow>\n          <CCol md={12}>\n            <MedicalProfile />\n          </CCol>\n        </CRow>\n      )}\n      {currentTab === 4 && (\n        <CRow>\n          <CCol md={12}>\n            <PairTab />\n          </CCol>\n        </CRow>\n      )}\n      {/* </CContainer> */}\n    </div>\n  );\n};\n\nexport default PatientDetailsView;\n"],"names":["_ref","paths","lastIndex","length","_jsx","_Fragment","children","CBreadcrumb","map","data","index","CBreadcrumbItem","href","to","className","concat","label","onClick","PatentProfile","CCard","_jsxs","CCardBody","src","Assets","patient1","alt","getCurrentTab","tabs","id","title","image","Call","Notes","Camera","Qr","currentTab","setCurrentTab","useState","storedCount","localStorage","getItem","JSON","parse","setItem","stringify","switchTab","DoctorDetail","profile","name","email","mobile","mrn","age","notes","visible","setVisible","today","Date","startDate","setStartDate","endDate","setEndDate","CModal","onClose","backdrop","CModalHeader","CModalTitle","CModalBody","CFormSelect","options","value","CRow","CCol","lg","sm","DatePicker","showIcon","selected","onChange","date","isClearable","dateFormat","CModalFooter","CButton","color","navigate","useNavigate","Patient","Link","filter","i","DoctorCards","FilterModal","_datas$tableData","datas","removePercent","str","replace","formattedData","tableData","item","_item$date","split","data1","parseInt","CustomTooltip","_ref2","active","payload","style","backgroundColor","border","padding","chartLabel1","LineChart","width","height","margin","top","right","left","bottom","Tooltip","content","Line","type","dataKey","stroke","strokeWidth","category","openModal","filteredProducts","icon","VitalBP","badge","columnsData","result","status","systolic","diastolic","action","VitalBs","blood_sugar","blood_sugar_value","VitalBMI","bmi","weight","VitalHCT","hct_rate","VitalHBeat","ecg_result","ecg","VitalHae","hemoglobin","hemoglobinValue","BKetone","blood_ketone","blood_ketone_value","VitalLipid","total","totalOnly","triglycerides","hdl","ldl","vldl","VitalRespi","SpO2","spo2","Temp","temperature","temperature_value","LFT","BUAcid","blood_uric_acid","blood_uric_acid_value","Urinalysis","chartLabel2","urine","chartValue","ph","sugar","protein","leukocytes","rbc","Urea","urea","urea_value","Creatinine","creatinine","creatinine_value","GFR","gfr","gfr_value","product","md","xl","dt","Badge","CardChart","defaultTab","getSelectedData","isOpen","alignment","size","CloseBtn","data2","minValue","Math","min","maxValue","max","isNaN","Infinity","XAxis","axisLine","tickLine","YAxis","yMax","domain","formatter","tooltipFormatter","props","Legend","CartesianGrid","horizontal","vertical","Set","BarChart","Bar","fill","console","log","LineChartDetails","ColumnChartDetails","addBack","defaultData","selectedTime","setSelectedTime","selectedDate","setSelectedDate","useEffect","defaultDateString","defaultDate","dateString","_datePart$split","_timePart$split","parts","datePart","timePart","month","day","year","Number","hours","minutes","parseDateString","CContainer","class","for","closeOnScroll","wrapperClassName","showTimeSelect","showTimeSelectOnly","timeIntervals","defaultValue","xs","PrimaryButton","SecondaryButton","parseFloat","match","_defaultData$result","extractNum","placeholder","deleteModal","setDeleteModal","editModal","setEditModal","selectedData","setSelectedData","deleteData","editData","column","row","rowIndex","renderCell","BlurBackground","BMI","BPForm","RespirationRateForm","Spo2","Temperature","LFTForm","HeartRate","BSugar","LipidProfileForm","HCT","Hemogloin","BUricAcid","columnKey","toLowerCase","renderActionButton","Warning","EditPencil","Delete","maxDate","ActiveButton","CloseX","_data$badge","chartView","setChartView","addView","setAddView","filterView","setFilterView","filterBack","Add","Filter","Chart","ChartTab","DateRangePicker","DynamicTable","setVitalView","currentTabtitle","titleObject","find","findTitleById","isModalOpen","setIsModalOpen","cardSelectedData","setSelectedCardData","BackBtn","Breadcrumb","MedicalTab","VitalsTab","Modal","closeModal","ObjectiveDetailPage","DateSelector","search","deleteorg","currentPage","onPageChange","totalItems","itemsPerPage","totalPages","setTotalPages","pages","setPages","pagesCount","ceil","Array","from","keys","page","SingleDatePicker","onSelect","isSelected","setIsSelected","toggleSelected","_getCurrentPageItems","dateCards","setCurrentPage","addFormView","setAddFormView","selectedOptions","setSelectedOptions","handleSelect","option","nutritionOpen","setNutritionOpen","constiOpen","setConstiOpen","generalOpen","setGeneralOpen","heentOpen","setHeentOpen","getCurrentPageItems","startIndex","endIndex","slice","DateCards","Pagination","pageNumber","listview","PlusIcon","nutritionTabOpen","MinusIcon","nutritionTabClose","OptionItem","constiTabOpen","constiTabClose","generalTabOpen","generalTabClose","heentTabOpen","heentTabClose","SearchBar","columns","rowData","CTable","CTableHead","CTableRow","CTableHeaderCell","CTableBody","CTableDataCell","file","link","TableEdit","TableDelete","back","setDate","tabindex","Export","addFormPage","OptionsIcon","LabTable","LabForm","Objective","cardData","VitalSig","PhyExam","Lab","Imaging","vitalView","phyView","setPhyView","labView","setLabView","VitalSign","PhysicalExam","Card","MedicalProfile","PairTab","QrCode","PatientDetailsView","parsedData","PatientTabs","CallHistoryView"],"sourceRoot":""}