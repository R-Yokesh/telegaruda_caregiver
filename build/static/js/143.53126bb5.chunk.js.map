{"version":3,"file":"static/js/143.53126bb5.chunk.js","mappings":"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","sources":["Components/Breadcrumb/Breadcrumb.jsx","Components/Buttons/PrimaryButton/PrimaryButton.jsx","Components/Buttons/SecondaryButton/SecondaryButton.jsx","Components/Dashboard/PatentProfile/PatentProfile.jsx","Components/Dashboard/PatientTabs/PatientTabs.jsx","Components/DoctorCards/DoctorCards.jsx","Views/CallHistory/CallHistoryView.jsx","Components/Badge/Badge.jsx","Components/Dashboard/PatientTabs/VitalsTab/VitalsTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalTab.jsx","Components/Cards/Card.jsx","Components/Modal/Modal.jsx","Components/Tables/Table.jsx","Components/Buttons/ActiveButton/ActiveButton.jsx","Components/Charts/LineChart.jsx","Components/Charts/ColumnChartDetails.jsx","Components/Charts/ChartTab.jsx","Components/Tables/DynamicTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/BPForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/HeartRate.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/LFTForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/LipidProfileForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/Temperature.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/Spo2.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/RespirationRateForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/BMI.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/BSugar.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/Hemogloin.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/HCT.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/BUricAcid.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/BKetone.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/Urea.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/Creatinine.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/GFR.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/AddForms/Urinalysis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/DetailPage/ObjectiveDetailPage.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Objective.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalProfile.jsx","Components/Dashboard/PatientTabs/PairTab/PairTab.jsx","Views/Dashboard/PatientDetails/PatientDetailsView.jsx"],"sourcesContent":["import { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\nimport React from \"react\";\nimport \"./Breadcrumb.css\";\n\nconst Breadcrumb = ({ paths }) => {\n  const lastIndex = paths.length - 1;\n  const url = \"/telegaruda-caregiver\";\n  return (\n    <>\n      <CBreadcrumb>\n        {paths.map((data, index) => (\n          <CBreadcrumbItem\n            href={url + data?.to}\n            className={`breadcrumb-item-custom ${\n              lastIndex === index && \"black\"\n            }`}\n          >\n            <span className=\"breadcrumb-label\">{data.label}</span>\n          </CBreadcrumbItem>\n        ))}\n      </CBreadcrumb>\n    </>\n  );\n};\n\nexport default Breadcrumb;\n","import React from \"react\";\nimport \"./PrimaryButton.css\";\n\nconst PrimaryButton = ({ children, onClick }) => {\n  return (\n    <button className=\"button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default PrimaryButton;\n","import React from \"react\";\nimport \"./SecondaryButton.css\";\n\nconst SecondaryButton = ({ children, onClick }) => {\n  return (\n    <button className=\"secondary-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default SecondaryButton;\n\n","import { CCard, CCardBody } from \"@coreui/react\";\nimport React from \"react\";\nimport \"./PatentProfile.css\";\nimport { Assets } from \"../../../assets/Assets\";\n\nconst PatentProfile = () => {\n  return (\n    <>\n      <CCard className=\"card-profile\">\n        <CCardBody className=\"d-flex gap-4\">\n          <div className=\"img-container\">\n            <img src={Assets.patient1} alt=\"profile-img\" />\n          </div>\n          <div className=\"user-details\">\n            <span className=\"user-title\">Ramesh H</span>\n            <div className=\"d-flex flex-wrap gap-2\">\n              <p className=\"user-email\">rammohan@cure.com</p>\n              <p className=\"user-email\">|</p>\n              <p className=\"user-email\">+91 98765 43210</p>\n            </div>\n            <div className=\"d-flex flex-wrap gap-2\">\n              <p className=\"user-email\">MRN: MRN 3</p>\n              <p className=\"user-email\">|</p>\n              <p className=\"user-email\">34 yrs (M)</p>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n    </>\n  );\n};\n\nexport default PatentProfile;\n","import { CCard, CCardBody } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport \"./PatientTabs.css\";\nimport { Assets } from \"../../../assets/Assets\";\n\nconst PatientTabs = ({ getCurrentTab }) => {\n  const tabs = [\n    {\n      id: 1,\n      title: \"Call\",\n      image: Assets.Call,\n    },\n    {\n      id: 2,\n      title: \"Medical Profile\",\n      image: Assets.Notes,\n    },\n\n    {\n      id: 3,\n      title: \"Camera Control\",\n      image: Assets.Camera,\n    },\n    {\n      id: 4,\n      title: \"Pair\",\n      image: Assets.Qr,\n    },\n  ];\n  const [currentTab, setCurrentTab] = useState(tabs[0]);\n\n  const switchTab = (data) => {\n    setCurrentTab(data);\n    getCurrentTab(data.id);\n  };\n  return (\n    <CCard className=\"card-tabs\">\n      <CCardBody className=\"tabs-container\">\n        {tabs.map((data, index) => (\n          <div\n            key={index}\n            className={`tab-items ${\n              data.id === currentTab?.id ? \"tab-active\" : \"\"\n            }`}\n            onClick={() => switchTab(data)}\n          >\n            <img src={data.image} alt=\"call\" className=\"tab-icon\" />\n            <span className=\"tab-title\">{data.title}</span>\n          </div>\n        ))}\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default PatientTabs;\n","import React from 'react'\nimport { Assets } from '../../assets/Assets'\n\nfunction DoctorCards({ DoctorDetail }) {\n    return (\n        <div className='card-sec'>\n            <div className='row align-items-center'>\n                <div className='profile col-4'>\n                    <img src={DoctorDetail.profile} alt=\"Patient-image\" />\n                </div>\n                <div className='patient-details col-8'>\n                    <h5>{DoctorDetail.name}</h5>\n                    <p className='flex-sec-wrap gap-sec'>\n                        <small>{DoctorDetail.email}</small>\n                        <small>|</small>\n                        <small>{DoctorDetail.mobile}</small>\n                    </p>\n                    <p className='flex-sec-wrap gap-sec'>\n                        <small>MRN: {DoctorDetail.mrn}</small>\n                        <small>|</small>\n                        <small>{DoctorDetail.age}</small>\n                    </p>\n                </div>\n            </div>\n            <img src={Assets.notes} className='edit-icon' alt=\"edit-icon\" />\n        </div>\n    )\n}\n\nexport default DoctorCards\n","import React from \"react\";\nimport PatentProfile from \"../../Components/Dashboard/PatentProfile/PatentProfile\";\nimport PatientTabs from \"../../Components/Dashboard/PatientTabs/PatientTabs\";\nimport { CCol, CRow } from \"@coreui/react\";\nimport { Assets } from \"../../assets/Assets\";\nimport { useState } from \"react\";\nimport DoctorCards from \"../../Components/DoctorCards/DoctorCards\";\nimport { Link } from \"react-router-dom\";\n// import FilterModal from '../../Components/FilterModal/FilterModal';\n\nfunction CallHistoryView() {\n\n  const DoctorDetail = [\n    {\n      name: \"Ram Mohan S R\",\n      email: \"rammohan@cure.com\",\n      mobile: \"+91 98765 43210\",\n      mrn: \"MRN 3\",\n      age: \"34 yrs (M)\",\n      profile: Assets.Patient,\n    },\n    {\n      name: \"Ram Mohan S R\",\n      email: \"rammohan@cure.com\",\n      mobile: \"+91 98765 43210\",\n      mrn: \"MRN 3\",\n      age: \"34 yrs (M)\",\n      profile: Assets.Patient,\n    },\n    {\n      name: \"Ram Mohan S R\",\n      email: \"rammohan@cure.com\",\n      mobile: \"+91 98765 43210\",\n      mrn: \"MRN 3\",\n      age: \"34 yrs (M)\",\n      profile: Assets.Patient,\n    },\n    {\n      name: \"Ram Mohan S R\",\n      email: \"rammohan@cure.com\",\n      mobile: \"+91 98765 43210\",\n      mrn: \"MRN 3\",\n      age: \"34 yrs (M)\",\n      profile: Assets.Patient,\n    },\n  ];\n  return (\n    <section className=\"call-history-sec\">\n      <div className=\"flex-sec top-sec\">\n        <div className=\"bread-crumbs\">\n          <p className=\"mb-0\">\n            <Link to=\"/patients\">Patient</Link> /{\" \"}\n            <Link to=\"/patients\" className=\"active\">\n              Existing Patient\n            </Link>\n          </p>\n          <h4>Appointments - Call History</h4>\n        </div>\n        <div className=\"patient-adding\">\n          <button>\n            <img src={Assets.filter} alt=\"filter-sec\" className=\"filter-icon\" />{\" \"}\n            Filter\n          </button>\n        </div>\n      </div>\n      <div className=\"doctor-card-sec\">\n        <div className=\"row\">\n          {DoctorDetail.map((data, i) => (\n            <div className=\"col-4\">\n              <DoctorCards DoctorDetail={data} />\n            </div>\n          ))}\n        </div>\n      </div>\n      {/* <div className='modal-sec'>\n                <FilterModal />\n            </div> */}\n    </section>\n  );\n}\n\nexport default CallHistoryView;\n","import React from \"react\";\n\nconst Badge = ({ label, color }) => {\n  return <div className={`badge badge-${color} fs-14 fw-500`}>{label}</div>;\n};\n\nexport default Badge;\n","import { CBadge, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport React from \"react\";\nimport \"./VitalsTab.css\";\nimport { Assets } from \"../../../../assets/Assets\";\nimport Badge from \"../../../Badge/Badge\";\n\nconst VitalsTab = ({ category, openModal }) => {\n  const data = [\n    {\n      id: 1,\n      icon: Assets.VitalBP,\n      name: \"Blood Pressure\",\n      date: \"Recently Added 27-03-2024\",\n      category: \"Primary Vitals\",\n      badge: [\n        { label: \"SYS : 112\", color: \"success\" },\n        { label: \"DIA : 71\", color: \"success\" },\n        { label: \"Pulse : 89\", color: \"success\" },\n      ],\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"SYSTOLIC\" },\n        { id: 4, label: \"DIASTOLIC\" },\n        { id: 5, label: \"PULSE (IN BPM)\" },\n        { id: 6, label: \"DATE\" },\n        { id: 7, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          systolic: \"112\",\n          diastolic: \"25\",\n          \"pulse_(in_bpm)\": \"89\",\n          chartLabel1: \"PULSE (IN BPM)\",\n          date: \"02-04-2024 12:13PM\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"error\",\n            name: \"High Blood Pressure (Hypertension) Stage 1\",\n          },\n          systolic: \"112\",\n          diastolic: \"25\",\n          \"pulse_(in_bpm)\": \"125\",\n          date: \"05-04-2024 12:13PM\",\n          action: [{ type: \"warning\" }],\n        },\n      ],\n      chartLabel1: \"PULSE (IN BPM)\",\n    },\n    {\n      id: 2,\n      icon: Assets.VitalBs,\n      name: \"Blood Sugar\",\n      category: \"Metabolic And Biochemical Profile\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"110 mg/DL\", color: \"success\" }],\n      chartLabel1: \"Blood Sugar\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"Blood Sugar\" },\n        { id: 4, label: \"Type\" },\n        { id: 5, label: \"DATE\" },\n        { id: 6, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          blood_sugar: \"110 mg/dL\",\n          blood_sugar_value: \"110\",\n          type: \"Random\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          blood_sugar: \"110 mg/dL\",\n          blood_sugar_value: \"110\",\n          type: \"Random\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 3,\n      icon: Assets.VitalBMI,\n      name: \"BMI\",\n      category: \"Primary Vitals\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"24.13\", color: \"success\" }],\n      chartLabel1: \"BMI\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"BMI\" },\n        { id: 4, label: \"Height\" },\n        { id: 5, label: \"Weight\" },\n        { id: 6, label: \"DATE\" },\n        { id: 7, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          bmi: \"24.13\",\n          height: \"159cm\",\n          weight: \"61kg\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"error\",\n            name: \"Overweight\",\n          },\n          bmi: \"27.01\",\n          height: \"180cm\",\n          weight: \"87.5kg\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 4,\n      icon: Assets.VitalHCT,\n      name: \"HCT\",\n      category: \"Hematologic Profile\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"23\", color: \"error\" }],\n      chartLabel1: \"HCT Rate (in %)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"HCT Rate\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          hct_rate: \"42%\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          hct_rate: \"45%\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 5,\n      icon: Assets.VitalHBeat,\n      name: \"Heart Rate\",\n      category: \"Primary Vitals\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"1 Bpm\", color: \"success\" }],\n      chartLabel1: \"Heart Rate (BPM)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"ECG RESULT\" },\n        { id: 3, label: \"ECG\" },\n        { id: 4, label: \"Heart Rate (BPM)\" },\n        { id: 5, label: \"DATE\" },\n        { id: 6, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          ecg_result: { status: \"error\", name: \"Abnormal Heart Rate\" },\n          ecg: \"ecg1.png\",\n          \"heart_rate_(bpm)\": \"120\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          ecg_result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          ecg: \"ecg.png\",\n          \"heart_rate_(bpm)\": \"70\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 6,\n      icon: Assets.VitalHae,\n      name: \"Hemoglobin\",\n      category: \"Hematologic Profile\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"1212\", color: \"error\" }],\n      chartLabel1: \"Hemoglobin (g/dL)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"Hemoglobin\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          hemoglobin: \"15 g/dL\",\n          hemoglobinValue: \"15\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          hemoglobin: \"15 g/dL\",\n          hemoglobinValue: \"15\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 7,\n      icon: Assets.BKetone,\n      name: \"Blood Ketone\",\n      category: \"Hematologic Profile\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"121\", color: \"error\" }],\n      chartLabel1: \"Blood Ketone (mmol/L)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"BLOOD KETONE\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          blood_ketone: \"0.33 mmol/L\",\n          blood_ketone_value: \"0.33\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"warning\",\n            name: \"Normal\",\n          },\n          blood_ketone: \"0.33 mmol/L\",\n          blood_ketone_value: \"0.33\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 8,\n      icon: Assets.VitalLipid,\n      name: \"Lipid Profile\",\n      category: \"Metabolic And Biochemical Profile\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [\n        { label: \"LDL: Optimal\", color: \"success\" },\n        { label: \"MDL: High\", color: \"error\" },\n        { label: \"VLDL: High\", color: \"error\" },\n        { label: \"TG: Optimal\", color: \"error\" },\n        { label: \"Total: Optimal\", color: \"success\" },\n      ],\n      chartLabel1: \"Lipid Profile (mg/dL)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"Total\" },\n        { id: 4, label: \"Triglycerides\" },\n        { id: 5, label: \"HDL\" },\n        { id: 6, label: \"LDL\" },\n        { id: 7, label: \"HDL/LDL\" },\n        { id: 8, label: \"VLDL\" },\n        { id: 9, label: \"DATE\" },\n        { id: 10, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          total: \"180 mg/dL\",\n          totalOnly: \"180\",\n          triglycerides: \"140 mg/dL\",\n          hdl: \"60 mg/dL\",\n          ldl: \"60 mg/dL\",\n          \"hdl/ldl\": \"1\",\n          vldl: \"5 mg/dL\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          total: \"180 mg/dL\",\n          totalOnly: \"190\",\n          triglycerides: \"140 mg/dL\",\n          hdl: \"60 mg/dL\",\n          ldl: \"60 mg/dL\",\n          \"hdl/ldl\": \"1\",\n          vldl: \"5 mg/dL\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 9,\n      icon: Assets.VitalRespi,\n      name: \"Respiration Rate\",\n      category: \"Primary Vitals\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"44\", color: \"error\" }],\n      chartLabel1: \"Respiration Rate (BPM)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"Respiration Rate (BPM)\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"error\", name: \"High\" },\n          \"respiration_rate_(bpm)\": \"44\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          \"respiration_rate_(bpm)\": \"18\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 10,\n      icon: Assets.SpO2,\n      name: \"SpO2\",\n      category: \"Primary Vitals\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"92%\", color: \"success\" }],\n      chartLabel1: \"SpO2 (%)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"Pulse Rate (BPM)\" },\n        { id: 4, label: \"SpO2\" },\n        { id: 5, label: \"DATE\" },\n        { id: 6, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"error\", name: \"Abnormal\" },\n          \"pulse_rate_(bpm)\": \"120\",\n          spo2: \"99%\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          spo2: \"90%\",\n          \"pulse_rate_(bpm)\": \"70\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 11,\n      icon: Assets.Temp,\n      name: \"Temperature\",\n      category: \"Primary Vitals\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"36.6*C\", color: \"success\" }],\n      chartLabel1: \"Temperature (°F)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"Temperature\" },\n        { id: 4, label: \"Type\" },\n        { id: 5, label: \"DATE\" },\n        { id: 6, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          temperature: \"96.80 ° F, 36 ° C\",\n          temperature_value: \"96.8\",\n          type: \"Oral\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          temperature: \"97.88 ° F, 36.6 ° C\",\n          temperature_value: \"97.8\",\n          type: \"Oral\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 12,\n      icon: Assets.LFT,\n      name: \"Lung Function Test (LFT)\",\n      date: \"Recently Added 27-03-2024\",\n      category: \"Primary Vitals\",\n      chartLabel1: \"FVC (L)\",\n      badge: [\n        { label: \"FEV1: 1L\", color: \"error\" },\n        { label: \"FVC: 1L\", color: \"error\" },\n        { label: \"FEV1/FVC: 40\", color: \"error\" },\n        { label: \"PEF: 1L/min\", color: \"error\" },\n      ],\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"FVC (L)\" },\n        { id: 3, label: \"FEV1 (L)\" },\n        { id: 4, label: \"FEV1/FVC\" },\n        { id: 5, label: \"PEF (L/MIN)\" },\n        { id: 6, label: \"SVC (L)\" },\n        { id: 7, label: \"DATE\" },\n        { id: 8, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          \"fvc_(l)\": \"5.94\",\n          \"fev1_(l)\": \"2.45\",\n          \"fev1/fvc\": \"41\",\n          \"pef_(l/min)\": \"2.62\",\n          \"svc_(l)\": \"3.51\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          \"fvc_(l)\": \"6.94\",\n          \"fev1_(l)\": \"2.45\",\n          \"fev1/fvc\": \"41\",\n          \"pef_(l/min)\": \"2.62\",\n          \"svc_(l)\": \"3.51\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 13,\n      icon: Assets.BUAcid,\n      name: \"Blood Uric Acid\",\n      category: \"Hematologic Profile\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"6mg/dl\", color: \"error\" }],\n      chartLabel1: \"Blood Uric Acid (mg/dL)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"BLOOD URIC ACID\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          blood_uric_acid: \"5 mg/dL\",\n          blood_uric_acid_value: \"5\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"warning\",\n            name: \"Normal\",\n          },\n          blood_uric_acid: \"5 mg/dL\",\n          blood_uric_acid_value: \"5\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 14,\n      icon: Assets.Urinalysis,\n      name: \"Urinalysis\",\n      category: \"Renal and Metabolic Markers\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"100pmol/d\", color: \"error\" }],\n      chartLabel1: \"Urine (μmol/kg/d)\",\n      chartLabel2: \"ph\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"URINE\" },\n        { id: 4, label: \"PH\" },\n        { id: 5, label: \"SUGAR\" },\n        { id: 6, label: \"PROTEIN\" },\n        { id: 7, label: \"LEUKOCYTES\" },\n        { id: 8, label: \"RBC\" },\n        { id: 9, label: \"DATE\" },\n        { id: 10, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          urine: \"100 μmol/kg/d\",\n          chartValue: \"100\",\n          ph: \"17.5\",\n          sugar: \"0.8 mmol/L\",\n          protein: \"None\",\n          leukocytes: \"None\",\n          rbc: \"None\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"success\",\n            name: \"Normal\",\n          },\n          urine: \"110 μmol/kg/d\",\n          chartValue: \"110\",\n          ph: \"6.5\",\n          sugar: \"0.8 mmol/L\",\n          protein: \"None\",\n          leukocytes: \"None\",\n          rbc: \"None\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 15,\n      icon: Assets.Urea,\n      name: \"Urea\",\n      date: \"Recently Added 27-03-2024\",\n      category: \"Renal and Metabolic Markers\",\n      badge: [{ label: \"20mg/dl\", color: \"error\" }],\n      chartLabel1: \"Urea (mg/dL)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"UREA\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          urea: \"20 mg/dL\",\n          urea_value: \"20\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"warning\",\n            name: \"Normal\",\n          },\n          urea: \"20 mg/dL\",\n          urea_value: \"20\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 16,\n      icon: Assets.Creatinine,\n      name: \"Creatinine\",\n      category: \"Renal and Metabolic Markers\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"85pmol/L\", color: \"error\" }],\n      chartLabel1: \"Creatinine (μmol/L)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"CREATININE\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          creatinine: \"88 μmol/L\",\n          creatinine_value: \"88\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"warning\",\n            name: \"Normal\",\n          },\n          creatinine: \"88 μmol/L\",\n          creatinine_value: \"88\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n    {\n      id: 17,\n      icon: Assets.GFR,\n      name: \"GFR\",\n      category: \"Renal and Metabolic Markers\",\n      date: \"Recently Added 27-03-2024\",\n      badge: [{ label: \"90ml/min\", color: \"error\" }],\n      chartLabel1: \"GFR (ml/min)\",\n      columnsData: [\n        { id: 1, label: \"NO.\" },\n        { id: 2, label: \"RESULT\" },\n        { id: 3, label: \"GFR\" },\n        { id: 4, label: \"DATE\" },\n        { id: 5, label: \"ACTION\" },\n      ],\n      tableData: [\n        {\n          \"no.\": 1,\n          result: { status: \"success\", name: \"Normal\" },\n          gfr: \"90 mL/min\",\n          gfr_value: \"90\",\n          date: \"06-24-2024 10:15\",\n          action: [{ type: \"warning\" }],\n        },\n        {\n          \"no.\": 2,\n          result: {\n            status: \"warning\",\n            name: \"Normal\",\n          },\n          gfr: \"90 mL/min\",\n          gfr_value: \"90\",\n          date: \"05-24-2024 10:15\",\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\n        },\n      ],\n    },\n  ];\n\n  const filteredProducts = data.filter(\n    (product) => product.category === category\n  );\n  return (\n    <>\n      <CRow className=\"mb-1\">\n        {/* <CCol md={12}>\n          <Breadcrumb\n            paths={[\n              { label: \"Patient\", to: \"/patient\" },\n              { label: \"Vitals\", to: \"/patient/details\" },\n            ]}\n          />\n        </CCol> */}\n        <CCol md={12}>\n          {/* <span className=\"vitals-title\">VITALS</span> */}\n          <CRow className=\"mt-3 \">\n            {filteredProducts?.map((item, index) => (\n              <CCol md={6} xl={4} key={index} className=\"mb-3\">\n                <CCard className=\"vital-cards\" onClick={() => openModal(item)}>\n                  <CCardBody>\n                    <div className=\"vital-icon-and-title\">\n                      <div>\n                        <img alt=\"bp\" src={item.icon} />\n                      </div>\n                      <div className=\"vital-card-title\">\n                        <span className=\"vital-card-text-bold\">\n                          {item.name}\n                        </span>\n                        <span className=\"vital-card-text\">{item.date}</span>\n                      </div>\n                    </div>\n                    <div className=\"vital-badge\">\n                      <div className=\"vital-badge-list\">\n                        {item.badge.map((dt, i) => (\n                          // <CBadge color={dt.color} key={i}>\n                          //   {dt.label}\n                          // </CBadge>\n                          <Badge label={dt?.label} color={dt?.color} />\n                        ))}\n                      </div>\n                    </div>\n                    <div className=\"vital-line-container\">\n                      <img alt=\"line\" src={Assets.Vitalline} />\n                    </div>\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            ))}\n          </CRow>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default VitalsTab;\n","import { CCard, CCardBody } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport \"./MedicalProfile.css\";\n\nconst MedicalTab = ({ tabs, getCurrentTab, defaultTab }) => {\n  const [currentTab, setCurrentTab] = useState(tabs[defaultTab]);\n\n  const switchTab = (data) => {\n    setCurrentTab(data);\n    getCurrentTab(data.id);\n  };\n  return (\n    <CCard className=\"medical-tabs\">\n      <CCardBody className=\"medical-tabs-container\">\n        {tabs.map((data, index) => (\n          <div\n            key={index}\n            className={`medical-tab-items ${\n              data.id === currentTab?.id ? \"medical-tab-active\" : \"\"\n            }`}\n            onClick={() => switchTab(data)}\n          >\n            <span\n              className={\n                data.id === currentTab?.id\n                  ? \"medical-tab-title-active\"\n                  : \"medical-tab-title\"\n              }\n            >\n              {data.title}\n            </span>\n          </div>\n        ))}\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default MedicalTab;\n","import { CCard, CCardBody } from \"@coreui/react\";\nimport React from \"react\";\nimport \"./Cards.css\";\n\nconst Card = ({ data, getSelectedData }) => {\n  return (\n    <>\n      <CCard className=\"card\" onClick={() => getSelectedData(data)}>\n        <CCardBody\n          key={data.id}\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n        >\n          <img alt=\"images\" src={data?.image} />\n          <span className=\"mt-2 card-text-title\">{data?.name}</span>\n        </CCardBody>\n      </CCard>\n    </>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./Modal.css\"; // Import your CSS file for styling modal (optional)\nimport { CModal, CModalBody } from \"@coreui/react\";\nimport { Assets } from \"../../assets/Assets\";\n\nconst Modal = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n\n  return (\n    <CModal\n      visible={isOpen}\n      onClose={onClose}\n      aria-labelledby=\"LiveDemoExampleLabel\"\n      alignment=\"center\"\n      size=\"lg\"\n    >\n      <CModalBody className=\"p-0\">\n        <div className=\"close-modal\" onClick={onClose}>\n          <img\n            src={Assets.CloseBtn}\n            alt=\"close-btn\"\n            style={{ width: \"100%\" }}\n          />{\" \"}\n        </div>\n        <div>{children}</div>\n      </CModalBody>\n    </CModal>\n  );\n};\n\nexport default Modal;\n","import {\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport React from \"react\";\nimport Badge from \"../Badge/Badge\";\nimport { Assets } from \"../../assets/Assets\";\n\nconst Table = ({ columns, rowData, data }) => {\n  const formattedColumns = data?.columnsData.map((column) => ({\n    ...column,\n    accessor: column.label.toLowerCase().replace(/\\s/g, \"_\"), // Create accessor for dynamic data access\n  }));\n\n  // Handle potential missing rows\n  const formattedData = data?.tableData.map((row) => {\n    return formattedColumns.reduce((acc, column) => {\n      const value = row[column.label.toLowerCase().replace(/\\s/g, \"_\")]; // Access data based on accessor\n      acc[column.accessor === \"ecg_result\" ? \"result\" : column.accessor] =\n        value || \"-\"; // Set default value if data is missing\n      return acc;\n    }, {});\n  });\n\n  console.log(data, formattedColumns, \"first formattedData\", formattedData);\n\n  return (\n    // <>\n    //   <CTable className=\"responsive-table\">\n    //     <CTableHead color=\"dark\">\n    //       <CTableRow>\n    //         {columns?.map((data, i) => (\n    //           <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\n    //         ))}\n    //       </CTableRow>\n    //     </CTableHead>\n    //     <CTableBody>\n    //       {rowData?.map((dt, i) => (\n    //         <CTableRow key={i}>\n    //           <CTableHeaderCell>{dt?.id}</CTableHeaderCell>\n    //           <CTableDataCell>\n    //             <Badge label={dt?.result?.name} color={dt?.result?.status} />\n    //           </CTableDataCell>\n    //           <CTableDataCell>{dt?.systolic}</CTableDataCell>\n    //           <CTableDataCell>{dt?.diastolic}</CTableDataCell>\n    //           <CTableDataCell>{dt?.pluse}</CTableDataCell>\n    //           <CTableDataCell>{dt?.date}</CTableDataCell>\n    //           <CTableDataCell>{dt?.diastolic}</CTableDataCell>\n    //         </CTableRow>\n    //       ))}\n    //     </CTableBody>\n    //   </CTable>\n    // </>\n    <>\n      <div className=\"responsive-table-container\">\n        <table class=\"responsive-table\">\n          <thead>\n            <tr>\n              {formattedColumns?.map((data, i) => (\n                <th key={i}>{data?.label}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {formattedData?.map((dt, i) => (\n              <tr key={i}>\n                <td>{dt?.id}</td>\n                <td>\n                  <div style={{ width: \"180px\" }}>\n                    <Badge\n                      label={dt?.result?.name}\n                      color={dt?.result?.status}\n                    />\n                  </div>\n                </td>\n                <td>\n                  <span className=\"fs-16 fw-500\">{dt?.systolic}</span>\n                </td>\n                <td>\n                  <span className=\"fs-16 fw-500\">{dt?.diastolic}</span>\n                </td>\n                <td>\n                  <span className=\"fs-16 fw-500\">{dt?.pluse}</span>\n                </td>\n                <td>\n                  <div style={{ width: \"100px\" }}>\n                    <div className=\"table-content fs-16 fw-500\">{dt?.date}</div>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-flex gap-2\">\n                    {dt?.action?.map((data, i) => (\n                      <div className=\"d-flex\">\n                        {data.type === \"warning\" && (\n                          <img\n                            src={Assets.Warning}\n                            alt=\"warn\"\n                            className=\"cursor\"\n                          />\n                        )}\n                        {data.type === \"edit\" && (\n                          <img\n                            src={Assets.EditPencil}\n                            alt=\"warn\"\n                            className=\"cursor\"\n                          />\n                        )}\n                        {data.type === \"delete\" && (\n                          <img\n                            src={Assets.Delete}\n                            alt=\"warn\"\n                            className=\"cursor\"\n                          />\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </td>\n              </tr>\n            ))}\n            \n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport \"./ActiveButton.css\";\n\nconst ActiveButton = ({ children, onClick }) => {\n  return (\n    <button className=\"act-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default ActiveButton;\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nconst LineChartDetails = ({ datas }) => {\n  function removePercent(str) {\n    // Remove trailing percent sign (%) using String.replace() method\n    // Replace '%' with an empty string ''\n    return str?.replace(\"%\", \"\");\n  }\n\n  // Transform tableData to the desired format\n  const formattedData = datas?.tableData?.map((item) => ({\n    name: item?.date?.split(\" \")[0], // Extract date part only\n    data1: parseInt(\n      item?.[\"blood_ketone_value\"] ||\n        item?.[\"hemoglobinValue\"] ||\n        item?.[\"bmi\"] ||\n        item?.[\"blood_sugar_value\"] ||\n        item?.[\"pulse_(in_bpm)\"] ||\n        item?.[\"heart_rate_(bpm)\"] ||\n        item?.[\"respiration_rate_(bpm)\"] ||\n        removePercent(item?.[\"spo2\"]) ||\n        removePercent(item?.[\"hct_rate\"]) ||\n        item?.[\"fvc_(l)\"] ||\n        item?.[\"totalOnly\"] ||\n        item?.[\"chartValue\"] ||\n        item?.[\"temperature_value\"] ||\n        item?.[\"blood_uric_acid_value\"] ||\n        item?.[\"urea_value\"] ||\n        item?.[\"creatinine_value\"] ||\n        item?.[\"gfr_value\"]\n    ), // Convert pluse to integer if needed\n    data2: parseInt(item?.[\"ph\"] ? item?.[\"ph\"] : \"\"),\n  }));\n\n  const data = [\n    {\n      name: \"21-03-2024\",\n      amt: 70,\n    },\n    {\n      name: \"22-03-2024\",\n      amt: 70,\n    },\n    {\n      name: \"23-03-2024\",\n      amt: 100,\n    },\n    {\n      name: \"24-03-2024\",\n      amt: 95,\n    },\n    {\n      name: \"25-03-2024\",\n      amt: 70,\n    },\n    {\n      name: \"26-03-2024\",\n      amt: 77,\n    },\n    {\n      name: \"27-03-2024\",\n      amt: 100,\n    },\n  ];\n\n  const minValue = Math?.min(...formattedData?.map((item) => item.data1));\n  const maxValue = Math?.max(\n    ...formattedData?.map((item) =>\n      !isNaN(item?.data1) ? item?.data1 : -Infinity\n    )\n  );\n  // Custom tooltip formatter function\n  const tooltipFormatter = (value, name, props) => {\n    if (name === \"data1\") {\n      return [value, datas?.chartLabel1];\n    }\n    if (name === \"data2\") {\n      return [value, datas?.chartLabel2];\n    }\n    return [name, value];\n  };\n\n  return (\n    <LineChart\n      width={750}\n      height={300}\n      data={formattedData}\n      margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\n    >\n      <XAxis\n        dataKey=\"name\"\n        padding={{ left: 30, right: 30, bottom: 20 }}\n        axisLine={false}\n        tickLine={false}\n      />\n      <YAxis\n        yMax={Math.min(...formattedData?.map((item) => item?.data1))}\n        domain={[minValue, maxValue + 10]}\n        axisLine={false}\n        tickLine={false}\n      />\n      <Tooltip formatter={tooltipFormatter} />\n      {!formattedData[0].data2 ? (\n        <Legend\n          payload={[\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\n          ]}\n        />\n      ) : (\n        <Legend\n          payload={[\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\n            { value: datas?.chartLabel2, type: \"line\", color: \"#0194CF\" },\n          ]}\n        />\n      )}\n      <CartesianGrid horizontal={true} vertical={false} strokeWidth={1} />\n      <Line type=\"linear\" dataKey=\"data1\" stroke=\"#0084CF\" />\n      {formattedData[0].data2 && (\n        <Line type=\"linear\" dataKey=\"data2\" stroke=\"#0194CF\" />\n      )}\n    </LineChart>\n  );\n};\n\nexport default LineChartDetails;\n","import React from \"react\";\nimport {\n  Bar,\n  BarChart,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nconst ColumnChartDetails = ({ datas }) => {\n  function removePercent(str) {\n    // Remove trailing percent sign (%) using String.replace() method\n    // Replace '%' with an empty string ''\n    return str?.replace(\"%\", \"\");\n  }\n  // Transform tableData to the desired format\n  const formattedData = datas?.tableData?.map((item) => ({\n    name: item?.date.split(\" \")[0],\n    data1: parseInt(\n      item?.[\"blood_ketone_value\"] ||\n        item?.[\"hemoglobinValue\"] ||\n        item?.[\"bmi\"] ||\n        item?.[\"blood_sugar_value\"] ||\n        item?.[\"pulse_(in_bpm)\"] ||\n        item?.[\"heart_rate_(bpm)\"] ||\n        item?.[\"respiration_rate_(bpm)\"] ||\n        removePercent(item?.[\"spo2\"]) ||\n        removePercent(item?.[\"hct_rate\"]) ||\n        item?.[\"fvc_(l)\"] ||\n        item?.[\"totalOnly\"] ||\n        item?.[\"chartValue\"] ||\n        item?.[\"temperature_value\"] ||\n        item?.[\"blood_uric_acid_value\"] ||\n        item?.[\"urea_value\"] ||\n        item?.[\"creatinine_value\"] ||\n        item?.[\"gfr_value\"]\n    ),\n    data2: parseInt(item?.[\"ph\"] ? item?.[\"ph\"] : \"\"),\n  }));\n  const data = [\n    {\n      name: \"21-03-2024\",\n      bloodPressure: 70,\n    },\n    {\n      name: \"22-03-2024\",\n      bloodPressure: 70,\n    },\n    {\n      name: \"23-03-2024\",\n      bloodPressure: 100,\n    },\n    {\n      name: \"24-03-2024\",\n      bloodPressure: 95,\n    },\n    {\n      name: \"25-03-2024\",\n      bloodPressure: 70,\n    },\n    {\n      name: \"26-03-2024\",\n      bloodPressure: 77,\n    },\n    {\n      name: \"27-03-2024\",\n      bloodPressure: 100,\n    },\n  ];\n  const minValue = Math?.min(...formattedData?.map((item) => item.data1));\n  const maxValue = Math?.max(\n    ...formattedData?.map((item) =>\n      !isNaN(item?.data1) ? item?.data1 : -Infinity\n    )\n  );\n  const bloodPressureValues = new Set(\n    formattedData?.map((item) => datas?.name)\n  ); // Create a Set with \"Blood Pressure\"\n\n  const tooltipFormatter = (value, name, props) => {\n    if (name === \"data1\") {\n      return [value, datas?.chartLabel1];\n    }\n    if (name === \"data2\") {\n      return [value, datas?.chartLabel2];\n    }\n    return [name, value];\n  };\n  return (\n    <BarChart\n      width={720}\n      height={300}\n      data={formattedData}\n      margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\n    >\n      <XAxis dataKey=\"name\" padding={{ left: 30, right: 30 }} />\n      <YAxis domain={[0, maxValue + 10]} axisLine={false} tickLine={false} />\n      {/* {datas.name === \"SpO2\" ? (\n        <Tooltip formatter={(value) => `${value}%`} />\n      ) : ( */}\n      <Tooltip formatter={tooltipFormatter} />\n      {/* )} */}\n      {/* <Legend\n        payload={[...bloodPressureValues]?.map((value) => ({\n          id: value, // Set id (optional)\n          value: value, // Legend label\n          color: \"#0084CF\",\n        }))}\n      /> */}\n\n      {!formattedData[0].data2 ? (\n        <Legend\n          payload={[{ value: datas?.name, type: \"square\", color: \"#0084CF\" }]}\n        />\n      ) : (\n        <Legend\n          payload={[\n            { value: datas?.chartLabel1, type: \"square\", color: \"#0084CF\" },\n            { value: datas?.chartLabel2, type: \"square\", color: \"#0194CF\" },\n          ]}\n        />\n      )}\n      <Bar dataKey=\"data1\" fill=\"#0084CF\" />\n      {formattedData[0].data2 && <Bar dataKey=\"data2\" fill=\"#0094CF\" />}\n    </BarChart>\n  );\n};\n\nexport default ColumnChartDetails;\n","import React, { useState } from \"react\";\nimport LineChartDetails from \"./LineChart\";\nimport ColumnChartDetails from \"./ColumnChartDetails\";\n\nconst ChartTab = ({ data }) => {\n  console.log(data, \"data d\");\n  const tabs = [\n    {\n      id: 1,\n      title: \"LINE\",\n    },\n    {\n      id: 2,\n      title: \"COLUMN\",\n    },\n  ];\n  const [currentTab, setCurrentTab] = useState(tabs[0]);\n\n  const switchTab = (data) => {\n    setCurrentTab(data);\n  };\n  return (\n    <div>\n      <div className=\"chart-tabs-container mb-3\">\n        {tabs.map((data, index) => (\n          <div\n            key={index}\n            className={`chart-tab-items ${\n              data.id === currentTab?.id ? \"chart-tab-active\" : \"\"\n            }`}\n            onClick={() => switchTab(data)}\n          >\n            <span\n              className={`chart-tab-title ${\n                data.id === currentTab?.id ? \"chart-tab-title-active\" : \"\"\n              }`}\n            >\n              {data.title}\n            </span>\n          </div>\n        ))}\n      </div>\n      <div className=\"mt-2\">\n        {currentTab?.id === 1 && <LineChartDetails datas={data} />}\n        {currentTab?.id === 2 && <ColumnChartDetails datas={data}/>}\n      </div>\n    </div>\n  );\n};\n\nexport default ChartTab;\n","import React from \"react\";\nimport Badge from \"../Badge/Badge\";\nimport { Assets } from \"../../assets/Assets\";\n\nconst DynamicTable = ({ columnsData, tableData }) => {\n  return (\n    <>\n      <div className=\"responsive-table-container\">\n        <table class=\"responsive-table\">\n          <thead>\n            <tr>\n              {columnsData?.map((column) => (\n                <th key={column.id}>{column.label}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {tableData?.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                {columnsData.map((column) => (\n                  <td key={`${rowIndex}-${column?.id}`}>\n                    {renderCell(row, column)}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n\n  function renderCell(row, column) {\n    const columnKey = getColumnKey(column?.label);\n    const value = row[columnKey];\n\n    if (columnKey === \"ecg_result\") {\n      return (\n        <div style={{ width: \"180px\" }}>\n          <Badge label={value?.name} color={value?.status} />\n        </div>\n      );\n    } else if (columnKey === \"result\") {\n      return (\n        <div style={{ width: \"180px\" }}>\n          <Badge label={value?.name} color={value?.status} />\n        </div>\n      );\n    } else if (columnKey === \"action\") {\n      return (\n        <div className=\"d-flex gap-2\">\n          {value.map((data, i) => (\n            <div key={i} className=\"d-flex\">\n              {renderActionButton(data)}\n            </div>\n          ))}\n        </div>\n      );\n    } else {\n      // Default rendering for regular data\n      return <span className=\"fs-16 fw-500\">{value}</span>;\n    }\n  }\n\n  function renderActionButton(data) {\n    switch (data.type) {\n      case \"warning\":\n        return <img src={Assets.Warning} alt=\"warn\" className=\"cursor\" />;\n      case \"edit\":\n        return <img src={Assets.EditPencil} alt=\"edit\" className=\"cursor\" />;\n      case \"delete\":\n        return <img src={Assets.Delete} alt=\"delete\" className=\"cursor\" />;\n      default:\n        return null;\n    }\n  }\n\n  function getColumnKey(columnLabel) {\n    // Convert label to a key format used in your data object\n    // Example: \"Heart Rate (BPM)\" -> \"heart_rate_(bpm)\"\n    return columnLabel.toLowerCase().replace(/\\s+/g, \"_\");\n  }\n};\n\nexport default DynamicTable;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst BPForm = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Systolic *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={6}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Diastolic *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={6}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Pulse (in BPM) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default BPForm;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst HeartRate = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Heart Rate *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                ECG *\n              </label>\n              <input type=\"file\" id=\"file\" />\n              <label for=\"file\">Choose file</label>\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1 justify-content-center h-100\">\n              <span className=\"mt-2\">No File Chosen</span>\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default HeartRate;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst LFTForm = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                FVC (L) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                FEV1 (L) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                FEV1/FVC Ratio *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                PEF (L/Min) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                SVC (L) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={8}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Notes *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default LFTForm;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst LipidProfileForm = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Result *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n                placeholder=\"Enter\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (Total) *\n              </label>\n              <select\n                class=\"form-select\"\n                aria-label=\"Disabled select example\"\n                defaultValue={\"mg/dL\"}\n              >\n                <option value=\"dL\">dL</option>\n                <option value=\"mg\">mg</option>\n                <option value=\"mg/dL\">mg/dL</option>\n              </select>\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Total *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (Triglycerides) *\n              </label>\n              <select\n                class=\"form-select\"\n                aria-label=\"Disabled select example\"\n                defaultValue={\"mg/dL\"}\n              >\n                <option value=\"dL\">dL</option>\n                <option value=\"mg\">mg</option>\n                <option value=\"mg/dL\">mg/dL</option>\n              </select>\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Triglycerides *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (HDL) *\n              </label>\n              <select\n                class=\"form-select\"\n                aria-label=\"Disabled select example\"\n                defaultValue={\"mg/dL\"}\n              >\n                <option value=\"dL\">dL</option>\n                <option value=\"mg\">mg</option>\n                <option value=\"mg/dL\">mg/dL</option>\n              </select>\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                HDL *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (LDL) *\n              </label>\n              <select\n                class=\"form-select\"\n                aria-label=\"Disabled select example\"\n                defaultValue={\"mg/dL\"}\n              >\n                <option value=\"dL\">dL</option>\n                <option value=\"mg\">mg</option>\n                <option value=\"mg/dL\">mg/dL</option>\n              </select>\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                LDL *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                HDL/LDL *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (VLDL) *\n              </label>\n              <select\n                class=\"form-select\"\n                aria-label=\"Disabled select example\"\n                defaultValue={\"mg/dL\"}\n              >\n                <option value=\"dL\">dL</option>\n                <option value=\"mg\">mg</option>\n                <option value=\"mg/dL\">mg/dL</option>\n              </select>\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                VLDL *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default LipidProfileForm;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst Temperature = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Type *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Temperature *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default Temperature;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst Spo2 = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Pulse Rate(BPM) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                SpO2 (%) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default Spo2;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst RespirationRateForm = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Respiration Rate(BPM) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default RespirationRateForm;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst BMI = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (Height)*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Height *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit (Weight)*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Weight *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                BMI *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default BMI;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst BSugar = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Type *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Unit *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Blood Sugar *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default BSugar;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst Hemogloin = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n              Hemogloin(g/dL) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default Hemogloin;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst HCT = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n              HCT(%) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default HCT;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst BUricAcid = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Blood Uric Acid(mg/dL) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default BUricAcid;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst BKetone = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n              Blood Ketone(mmol/L) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default BKetone;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst Urea = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n              Urea(mg/dL) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default Urea;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst Creatinine = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Creatinine(μmol/L) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default Creatinine;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst GFR = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                GFR(mL/min) *\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default GFR;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\n\nconst Urinalysis = ({ addBack }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleTimeChange = (date) => {\n    setSelectedTime(date);\n  };\n  return (\n    <>\n      <CContainer>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Date *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedDate}\n                onChange={handleDateChange}\n                isClearable\n                closeOnScroll={true}\n                wrapperClassName=\"date-picker-wrapper\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative d-flex flex-column gap-1\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Time *\n              </label>\n              <DatePicker\n                showIcon\n                selected={selectedTime}\n                onChange={handleTimeChange}\n                showTimeSelect\n                showTimeSelectOnly\n                isClearable\n                closeOnScroll={true}\n                timeIntervals={5}\n                dateFormat=\"h:mm aa\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Urine (μmol/kg/d)*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Urine (pH)*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Sugar (mg/dL)*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Protein*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                Leukocytes*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n          <CCol lg={4}>\n            <div class=\"position-relative\">\n              <label for=\"validationTooltip01\" class=\"form-label\">\n                RBC*\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"validationTooltip01\"\n              />\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CCol xs={3} md={2}>\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\n          </CCol>\n          <CCol xs={3} md={2}>\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  );\n};\n\nexport default Urinalysis;\n","import {\n  CBadge,\n  CCol,\n  CContainer,\n  CFormInput,\n  CModal,\n  CModalBody,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\nimport { Assets } from \"../../../../../../assets/Assets\";\nimport Table from \"../../../../../Tables/Table\";\nimport Badge from \"../../../../../Badge/Badge\";\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\nimport ChartTab from \"../../../../../Charts/ChartTab\";\nimport DynamicTable from \"../../../../../Tables/DynamicTable\";\n\nimport BPForm from \"../AddForms/BPForm\";\nimport HeartRate from \"../AddForms/HeartRate\";\nimport LFTForm from \"../AddForms/LFTForm\";\nimport LipidProfileForm from \"../AddForms/LipidProfileForm\";\nimport Temperature from \"../AddForms/Temperature\";\nimport Spo2 from \"../AddForms/Spo2\";\nimport RespirationRateForm from \"../AddForms/RespirationRateForm\";\nimport BMI from \"../AddForms/BMI\";\nimport BSugar from \"../AddForms/BSugar\";\nimport Hemogloin from \"../AddForms/Hemogloin\";\nimport HCT from \"../AddForms/HCT\";\nimport BUricAcid from \"../AddForms/BUricAcid\";\nimport BKetone from \"../AddForms/BKetone\";\nimport Urea from \"../AddForms/Urea\";\nimport Creatinine from \"../AddForms/Creatinine\";\nimport GFR from \"../AddForms/GFR\";\nimport Urinalysis from \"../AddForms/Urinalysis\";\n\nconst ObjectiveDetailPage = ({ data }) => {\n  const [chartView, setChartView] = useState(false);\n  const [addView, setAddView] = useState(false);\n\n  const columns = [\n    { id: 1, label: \"NO.\" },\n    { id: 2, label: \"RESULT\" },\n    { id: 3, label: \"SYSTOLIC\" },\n    { id: 4, label: \"DIASTOLIC\" },\n    { id: 5, label: \"PLUSE (IN BPM\" },\n    { id: 6, label: \"DATE\" },\n    { id: 7, label: \"ACTION\" },\n  ];\n\n  const rowData = [\n    {\n      id: 1,\n      result: { status: \"success\", name: \"Normal\" },\n      systolic: \"112\",\n      diastolic: \"25\",\n      pluse: \"89\",\n      date: \"02-04-2024 12:13PM\",\n      action: [{ type: \"warning\" }],\n    },\n    {\n      id: 2,\n      result: {\n        status: \"error\",\n        name: \"High Blood Pressure (Hypertension) Stage 1\",\n      },\n      systolic: \"112\",\n      diastolic: \"25\",\n      pluse: \"89\",\n      date: \"02-04-2024 12:13PM\",\n      action: [{ type: \"edit\" }, { type: \"delete\" }],\n    },\n    {\n      id: 3,\n      result: { status: \"error\", name: \"Normal\" },\n      systolic: \"118\",\n      diastolic: \"12\",\n      pluse: \"-\",\n      date: \"02-04-2024 12:13PM\",\n      action: [{ type: \"edit\" }, { type: \"delete\" }],\n    },\n    {\n      id: 4,\n      result: {\n        status: \"error\",\n        name: \"High Blood Pressure (Hypertension) Stage 1\",\n      },\n      systolic: \"112\",\n      diastolic: \"25\",\n      pluse: \"89\",\n      date: \"02-04-2024 12:13PM\",\n      action: [{ type: \"edit\" }, { type: \"delete\" }],\n    },\n    {\n      id: 5,\n      result: { status: \"success\", name: \"Normal\" },\n      systolic: \"118\",\n      diastolic: \"12\",\n      pluse: \"45\",\n      date: \"02-04-2024 12:13PM\",\n      action: [{ type: \"edit\" }, { type: \"delete\" }],\n    },\n  ];\n\n  const chartPage = () => {\n    setChartView(true);\n  };\n  const tablePage = () => {\n    setChartView(false);\n  };\n  const addPage = () => {\n    setAddView(true);\n  };\n  const addBack = () => {\n    setAddView(false);\n  };\n  return (\n    <>\n      <CContainer className=\"p-0\">\n        <CContainer className=\"mt-2 mb-3\">\n          <CRow>\n            <CCol lg={7}>\n              <div className=\"d-flex flex-row gap-3\">\n                <img src={data?.icon} alt=\"icon\" />\n                <div className=\"d-flex flex-column gap-2\">\n                  <span className=\"fs-20 fw-600\">{data?.name}</span>\n                  <div className=\"d-flex flex-row gap-2 flex-wrap\">\n                    {data?.badge?.map((dt, i) => (\n                      <Badge label={dt?.label} color={dt?.color} />\n                    ))}\n                  </div>\n                  <span className=\"fs-14 fw-500\">{data?.date}</span>\n                </div>\n              </div>\n            </CCol>\n            <CCol lg={5} className=\"d-flex align-items-center mt-2\">\n              <CRow className=\"w-100 d-flex justify-content-around\">\n                <CCol xs={4} md={4} lg={4}>\n                  {!addView && (\n                    <PrimaryButton onClick={() => addPage()}>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <img src={Assets.Add} alt=\"add\" />\n                        <span className=\"fs-16 fw-600\">Add</span>\n                      </div>\n                    </PrimaryButton>\n                  )}\n                  {addView && (\n                    <ActiveButton onClick={() => addBack()}>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <img src={Assets.CloseX} alt=\"add\" />\n                        <span className=\"fs-16 fw-600\">Add</span>\n                      </div>\n                    </ActiveButton>\n                  )}\n                </CCol>\n                <CCol xs={4} md={4} lg={4}>\n                  <PrimaryButton>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <img src={Assets.Filter} alt=\"add\" />\n                      <span className=\"fs-16 fw-600\">Filter</span>\n                    </div>\n                  </PrimaryButton>\n                </CCol>\n                {!chartView && (\n                  <CCol xs={4} md={4} lg={4}>\n                    <PrimaryButton onClick={() => chartPage()}>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <img src={Assets.Chart} alt=\"add\" />\n                        <span className=\"fs-16 fw-600\">Chart</span>\n                      </div>\n                    </PrimaryButton>\n                  </CCol>\n                )}\n                {chartView && (\n                  <CCol xs={4} md={4} lg={4}>\n                    <ActiveButton onClick={() => tablePage()}>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <img src={Assets.CloseX} alt=\"add\" />\n                        <span className=\"fs-16 fw-600\">Chart</span>\n                      </div>\n                    </ActiveButton>\n                  </CCol>\n                )}\n              </CRow>\n            </CCol>\n          </CRow>\n        </CContainer>\n        <CRow>\n          <CCol xl={12}>\n            {chartView ? (\n              <ChartTab data={data} />\n            ) : (\n              <DynamicTable\n                columnsData={data?.columnsData}\n                tableData={data?.tableData}\n              />\n            )}\n          </CCol>\n        </CRow>\n\n        {/* Modal for add  */}\n        <CModal\n          alignment=\"center\"\n          visible={addView}\n          onClose={addBack}\n          aria-labelledby=\"VerticallyCenteredExample\"\n          size=\"xl\"\n        >\n          <CModalBody className=\"p-4\">\n            {data?.name === \"Blood Pressure\" && <BPForm addBack={addBack} />}\n            {data?.name === \"Heart Rate\" && <HeartRate addBack={addBack} />}\n            {data?.name === \"Lung Function Test (LFT)\" && (\n              <LFTForm addBack={addBack} />\n            )}\n            {data?.name === \"Lipid Profile\" && (\n              <LipidProfileForm addBack={addBack} />\n            )}\n            {data?.name === \"Temperature\" && <Temperature addBack={addBack} />}\n            {data?.name === \"SpO2\" && <Spo2 addBack={addBack} />}\n            {data?.name === \"Respiration Rate\" && (\n              <RespirationRateForm addBack={addBack} />\n            )}\n            {data?.name === \"BMI\" && <BMI addBack={addBack} />}\n            {data?.name === \"Blood Sugar\" && <BSugar addBack={addBack} />}\n            {data?.name === \"Hemoglobin\" && <Hemogloin addBack={addBack} />}\n            {data?.name === \"HCT\" && <HCT addBack={addBack} />}\n            {data?.name === \"Blood Uric Acid\" && (\n              <BUricAcid addBack={addBack} />\n            )}\n            {data?.name === \"Blood Ketone\" && <BKetone addBack={addBack} />}\n            {data?.name === \"Urea\" && <Urea addBack={addBack} />}\n            {data?.name === \"Creatinine\" && <Creatinine addBack={addBack} />}\n            {data?.name === \"GFR\" && <GFR addBack={addBack} />}\n            {data?.name === \"Urinalysis\" && <Urinalysis addBack={addBack} />}\n          </CModalBody>\n        </CModal>\n      </CContainer>\n    </>\n  );\n};\n\nexport default ObjectiveDetailPage;\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport { Assets } from \"../../../../../assets/Assets\";\nimport Card from \"../../../../Cards/Card\";\nimport Breadcrumb from \"../../../../Breadcrumb/Breadcrumb\";\nimport \"./Objective.css\";\nimport MedicalTab from \"../MedicalTab\";\nimport VitalsTab from \"../../VitalsTab/VitalsTab\";\nimport Modal from \"../../../../Modal/Modal\";\nimport ObjectiveDetailPage from \"./DetailPage/ObjectiveDetailPage\";\n\nconst Objective = () => {\n  const cardData = [\n    { id: 1, name: \"Vital Signs\", image: Assets.VitalSig },\n    { id: 2, name: \"Physical Exam\", image: Assets.PhyExam },\n    { id: 3, name: \"Lab\", image: Assets.Lab },\n    { id: 4, name: \"Imaging\", image: Assets.Imaging },\n  ];\n  const tabs = [\n    { id: 1, title: \"Primary Vitals\" },\n    { id: 2, title: \"Metabolic And Biochemical Profile\" },\n    { id: 3, title: \"Hematologic Profile\" },\n    { id: 4, title: \"Renal and Metabolic Markers\" },\n  ];\n  const [currentTab, setCurrentTab] = useState({\n    id: 1,\n    title: \"Primary Vitals\",\n  });\n  const [selectedData, setSelectedData] = useState();\n  const [cardView, setCardView] = useState(false);\n  const [cardSelectedData, setSelectedCardData] = useState();\n\n  const getSelectedData = (data) => {\n    setSelectedData(data);\n    if (data?.id === 1) {\n      setCardView(true);\n    }\n  };\n  const getCurrentTab = (data) => {\n    setCurrentTab(data);\n  };\n\n  function findTitleById(id) {\n    const titleObject = tabs?.find((title) => title.id === id);\n    return titleObject ? titleObject?.title : \"Primary Vitals\"; // Return the title or a message if not found\n  }\n\n  const currentTabtitle = findTitleById(currentTab);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = (data) => {\n    setSelectedCardData(data);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  console.log(cardSelectedData, \"first\", selectedData);\n\n  return (\n    <>\n      <CContainer className=\"mt-3\">\n        {!cardView ? (\n          <CRow>\n            {cardData.map((dt, i) => (\n              <CCol md={4} xl={3} className=\"mb-3\">\n                <Card data={dt} getSelectedData={getSelectedData} />\n              </CCol>\n            ))}\n          </CRow>\n        ) : (\n          <>\n            <CRow className=\"mt-4\">\n              <CCol md={6} className=\"mb-3\">\n                <div className=\"d-flex\">\n                  <div className=\"back-box\" onClick={() => setCardView(false)}>\n                    <img\n                      alt=\"BackBtn\"\n                      src={Assets.BackBtn}\n                      style={{ width: \"60px\" }}\n                    />\n                  </div>\n                  <span className=\"Obj-name\">Vital Signs</span>\n                </div>\n              </CCol>\n              <CCol md={6} className=\"mb-3\">\n                <Breadcrumb\n                  paths={[\n                    { label: \"Home\", to: \"/\" },\n                    { label: \"Patient List\", to: \"/patients/history\" },\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\n                    { label: \"Vital Signs\", to: \"/patients/history\" },\n                  ]}\n                />\n              </CCol>\n            </CRow>\n            <CRow>\n              <MedicalTab\n                tabs={tabs}\n                getCurrentTab={getCurrentTab}\n                defaultTab={0}\n              />\n            </CRow>\n            <CRow>\n              <VitalsTab category={currentTabtitle} openModal={openModal} />\n            </CRow>\n          </>\n        )}\n      </CContainer>\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\n        <CContainer className=\"p-0\">\n          <CRow>\n            <CCol className=\"mb-3\">\n              <ObjectiveDetailPage data={cardSelectedData} />\n            </CCol>\n          </CRow>\n        </CContainer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Objective;\n","import React, { useState } from \"react\";\nimport MedicalTab from \"./MedicalTab\";\nimport Objective from \"./Objective/Objective\";\n\nconst MedicalProfile = () => {\n  const tabs = [\n    { id: 1, title: \"Subjective\" },\n    { id: 2, title: \"Objective\" },\n    { id: 3, title: \"Assesment\" },\n    { id: 4, title: \"Plan\" },\n  ];\n  const [currentTab, setCurrentTab] = useState(2);\n\n  const getCurrentTab = (data) => {\n    setCurrentTab(data);\n  };\n\n\n\n  return (\n    <>\n      <div>\n        <MedicalTab tabs={tabs} getCurrentTab={getCurrentTab} defaultTab={1}/>\n        {currentTab === 2 && <Objective />}\n      </div>\n    </>\n  );\n};\n\nexport default MedicalProfile;\n","import { CCard, CCardBody, CCol, CContainer, CRow } from \"@coreui/react\";\nimport React from \"react\";\nimport { Assets } from \"../../../../assets/Assets\";\n\nconst PairTab = () => {\n  return (\n    <CContainer>\n      <CRow>\n        <CCol md={12} className=\"p-0\">\n          <CCard>\n            <CCardBody>\n              <div className=\"d-flex justify-content-center align-items-center gap-3\">\n                <div>\n                  <img alt=\"qrCode\" src={Assets.QrCode} />\n                </div>\n                <div className=\"d-flex flex-column mb-3\">\n                  <span className=\"fs-16 fw-600 text-secondary\">\n                    User Name : <strong style={{ color: \"black\" }}>10</strong>\n                  </span>\n                  <span className=\"fs-16 fw-600 text-secondary\">\n                    Password : <strong style={{ color: \"black\" }}>98786</strong>\n                  </span>\n                </div>\n              </div>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </CContainer>\n  );\n};\n\nexport default PairTab;\n","import React, { useState } from \"react\";\nimport \"./PatientDetailsView.css\";\nimport PatentProfile from \"../../../Components/Dashboard/PatentProfile/PatentProfile\";\nimport { CCol, CContainer, CRow } from \"@coreui/react\";\nimport PatientTabs from \"../../../Components/Dashboard/PatientTabs/PatientTabs\";\nimport Breadcrumb from \"../../../Components/Breadcrumb/Breadcrumb\";\nimport VitalsTab from \"../../../Components/Dashboard/PatientTabs/VitalsTab/VitalsTab\";\nimport { Assets } from \"../../../assets/Assets\";\nimport MedicalProfile from \"../../../Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalProfile\";\nimport PairTab from \"../../../Components/Dashboard/PatientTabs/PairTab/PairTab\";\nimport CallHistoryView from \"../../CallHistory/CallHistoryView\";\n\nconst PatientDetailsView = () => {\n  const [currentTab, setCurrentTab] = useState(1);\n  const getCurrentTab = (data) => {\n    setCurrentTab(data);\n  };\n  return (\n    <div className=\"\">\n      {/* <CContainer> */}\n      <CRow className=\"mb-4\">\n        <CCol md={12} xl={5} className=\"mb-2\">\n          <PatentProfile />\n        </CCol>\n        <CCol md={12} xl={7}>\n          {/* tabs={tabs} */}\n          <PatientTabs getCurrentTab={getCurrentTab} />\n        </CCol>\n      </CRow>\n      {currentTab === 1 && <CallHistoryView />}\n\n      {currentTab === 2 && (\n        <CRow>\n          <CCol md={12}>\n            {/* <VitalsTab /> */}\n            <MedicalProfile />\n          </CCol>\n        </CRow>\n      )}\n      {currentTab === 4 && (\n        <CRow>\n          <CCol md={12}>\n            <PairTab />\n          </CCol>\n        </CRow>\n      )}\n      {/* </CContainer> */}\n    </div>\n  );\n};\n\nexport default PatientDetailsView;\n"],"names":["_ref","paths","lastIndex","length","_jsx","_Fragment","children","CBreadcrumb","map","data","index","CBreadcrumbItem","href","to","className","concat","label","onClick","PatentProfile","CCard","_jsxs","CCardBody","src","Assets","patient1","alt","getCurrentTab","tabs","id","title","image","Call","Notes","Camera","Qr","currentTab","setCurrentTab","useState","switchTab","DoctorDetail","profile","name","email","mobile","mrn","age","notes","Patient","Link","filter","i","DoctorCards","color","category","openModal","filteredProducts","icon","VitalBP","date","badge","columnsData","tableData","result","status","systolic","diastolic","chartLabel1","action","type","VitalBs","blood_sugar","blood_sugar_value","VitalBMI","bmi","height","weight","VitalHCT","hct_rate","VitalHBeat","ecg_result","ecg","VitalHae","hemoglobin","hemoglobinValue","BKetone","blood_ketone","blood_ketone_value","VitalLipid","total","totalOnly","triglycerides","hdl","ldl","vldl","VitalRespi","SpO2","spo2","Temp","temperature","temperature_value","LFT","BUAcid","blood_uric_acid","blood_uric_acid_value","Urinalysis","chartLabel2","urine","chartValue","ph","sugar","protein","leukocytes","rbc","Urea","urea","urea_value","Creatinine","creatinine","creatinine_value","GFR","gfr","gfr_value","product","CRow","CCol","md","item","xl","dt","Badge","Vitalline","defaultTab","getSelectedData","isOpen","onClose","CModal","visible","alignment","size","CModalBody","CloseBtn","style","width","_datas$tableData","datas","removePercent","str","replace","formattedData","_item$date","split","data1","parseInt","data2","minValue","Math","min","maxValue","max","isNaN","Infinity","LineChart","margin","top","right","left","bottom","XAxis","dataKey","padding","axisLine","tickLine","YAxis","yMax","domain","Tooltip","formatter","tooltipFormatter","value","props","Legend","payload","CartesianGrid","horizontal","vertical","strokeWidth","Line","stroke","Set","BarChart","Bar","fill","console","log","LineChartDetails","ColumnChartDetails","class","column","row","rowIndex","renderCell","columnKey","toLowerCase","renderActionButton","Warning","EditPencil","Delete","addBack","selectedDate","setSelectedDate","Date","selectedTime","setSelectedTime","CContainer","lg","for","DatePicker","showIcon","selected","onChange","isClearable","closeOnScroll","wrapperClassName","showTimeSelect","showTimeSelectOnly","timeIntervals","dateFormat","xs","PrimaryButton","SecondaryButton","placeholder","defaultValue","_data$badge","chartView","setChartView","addView","setAddView","Add","ActiveButton","CloseX","Filter","Chart","ChartTab","DynamicTable","BPForm","HeartRate","LFTForm","LipidProfileForm","Temperature","Spo2","RespirationRateForm","BMI","BSugar","Hemogloin","HCT","BUricAcid","Objective","cardData","VitalSig","PhyExam","Lab","Imaging","selectedData","setSelectedData","cardView","setCardView","cardSelectedData","setSelectedCardData","currentTabtitle","titleObject","find","findTitleById","isModalOpen","setIsModalOpen","BackBtn","Breadcrumb","MedicalTab","VitalsTab","Card","Modal","closeModal","ObjectiveDetailPage","MedicalProfile","PairTab","QrCode","PatientDetailsView","PatientTabs","CallHistoryView"],"sourceRoot":""}