{"version":3,"file":"static/js/802.ee5c9590.chunk.js","mappings":"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","sources":["Components/Breadcrumb/Breadcrumb.jsx","Components/Buttons/PrimaryButton/PrimaryButton.jsx","Components/Dashboard/PatentProfile/PatentProfile.jsx","Components/Dashboard/PatientTabs/PatientTabs.jsx","Components/DoctorCards/DoctorCards.jsx","Components/FilterModal/FilterModal.jsx","Views/CallHistory/CallHistoryView.jsx","Components/Badge/Badge.jsx","Components/Charts/CardChart.jsx","Components/Dashboard/PatientTabs/VitalsTab/VitalsTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalTab.jsx","Components/Cards/Card.jsx","Components/Modal/Modal.jsx","Components/Tables/Table.jsx","Components/Buttons/ActiveButton/ActiveButton.jsx","Components/Charts/LineChart.jsx","Components/Charts/ColumnChartDetails.jsx","Components/Charts/ChartTab.jsx","Components/BlurBackground/BlurBackground.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm.jsx","Components/Dropdown/Dropdown.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm.jsx","Components/Tables/DynamicTable.jsx","Components/DateRangePicker/DateRangePicker.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/ECG Chart/ECGChart.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/DetailPage/ObjectiveDetailPage.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/VitalSign/VitalSign.jsx","Components/DateRangePicker/DateSelector.jsx","Components/DateCards/DateCards.jsx","Components/Pagination/Pagination.jsx","Components/DateRangePicker/SingleDatePicker.jsx","Components/OptionItems/OptionItem.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/PhysicalExam/PhysicalExam.jsx","Components/SearchBar/SearchBar.jsx","Components/Tables/LabTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Lab/LabForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Lab/Lab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Imaging/ImagingForm.jsx","Components/Tables/ImagingTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Imaging/Imaging.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Objective.jsx","Components/Tables/DiagnosisTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Diagnosis/DiagnosisForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Diagnosis/Diagnosis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Immunization/ImmunizationForm.jsx","Components/Tables/ImmunizationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Immunization/Immunization.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Assesment.jsx","Components/Tables/LabOrderTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrderForm.jsx","Components/Tables/ImagingOrderTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrderForm.jsx","Components/Tables/MedicationOrderTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/DetailsTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Orders.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureForm.jsx","Components/Tables/ProcedurerTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/Cpt.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Plan.jsx","Components/Tables/Subjective/ChiefComplaintTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Chief Complaints/ChiefComplaintsForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Chief Complaints/ChiefComplaints.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Signs And Symptoms/SignsSymptomsForm.jsx","Components/Tables/Subjective/SymtomsTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Signs And Symptoms/SignsSymptoms.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Medication/MedicationForm.jsx","Components/Tables/Subjective/MedicationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Medication/Medication.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/PresentIllness.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Medical History/MedHistoryForm.jsx","Components/Tables/Subjective/MedicalHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Medical History/MedicalHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Surgical History/SurgicalForm.jsx","Components/Tables/Subjective/SurgicalTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Surgical History/SurgicalHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/ObstericHistoryForm.jsx","Components/Tables/Subjective/ObstetricHistoryTable.jsx","Components/Tables/Subjective/GynaecHistoryTable.jsx","Components/Tables/Subjective/ScreeningHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/MensturalHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/ScreeningHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/OGHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Social History/MedHistoryForm.jsx","Components/Tables/Subjective/SocialHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Social History/SocialHistory.jsx","Components/Tables/Subjective/FamilyHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Family History/FamilyHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/History.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Subjective.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalProfile.jsx","Components/Dashboard/PatientTabs/PairTab/PairTab.jsx","Views/Dashboard/PatientDetails/PatientDetailsView.jsx"],"sourcesContent":["import { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./Breadcrumb.css\";\r\n\r\nconst Breadcrumb = ({ paths }) => {\r\n  const lastIndex = paths.length - 1;\r\n  const url = \"/telegaruda-caregiver\";\r\n  return (\r\n    <>\r\n      <CBreadcrumb>\r\n        {paths.map((data, index) => (\r\n          <CBreadcrumbItem\r\n            href={url + data?.to}\r\n            className={`breadcrumb-item-custom ${\r\n              lastIndex === index && \"black\"\r\n            }`}\r\n          >\r\n            <span className=\"breadcrumb-label\">{data.label}</span>\r\n          </CBreadcrumbItem>\r\n        ))}\r\n      </CBreadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from \"react\";\r\nimport \"./PrimaryButton.css\";\r\n\r\nconst PrimaryButton = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./PatentProfile.css\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst PatentProfile = () => {\r\n  return (\r\n    <>\r\n      <CCard className=\"card-profile\">\r\n        <CCardBody className=\"d-flex gap-4\">\r\n          <div className=\"img-container\">\r\n            <img src={Assets.patient1} alt=\"profile-img\" />\r\n          </div>\r\n          <div className=\"user-details\">\r\n            <span className=\"user-title\">Ramesh H</span>\r\n            <div className=\"d-flex flex-wrap gap-2\">\r\n              <p className=\"user-email\">rammohan@cure.com</p>\r\n              <p className=\"user-email\">|</p>\r\n              <p className=\"user-email\">+91 98765 43210</p>\r\n            </div>\r\n            <div className=\"d-flex flex-wrap gap-2\">\r\n              <p className=\"user-email\">MRN: MRN 3</p>\r\n              <p className=\"user-email\">|</p>\r\n              <p className=\"user-email\">34 yrs (M)</p>\r\n            </div>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatentProfile;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./PatientTabs.css\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst PatientTabs = ({ getCurrentTab }) => {\r\n  const tabs = [\r\n    {\r\n      id: 1,\r\n      title: \"Call\",\r\n      image: Assets.Call,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Medical Profile\",\r\n      image: Assets.Notes,\r\n    },\r\n\r\n    {\r\n      id: 3,\r\n      title: \"Camera Control\",\r\n      image: Assets.Camera,\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Pair\",\r\n      image: Assets.Qr,\r\n    },\r\n  ];\r\n\r\n\r\n  const [currentTab, setCurrentTab] = useState(() => {\r\n    // Initial state setup using localStorage\r\n    const storedCount = localStorage.getItem(\"patiendDetailTab\");\r\n    return storedCount ? JSON.parse(storedCount) : tabs[0];\r\n  });\r\n\r\n  const switchTab = (data) => {\r\n    localStorage.setItem(\"patiendDetailTab\", JSON.stringify(data));\r\n    setCurrentTab(data);\r\n    getCurrentTab(data.id);\r\n  };\r\n  return (\r\n    <CCard className=\"card-tabs\">\r\n      <CCardBody className=\"tabs-container\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`tab-items ${\r\n              data.id === currentTab?.id ? \"tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <img src={data.image} alt=\"call\" className=\"tab-icon\" />\r\n            <span className=\"tab-title\">{data.title}</span>\r\n          </div>\r\n        ))}\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default PatientTabs;\r\n","import React from 'react'\r\nimport { Assets } from '../../assets/Assets'\r\n\r\nfunction DoctorCards({ DoctorDetail }) {\r\n    return (\r\n        <div className='card-sec'>\r\n            <div className='row align-items-center'>\r\n                <div className='profile col-4'>\r\n                    <img src={DoctorDetail.profile} alt=\"Patient-image\" />\r\n                </div>\r\n                <div className='patient-details col-8'>\r\n                    <h5>{DoctorDetail.name}</h5>\r\n                    <p className='flex-sec-wrap gap-sec'>\r\n                        <small className=\"fs-10 fw-500\">{DoctorDetail.email}</small>\r\n                        <small className=\"fs-10 fw-500\">|</small>\r\n                        <small className=\"fs-10 fw-500\">{DoctorDetail.mobile}</small>\r\n                    </p>\r\n                    <p className='flex-sec-wrap gap-sec'>\r\n                        <small className=\"fs-10 fw-600\">MRN: {DoctorDetail.mrn}</small>\r\n                        <small className=\"fs-10 fw-600\">|</small>\r\n                        <small className=\"fs-10 fw-600\">{DoctorDetail.age}</small>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <img src={Assets.notes} className='edit-icon' alt=\"edit-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoctorCards\r\n","import React, { useState } from 'react'\r\nimport { CModal, CModalBody, CModalHeader, CModalTitle, CButton, CModalFooter, CFormSelect, CRow, CCol } from '@coreui/react'\r\n// import { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nfunction FilterModal({ visible, setVisible }) {\r\n\r\n    const today = new Date();\r\n\r\n    const [startDate, setStartDate] = useState(today);\r\n    const [endDate, setEndDate] = useState(today);\r\n\r\n    function ClearFunction() {\r\n        setStartDate();\r\n        setEndDate();\r\n    }\r\n    return (\r\n        <CModal\r\n            visible={visible}\r\n            onClose={() => setVisible(false)}\r\n            aria-labelledby=\"LiveDemoExampleLabel\"\r\n            className='modal-cutomize'\r\n            backdrop=\"static\"\r\n        >\r\n            <CModalHeader>\r\n                <CModalTitle id=\"LiveDemoExampleLabel\">FILTER</CModalTitle>\r\n            </CModalHeader>\r\n            <CModalBody>\r\n                <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    options={[\r\n                        'Filter with Doctor',\r\n                        { label: 'Doctor One', value: '1' },\r\n                        { label: 'Doctor Two', value: '2' },\r\n                        { label: 'Dcotor Three', value: '3' }\r\n                    ]}\r\n                />\r\n                <CRow>\r\n                    <CCol lg={6} sm={12}>\r\n                        <p className='date-sec'>From Date</p>\r\n                        <DatePicker\r\n                            showIcon\r\n                            selected={startDate}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            isClearable\r\n                            className=\"date-range-picker picker-sec\"\r\n                            dateFormat=\"MM/dd/yyyy\"\r\n                        />\r\n                    </CCol>\r\n                    <CCol lg={6} sm={12}>\r\n                        <p className='date-sec'>End Date</p>\r\n                        <DatePicker\r\n                            showIcon\r\n                            selected={endDate}\r\n                            onChange={(date) => setEndDate(date)}\r\n                            isClearable\r\n                            className=\"date-range-picker picker-sec\"\r\n                        />\r\n                    </CCol>\r\n                </CRow>\r\n            </CModalBody>\r\n            <CModalFooter>\r\n                <CButton color=\"secondary\" onClick={() => ClearFunction()} className='clear-filter-btn'>\r\n                    Clear Filter\r\n                </CButton>\r\n                <CButton color=\"primary\" className='apply-filter-sec' onClick={() => setVisible(false)}>Apply Filter</CButton>\r\n            </CModalFooter>\r\n        </CModal>\r\n    )\r\n}\r\n\r\nexport default FilterModal\r\n","import React from \"react\";\r\nimport PatentProfile from \"../../Components/Dashboard/PatentProfile/PatentProfile\";\r\nimport PatientTabs from \"../../Components/Dashboard/PatientTabs/PatientTabs\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { useState } from \"react\";\r\nimport DoctorCards from \"../../Components/DoctorCards/DoctorCards\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport FilterModal from '../../Components/FilterModal/FilterModal';\r\n\r\nfunction CallHistoryView() {\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const navigate = useNavigate();\r\n\r\n  const DoctorDetail = [\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n  ];\r\n\r\n  const DetailSec = () => {\r\n    navigate(\"/patients/summary\");\r\n  };\r\n\r\n  return (\r\n    <section className=\"call-history-sec\">\r\n      <div className=\"flex-sec top-sec\">\r\n        <div className=\"bread-crumbs\">\r\n          <p className=\"mb-0\">\r\n            <Link to=\"/patients\">Patient</Link> /{\" \"}\r\n            <Link to=\"/patients\" className=\"active\">\r\n              Existing Patient\r\n            </Link>\r\n          </p>\r\n          <h4>Appointments - Call History</h4>\r\n        </div>\r\n        <div className=\"patient-adding\">\r\n          <button onClick={() => setVisible(!visible)}>\r\n            <img src={Assets.filter} alt=\"filter-sec\" className=\"filter-icon\" />{\" \"}\r\n            Filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"doctor-card-sec\">\r\n        <div className=\"row\">\r\n          {DoctorDetail.map((data, i) => (\r\n            <div className=\"col-4\" onClick={() => DetailSec()}>\r\n              <Link className=\"card-link\">\r\n                <DoctorCards DoctorDetail={data} />\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className='modal-sec'>\r\n        <FilterModal visible={visible} setVisible={setVisible} />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CallHistoryView;\r\n","import React from \"react\";\r\n\r\nconst Badge = ({ label, color }) => {\r\n  return <div className={`badge badge-${color} fs-14 fw-500`}>{label}</div>;\r\n};\r\n\r\nexport default Badge;\r\n","import React from \"react\";\r\nimport { Line, LineChart, ResponsiveContainer, Tooltip, XAxis } from \"recharts\";\r\n\r\nconst CardChart = ({ datas }) => {\r\n  function removePercent(str) {\r\n    // Remove trailing percent sign (%) using String.replace() method\r\n    // Replace '%' with an empty string ''\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n\r\n  // Transform tableData to the desired format\r\n  const formattedData = datas?.tableData?.map((item) => {\r\n    const datePart = item?.date?.split(\" \")[0]; // Extract date part only\r\n\r\n    return {\r\n      name: datePart,\r\n      data1: parseInt(\r\n        item?.[\"blood_ketone_value\"] ||\r\n          item?.[\"hemoglobinValue\"] ||\r\n          item?.[\"bmi\"] ||\r\n          item?.[\"blood_sugar_value\"] ||\r\n          item?.[\"pulse_(in_bpm)\"] ||\r\n          item?.[\"heart_rate_(bpm)\"] ||\r\n          item?.[\"respiration_rate_(bpm)\"] ||\r\n          removePercent(item?.[\"spo2\"]) ||\r\n          removePercent(item?.[\"hct_rate\"]) ||\r\n          item?.[\"fvc_(l)\"] ||\r\n          item?.[\"totalOnly\"] ||\r\n          item?.[\"chartValue\"] ||\r\n          item?.[\"temperature_value\"] ||\r\n          item?.[\"blood_uric_acid_value\"] ||\r\n          item?.[\"urea_value\"] ||\r\n          item?.[\"creatinine_value\"] ||\r\n          item?.[\"gfr_value\"]\r\n      ),\r\n    };\r\n  });\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#fff\",\r\n            border: \"1px solid #ccc\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          <h5>{payload[0].payload.name}</h5>\r\n          <p className=\"label\">{`${datas?.chartLabel1} : ${payload[0].value}`}</p>\r\n          {/* <p className=\"intro\">{getIntroOfPage(label)}</p> */}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n  return (\r\n    <>\r\n      <LineChart\r\n        width={250}\r\n        height={90}\r\n        data={formattedData}\r\n        margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\r\n      >\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"data1\"\r\n          stroke=\"#0084CF\"\r\n          strokeWidth={2}\r\n        />\r\n      </LineChart>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardChart;\r\n","import { CBadge, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./VitalsTab.css\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport CardChart from \"../../../Charts/CardChart\";\r\n\r\nconst VitalsTab = ({ category, openModal }) => {\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      icon: Assets.VitalBP,\r\n      name: \"Blood Pressure\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      category: \"Primary Vitals\",\r\n      badge: [\r\n        { label: \"120/80 mm Hg\", color: \"success\" },\r\n        // { label: \"DIA : 71\", color: \"success\" },\r\n        // { label: \"Pulse : 89\", color: \"success\" },\r\n      ],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"SYSTOLIC\" },\r\n        { id: 4, label: \"DIASTOLIC\" },\r\n        { id: 5, label: \"PULSE (IN BPM)\" },\r\n        { id: 6, label: \"DATE\" },\r\n        { id: 7, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          systolic: \"112\",\r\n          diastolic: \"25\",\r\n          \"pulse_(in_bpm)\": \"89\",\r\n          chartLabel1: \"PULSE (IN BPM)\",\r\n          date: \"02-04-2024 12:13\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Pressure\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"error\",\r\n            name: \"High Blood Pressure (Hypertension) Stage 1\",\r\n          },\r\n          systolic: \"112\",\r\n          diastolic: \"25\",\r\n          \"pulse_(in_bpm)\": \"125\",\r\n          date: \"05-04-2024 13:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Pressure\",\r\n        },\r\n      ],\r\n      chartLabel1: \"PULSE (IN BPM)\",\r\n    },\r\n    {\r\n      id: 2,\r\n      icon: Assets.VitalBs,\r\n      name: \"Blood Sugar\",\r\n      category: \"Metabolic And Biochemical Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"110 mg/DL\", color: \"success\" }],\r\n      chartLabel1: \"Blood Sugar\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Blood Sugar\" },\r\n        { id: 4, label: \"Type\" },\r\n        { id: 5, label: \"DATE\" },\r\n        { id: 6, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          blood_sugar: \"110 mg/dL\",\r\n          blood_sugar_value: \"110\",\r\n          type: \"Random\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Sugar\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          blood_sugar: \"110 mg/dL\",\r\n          blood_sugar_value: \"110\",\r\n          type: \"Random\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Blood Sugar\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      icon: Assets.VitalBMI,\r\n      name: \"BMI\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"24.5 kg/m²\", color: \"success\" }],\r\n      chartLabel1: \"BMI\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"BMI\" },\r\n        { id: 4, label: \"Height\" },\r\n        { id: 5, label: \"Weight\" },\r\n        { id: 6, label: \"DATE\" },\r\n        { id: 7, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          bmi: \"24.13\",\r\n          height: \"159cm\",\r\n          weight: \"61kg\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"BMI\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"error\",\r\n            name: \"Overweight\",\r\n          },\r\n          bmi: \"27.01\",\r\n          height: \"180cm\",\r\n          weight: \"87.5kg\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"BMI\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      icon: Assets.VitalHCT,\r\n      name: \"HCT\",\r\n      category: \"Hematologic Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"23%\", color: \"error\" }],\r\n      chartLabel1: \"HCT Rate (in %)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"HCT Rate\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          hct_rate: \"42%\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"HCT\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          hct_rate: \"45%\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"HCT\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      icon: Assets.VitalHBeat,\r\n      name: \"ECG\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"1 Bpm\", color: \"success\" }],\r\n      chartLabel1: \"Heart Rate (BPM)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"INTERPRETATION\" },\r\n        { id: 3, label: \"ECG\" },\r\n        { id: 4, label: \"ECG TYPE\" },\r\n        { id: 5, label: \"DATE\" },\r\n        { id: 6, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          ecg_result: { status: \"error\", name: \"Abnormal Heart Rate\" },\r\n          ecg: {\r\n            contentType: \"image\",\r\n            link: Assets.ecgSample,\r\n          },\r\n          \"heart_rate_(bpm)\": \"120\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Heart Rate\",\r\n          interpretation: \"ECG Interpretation\",\r\n          ecg_type: \"3 Lead\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          ecg_result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          ecg: {\r\n            contentType: \"pdf\",\r\n            link: \"https://www.orimi.com/pdf-test.pdf\",\r\n          },\r\n          \"heart_rate_(bpm)\": \"70\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Heart Rate\",\r\n          interpretation: \"ECG Interpretation\",\r\n          ecg_type: \"3 Lead\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      icon: Assets.VitalHae,\r\n      name: \"Hemoglobin\",\r\n      category: \"Hematologic Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"14 g/dL\", color: \"error\" }],\r\n      chartLabel1: \"Hemoglobin (g/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Hemoglobin\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          hemoglobin: \"15 g/dL\",\r\n          hemoglobinValue: \"15\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Hemoglobin\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          hemoglobin: \"15 g/dL\",\r\n          hemoglobinValue: \"15\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Hemoglobin\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      icon: Assets.BKetone,\r\n      name: \"Blood Ketone\",\r\n      category: \"Hematologic Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"0.5 mmol/L\", color: \"error\" }],\r\n      chartLabel1: \"Blood Ketone (mmol/L)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"BLOOD KETONE\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          blood_ketone: \"0.33 mmol/L\",\r\n          blood_ketone_value: \"0.33\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Ketone\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          blood_ketone: \"0.33 mmol/L\",\r\n          blood_ketone_value: \"0.33\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Blood Ketone\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      icon: Assets.VitalLipid,\r\n      name: \"Lipid Profile\",\r\n      category: \"Metabolic And Biochemical Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [\r\n        { label: \"Total Cholesterol: 180 mg/dL \", color: \"success\" },\r\n        { label: \"LDL: 100 mg/dL\", color: \"error\" },\r\n        { label: \"HDL: 50 mg/dL \", color: \"error\" },\r\n        // { label: \"TG: Optimal\", color: \"error\" },\r\n        { label: \"Triglycerides: 150 mg/dL\", color: \"success\" },\r\n      ],\r\n      chartLabel1: \"Lipid Profile (mg/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Total Cholesterol\" },\r\n        { id: 4, label: \"Triglycerides\" },\r\n        { id: 5, label: \"HDL\" },\r\n        { id: 6, label: \"LDL\" },\r\n        { id: 7, label: \"LDL/HDL\" },\r\n        { id: 8, label: \"VLDL\" },\r\n        { id: 9, label: \"DATE\" },\r\n        { id: 10, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          total_cholesterol: \"180 mg/dL\",\r\n          totalOnly: \"180\",\r\n          triglycerides: \"140 mg/dL\",\r\n          hdl: \"60 mg/dL\",\r\n          ldl: \"60 mg/dL\",\r\n          \"ldl/hdl\": \"1\",\r\n          vldl: \"5 mg/dL\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Lipid Profile\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          total_cholesterol: \"180 mg/dL\",\r\n          totalOnly: \"190\",\r\n          triglycerides: \"140 mg/dL\",\r\n          hdl: \"60 mg/dL\",\r\n          ldl: \"60 mg/dL\",\r\n          \"ldl/hdl\": \"1\",\r\n          vldl: \"5 mg/dL\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Lipid Profile\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      icon: Assets.VitalRespi,\r\n      name: \"Respiration Rate\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"16 bpm\", color: \"error\" }],\r\n      chartLabel1: \"Respiration Rate (BPM)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Respiration Rate (BPM)\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"error\", name: \"High\" },\r\n          \"respiration_rate_(bpm)\": \"44\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Respiration Rate\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          \"respiration_rate_(bpm)\": \"18\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Respiration Rate\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      icon: Assets.SpO2,\r\n      name: \"SpO2\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"92%\", color: \"success\" }],\r\n      chartLabel1: \"SpO2 (%)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Pulse Rate (BPM)\" },\r\n        { id: 4, label: \"SpO2\" },\r\n        { id: 5, label: \"DATE\" },\r\n        { id: 6, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"error\", name: \"Abnormal\" },\r\n          \"pulse_rate_(bpm)\": \"120\",\r\n          spo2: \"99%\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"SpO2\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          spo2: \"90%\",\r\n          \"pulse_rate_(bpm)\": \"70\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"SpO2\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 11,\r\n      icon: Assets.Temp,\r\n      name: \"Temperature\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"36.6*C\", color: \"success\" }],\r\n      chartLabel1: \"Temperature (°F)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Temperature\" },\r\n        { id: 4, label: \"Type\" },\r\n        { id: 5, label: \"DATE\" },\r\n        { id: 6, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          temperature: \"96.80 ° F, 36 ° C\",\r\n          temperature_value: \"96.8\",\r\n          type: \"Oral\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Temperature\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          temperature: \"97.88 ° F, 36.6 ° C\",\r\n          temperature_value: \"97.8\",\r\n          type: \"Oral\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Temperature\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 12,\r\n      icon: Assets.LFT,\r\n      name: \"Lung Function Test (LFT)\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      category: \"Primary Vitals\",\r\n      chartLabel1: \"FVC (L)\",\r\n      badge: [\r\n        { label: \"FEV1: 1L\", color: \"error\" },\r\n        { label: \"FVC: 1L\", color: \"error\" },\r\n        { label: \"FEV1/FVC: 40\", color: \"error\" },\r\n        { label: \"PEF: 1L/min\", color: \"error\" },\r\n      ],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"FVC (L)\" },\r\n        { id: 3, label: \"FEV1 (L)\" },\r\n        { id: 4, label: \"FEV1/FVC\" },\r\n        { id: 5, label: \"PEF (L/MIN)\" },\r\n        { id: 6, label: \"SVC (L)\" },\r\n        { id: 7, label: \"DATE\" },\r\n        { id: 8, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          \"fvc_(l)\": \"5.94\",\r\n          \"fev1_(l)\": \"2.45\",\r\n          \"fev1/fvc\": \"41\",\r\n          \"pef_(l/min)\": \"2.62\",\r\n          \"svc_(l)\": \"3.51\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Lung Function Test (LFT)\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          \"fvc_(l)\": \"6.94\",\r\n          \"fev1_(l)\": \"2.45\",\r\n          \"fev1/fvc\": \"41\",\r\n          \"pef_(l/min)\": \"2.62\",\r\n          \"svc_(l)\": \"3.51\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Lung Function Test (LFT)\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 13,\r\n      icon: Assets.BUAcid,\r\n      name: \"Blood Uric Acid\",\r\n      category: \"Hematologic Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"6 mg/dL\", color: \"error\" }],\r\n      chartLabel1: \"Blood Uric Acid (mg/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"BLOOD URIC ACID\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          blood_uric_acid: \"5 mg/dL\",\r\n          blood_uric_acid_value: \"5\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Uric Acid\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          blood_uric_acid: \"5 mg/dL\",\r\n          blood_uric_acid_value: \"5\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Blood Uric Acid\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 14,\r\n      icon: Assets.Urinalysis,\r\n      name: \"Urinalysis\",\r\n      category: \"Renal and Metabolic Markers\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n      chartLabel1: \"Urine (μmol/kg/d)\",\r\n      chartLabel2: \"ph\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"URINE\" },\r\n        { id: 4, label: \"PH\" },\r\n        { id: 5, label: \"SUGAR\" },\r\n        { id: 6, label: \"PROTEIN\" },\r\n        { id: 7, label: \"LEUKOCYTES\" },\r\n        { id: 8, label: \"RBC\" },\r\n        { id: 9, label: \"DATE\" },\r\n        { id: 10, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          urine: \"100 μmol/kg/d\",\r\n          chartValue: \"100\",\r\n          ph: \"17.5\",\r\n          sugar: \"0.8 mmol/L\",\r\n          protein: \"None\",\r\n          leukocytes: \"None\",\r\n          rbc: \"None\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Urinalysis\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          urine: \"110 μmol/kg/d\",\r\n          chartValue: \"110\",\r\n          ph: \"6.5\",\r\n          sugar: \"0.8 mmol/L\",\r\n          protein: \"None\",\r\n          leukocytes: \"None\",\r\n          rbc: \"None\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Urinalysis\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 15,\r\n      icon: Assets.Urea,\r\n      name: \"Urea\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      category: \"Renal and Metabolic Markers\",\r\n      badge: [{ label: \"20mg/dl\", color: \"error\" }],\r\n      chartLabel1: \"Urea (mg/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"UREA\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          urea: \"20 mg/dL\",\r\n          urea_value: \"20\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Urea\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          urea: \"20 mg/dL\",\r\n          urea_value: \"20\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Urea\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 16,\r\n      icon: Assets.Creatinine,\r\n      name: \"Creatinine\",\r\n      category: \"Renal and Metabolic Markers\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"85pmol/L\", color: \"error\" }],\r\n      chartLabel1: \"Creatinine (μmol/L)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"CREATININE\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          creatinine: \"88 μmol/L\",\r\n          creatinine_value: \"88\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Creatinine\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          creatinine: \"88 μmol/L\",\r\n          creatinine_value: \"88\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Creatinine\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 17,\r\n      icon: Assets.GFR,\r\n      name: \"GFR\",\r\n      category: \"Renal and Metabolic Markers\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"90ml/min\", color: \"error\" }],\r\n      chartLabel1: \"GFR (ml/min)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"GFR\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          gfr: \"90 mL/min\",\r\n          gfr_value: \"90\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"GFR\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          gfr: \"90 mL/min\",\r\n          gfr_value: \"90\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"GFR\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const filteredProducts = data.filter(\r\n    (product) => product.category === category\r\n  );\r\n\r\n  const renderImage = (contentUrl) => {\r\n    return (\r\n      <img\r\n        src={contentUrl}\r\n        alt=\"mage1\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  // // Function to render PDF content\r\n  const renderPdf = (contentUrl) => {\r\n    return (\r\n      <iframe\r\n        title=\"PDF Viewer\"\r\n        src={contentUrl}\r\n        style={{ width: \"100%\", height: \"140px\", border: \"none\" }}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-1\">\r\n        <CCol md={12}>\r\n          <CRow className=\"mt-3 \">\r\n            {filteredProducts?.map((item, index) => (\r\n              <CCol md={6} xl={4} key={index} className=\"mb-3\">\r\n                <CCard className=\"vital-cards\" onClick={() => openModal(item)}>\r\n                  <CCardBody>\r\n                    <div className=\"vital-icon-and-title\">\r\n                      <div>\r\n                        <img alt=\"bp\" src={item.icon} />\r\n                      </div>\r\n                      <div className=\"vital-card-title\">\r\n                        <span className=\"vital-card-text-bold\">\r\n                          {item.name}\r\n                        </span>\r\n                        <span className=\"vital-card-text\">{item.date}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"vital-badge\">\r\n                      <div className=\"vital-badge-list\">\r\n                        {item.badge.map((dt, i) => (\r\n                          <div key={i} style={{ height: \"24px\" }}>\r\n                            <Badge label={dt?.label} color={dt?.color} />\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"vital-line-container\">\r\n                      {/* <img alt=\"line\" src={Assets.Vitalline} /> */}\r\n                      {item?.name === \"ECG\" ? (\r\n                        <div className=\"chart-item\">\r\n                          {/* <div className=\"rectangle\">\r\n                            <img src={Assets.ecgSample} alt=\"ecg\" />\r\n                          </div> */}\r\n                          {renderImage(Assets.ecgSample)}\r\n                          {/* {renderPdf(\"https://www.orimi.com/pdf-test.pdf\")} */}\r\n                        </div>\r\n                      ) : (\r\n                        <CardChart datas={item} />\r\n                      )}\r\n                    </div>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VitalsTab;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./MedicalProfile.css\";\r\n\r\nconst MedicalTab = ({ tabs, getCurrentTab, defaultTab }) => {\r\n  const [currentTab, setCurrentTab] = useState(tabs[defaultTab]);\r\n\r\n  const switchTab = (data) => {\r\n    setCurrentTab(data);\r\n    getCurrentTab(data.id);\r\n  };\r\n  return (\r\n    <CCard className=\"medical-tabs\">\r\n      <CCardBody className=\"medical-tabs-container\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`medical-tab-items ${\r\n              data.id === currentTab?.id ? \"medical-tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <span\r\n              className={\r\n                data.id === currentTab?.id\r\n                  ? \"medical-tab-title-active\"\r\n                  : \"medical-tab-title\"\r\n              }\r\n            >\r\n              {data.title}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default MedicalTab;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./Cards.css\";\r\n\r\nconst Card = ({ data, getSelectedData, className }) => {\r\n  return (\r\n    <>\r\n      <CCard\r\n        className={`card ${\r\n          className ? className : \"minheight-188 max-height-100\"\r\n        }`}\r\n        onClick={() => getSelectedData(data)}\r\n      >\r\n        <CCardBody\r\n          key={data.id}\r\n          className=\"d-flex flex-column justify-content-center align-items-center\"\r\n        >\r\n          <img alt=\"images\" src={data?.image} />\r\n          <span className=\"mt-2 card-text-title text-align-center\">\r\n            {data?.name}\r\n          </span>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Modal.css\"; // Import your CSS file for styling modal (optional)\r\nimport { CModal, CModalBody } from \"@coreui/react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst Modal = ({ isOpen, onClose, children }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <CModal\r\n      visible={isOpen}\r\n      onClose={onClose}\r\n      aria-labelledby=\"LiveDemoExampleLabel\"\r\n      alignment=\"center\"\r\n      size=\"lg\"\r\n    >\r\n      <CModalBody className=\"p-0\">\r\n        <div className=\"close-modal\" onClick={onClose}>\r\n          <img\r\n            src={Assets.CloseBtn}\r\n            alt=\"close-btn\"\r\n            style={{ width: \"100%\" }}\r\n          />{\" \"}\r\n        </div>\r\n        <div>{children}</div>\r\n      </CModalBody>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst Table = ({ columns, rowData, data }) => {\r\n  const formattedColumns = data?.columnsData.map((column) => ({\r\n    ...column,\r\n    accessor: column.label.toLowerCase().replace(/\\s/g, \"_\"), // Create accessor for dynamic data access\r\n  }));\r\n\r\n  // Handle potential missing rows\r\n  const formattedData = data?.tableData.map((row) => {\r\n    return formattedColumns.reduce((acc, column) => {\r\n      const value = row[column.label.toLowerCase().replace(/\\s/g, \"_\")]; // Access data based on accessor\r\n      acc[column.accessor === \"ecg_result\" ? \"result\" : column.accessor] =\r\n        value || \"-\"; // Set default value if data is missing\r\n      return acc;\r\n    }, {});\r\n  });\r\n\r\n  console.log(data, formattedColumns, \"first formattedData\", formattedData);\r\n\r\n  return (\r\n    // <>\r\n    //   <CTable className=\"responsive-table\">\r\n    //     <CTableHead color=\"dark\">\r\n    //       <CTableRow>\r\n    //         {columns?.map((data, i) => (\r\n    //           <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n    //         ))}\r\n    //       </CTableRow>\r\n    //     </CTableHead>\r\n    //     <CTableBody>\r\n    //       {rowData?.map((dt, i) => (\r\n    //         <CTableRow key={i}>\r\n    //           <CTableHeaderCell>{dt?.id}</CTableHeaderCell>\r\n    //           <CTableDataCell>\r\n    //             <Badge label={dt?.result?.name} color={dt?.result?.status} />\r\n    //           </CTableDataCell>\r\n    //           <CTableDataCell>{dt?.systolic}</CTableDataCell>\r\n    //           <CTableDataCell>{dt?.diastolic}</CTableDataCell>\r\n    //           <CTableDataCell>{dt?.pluse}</CTableDataCell>\r\n    //           <CTableDataCell>{dt?.date}</CTableDataCell>\r\n    //           <CTableDataCell>{dt?.diastolic}</CTableDataCell>\r\n    //         </CTableRow>\r\n    //       ))}\r\n    //     </CTableBody>\r\n    //   </CTable>\r\n    // </>\r\n    <>\r\n      <div className=\"responsive-table-container\">\r\n        <table class=\"responsive-table\">\r\n          <thead>\r\n            <tr>\r\n              {formattedColumns?.map((data, i) => (\r\n                <th key={i}>{data?.label}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {formattedData?.map((dt, i) => (\r\n              <tr key={i}>\r\n                <td>{dt?.id}</td>\r\n                <td>\r\n                  <div style={{ width: \"180px\" }}>\r\n                    <Badge\r\n                      label={dt?.result?.name}\r\n                      color={dt?.result?.status}\r\n                    />\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <span className=\"fs-16 fw-500\">{dt?.systolic}</span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"fs-16 fw-500\">{dt?.diastolic}</span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"fs-16 fw-500\">{dt?.pluse}</span>\r\n                </td>\r\n                <td>\r\n                  <div style={{ width: \"100px\" }}>\r\n                    <div className=\"table-content fs-16 fw-500\">{dt?.date}</div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div className=\"d-flex gap-2\">\r\n                    {dt?.action?.map((data, i) => (\r\n                      <div className=\"d-flex\">\r\n                        {data.type === \"warning\" && (\r\n                          <img\r\n                            src={Assets.Warning}\r\n                            alt=\"warn\"\r\n                            className=\"cursor\"\r\n                          />\r\n                        )}\r\n                        {data.type === \"edit\" && (\r\n                          <img\r\n                            src={Assets.EditPencil}\r\n                            alt=\"warn\"\r\n                            className=\"cursor\"\r\n                          />\r\n                        )}\r\n                        {data.type === \"delete\" && (\r\n                          <img\r\n                            src={Assets.Delete}\r\n                            alt=\"warn\"\r\n                            className=\"cursor\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n            \r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport \"./ActiveButton.css\";\r\n\r\nconst ActiveButton = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"act-button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ActiveButton;\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nconst LineChartDetails = ({ datas }) => {\r\n  function removePercent(str) {\r\n    // Remove trailing percent sign (%) using String.replace() method\r\n    // Replace '%' with an empty string ''\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n\r\n  // Transform tableData to the desired format\r\n  const formattedData = datas?.tableData?.map((item) => ({\r\n    name: item?.date?.split(\" \")[0], // Extract date part only\r\n    data1: parseInt(\r\n      item?.[\"blood_ketone_value\"] ||\r\n        item?.[\"hemoglobinValue\"] ||\r\n        item?.[\"bmi\"] ||\r\n        item?.[\"blood_sugar_value\"] ||\r\n        item?.[\"pulse_(in_bpm)\"] ||\r\n        item?.[\"heart_rate_(bpm)\"] ||\r\n        item?.[\"respiration_rate_(bpm)\"] ||\r\n        removePercent(item?.[\"spo2\"]) ||\r\n        removePercent(item?.[\"hct_rate\"]) ||\r\n        item?.[\"fvc_(l)\"] ||\r\n        item?.[\"totalOnly\"] ||\r\n        item?.[\"chartValue\"] ||\r\n        item?.[\"temperature_value\"] ||\r\n        item?.[\"blood_uric_acid_value\"] ||\r\n        item?.[\"urea_value\"] ||\r\n        item?.[\"creatinine_value\"] ||\r\n        item?.[\"gfr_value\"]\r\n    ), // Convert pluse to integer if needed\r\n    data2: parseInt(item?.[\"ph\"] ? item?.[\"ph\"] : \"\"),\r\n  }));\r\n\r\n  const data = [\r\n    {\r\n      name: \"21-03-2024\",\r\n      amt: 70,\r\n    },\r\n    {\r\n      name: \"22-03-2024\",\r\n      amt: 70,\r\n    },\r\n    {\r\n      name: \"23-03-2024\",\r\n      amt: 100,\r\n    },\r\n    {\r\n      name: \"24-03-2024\",\r\n      amt: 95,\r\n    },\r\n    {\r\n      name: \"25-03-2024\",\r\n      amt: 70,\r\n    },\r\n    {\r\n      name: \"26-03-2024\",\r\n      amt: 77,\r\n    },\r\n    {\r\n      name: \"27-03-2024\",\r\n      amt: 100,\r\n    },\r\n  ];\r\n\r\n  const minValue = Math?.min(...formattedData?.map((item) => item.data1));\r\n  const maxValue = Math?.max(\r\n    ...formattedData?.map((item) =>\r\n      !isNaN(item?.data1) ? item?.data1 : -Infinity\r\n    )\r\n  );\r\n  // Custom tooltip formatter function\r\n  const tooltipFormatter = (value, name, props) => {\r\n    if (name === \"data1\") {\r\n      return [value, datas?.chartLabel1];\r\n    }\r\n    if (name === \"data2\") {\r\n      return [value, datas?.chartLabel2];\r\n    }\r\n    return [name, value];\r\n  };\r\n\r\n  return (\r\n    <LineChart\r\n      width={750}\r\n      height={300}\r\n      data={formattedData}\r\n      margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\r\n    >\r\n      <XAxis\r\n        dataKey=\"name\"\r\n        padding={{ left: 30, right: 30, bottom: 20 }}\r\n        axisLine={false}\r\n        tickLine={false}\r\n      />\r\n      <YAxis\r\n        yMax={Math.min(...formattedData?.map((item) => item?.data1))}\r\n        domain={[minValue, maxValue + 10]}\r\n        axisLine={false}\r\n        tickLine={false}\r\n      />\r\n      <Tooltip formatter={tooltipFormatter} />\r\n      {!formattedData[0].data2 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n          ]}\r\n        />\r\n      ) : (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#0194CF\" },\r\n          ]}\r\n        />\r\n      )}\r\n      <CartesianGrid horizontal={true} vertical={false} strokeWidth={1} />\r\n      <Line type=\"linear\" dataKey=\"data1\" stroke=\"#0084CF\" />\r\n      {formattedData[0].data2 && (\r\n        <Line type=\"linear\" dataKey=\"data2\" stroke=\"#0194CF\" />\r\n      )}\r\n    </LineChart>\r\n  );\r\n};\r\n\r\nexport default LineChartDetails;\r\n","import React from \"react\";\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\n\r\nconst ColumnChartDetails = ({ datas }) => {\r\n  function removePercent(str) {\r\n    // Remove trailing percent sign (%) using String.replace() method\r\n    // Replace '%' with an empty string ''\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n  // Transform tableData to the desired format\r\n  const formattedData = datas?.tableData?.map((item) => ({\r\n    name: item?.date.split(\" \")[0],\r\n    data1: parseInt(\r\n      item?.[\"blood_ketone_value\"] ||\r\n        item?.[\"hemoglobinValue\"] ||\r\n        item?.[\"bmi\"] ||\r\n        item?.[\"blood_sugar_value\"] ||\r\n        item?.[\"pulse_(in_bpm)\"] ||\r\n        item?.[\"heart_rate_(bpm)\"] ||\r\n        item?.[\"respiration_rate_(bpm)\"] ||\r\n        removePercent(item?.[\"spo2\"]) ||\r\n        removePercent(item?.[\"hct_rate\"]) ||\r\n        item?.[\"fvc_(l)\"] ||\r\n        item?.[\"totalOnly\"] ||\r\n        item?.[\"chartValue\"] ||\r\n        item?.[\"temperature_value\"] ||\r\n        item?.[\"blood_uric_acid_value\"] ||\r\n        item?.[\"urea_value\"] ||\r\n        item?.[\"creatinine_value\"] ||\r\n        item?.[\"gfr_value\"]\r\n    ),\r\n    data2: parseInt(item?.[\"ph\"] ? item?.[\"ph\"] : \"\"),\r\n  }));\r\n  const data = [\r\n    {\r\n      name: \"21-03-2024\",\r\n      bloodPressure: 70,\r\n    },\r\n    {\r\n      name: \"22-03-2024\",\r\n      bloodPressure: 70,\r\n    },\r\n    {\r\n      name: \"23-03-2024\",\r\n      bloodPressure: 100,\r\n    },\r\n    {\r\n      name: \"24-03-2024\",\r\n      bloodPressure: 95,\r\n    },\r\n    {\r\n      name: \"25-03-2024\",\r\n      bloodPressure: 70,\r\n    },\r\n    {\r\n      name: \"26-03-2024\",\r\n      bloodPressure: 77,\r\n    },\r\n    {\r\n      name: \"27-03-2024\",\r\n      bloodPressure: 100,\r\n    },\r\n  ];\r\n  const minValue = Math?.min(...formattedData?.map((item) => item.data1));\r\n  const maxValue = Math?.max(\r\n    ...formattedData?.map((item) =>\r\n      !isNaN(item?.data1) ? item?.data1 : -Infinity\r\n    )\r\n  );\r\n  const bloodPressureValues = new Set(\r\n    formattedData?.map((item) => datas?.name)\r\n  ); // Create a Set with \"Blood Pressure\"\r\n\r\n  const tooltipFormatter = (value, name, props) => {\r\n    if (name === \"data1\") {\r\n      return [value, datas?.chartLabel1];\r\n    }\r\n    if (name === \"data2\") {\r\n      return [value, datas?.chartLabel2];\r\n    }\r\n    return [name, value];\r\n  };\r\n  return (\r\n    <BarChart\r\n      width={720}\r\n      height={300}\r\n      data={formattedData}\r\n      margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\r\n    >\r\n      <XAxis dataKey=\"name\" padding={{ left: 30, right: 30 }} />\r\n      <YAxis domain={[0, maxValue + 10]} axisLine={false} tickLine={false} />\r\n      {/* {datas.name === \"SpO2\" ? (\r\n        <Tooltip formatter={(value) => `${value}%`} />\r\n      ) : ( */}\r\n      <Tooltip formatter={tooltipFormatter} />\r\n      {/* )} */}\r\n      {/* <Legend\r\n        payload={[...bloodPressureValues]?.map((value) => ({\r\n          id: value, // Set id (optional)\r\n          value: value, // Legend label\r\n          color: \"#0084CF\",\r\n        }))}\r\n      /> */}\r\n\r\n      {!formattedData[0].data2 ? (\r\n        <Legend\r\n          payload={[{ value: datas?.name, type: \"square\", color: \"#0084CF\" }]}\r\n        />\r\n      ) : (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"square\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"square\", color: \"#0194CF\" },\r\n          ]}\r\n        />\r\n      )}\r\n      <Bar dataKey=\"data1\" fill=\"#0084CF\" />\r\n      {formattedData[0].data2 && <Bar dataKey=\"data2\" fill=\"#0094CF\" />}\r\n    </BarChart>\r\n  );\r\n};\r\n\r\nexport default ColumnChartDetails;\r\n","import React, { useState } from \"react\";\r\nimport LineChartDetails from \"./LineChart\";\r\nimport ColumnChartDetails from \"./ColumnChartDetails\";\r\n\r\nconst ChartTab = ({ data }) => {\r\n  console.log(data, \"data d\");\r\n  const tabs = [\r\n    {\r\n      id: 1,\r\n      title: \"LINE\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"COLUMN\",\r\n    },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(tabs[0]);\r\n\r\n  const switchTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"chart-tabs-container mb-3\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chart-tab-items ${\r\n              data.id === currentTab?.id ? \"chart-tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <span\r\n              className={`chart-tab-title ${\r\n                data.id === currentTab?.id ? \"chart-tab-title-active\" : \"\"\r\n              }`}\r\n            >\r\n              {data.title}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        {currentTab?.id === 1 && <LineChartDetails datas={data} />}\r\n        {currentTab?.id === 2 && <ColumnChartDetails datas={data}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartTab;\r\n","import React from 'react';\r\n\r\nconst BlurBackground = ({ children }) => {\r\n  return <div className=\"blur-background\">{children}</div>;\r\n};\r\n\r\nexport default BlurBackground;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst RespirationRateForm = ({ addBack, defaultData }) => {\r\n  // const [selectedDate, setSelectedDate] = useState(new Date());\r\n  // const [selectedTime, setSelectedTime] = useState(new Date());\r\n\r\n  // const handleDateChange = (date) => {\r\n  //   setSelectedDate(date);\r\n  // };\r\n\r\n  // const handleTimeChange = (date) => {\r\n  //   setSelectedTime(date);\r\n  // };\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Respiration Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"respiration_rate_(bpm)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RespirationRateForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Spo2 = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || '';\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"pulse_rate_(bpm)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                SpO2 (%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.spo2)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spo2;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Temperature = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.type}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'F'}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Temperature *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.temperature_value}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst LFTForm = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FVC (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"fvc_(l)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1 (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"fev1_(l)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1/FVC Ratio *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"fev1/fvc\"]}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                PEF (L/Min) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"pef_(l/min)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                SVC (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"svc_(l)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={8}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LFTForm;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Dropdown = ({ options, defaultValue }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\r\n    defaultValue || options[0]\r\n  );\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    setSelectedOption(option);\r\n    setIsOpen(false); // Close the dropdown after selecting an option\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <div className=\"dropdown-header\" onClick={toggleDropdown}>\r\n        <span>{selectedOption || \"Select an option\"}</span>\r\n        <span className={`arrow ${isOpen ? \"open\" : \"\"}`}></span>\r\n      </div>\r\n      {isOpen && (\r\n        <ul className=\"dropdown-list\">\r\n          {options.map((option, index) => (\r\n            <li key={index} onClick={() => handleOptionClick(option)}>\r\n              {option}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\n\r\nconst HeartRate = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const options = [\"Single Lead\", \"3 Lead\", \"12 Lead\"];\r\n  const findIndex = defaultData?.ecg_type\r\n    ? options?.indexOf(defaultData?.ecg_type)\r\n    : 0;\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown options={options} defaultValue={options[findIndex]} />\r\n              </div>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"heart_rate_(bpm)\"]}\r\n              /> */}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG *\r\n              </label>\r\n              <input type=\"file\" id=\"file\" />\r\n              <label for=\"file\">Choose file</label>\r\n\r\n              <div class=\"d-flex flex-column gap-1 justify-content-center h-100\">\r\n                {defaultData?.ecg ? (\r\n                  <span className=\"\">ECG{'('}{defaultData?.ecg?.contentType}{')'}</span>\r\n                ) : (\r\n                  <span className=\"\">No File Chosen</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1 justify-content-center h-100\">\r\n              {defaultData?.ecg ? (\r\n                <span className=\"mt-2\">{defaultData?.ecg}</span>\r\n              ) : (\r\n                <span className=\"mt-2\">No File Chosen</span>\r\n              )}\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={8}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Interpretation *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.interpretation}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeartRate;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BSugar = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.type}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'mg/dL'}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Sugar *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.blood_sugar_value}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BSugar;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst LipidProfileForm = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Result *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultData?.result?.name}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Total) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Total *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.totalOnly}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Triglycerides) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Triglycerides *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.triglycerides)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (HDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hdl)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (LDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.ldl)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL/HDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"ldl/hdl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (VLDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                VLDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"vldl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LipidProfileForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst HCT = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HCT(%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hct_rate)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HCT;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Hemogloin = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Hemogloin(g/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hemoglobin)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hemogloin;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BKetone = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Ketone(mmol/L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.blood_ketone)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BKetone;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BUricAcid = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Uric Acid(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.blood_uric_acid)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BUricAcid;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst GFR = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                GFR(mL/min) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.gfr)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GFR;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Creatinine = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Creatinine(μmol/L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.creatinine)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Creatinine;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Urea = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urea(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.urea)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urea;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Urinalysis = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (μmol/kg/d)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.urine)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (pH)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Sugar (mg/dL)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.sugar}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.protein}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocytes*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.leukocytes}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                RBC*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.rbc}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urinalysis;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BMI = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Height)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={\"cm\"}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Height *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.height)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Weight)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={\"kg\"}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Weight *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.weight)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                BMI *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.bmi}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BMI;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BPForm = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Systolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.systolic}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Diastolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.diastolic}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse (in BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"pulse_(in_bpm)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BPForm;\r\n","import React, { useState } from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { CModal, CModalBody, CModalHeader } from \"@coreui/react\";\r\nimport BlurBackground from \"../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../Buttons/SecondaryButton/SecondaryButton\";\r\nimport RespirationRateForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm\";\r\nimport Spo2 from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2\";\r\nimport Temperature from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature\";\r\nimport LFTForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm\";\r\nimport HeartRate from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate\";\r\nimport BSugar from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar\";\r\nimport LipidProfileForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm\";\r\nimport HCT from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT\";\r\nimport Hemogloin from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin\";\r\nimport BKetone from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone\";\r\nimport BUricAcid from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid\";\r\nimport GFR from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR\";\r\nimport Creatinine from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine\";\r\nimport Urea from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea\";\r\nimport Urinalysis from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis\";\r\nimport BMI from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI\";\r\nimport BPForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm\";\r\n\r\nconst DynamicTable = ({ columnsData, tableData }) => {\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [selectedData, setSelectedData] = useState(\"\");\r\n\r\n  const deleteData = (data) => {\r\n    if (data) {\r\n      setDeleteModal(true);\r\n    }\r\n  };\r\n\r\n  const editData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setEditModal(true);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"responsive-table-container\">\r\n        <table class=\"responsive-table\">\r\n          <thead>\r\n            <tr>\r\n              {columnsData?.map((column) => (\r\n                <th key={column.id}>{column.label}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableData?.map((row, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {columnsData.map((column) => (\r\n                  <td key={`${rowIndex}-${column?.id}`}>\r\n                    {renderCell(row, column)}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Delete Modal */}\r\n      {deleteModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteModal}\r\n            onClose={() => setDeleteModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteModal(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteModal(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {/* Edit Modal */}\r\n      {editModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={editModal}\r\n            onClose={() => setEditModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalHeader>\r\n              <h4 className=\"fw-600\">Edit {selectedData?.name}</h4>\r\n            </CModalHeader>\r\n            <CModalBody className=\"p-3\">\r\n              {selectedData?.name === \"BMI\" && (\r\n                <BMI\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Pressure\" && (\r\n                <BPForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Respiration Rate\" && (\r\n                <RespirationRateForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"SpO2\" && (\r\n                <Spo2\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Temperature\" && (\r\n                <Temperature\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Lung Function Test (LFT)\" && (\r\n                <LFTForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Heart Rate\" && (\r\n                <HeartRate\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Sugar\" && (\r\n                <BSugar\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Lipid Profile\" && (\r\n                <LipidProfileForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"HCT\" && (\r\n                <HCT\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Hemoglobin\" && (\r\n                <Hemogloin\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Ketone\" && (\r\n                <BKetone\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Uric Acid\" && (\r\n                <BUricAcid\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"GFR\" && (\r\n                <GFR\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Creatinine\" && (\r\n                <Creatinine\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urea\" && (\r\n                <Urea\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urinalysis\" && (\r\n                <Urinalysis\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const renderImage = (contentUrl) => {\r\n    return (\r\n      <img\r\n        src={contentUrl}\r\n        alt=\"Image\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  function renderCell(row, column) {\r\n    const columnKey = getColumnKey(column?.label);\r\n    const value = row[columnKey];\r\n    console.log(\"first\", value);\r\n    if (columnKey === \"ecg\") {\r\n      // Function to render PDF content\r\n      const renderPdf = (contentUrl) => {\r\n        window.open(contentUrl, '_blank');\r\n      };\r\n      return (\r\n        <div style={{ width: \"80px\" }} onClick={() => renderPdf(value.link)}>\r\n          <span className=\"hyperlink\">ECG</span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"result\") {\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          <Badge label={value?.name} color={value?.status} />\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"action\") {\r\n      return (\r\n        <div className=\"d-flex gap-2\">\r\n          {value.map((data, i) => (\r\n            <div key={i} className=\"d-flex\">\r\n              {renderActionButton(data, row)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      // Default rendering for regular data\r\n      return <span className=\"fs-16 fw-500\">{value}</span>;\r\n    }\r\n  }\r\n\r\n  function renderActionButton(data, row) {\r\n    switch (data.type) {\r\n      case \"warning\":\r\n        return <img src={Assets.Warning} alt=\"warn\" className=\"cursor\" />;\r\n      case \"edit\":\r\n        return (\r\n          <img\r\n            src={Assets.EditPencil}\r\n            alt=\"edit\"\r\n            className=\"cursor\"\r\n            onClick={() => editData(row)}\r\n          />\r\n        );\r\n      case \"delete\":\r\n        return (\r\n          <img\r\n            src={Assets.Delete}\r\n            alt=\"delete\"\r\n            className=\"cursor\"\r\n            onClick={() => deleteData(row)}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function getColumnKey(columnLabel) {\r\n    // Convert label to a key format used in your data object\r\n    // Example: \"Heart Rate (BPM)\" -> \"heart_rate_(bpm)\"\r\n    return columnLabel.toLowerCase().replace(/\\s+/g, \"_\");\r\n  }\r\n};\r\n\r\nexport default DynamicTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport ActiveButton from \"../Buttons/ActiveButton/ActiveButton\";\r\n\r\nconst DateRangePicker = ({ onClose }) => {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2 p-3\">\r\n        <CCol md={4} className=\"d-flex flex-column gap-1\">\r\n          <span>From Date *</span>\r\n          <DatePicker\r\n            showIcon\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n            isClearable\r\n            className=\"date-range-picker\"\r\n            maxDate={today}\r\n          />\r\n        </CCol>\r\n        <CCol md={4} className=\"d-flex flex-column gap-1\">\r\n          <span>To Date *</span>\r\n          <DatePicker\r\n            showIcon\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            isClearable\r\n            className=\"date-range-picker\"\r\n            maxDate={today}\r\n          />\r\n        </CCol>\r\n        <CCol\r\n          md={4}\r\n          className=\"d-flex flex-column gap-1 justify-content-center\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <ActiveButton onClick={onClose}>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.CloseX} alt=\"close\" />\r\n            </div>\r\n          </ActiveButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateRangePicker;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./ECGChart.css\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\n\r\nconst ECGChart = ({ data }) => {\r\n  console.log(\"data\", data.tableData);\r\n  const dateOnly = (data) => {\r\n    // Create a new Date object with the specified date and time\r\n    const date = new Date(data);\r\n\r\n    // Get individual date and time components\r\n    const day = (\"0\" + date.getDate()).slice(-2); // Get day with leading zero if necessary\r\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // Get month with leading zero if necessary\r\n    const year = date.getFullYear();\r\n    // const hours = (\"0\" + date.getHours()).slice(-2); // Get hours with leading zero if necessary\r\n    // const minutes = (\"0\" + date.getMinutes()).slice(-2); // Get minutes with leading zero if necessary\r\n\r\n    // Format the date in DD-MM-YYYY HH:mm format\r\n    const formattedDate = `${day}-${month}-${year}`;\r\n\r\n    return formattedDate; // Output: 24-06-2024 10:15\r\n  };\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [filter, setFilter] = useState(\"Single Lead\"); // Initial filter set to 'A'\r\n\r\n  // Function to handle filtering based on category\r\n  const handleFilter = (category) => {\r\n    setFilter(category);\r\n  };\r\n\r\n  // Effect to filter items based on the current filter\r\n  useEffect(() => {\r\n    const filteredItems = data?.tableData?.filter(\r\n      (item) => item.ecg_type === filter\r\n    );\r\n    setItems(filteredItems);\r\n  }, [filter]);\r\n\r\n  // Initialize items on component mount\r\n  useEffect(() => {\r\n    handleFilter(\"Single Lead\"); // Default to 'A' category initially\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"carousel-container\">\r\n        {items.length === 0 ? (\r\n          <span className=\"fs-18 fw-600\">No Data</span>\r\n        ) : (\r\n          <div className=\"carousel\">\r\n            {items?.map((item, i) => (\r\n              <>\r\n                <div key={i} className=\"chart-item\">\r\n                  <div className=\"rectangle\">\r\n                    <img src={Assets.ecgSample} alt=\"ecg\" />\r\n                  </div>\r\n                  <div className=\"captions\">\r\n                    <span>{dateOnly(item?.date)}</span>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"ecg_btngrp\">\r\n        <button\r\n          onClick={() => handleFilter(\"Single Lead\")}\r\n          style={{\r\n            backgroundColor: filter === \"Single Lead\" ? \"#0084CF\" : \"initial\",\r\n            color: filter === \"Single Lead\" ? \"white\" : \"black\",\r\n          }}\r\n          className=\"ecg_button\"\r\n        >\r\n          Single Lead\r\n        </button>\r\n        <button\r\n          onClick={() => handleFilter(\"3 Lead\")}\r\n          style={{\r\n            backgroundColor: filter === \"3 Lead\" ? \"#0084CF\" : \"initial\",\r\n            color: filter === \"3 Lead\" ? \"white\" : \"black\",\r\n          }}\r\n          className=\"ecg_button\"\r\n        >\r\n          3 Lead\r\n        </button>\r\n        <button\r\n          onClick={() => handleFilter(\"12 Lead\")}\r\n          style={{\r\n            backgroundColor: filter === \"12 Lead\" ? \"#0084CF\" : \"initial\",\r\n            color: filter === \"12 Lead\" ? \"white\" : \"black\",\r\n          }}\r\n          className=\"ecg_button\"\r\n        >\r\n          12 Lead\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ECGChart;\r\n","import {\r\n  CBadge,\r\n  CCol,\r\n  CContainer,\r\n  CFormInput,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport Table from \"../../../../../Tables/Table\";\r\nimport Badge from \"../../../../../Badge/Badge\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport ChartTab from \"../../../../../Charts/ChartTab\";\r\nimport DynamicTable from \"../../../../../Tables/DynamicTable\";\r\n\r\nimport BPForm from \"../Forms/BPForm\";\r\nimport HeartRate from \"../Forms/HeartRate\";\r\nimport LFTForm from \"../Forms/LFTForm\";\r\nimport LipidProfileForm from \"../Forms/LipidProfileForm\";\r\nimport Temperature from \"../Forms/Temperature\";\r\nimport Spo2 from \"../Forms/Spo2\";\r\nimport RespirationRateForm from \"../Forms/RespirationRateForm\";\r\nimport BMI from \"../Forms/BMI\";\r\nimport BSugar from \"../Forms/BSugar\";\r\nimport Hemogloin from \"../Forms/Hemogloin\";\r\nimport HCT from \"../Forms/HCT\";\r\nimport BUricAcid from \"../Forms/BUricAcid\";\r\nimport BKetone from \"../Forms/BKetone\";\r\nimport Urea from \"../Forms/Urea\";\r\nimport Creatinine from \"../Forms/Creatinine\";\r\nimport GFR from \"../Forms/GFR\";\r\nimport Urinalysis from \"../Forms/Urinalysis\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DateRangePicker from \"../../../../../DateRangePicker/DateRangePicker\";\r\nimport ECGChart from \"../ECG Chart/ECGChart\";\r\n\r\nconst ObjectiveDetailPage = ({ data }) => {\r\n  const [chartView, setChartView] = useState(false);\r\n  const [addView, setAddView] = useState(false);\r\n  const [filterView, setFilterView] = useState(false);\r\n\r\n  const columns = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"RESULT\" },\r\n    { id: 3, label: \"SYSTOLIC\" },\r\n    { id: 4, label: \"DIASTOLIC\" },\r\n    { id: 5, label: \"PLUSE (IN BPM\" },\r\n    { id: 6, label: \"DATE\" },\r\n    { id: 7, label: \"ACTION\" },\r\n  ];\r\n\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      result: { status: \"success\", name: \"Normal\" },\r\n      systolic: \"112\",\r\n      diastolic: \"25\",\r\n      pluse: \"89\",\r\n      date: \"02-04-2024 12:13PM\",\r\n      action: [{ type: \"warning\" }],\r\n    },\r\n    {\r\n      id: 2,\r\n      result: {\r\n        status: \"error\",\r\n        name: \"High Blood Pressure (Hypertension) Stage 1\",\r\n      },\r\n      systolic: \"112\",\r\n      diastolic: \"25\",\r\n      pluse: \"89\",\r\n      date: \"02-04-2024 12:13PM\",\r\n      action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n    },\r\n    {\r\n      id: 3,\r\n      result: { status: \"error\", name: \"Normal\" },\r\n      systolic: \"118\",\r\n      diastolic: \"12\",\r\n      pluse: \"-\",\r\n      date: \"02-04-2024 12:13PM\",\r\n      action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n    },\r\n    {\r\n      id: 4,\r\n      result: {\r\n        status: \"error\",\r\n        name: \"High Blood Pressure (Hypertension) Stage 1\",\r\n      },\r\n      systolic: \"112\",\r\n      diastolic: \"25\",\r\n      pluse: \"89\",\r\n      date: \"02-04-2024 12:13PM\",\r\n      action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n    },\r\n    {\r\n      id: 5,\r\n      result: { status: \"success\", name: \"Normal\" },\r\n      systolic: \"118\",\r\n      diastolic: \"12\",\r\n      pluse: \"45\",\r\n      date: \"02-04-2024 12:13PM\",\r\n      action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n    },\r\n  ];\r\n\r\n  const chartPage = () => {\r\n    setChartView(true);\r\n  };\r\n  const tablePage = () => {\r\n    setChartView(false);\r\n  };\r\n  const addPage = () => {\r\n    setAddView(true);\r\n  };\r\n  const addBack = () => {\r\n    setAddView(false);\r\n  };\r\n\r\n  const filterPage = () => {\r\n    setFilterView(true);\r\n  };\r\n  const filterBack = () => {\r\n    setFilterView(false);\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer className=\"p-0\">\r\n        <CContainer className=\"mt-2 mb-3\">\r\n          <CRow>\r\n            <CCol lg={7}>\r\n              <div className=\"d-flex flex-row gap-3\">\r\n                <img src={data?.icon} alt=\"icon\" />\r\n                <div className=\"d-flex flex-column gap-2\">\r\n                  <span className=\"fs-20 fw-600\">{data?.name}</span>\r\n                  <div className=\"d-flex flex-row gap-2 flex-wrap\">\r\n                    {data?.badge?.map((dt, i) => (\r\n                      <Badge label={dt?.label} color={dt?.color} />\r\n                    ))}\r\n                  </div>\r\n                  <span className=\"fs-14 fw-500\">{data?.date}</span>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={5} className=\"d-flex align-items-center mt-2\">\r\n              <CRow className=\"w-100 d-flex justify-content-around\">\r\n                <CCol xs={4} md={4} lg={4}>\r\n                  {!addView && (\r\n                    <PrimaryButton onClick={() => addPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  )}\r\n                  {addView && (\r\n                    <ActiveButton onClick={() => addBack()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.CloseX} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </ActiveButton>\r\n                  )}\r\n                </CCol>\r\n                <CCol xs={4} md={4} lg={4}>\r\n                  {filterView && (\r\n                    <ActiveButton onClick={() => filterBack()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.CloseX} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Filter</span>\r\n                      </div>\r\n                    </ActiveButton>\r\n                  )}\r\n                  {!filterView && (\r\n                    <PrimaryButton>\r\n                      <div\r\n                        className=\"d-flex align-items-center gap-2\"\r\n                        onClick={() => filterPage()}\r\n                      >\r\n                        <img src={Assets.Filter} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Filter</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  )}\r\n                </CCol>\r\n                {!chartView && (\r\n                  <CCol xs={4} md={4} lg={4}>\r\n                    <PrimaryButton onClick={() => chartPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Chart} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Chart</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </CCol>\r\n                )}\r\n                {chartView && (\r\n                  <CCol xs={4} md={4} lg={4}>\r\n                    <ActiveButton onClick={() => tablePage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.CloseX} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Chart</span>\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </CCol>\r\n                )}\r\n              </CRow>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n        <CRow>\r\n          <CCol xl={12}>\r\n            {chartView ? (\r\n              data?.name === \"ECG\" ? (\r\n                <ECGChart data={data}/>\r\n              ) : (\r\n                <ChartTab data={data} />\r\n              )\r\n            ) : (\r\n              <>\r\n                {filterView && <DateRangePicker onClose={filterBack} />}\r\n                <DynamicTable\r\n                  columnsData={data?.columnsData}\r\n                  tableData={data?.tableData}\r\n                />\r\n              </>\r\n            )}\r\n          </CCol>\r\n        </CRow>\r\n\r\n        {/* Modal for add  */}\r\n        {addView && (\r\n          <BlurBackground>\r\n            <CModal\r\n              alignment=\"center\"\r\n              visible={addView}\r\n              onClose={addBack}\r\n              aria-labelledby=\"VerticallyCenteredExample\"\r\n              size=\"lg\"\r\n            >\r\n              <CModalHeader>\r\n                <h4 className=\"fw-600\">Add {data?.name}</h4>\r\n              </CModalHeader>\r\n              <CModalBody className=\"p-4\">\r\n                {data?.name === \"Blood Pressure\" && (\r\n                  <BPForm addBack={addBack} />\r\n                )}\r\n                {data?.name === \"ECG\" && <HeartRate addBack={addBack} />}\r\n                {data?.name === \"Lung Function Test (LFT)\" && (\r\n                  <LFTForm addBack={addBack} />\r\n                )}\r\n                {data?.name === \"Lipid Profile\" && (\r\n                  <LipidProfileForm addBack={addBack} />\r\n                )}\r\n                {data?.name === \"Temperature\" && (\r\n                  <Temperature addBack={addBack} />\r\n                )}\r\n                {data?.name === \"SpO2\" && <Spo2 addBack={addBack} />}\r\n                {data?.name === \"Respiration Rate\" && (\r\n                  <RespirationRateForm addBack={addBack} />\r\n                )}\r\n                {data?.name === \"BMI\" && <BMI addBack={addBack} />}\r\n                {data?.name === \"Blood Sugar\" && <BSugar addBack={addBack} />}\r\n                {data?.name === \"Hemoglobin\" && <Hemogloin addBack={addBack} />}\r\n                {data?.name === \"HCT\" && <HCT addBack={addBack} />}\r\n                {data?.name === \"Blood Uric Acid\" && (\r\n                  <BUricAcid addBack={addBack} />\r\n                )}\r\n                {data?.name === \"Blood Ketone\" && <BKetone addBack={addBack} />}\r\n                {data?.name === \"Urea\" && <Urea addBack={addBack} />}\r\n                {data?.name === \"Creatinine\" && (\r\n                  <Creatinine addBack={addBack} />\r\n                )}\r\n                {data?.name === \"GFR\" && <GFR addBack={addBack} />}\r\n                {data?.name === \"Urinalysis\" && (\r\n                  <Urinalysis addBack={addBack} />\r\n                )}\r\n              </CModalBody>\r\n            </CModal>\r\n          </BlurBackground>\r\n        )}\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObjectiveDetailPage;\r\n","import React, { useState } from \"react\";\r\nimport VitalsTab from \"../../../VitalsTab/VitalsTab\";\r\nimport { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport Modal from \"../../../../../Modal/Modal\";\r\nimport ObjectiveDetailPage from \"../DetailPage/ObjectiveDetailPage\";\r\n\r\nconst VitalSign = ({ setVitalView }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Primary Vitals\" },\r\n    { id: 2, title: \"Metabolic And Biochemical Profile\" },\r\n    { id: 3, title: \"Hematologic Profile\" },\r\n    { id: 4, title: \"Renal and Metabolic Markers\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState({\r\n    id: 1,\r\n    title: \"Primary Vitals\",\r\n  });\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  function findTitleById(id) {\r\n    const titleObject = tabs?.find((title) => title.id === id);\r\n    return titleObject ? titleObject?.title : \"Primary Vitals\"; // Return the title or a message if not found\r\n  }\r\n\r\n  const currentTabtitle = findTitleById(currentTab);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [cardSelectedData, setSelectedCardData] = useState();\r\n\r\n  const openModal = (data) => {\r\n    setSelectedCardData(data);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={setVitalView}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Vital Signs\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Vital Signs\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={0}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <VitalsTab category={currentTabtitle} openModal={openModal} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n        <CContainer className=\"p-0\">\r\n          <CRow>\r\n            <CCol className=\"mb-3\">\r\n              <ObjectiveDetailPage data={cardSelectedData} />\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VitalSign;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\n\r\nconst DateSelector = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span className=\"fs-18 fw-400 label-color\">Start Date *</span>\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span className=\"fs-18 fw-400 label-color\">End Date *</span>\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={endDate}\r\n              onChange={(date) => setEndDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateSelector;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst DateCards = ({ data }) => {\r\n  return (\r\n    <>\r\n      <CCard className=\"date-card cursor-default\">\r\n        <CCardBody>\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <span className=\"fs-20 fw-600\">{data?.date}</span>\r\n            <div>\r\n              <img src={Assets.deleteorg} alt=\"Del\" className=\"cursor\"/>\r\n            </div>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateCards;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  onPageChange,\r\n  totalItems,\r\n  itemsPerPage,\r\n}) => {\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [pages, setPages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Calculate total pages based on totalItems and itemsPerPage\r\n    const pagesCount = Math.ceil(totalItems / itemsPerPage);\r\n    setTotalPages(pagesCount);\r\n\r\n    // Generate array of pages dynamically\r\n    setPages(Array.from(Array(pagesCount).keys()));\r\n  }, [totalItems, itemsPerPage]);\r\n\r\n  const handlePageClick = (pageNumber) => {\r\n    onPageChange(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      {pages.map((page) => (\r\n        <button\r\n          key={page}\r\n          onClick={() => handlePageClick(page + 1)}\r\n          className={currentPage === page + 1 ? \"active-page\" : \"\"}\r\n        >\r\n          {page + 1}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst SingleDatePicker = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={12} className=\"d-flex flex-column gap-1\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleDatePicker;\r\n","import React, { useState } from \"react\";\r\n\r\nconst OptionItem = ({ label, onSelect }) => {\r\n  const [isSelected, setIsSelected] = useState(false);\r\n\r\n  const toggleSelected = () => {\r\n    setIsSelected(!isSelected);\r\n    onSelect(label, !isSelected); // Notify parent component of selection change\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`option-item ${isSelected ? \"selected\" : \"\"}`}\r\n      onClick={toggleSelected}\r\n    >\r\n      {label}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DateCards from \"../../../../../DateCards/DateCards\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst PhysicalExam = ({ onClose }) => {\r\n  const dateCards = [\r\n    { id: 1, date: \"06/07/2024\" },\r\n    { id: 2, date: \"06/07/2024\" },\r\n    { id: 3, date: \"06/07/2024\" },\r\n    { id: 4, date: \"06/07/2024\" },\r\n    { id: 5, date: \"06/07/2024\" },\r\n    { id: 6, date: \"06/07/2024\" },\r\n    { id: 7, date: \"06/07/2024\" },\r\n    { id: 8, date: \"06/07/2024\" },\r\n    { id: 9, date: \"06/07/2024\" },\r\n    { id: 10, date: \"06/07/2024\" },\r\n    { id: 11, date: \"06/07/2024\" },\r\n    { id: 12, date: \"06/07/2024\" },\r\n    { id: 13, date: \"06/07/2024\" },\r\n    { id: 14, date: \"06/07/2024\" },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n\r\n  const options = [\r\n    \"Lorem ipsum\",\r\n    \"Lorem ipsum\",\r\n    \"Lorem ipsum\",\r\n    \"Lorem ipsum\",\r\n    \"Lorem ipsum\",\r\n    \"Lorem ipsum\",\r\n    \"Lorem ipsum 2\",\r\n  ];\r\n\r\n  const itemsPerPage = 9; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return dateCards?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const handleSelect = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    } else {\r\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const [nutritionOpen, setNutritionOpen] = useState(false);\r\n  const [constiOpen, setConstiOpen] = useState(false);\r\n  const [generalOpen, setGeneralOpen] = useState(false);\r\n  const [heentOpen, setHeentOpen] = useState(false);\r\n\r\n  const nutritionTabOpen = () => {\r\n    setNutritionOpen(true);\r\n  };\r\n\r\n  const nutritionTabClose = () => {\r\n    setNutritionOpen(false);\r\n  };\r\n\r\n  const constiTabOpen = () => {\r\n    setConstiOpen(true);\r\n  };\r\n\r\n  const constiTabClose = () => {\r\n    setConstiOpen(false);\r\n  };\r\n\r\n  const generalTabOpen = () => {\r\n    setGeneralOpen(true);\r\n  };\r\n\r\n  const generalTabClose = () => {\r\n    setGeneralOpen(false);\r\n  };\r\n\r\n  const heentTabOpen = () => {\r\n    setHeentOpen(true);\r\n  };\r\n\r\n  const heentTabClose = () => {\r\n    setHeentOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Physical Exam\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Physical Exam\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              {getCurrentPageItems()?.map((item, i) => (\r\n                <CCol lg={4} className=\"mb-3\" key={i}>\r\n                  <DateCards data={item} />\r\n                </CCol>\r\n              ))}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={dateCards?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <CRow className=\"mb-2\">\r\n              <CCol className=\"d-flex align-items-center gap-2\">\r\n                <span>Date</span>\r\n                <SingleDatePicker />\r\n              </CCol>\r\n              <CCol className=\"d-flex justify-content-end\">\r\n                <div style={{ width: \"120px\" }}>\r\n                  <ActiveButton onClick={() => setAddFormView(false)}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets?.listview} alt=\"close\" />\r\n                      <span>List View</span>\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!nutritionOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={nutritionTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {nutritionOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={nutritionTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Nutritional</span>\r\n              </CCol>\r\n              {nutritionOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!constiOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={constiTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {constiOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={constiTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Constitutional</span>\r\n              </CCol>\r\n              {constiOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">General</span>\r\n              </CCol>\r\n              {generalOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={heentTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={heentTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">HEENT</span>\r\n              </CCol>\r\n              {heentOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"128px\" }}>\r\n                <PrimaryButton>SAVE</PrimaryButton>\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhysicalExam;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst SearchBar = () => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={6} className=\"d-flex flex-column gap-1\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Search\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst LabTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <Badge label={dt?.file} color={\"primary\"} />\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.notes}</CTableDataCell>\r\n              <CTableDataCell>{dt?.link}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst LabForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lab Test Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Upload Results / Image (pdf, jpg, jpeg, png)\r\n              </label>\r\n              <div class=\"input-file-container\">\r\n                <input class=\"input-file\" id=\"my-file\" type=\"file\" />\r\n                <label\r\n                  tabindex=\"0\"\r\n                  for=\"my-file\"\r\n                  className=\"input-file-trigger\"\r\n                >\r\n                  <img alt=\"upload\" src={Assets.Export} />\r\n                  <span>Choose File</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol className=\"d-flex align-items-center\">\r\n          <span className=\"fs-18 fw-400\">No Files Chosen</span>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabForm;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport LabTable from \"../../../../../Tables/LabTable\";\r\nimport LabForm from \"./LabForm\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst Lab = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"LAB TEST DATE\" },\r\n    { id: 3, label: \"LAB TEST NAME\" },\r\n    { id: 4, label: \"FILE\" },\r\n    { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Lab</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Lab\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <SearchBar />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <LabTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <LabForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lab;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ImagingForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Scan Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Upload Results / Image (pdf, jpg, jpeg, png)\r\n              </label>\r\n              <div class=\"input-file-container\">\r\n                <input class=\"input-file\" id=\"my-file\" type=\"file\" />\r\n                <label\r\n                  tabindex=\"0\"\r\n                  for=\"my-file\"\r\n                  className=\"input-file-trigger\"\r\n                >\r\n                  <img alt=\"upload\" src={Assets.Export} />\r\n                  <span>Choose File</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol className=\"d-flex align-items-center\">\r\n          <span className=\"fs-18 fw-400\">No Files Chosen</span>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImagingTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <Badge label={dt?.file} color={\"primary\"} />\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.notes}</CTableDataCell>\r\n              <CTableDataCell>{dt?.link}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport LabTable from \"../../../../../Tables/LabTable\";\r\nimport ImagingForm from \"./ImagingForm\";\r\nimport ImagingTable from \"../../../../../Tables/ImagingTable\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst Imaging = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"SCAN DATE\" },\r\n    { id: 3, label: \"SCAN TYPE\" },\r\n    { id: 4, label: \"FILE\" },\r\n    { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-05-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"JPG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"JPG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Imaging</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Imaging\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <SearchBar />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <ImagingTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ImagingForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Imaging;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Breadcrumb from \"../../../../Breadcrumb/Breadcrumb\";\r\nimport \"./Objective.css\";\r\nimport MedicalTab from \"../MedicalTab\";\r\nimport VitalsTab from \"../../VitalsTab/VitalsTab\";\r\nimport Modal from \"../../../../Modal/Modal\";\r\nimport ObjectiveDetailPage from \"./DetailPage/ObjectiveDetailPage\";\r\nimport VitalSign from \"./VitalSign/VitalSign\";\r\nimport PhysicalExam from \"./PhysicalExam/PhysicalExam\";\r\nimport Lab from \"./Lab/Lab\";\r\nimport Imaging from \"./Imaging/Imaging\";\r\n\r\nconst Objective = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Vital Signs\", image: Assets.VitalSig },\r\n    { id: 2, name: \"Physical Exam\", image: Assets.PhyExam },\r\n    { id: 3, name: \"Lab\", image: Assets.Lab },\r\n    { id: 4, name: \"Imaging\", image: Assets.Imaging },\r\n  ];\r\n\r\n  // const [selectedData, setSelectedData] = useState();\r\n  const [vitalView, setVitalView] = useState(false);\r\n  const [phyView, setPhyView] = useState(false);\r\n  const [labView, setLabView] = useState(false);\r\n  const [imagingView, setImagingView] = useState(false);\r\n\r\n  const getSelectedData = (data) => {\r\n    console.log(\"first data\", data);\r\n    // setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setVitalView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setPhyView(true);\r\n    }\r\n    if (data?.id === 3) {\r\n      setLabView(true);\r\n    }\r\n    if (data?.id === 4) {\r\n      setImagingView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        {!vitalView && !phyView && !labView && !imagingView ? (\r\n          <CRow>\r\n            {cardData.map((dt, i) => (\r\n              <CCol md={4} xl={3} className=\"mb-3\">\r\n                <Card data={dt} getSelectedData={getSelectedData} />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        ) : vitalView ? (\r\n          <VitalSign setVitalView={() => setVitalView(false)} />\r\n        ) : phyView ? (\r\n          <PhysicalExam onClose={() => setPhyView(false)} />\r\n        ) : labView ? (\r\n          <Lab onClose={() => setLabView(false)} />\r\n        ) : imagingView ? (\r\n          <Imaging onClose={() => setImagingView(false)} />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Objective;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst DiagnosisTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.condition}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.treatment}</CTableDataCell>\r\n              <CTableDataCell>{dt?.remark}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\n\r\nconst DiagnosisForm = ({ back, defaultValues }) => {\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Condition *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.condition}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Treatment *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.treatment}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Remark\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.remark}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisForm;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DiagnosisTable from \"../../../../../Tables/DiagnosisTable\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DiagnosisForm from \"./DiagnosisForm\";\r\n\r\nconst Diagnosis = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"CONDITION\" },\r\n    { id: 4, label: \"TREATMENT\" },\r\n    { id: 5, label: \"REMARK\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      condition: \"Lorem Ipsum\",\r\n      treatment: \"Lorem Ipsum\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024\",\r\n      condition: \"Lorem Ipsum\",\r\n      treatment: \"Lorem Ipsum\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"07-06-2024\",\r\n      condition: \"Lorem Ipsum\",\r\n      treatment: \"Lorem Ipsum\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"08-07-2024\",\r\n      condition: \"Lorem Ipsum\",\r\n      treatment: \"Lorem Ipsum\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      condition: \"Lorem Ipsum\",\r\n      treatment: \"Lorem Ipsum\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      condition: \"Lorem Ipsum\",\r\n      treatment: \"Lorem Ipsum\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      condition: \"Lorem Ipsum\",\r\n      treatment: \"Lorem Ipsum\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      condition: \"Lorem Ipsum\",\r\n      treatment: \"Lorem Ipsum\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-09-2024\",\r\n      condition: \"Lorem Ipsum\",\r\n      treatment: \"Lorem Ipsum\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      condition: \"Lorem Ipsum\",\r\n      treatment: \"Lorem Ipsum\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Diagnosis (Including ICD)\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Diagnosis (Including ICD)\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <DiagnosisTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <DiagnosisForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Diagnosis;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ImmunizationForm = ({ back, defaultValues }) => {\r\n  console.log(\"first\", defaultValues);\r\n  const [date, setDate] = useState(null);\r\n  const [takendate, setTakenDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.dosage_date;\r\n    const defaultDateString1 = defaultValues?.taken_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.dosage_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n    const defaultDate1 = defaultValues?.taken_date\r\n      ? parseDateString(defaultDateString1)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setTakenDate(defaultDate1);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Vaccine *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.vaccine}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Period *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.period}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Status *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.status}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Dosage Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Taken Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={takendate}\r\n                onChange={(date) => setTakenDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImmunizationForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImmunizationTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.vaccine}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.period}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.status}</CTableDataCell>\r\n              <CTableDataCell>{dt?.dosage_date}</CTableDataCell>\r\n              <CTableDataCell>{dt?.taken_date}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImmunizationTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport ImmunizationForm from \"./ImmunizationForm\";\r\nimport ImmunizationTable from \"../../../../../Tables/ImmunizationTable\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\n\r\nconst Immunization = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"VACCINE\" },\r\n    { id: 3, label: \"PERIOD\" },\r\n    { id: 4, label: \"STATUS\" },\r\n    { id: 5, label: \"DOSAGE DATE\" },\r\n    { id: 6, label: \"TAKEN DATE\" },\r\n    { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 2,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 3,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 4,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 5,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 6,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 7,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 8,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 9,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 10,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n  const options = [\"Severity\", \"Option 2\", \"Option 3\"]; // Example options\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Immunization Status\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Immunization Status\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n                    <span className=\"fs-18 fw-400\">Start Date *</span>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <DatePicker\r\n                        showIcon\r\n                        selected={startDate}\r\n                        onChange={(date) => setStartDate(date)}\r\n                        className=\"date-range-selector\"\r\n                        maxDate={today}\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n                    <span className=\"fs-18 fw-400\">End Date *</span>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <DatePicker\r\n                        showIcon\r\n                        selected={endDate}\r\n                        onChange={(date) => setEndDate(date)}\r\n                        className=\"date-range-selector\"\r\n                        maxDate={today}\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  {/* <CCol\r\n                    md={3}\r\n                    className=\"d-flex flex-column gap-1 justify-content-end\"\r\n                  >\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <Dropdown options={options} />\r\n                    </div>\r\n                  </CCol> */}\r\n                  <CCol\r\n                    md={3}\r\n                    className=\"d-flex flex-column gap-1 justify-content-end\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    <PrimaryButton>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.search} alt=\"close\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </CCol>\r\n                </CRow>\r\n              </>\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <ImmunizationTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ImmunizationForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Immunization;\r\n","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Diagnosis from \"./Diagnosis/Diagnosis\";\r\nimport Immunization from \"./Immunization/Immunization\";\r\n\r\nconst Assesment = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Diagnosis (Including ICD)\", image: Assets.Diagnosis },\r\n    { id: 2, name: \"Immunization Status\", image: Assets.Immunizaion },\r\n  ];\r\n  const [diagnosisView, setDiagnosisView] = useState(false);\r\n  const [immunizationView, setImmunizationView] = useState(false);\r\n\r\n  const getSelectedData = (data) => {\r\n    console.log(\"first data\", data);\r\n    // setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setDiagnosisView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setImmunizationView(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {!diagnosisView && !immunizationView ? (\r\n        <CRow>\r\n          {cardData.map((dt, i) => (\r\n            <CCol md={4} xl={3} className=\"mb-3\">\r\n              <Card data={dt} getSelectedData={getSelectedData} />\r\n            </CCol>\r\n          ))}\r\n        </CRow>\r\n      ) : diagnosisView ? (\r\n        <Diagnosis onClose={() => setDiagnosisView(false)} />\r\n      ) : immunizationView ? (\r\n        <Immunization onClose={() => setImmunizationView(false)} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assesment;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst LabOrderTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <Badge label={dt?.file} color={\"primary\"} />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.notes}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.link}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.icd_code}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lab_name}</span>\r\n                  <Badge\r\n                    label={dt?.lab_status}\r\n                    color={\r\n                      dt?.lab_status === \"Accepted\"\r\n                        ? \"yellow\"\r\n                        : dt?.lab_status === \"Uploaded\"\r\n                        ? \"success\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: dt?.lab_status === \"Accepted\" ? \"50%\" : \"0%\",\r\n                    }}\r\n                  >\r\n                    {dt?.lab_status === \"Accepted\" && (\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.Accept}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: dt?.lab_status === \"Accepted\" ? \"50%\" : \"100%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.visibleEye}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"details\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrderTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst LabOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lab Test Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Lab *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown options={options} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"150px\" }}>\r\n          <PrimaryButton>SEND TO LAB</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrderForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport LabOrderForm from \"./LabOrderForm\";\r\n\r\nconst LabOrder = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"LAB TEST DATE\" },\r\n    { id: 3, label: \"LAB TEST NAME\" },\r\n    { id: 4, label: \"FILE\" },\r\n    { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"LAB STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Accepted\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Accepted\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <LabOrderTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <LabOrderForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalBody className=\"p-5\">\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12}>\r\n                  <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.date}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Test Name</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.name}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">ICD Code</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">\r\n                      Lab/Scan Center\r\n                    </span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.lab_name}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                    <div\r\n                      className=\"w-100\"\r\n                      style={{\r\n                        border: \"1px solid #17171D33\",\r\n                        borderRadius: \"5px\",\r\n                      }}\r\n                    >\r\n                      <Dropdown options={options} />\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Test Type</span>\r\n                    <div>\r\n                      <CFormCheck\r\n                        inline\r\n                        type=\"radio\"\r\n                        name=\"inlineRadioOptions\"\r\n                        id=\"inlineCheckbox1\"\r\n                        value=\"Lab Test\"\r\n                        label=\"Lab Test\"\r\n                        defaultChecked\r\n                      />\r\n                      <CFormCheck\r\n                        inline\r\n                        type=\"radio\"\r\n                        name=\"inlineRadioOptions\"\r\n                        id=\"inlineCheckbox2\"\r\n                        value=\"Home Test\"\r\n                        label=\"Home Test\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <div style={{ width: \"128px\" }}>\r\n                  <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                  <SecondaryButton onClick={() => setDetailView(false)}>\r\n                    CANCEL\r\n                  </SecondaryButton>\r\n                </div>\r\n              </CRow>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrder;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst ImagingOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Imaging Order Name *\r\n              </label>\r\n              <input \r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Scan Center *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown options={options} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"150px\" }}>\r\n          <PrimaryButton>SEND TO LAB</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImagingOrderTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <Badge label={dt?.file} color={\"primary\"} />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.notes}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.link}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.icd_code}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.scan_name}</span>\r\n                  <Badge\r\n                    label={dt?.scan_status}\r\n                    color={\r\n                      dt?.scan_status === \"Accepted\"\r\n                        ? \"yellow\"\r\n                        : dt?.scan_status === \"Uploaded\"\r\n                        ? \"success\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: dt?.scan_status === \"Accepted\" ? \"50%\" : \"0%\",\r\n                    }}\r\n                  >\r\n                    {dt?.scan_status === \"Accepted\" && (\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.Accept}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: dt?.scan_status === \"Accepted\" ? \"50%\" : \"100%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.visibleEye}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"details\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ImagingOrderForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\n\r\nconst ImagingOrder = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"SCAN DATE\" },\r\n    { id: 3, label: \"SCAN NAME\" },\r\n    { id: 4, label: \"FILES\" },\r\n    { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"SCAN STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"01-01-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Accepted\",\r\n      scan_name: \"Raj Scan 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Accepted\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <ImagingOrderTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ImagingOrderForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalBody className=\"p-5\">\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12}>\r\n                  <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.date}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Scan Name</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.name}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">ICD Code</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">\r\n                      Scan Center\r\n                    </span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.scan_name}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                    <div\r\n                      className=\"w-100\"\r\n                      style={{\r\n                        border: \"1px solid #17171D33\",\r\n                        borderRadius: \"5px\",\r\n                      }}\r\n                    >\r\n                      <Dropdown options={options} />\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <div style={{ width: \"128px\" }}>\r\n                  <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                  <SecondaryButton onClick={() => setDetailView(false)}>\r\n                    CANCEL\r\n                  </SecondaryButton>\r\n                </div>\r\n              </CRow>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrder;\r\n","import { CCol, CFormCheck, CFormSelect, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\n\r\nconst MedicationOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState([\r\n    {\r\n      id: 1,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    },\r\n  ]);\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, event) => {\r\n    const { name, value } = event.target;\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [name]: value };\r\n      }\r\n      return medicine;\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">Add New Medicine</span>\r\n          </CCol>\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\">\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={defaultValues?.link}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={defaultValues?.link}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={defaultValues?.link}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={defaultValues?.link}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          name=\"inlineRadioOptions\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"option1\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          name=\"inlineRadioOptions\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"option2\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Status\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              <CCol lg={1}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={() => handleRemoveMedicine(medicine.id)}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteDel} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div style={{ width: \"40px\" }}>\r\n              <ActiveButton onClick={handleAddMedicine}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.whiteAdd} alt=\"add\" />\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"220px\" }}>\r\n            <PrimaryButton>SEND TO PHARMACY</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrderForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst MedicationOrderTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lab_name}</span>\r\n                  <Badge\r\n                    label={dt?.lab_status}\r\n                    color={\r\n                      dt?.lab_status === \"Received\"\r\n                        ? \"primary\"\r\n                        : dt?.lab_status === \"Delivered\"\r\n                        ? \"success\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: dt?.lab_status === \"Waiting For Approval\" ? \"50%\" : \"0%\",\r\n                    }}\r\n                  >\r\n                    {dt?.lab_status === \"Waiting For Approval\" && (\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.UpdateIcon}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: dt?.lab_status === \"Accepted\" ? \"50%\" : \"100%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.visibleEye}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"details\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport Badge from \"../../../../../../Badge/Badge\";\r\n\r\nconst DetailsTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"detailsTable\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.rx}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.frequency[0]}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.qty}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {i === 0 && (\r\n                <CTableDataCell\r\n                  style={{ height: \"10px\" }}\r\n                  rowSpan={rowData.length}\r\n                >\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.TickCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.PlusCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicationOrderForm from \"./MedicationOrderForm\";\r\nimport MedicationOrderTable from \"../../../../../../Tables/MedicationOrderTable\";\r\nimport DetailsTable from \"./DetailsTable\";\r\n\r\nconst MedicationOrder = () => {\r\n  const detailsData = [\r\n    { id: 1, label: \"\" },\r\n    { id: 2, label: \"RX\" },\r\n    { id: 3, label: \"FREQUENCY\" },\r\n    { id: 4, label: \"DURATION\" },\r\n    { id: 5, label: \"QTY/TAKEN\" },\r\n    { id: 6, label: \"ACTIONS​\" },\r\n  ];\r\n\r\n  const detailsValue = [\r\n    {\r\n      id: 1,\r\n      name: \"Prescribed\",\r\n      rx: \"Medicine 1\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Alternative\",\r\n      rx: \"Medicine 2\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n  ];\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"MEDICATION DATE\" },\r\n    { id: 3, label: \"MEDICATION NAME\" },\r\n    { id: 4, label: \"LAB STATUS\" },\r\n    { id: 5, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Received\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Waiting For Approval\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={8} className=\"\">\r\n            <DateSelector />\r\n          </CCol>\r\n          <CCol\r\n            lg={4}\r\n            className=\"d-flex justify-content-end align-items-center gap-2\"\r\n          >\r\n            <div>\r\n              <PrimaryButton onClick={() => addFormPage()}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.Add} alt=\"add\" />\r\n                  <span className=\"fs-16 fw-600\">Add</span>\r\n                </div>\r\n              </PrimaryButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"mb-2\">\r\n          <CRow>\r\n            <MedicationOrderTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n                totalItems={rowData?.length}\r\n                itemsPerPage={itemsPerPage}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </>\r\n      {addFormView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={addFormView}\r\n            onClose={() => setAddFormView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"xl\"\r\n          >\r\n            <CModalBody className=\"p-0\">\r\n              <div\r\n                className=\"close-modal\"\r\n                onClick={() => {setAddFormView(false)}}\r\n              >\r\n                <img\r\n                  src={Assets.CloseBtn}\r\n                  alt=\"close-btn\"\r\n                  style={{ width: \"100%\" }}\r\n                />{\" \"}\r\n              </div>\r\n              <MedicationOrderForm\r\n                back={() => {\r\n                  setAddFormView(false);\r\n                  setSelectedData({});\r\n                }}\r\n                defaultValues={selectedData}\r\n              />\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalBody className=\"p-0\">\r\n              <div className=\"close-modal\" onClick={() => setDetailView(false)}>\r\n                <img\r\n                  src={Assets.CloseBtn}\r\n                  alt=\"close-btn\"\r\n                  style={{ width: \"100%\" }}\r\n                />{\" \"}\r\n              </div>\r\n              <DetailsTable\r\n                rowData={detailsValue}\r\n                columns={detailsData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrder;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport LabOrder from \"./Lab Order/LabOrder\";\r\nimport ImagingOrder from \"./Imaging Order/ImagingOrder\";\r\nimport MedicationOrder from \"./Medication Order/MedicationOrder\";\r\n\r\nconst Orders = ({ onClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Medication Order\" },\r\n    { id: 2, title: \"Lab Order\" },\r\n    { id: 3, title: \"Imaging Order\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  console.log(\"first\", currentTab);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Orders</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Orders\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={0}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <MedicationOrder />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <LabOrder />\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n          <>\r\n            <ImagingOrder />\r\n          </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ProcedureForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ID *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.treatment}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Description *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.remark}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ProcedurerTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.no}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.description}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.visibleEye}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"details\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedurerTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport ProcedureForm from \"./ProcedureForm\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport DiagnosisTable from \"../../../../../../Tables/DiagnosisTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ProcedurerTable from \"../../../../../../Tables/ProcedurerTable\";\r\n\r\nconst ProcedureTab = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"ID\" },\r\n    { id: 4, label: \"DESCRIPTION\" },\r\n    { id: 5, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      no: 1,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      no: 2,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      no: 3,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      no: 4,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      no: 5,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      no: 6,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      no: 7,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      no: 8,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      no: 9,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      no: 10,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      no: 11,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      no: 12,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      no: 13,\r\n      date: \"06-07-2024\",\r\n      id: \"D62\",\r\n      description: \"Lorem Ipsum\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              \r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <ProcedurerTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ProcedureForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport ProcedureTab from \"./ProcedureTab/ProcedureTab\";\r\n\r\nconst Cpt = ({ onClose }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Procedure (CPT Code)\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Procedure (CPT Code)\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol>\r\n          <ProcedureTab />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cpt;\r\n","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Orders from \"./Orders/Orders\";\r\nimport Cpt from \"./Procedure CPT/Cpt\";\r\n\r\nconst Plan = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Orders\", image: Assets.Orders },\r\n    { id: 2, name: \"Therapies\", image: Assets.Therapies },\r\n    { id: 3, name: \"Vaccinations\", image: Assets.Vaccine },\r\n    { id: 4, name: \"Procedure (CPT Code)\", image: Assets.CPT },\r\n    { id: 5, name: \"Patient Education\", image: Assets.PatEdu },\r\n  ];\r\n  const [ordersView, setOrdersView] = useState(false);\r\n  const [cptView, setCptView] = useState(false);\r\n\r\n  const getSelectedData = (data) => {\r\n    // setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setOrdersView(true);\r\n    }\r\n    if (data?.id === 4) {\r\n      setCptView(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {!ordersView && !cptView ? (\r\n        <CRow>\r\n          {cardData.map((dt, i) => (\r\n            <CCol md={4} xl={3} className=\"mb-3\">\r\n              <Card data={dt} getSelectedData={getSelectedData} />\r\n            </CCol>\r\n          ))}\r\n        </CRow>\r\n      ) : ordersView ? (\r\n        <Orders onClose={() => setOrdersView(false)} />\r\n      ) : cptView ? (\r\n        <Cpt onClose={() => setCptView(false)} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plan;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst ChiefComplaintTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.complaints}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.notes}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaintTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst ChiefComplaintsForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date1, setDate1] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Chief Complaints *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.complaints}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaintsForm;\r\n","// import React from \"react\";\r\n// import Table from \"../../../../../Tables/Table\";\r\n// import { Assets } from \"../../../../../../assets/Assets\";\r\n// import { CCol, CRow } from \"@coreui/react\";\r\n// import Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\n// import ChiefComplaintTable from \"../../../../../Tables/Subjective/ChiefComplaintTable\";\r\n\r\n// const ChiefComplaints = ({ OnClose }) => {\r\n//   const columns = [\r\n//     { label: \"No.\" },\r\n//     { label: \"Complaints\" },\r\n//     { label: \"Notes\" },\r\n//     { label: \"Actions\" },\r\n//   ];\r\n\r\n//   const data = {\r\n//     columnsData: columns,\r\n//     tableData: [\r\n//       {\r\n//         no_: 1,\r\n//         complaints:\r\n//           \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n//         notes: \"Taking dole\",\r\n//         action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n//       },\r\n//     ],\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <CRow>\r\n//         <CCol md={6} className=\"mb-2\">\r\n//           <div className=\"d-flex gap-2\">\r\n//             <img\r\n//               alt=\"BackBtn\"\r\n//               src={Assets.BackBtn}\r\n//               style={{ width: \"35px\" }}\r\n//               onClick={OnClose}\r\n//               className=\"cursor\"\r\n//             />\r\n//             <span className=\"Obj-name d-flex align-items-center\">\r\n//               Chief Complaints\r\n//             </span>\r\n//           </div>\r\n//         </CCol>\r\n//         <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n//           <div className=\"d-flex mt-2\">\r\n//             <Breadcrumb\r\n//               paths={[\r\n//                 { label: \"Home\", to: \"/patients\" },\r\n//                 { label: \"Patient List\", to: \"/patients\" },\r\n//                 { label: \"Medical Profile\", to: \"/patients/history\" },\r\n//                 { label: \"Chief Complaints\", to: \"/patients/history\" },\r\n//               ]}\r\n//             />\r\n//           </div>\r\n//         </CCol>\r\n//       </CRow>\r\n//       <CRow>\r\n//         <CCol md={6} xl={6} className=\"mb-3 chief-complaints\">\r\n//           <div className=\"search-bar\">\r\n//             <input type=\"text\" placeholder=\"Search\" />\r\n//             <button type=\"submit\">\r\n//               <i className=\"fas fa-search\"></i>\r\n//             </button>\r\n//           </div>\r\n//         </CCol>\r\n//         <CCol\r\n//           md={6}\r\n//           xl={6}\r\n//           className=\"mb-3 d-flex justify-content-end align-items-center gap-15\"\r\n//         >\r\n//           <div className=\"patient-adding\">\r\n//             <button>+ ADD</button>\r\n//           </div>\r\n//           <div className=\"patient-adding\">\r\n//             <button>\r\n//               <img src={Assets.ThreeDots} alt=\"settings\" />\r\n//             </button>\r\n//           </div>\r\n//         </CCol>\r\n//       </CRow>\r\n//       <Table columns={columns} data={data} />\r\n//       <ChiefComplaintTable/>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ChiefComplaints;\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ChiefComplaintTable from \"../../../../../Tables/Subjective/ChiefComplaintTable\";\r\nimport ChiefComplaintsForm from \"./ChiefComplaintsForm\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\n\r\nconst ChiefComplaints = ({ OnClose }) => {\r\n  const columnData = [\r\n    { label: \"No.\" },\r\n    { label: \"Complaints\" },\r\n    { label: \"Notes\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n    },\r\n    {\r\n      id: 2,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n    },\r\n    {\r\n      id: 3,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n    },\r\n    {\r\n      id: 4,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n    },\r\n    {\r\n      id: 5,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n    },\r\n    {\r\n      id: 6,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n    },\r\n    {\r\n      id: 7,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n    },\r\n    {\r\n      id: 8,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={OnClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Chief Complaints\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Chief Complaints\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow>\r\n            <CCol md={6} xl={6} className=\"mb-3 chief-complaints\">\r\n              <div className=\"search-bar\">\r\n                <input type=\"text\" placeholder=\"Search\" />\r\n                <button type=\"submit\">\r\n                  <i className=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n            </CCol>\r\n            <CCol\r\n              md={6}\r\n              xl={6}\r\n              className=\"mb-3 d-flex justify-content-end align-items-center gap-15\"\r\n            >\r\n              <div className=\"patient-adding\" onClick={() => addFormPage()}>\r\n                <button>+ ADD</button>\r\n              </div>\r\n              <div className=\"patient-adding\">\r\n                <button>\r\n                  <img src={Assets.ThreeDots} alt=\"settings\" />\r\n                </button>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <ChiefComplaintTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ChiefComplaintsForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaints;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst SignsSymptomsForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Normal\", \"Mild\", \"Moderate\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Onset\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.onset}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Location\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.location}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Duration in Days\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.duration_days}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Aggravating factors\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.aggravating}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Relieving factors\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.relieving}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Temporal factors\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.temporal}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Characteristics\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.characteristics}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Severity\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown options={options} defaultValue={options[1]} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignsSymptomsForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SymtomsTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.onset}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.location}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration_days}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.characteristics}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.aggravating}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.relieving}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.temporal}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.severity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SymtomsTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SignsSymptomsForm from \"./SignsSymptomsForm\";\r\nimport MedicationOrderTable from \"../../../../../../Tables/MedicationOrderTable\";\r\nimport SymtomsTable from \"../../../../../../Tables/Subjective/SymtomsTable\";\r\n\r\nconst SignsSymptoms = () => {\r\n  const detailsData = [\r\n    { id: 1, label: \"\" },\r\n    { id: 2, label: \"RX\" },\r\n    { id: 3, label: \"FREQUENCY\" },\r\n    { id: 4, label: \"DURATION\" },\r\n    { id: 5, label: \"QTY/TAKEN\" },\r\n    { id: 6, label: \"ACTIONS​\" },\r\n  ];\r\n\r\n  const detailsValue = [\r\n    {\r\n      id: 1,\r\n      name: \"Prescribed\",\r\n      rx: \"Medicine 1\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Alternative\",\r\n      rx: \"Medicine 2\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n  ];\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"ONSET\" },\r\n    { id: 3, label: \"LOCATION\" },\r\n    { id: 4, label: \"DURATION IN DAYS\" },\r\n    { id: 5, label: \"Characteristics (SL)\" },\r\n    { id: 6, label: \"aggravating factors\" },\r\n    { id: 7, label: \"Relieving factors\" },\r\n    { id: 8, label: \"Temporal factors\" },\r\n    { id: 9, label: \"Severity\" },\r\n    { id: 10, label: \"Notes\" },\r\n    { id: 11, label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      onset: \"06-07-2024\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Normal\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 2,\r\n      onset: \"06-07-2024\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Mild\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 3,\r\n      onset: \"06-07-2024\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Normal\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 4,\r\n      onset: \"06-07-2024\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Moderate\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 5,\r\n      onset: \"06-07-2024\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Worst\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 6,\r\n      onset: \"06-07-2024\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Severe\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 7,\r\n      onset: \"06-07-2024\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Normal\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 8,\r\n      onset: \"06-07-2024\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Normal\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 9,\r\n      onset: \"06-07-2024\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Normal\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 10,\r\n      onset: \"06-07-2024\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Normal\",\r\n      notes: \"-\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <SymtomsTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <SignsSymptomsForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignsSymptoms;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst MedicationForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date1, setDate1] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Medication Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Strength & Dosage\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.strength}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Route\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.route}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Start Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              End Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date1}\r\n                onChange={(date) => setDate1(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Status\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.status}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst MedicationTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.strength}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.route}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.start_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.end_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\"> {dt?.status} </span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicationForm from \"./MedicationForm\";\r\nimport MedicationTable from \"../../../../../../Tables/Subjective/MedicationTable\";\r\n\r\nconst Medication = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Medication Name\" },\r\n    { id: 3, label: \"Strength & Dosage\" },\r\n    { id: 4, label: \"Route\" },\r\n    { id: 5, label: \"Start Date\" },\r\n    { id: 6, label: \"End Date\" },\r\n    { id: 7, label: \"Status\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"16-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      strength: \"Lorem Ipsum\",\r\n      route: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"16-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      strength: \"Lorem Ipsum\",\r\n      route: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"16-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      strength: \"Lorem Ipsum\",\r\n      route: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"16-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      strength: \"Lorem Ipsum\",\r\n      route: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"16-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      strength: \"Lorem Ipsum\",\r\n      route: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"16-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      strength: \"Lorem Ipsum\",\r\n      route: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"16-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      strength: \"Lorem Ipsum\",\r\n      route: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"16-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      strength: \"Lorem Ipsum\",\r\n      route: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"16-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      strength: \"Lorem Ipsum\",\r\n      route: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"16-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      strength: \"Lorem Ipsum\",\r\n      route: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <MedicationTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MedicationForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Medication;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport SignsSymptoms from \"./Signs And Symptoms/SignsSymptoms\";\r\nimport Medication from \"./Medication/Medication\";\r\n\r\nconst PresentIllness = ({ OnClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Signs and Symptoms\" },\r\n    { id: 2, title: \"Medication\" },\r\n    { id: 3, title: \"Allergies\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  console.log(\"first\", currentTab);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={OnClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              History of Present Illness (HPI)\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                {\r\n                  label: \"History of Present Illness (HPI)\",\r\n                  to: \"/patients/history\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={0}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <SignsSymptoms />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <Medication />\r\n          </>\r\n        )}\r\n        {currentTab === 3 && <></>}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PresentIllness;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst MedHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.onset;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.onset\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Normal\", \"Mild\", \"Moderate\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Onset *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                  isClearable\r\n                  closeOnScroll={true}\r\n                  wrapperClassName=\"date-picker-wrapper\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Conditions *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.conditions}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD10 (SL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd10}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Chronic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.chronic}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Previous Illness *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.prev_illness}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedHistoryForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst MedicalHistoryTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.onset}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.conditions}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.icd10}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.chronic}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.prev_illness}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistoryTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedHistoryForm from \"./MedHistoryForm\";\r\nimport MedicalHistoryTable from \"../../../../../../Tables/Subjective/MedicalHistoryTable\";\r\n\r\nconst MedicalHistory = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"ONSET\" },\r\n    { id: 3, label: \"CONDITIONS\" },\r\n    { id: 4, label: \"ICD10 (SL)\" },\r\n    { id: 5, label: \"Chronic\" },\r\n    { id: 6, label: \"Previous Illness\" },\r\n    { id: 7, label: \"Notes\" },\r\n    { id: 8, label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"Lorem ipsum\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"Lorem ipsum\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"Lorem ipsum\",\r\n      chronic: \"No\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      onset: \"01-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"Lorem ipsum\",\r\n      chronic: \"No\",\r\n      prev_illness: \"No\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      onset: \"01-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"Lorem ipsum\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"No\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"Lorem ipsum\",\r\n      chronic: \"No\",\r\n      prev_illness: \"No\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"Lorem ipsum\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"Lorem ipsum\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      onset: \"12-03-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"Lorem ipsum\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      onset: \"02-03-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"Lorem ipsum\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <MedicalHistoryTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MedHistoryForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistory;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst SurgicalForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date1, setDate1] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Surgery Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Reason *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SurgicalTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.reason}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SurgicalForm from \"./SurgicalForm\";\r\nimport MedicationTable from \"../../../../../../Tables/Subjective/MedicationTable\";\r\nimport SurgicalTable from \"../../../../../../Tables/Subjective/SurgicalTable\";\r\n\r\nconst SurgicalHistory = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Surgery Name\" },\r\n    { id: 4, label: \"Reason\" },\r\n    { id: 5, label: \"Notes\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      reason: \"Lorem Ipsum\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      reason: \"Lorem Ipsum\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      reason: \"Lorem Ipsum\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      reason: \"Lorem Ipsum\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      reason: \"Lorem Ipsum\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      reason: \"Lorem Ipsum\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      reason: \"Lorem Ipsum\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      reason: \"Lorem Ipsum\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      reason: \"Lorem Ipsum\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Lorem Ipsum\",\r\n      reason: \"Lorem Ipsum\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <SurgicalTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <SurgicalForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalHistory;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst ObstericHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.lmp_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.lmp_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.ed_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.ed_date\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              LMP Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              ED Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date2}\r\n                onChange={(date) => setDate2(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Trimster *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.trimster}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Gravida *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.gravida}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Para *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.para}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Fertility Treament *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.fert_treatment}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lacatating *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.lacating}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"130px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObstericHistoryForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst ObstetricHistoryTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.lmp_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.ed_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.trimster}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.gravida}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.para}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.fert_treatment}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lacating}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObstetricHistoryTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst GynaecHistoryTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <div className=\"table-container\">\r\n      <CTable className=\"lab-responsive-table-screening\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.age}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.cycle_per_year}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.cycle_in_days}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.flow_duration}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.flow_type}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.bleeding}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.irregularity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.dysmenorrhea}</span>\r\n                </div>\r\n              </CTableDataCell> <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lmp}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GynaecHistoryTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst ScreeningHistory = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table-screening\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date_of_last_pap}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.history_of_abnormal}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date_of_last_mamogram}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  {dt?.history_of_mamogram}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  {dt?.date_of_last_breast}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  {dt?.history_of_breast}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScreeningHistory;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\n\r\nconst MensturalHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.lmp;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.lmp\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.ed_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.ed_date\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Menatche Age *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.age}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycles per Year *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.cycle_per_year}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycle Length in days *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.cycle_in_days}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Flow Duration *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.flow_duration}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Flow Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.flow_type}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                InterMenstrual Bleeding *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.bleeding}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycle Irregularity *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.irregularity}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Dysmenorrhea *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.dysmenorrhea}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              LMP Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"130px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MensturalHistoryForm;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\n\r\nconst ScreeningHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  const [date3, setDate3] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date_of_last_pap;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date_of_last_pap\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.date_of_last_mamogram;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.date_of_last_mamogram\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString3 = defaultValues?.date_of_last_breast;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate3 = defaultValues?.date_of_last_breast\r\n      ? parseDateString(defaultDateString3)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n    setDate3(defaultDate3);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last pap smear *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                History of abnormal pap smear *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.history_of_abnormal}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last mamogram *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date2}\r\n                onChange={(date) => setDate2(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                History of mamogram *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.history_of_mamogram}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last Breast Exam *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date3}\r\n                onChange={(date) => setDate3(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                History of Breast Exam *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.history_of_breast}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"130px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScreeningHistoryForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ObstericHistoryForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\nimport MedicalTab from \"../../../MedicalTab\";\r\nimport ObstetricHistoryTable from \"../../../../../../Tables/Subjective/ObstetricHistoryTable\";\r\nimport GynaecHistoryTable from \"../../../../../../Tables/Subjective/GynaecHistoryTable\";\r\nimport ScreeningHistory from \"../../../../../../Tables/Subjective/ScreeningHistory\";\r\nimport MensturalHistoryForm from \"./MensturalHistoryForm\";\r\nimport ScreeningHistoryForm from \"./ScreeningHistoryForm\";\r\n\r\nconst OGHistory = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"LMP Date\" },\r\n    { id: 3, label: \"ED Date\" },\r\n    { id: 4, label: \"Trimster\" },\r\n    { id: 5, label: \"Gravida\" },\r\n    { id: 6, label: \"Para\" },\r\n    { id: 7, label: \"Fertility Treament\" },\r\n    { id: 8, label: \"Lacatating\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"Lorem ipsum\",\r\n      gravida: \"Lorem ipsum\",\r\n      para: \"Lorem ipsum\",\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"Lorem ipsum\",\r\n      gravida: \"Lorem ipsum\",\r\n      para: \"Lorem ipsum\",\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n    },\r\n    {\r\n      id: 3,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"Lorem ipsum\",\r\n      gravida: \"Lorem ipsum\",\r\n      para: \"Lorem ipsum\",\r\n      fert_treatment: \"No\",\r\n      lacating: \"Yes\",\r\n    },\r\n    {\r\n      id: 4,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"Lorem ipsum\",\r\n      gravida: \"Lorem ipsum\",\r\n      para: \"Lorem ipsum\",\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"No\",\r\n    },\r\n    {\r\n      id: 5,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"Lorem ipsum\",\r\n      gravida: \"Lorem ipsum\",\r\n      para: \"Lorem ipsum\",\r\n      fert_treatment: \"No\",\r\n      lacating: \"No\",\r\n    },\r\n    {\r\n      id: 6,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"Lorem ipsum\",\r\n      gravida: \"Lorem ipsum\",\r\n      para: \"Lorem ipsum\",\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n    },\r\n    {\r\n      id: 7,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"Lorem ipsum\",\r\n      gravida: \"Lorem ipsum\",\r\n      para: \"Lorem ipsum\",\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n    },\r\n    {\r\n      id: 8,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"Lorem ipsum\",\r\n      gravida: \"Lorem ipsum\",\r\n      para: \"Lorem ipsum\",\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n    },\r\n    {\r\n      id: 9,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"Lorem ipsum\",\r\n      gravida: \"Lorem ipsum\",\r\n      para: \"Lorem ipsum\",\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n    },\r\n    {\r\n      id: 10,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"Lorem ipsum\",\r\n      gravida: \"Lorem ipsum\",\r\n      para: \"Lorem ipsum\",\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n    },\r\n  ];\r\n\r\n  const MensuralcolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Menatche Age\" },\r\n    { id: 3, label: \"Cycles per Year\" },\r\n    { id: 4, label: \"Cycle Length in days\" },\r\n    { id: 5, label: \"Flow Duration\" },\r\n    { id: 6, label: \"Flow Type\" },\r\n    { id: 7, label: \"InterMenstrual Bleeding\" },\r\n    { id: 8, label: \"cycle irregularity\" },\r\n    { id: 9, label: \"dysmenorrhea\" },\r\n    { id: 10, label: \"LMP\" },\r\n    { id: 11, label: \"ACTIONS\" },\r\n  ];\r\n  const MenstrualrowData = [\r\n    {\r\n      id: 1,\r\n      age: \"Lorem ipsum\",\r\n      cycle_per_year: \"Lorem ipsum\",\r\n      cycle_in_days: \"Lorem ipsum\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 2,\r\n      age: \"Lorem ipsum\",\r\n      cycle_per_year: \"Lorem ipsum\",\r\n      cycle_in_days: \"Lorem ipsum\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 3,\r\n      age: \"Lorem ipsum\",\r\n      cycle_per_year: \"Lorem ipsum\",\r\n      cycle_in_days: \"Lorem ipsum\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 4,\r\n      age: \"Lorem ipsum\",\r\n      cycle_per_year: \"Lorem ipsum\",\r\n      cycle_in_days: \"Lorem ipsum\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 5,\r\n      age: \"Lorem ipsum\",\r\n      cycle_per_year: \"Lorem ipsum\",\r\n      cycle_in_days: \"Lorem ipsum\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 6,\r\n      age: \"Lorem ipsum\",\r\n      cycle_per_year: \"Lorem ipsum\",\r\n      cycle_in_days: \"Lorem ipsum\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 7,\r\n      age: \"Lorem ipsum\",\r\n      cycle_per_year: \"Lorem ipsum\",\r\n      cycle_in_days: \"Lorem ipsum\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 8,\r\n      age: \"Lorem ipsum\",\r\n      cycle_per_year: \"Lorem ipsum\",\r\n      cycle_in_days: \"Lorem ipsum\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 9,\r\n      age: \"Lorem ipsum\",\r\n      cycle_per_year: \"Lorem ipsum\",\r\n      cycle_in_days: \"Lorem ipsum\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 10,\r\n      age: \"Lorem ipsum\",\r\n      cycle_per_year: \"Lorem ipsum\",\r\n      cycle_in_days: \"Lorem ipsum\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n  ];\r\n\r\n  const ScreeningcolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"date of last pap smear\" },\r\n    { id: 3, label: \"History of abnormal pap smear\" },\r\n    { id: 4, label: \"date of last mamogram\" },\r\n    { id: 5, label: \"History of mamogram\" },\r\n    { id: 6, label: \"date of last Breast Exam\" },\r\n    { id: 7, label: \"History of Breast Exam\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const ScreeningrowData = [\r\n    {\r\n      id: 1,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Lorem ipsum\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Lorem ipsum\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Lorem ipsum\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Lorem ipsum\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Lorem ipsum\",\r\n      date_of_last_mamogram: \"08-06-2024\",\r\n      history_of_mamogram: \"Lorem ipsum\",\r\n      date_of_last_breast: \"12-07-2024\",\r\n      history_of_breast: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Lorem ipsum\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Lorem ipsum\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Lorem ipsum\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Lorem ipsum\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Lorem ipsum\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Lorem ipsum\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Lorem ipsum\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Lorem ipsum\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Lorem ipsum\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Lorem ipsum\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Lorem ipsum\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Lorem ipsum\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Lorem ipsum\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Lorem ipsum\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentMenstrualPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return MenstrualrowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentScreeningItem = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return ScreeningrowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Yes\", \"No\"];\r\n  const tabs = [\r\n    { id: 1, title: \"Obstetric History\" },\r\n    { id: 2, title: \"Gynaec History\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n  const [currentHistoryTab, setCurrentHistoryTab] = useState(1);\r\n\r\n  const GynaecTabs = [\r\n    { id: 1, title: \"Menstrual History\" },\r\n    { id: 2, title: \"Screening and Diagnostic History\" },\r\n  ];\r\n\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n    setAddFormView(false);\r\n  };\r\n\r\n  const getHistoryCurrentTab = (data) => {\r\n    setCurrentHistoryTab(data);\r\n    setAddFormView(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={5} className=\"\">\r\n            <MedicalTab\r\n              tabs={tabs}\r\n              getCurrentTab={getCurrentTab}\r\n              defaultTab={0}\r\n            />\r\n          </CCol>\r\n          <CCol lg={7}>\r\n            {currentTab === 1 && (\r\n              <CRow>\r\n                <CCol lg={4}>\r\n                  <div style={{ width: \"100%\" }}>\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Pregnant\r\n                      </label>\r\n                      <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                          boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                        }}\r\n                      >\r\n                        <Dropdown options={options} defaultValue={options[0]} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                  <div style={{ width: \"100%\" }}>\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Previous Cesarean Sections\r\n                      </label>\r\n                      <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                          boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                        }}\r\n                      >\r\n                        <Dropdown options={options} defaultValue={options[1]} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                  <div style={{ width: \"100%\" }}>\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Bad Obstetric History\r\n                      </label>\r\n                      <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                          boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                        }}\r\n                      >\r\n                        <Dropdown options={options} defaultValue={options[1]} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n            {currentTab === 2 && (\r\n              <MedicalTab\r\n                tabs={GynaecTabs}\r\n                getCurrentTab={getHistoryCurrentTab}\r\n                defaultTab={0}\r\n              />\r\n            )}\r\n          </CCol>\r\n        </CRow>\r\n        {!addFormView && (\r\n          <>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSelector />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"mb-2\">\r\n              {currentTab === 1 && (\r\n                <>\r\n                  <CRow>\r\n                    <ObstetricHistoryTable\r\n                      rowData={getCurrentPageItems()}\r\n                      columns={columnData}\r\n                      getselectedData={getselectedData}\r\n                    />\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                      <Pagination\r\n                        currentPage={currentPage}\r\n                        onPageChange={onPageChange}\r\n                        totalItems={rowData?.length}\r\n                        itemsPerPage={itemsPerPage}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </>\r\n              )}\r\n              {currentTab === 2 && currentHistoryTab === 1 && (\r\n                <>\r\n                  <CRow>\r\n                    <GynaecHistoryTable\r\n                      rowData={getCurrentMenstrualPageItems()}\r\n                      columns={MensuralcolumnData}\r\n                      getselectedData={getselectedData}\r\n                    />\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                      <Pagination\r\n                        currentPage={currentPage}\r\n                        onPageChange={onPageChange}\r\n                        totalItems={rowData?.length}\r\n                        itemsPerPage={itemsPerPage}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </>\r\n              )}\r\n              {currentTab === 2 && currentHistoryTab === 2 && (\r\n                <>\r\n                  <CRow>\r\n                    <ScreeningHistory\r\n                      rowData={getCurrentScreeningItem()}\r\n                      columns={ScreeningcolumnData}\r\n                      getselectedData={getselectedData}\r\n                    />\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                      <Pagination\r\n                        currentPage={currentPage}\r\n                        onPageChange={onPageChange}\r\n                        totalItems={rowData?.length}\r\n                        itemsPerPage={itemsPerPage}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </>\r\n\r\n      {addFormView && (\r\n        <CRow className=\"mb-2\">\r\n          <CCard className=\"p-2 cursor-default mb-5\">\r\n            <CCardBody className=\"mb-3\">\r\n              {currentTab === 1 && (\r\n                <ImagingOrderForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )}\r\n              {currentTab === 2 && currentHistoryTab === 1 && (\r\n                <MensturalHistoryForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )}\r\n              {currentTab === 2 && currentHistoryTab === 2 && (\r\n                <ScreeningHistoryForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )}\r\n            </CCardBody>\r\n          </CCard>\r\n        </CRow>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OGHistory;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst MedHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.onset;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.onset\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Normal\", \"Mild\", \"Moderate\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Smoking *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.smoking}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Alcohol *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.alcohol}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Drugs *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.drugs}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedHistoryForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SocialHistoryTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.smoking}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.alcohol}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.drugs}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialHistoryTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedHistoryForm from \"./MedHistoryForm\";\r\nimport MedicalHistoryTable from \"../../../../../../Tables/Subjective/MedicalHistoryTable\";\r\nimport SocialHistoryTable from \"../../../../../../Tables/Subjective/SocialHistoryTable\";\r\n\r\nconst SocialHistory = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"Smoking\" },\r\n    { id: 3, label: \"Alcohol\" },\r\n    { id: 4, label: \"Drugs\" },\r\n    { id: 5, label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      smoking: \"Lorem ipsum\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 2,\r\n      smoking: \"Lorem ipsum\",\r\n      alcohol: \"Yes\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 3,\r\n      smoking: \"Lorem ipsum\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 4,\r\n      smoking: \"Lorem ipsum\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 5,\r\n      smoking: \"Lorem ipsum\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 6,\r\n      smoking: \"Lorem ipsum\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 7,\r\n      smoking: \"Lorem ipsum\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 8,\r\n      smoking: \"Lorem ipsum\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 9,\r\n      smoking: \"Lorem ipsum\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 10,\r\n      smoking: \"Lorem ipsum\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <SocialHistoryTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MedHistoryForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialHistory;\r\n","import {\r\n  CFormCheck,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst FamilyHistoryTable = ({\r\n  columns,\r\n  rowData,\r\n  getselectedData,\r\n  addFormView,\r\n}) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.disease}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.grandparents === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.father === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.mother === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Brother === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Sister === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Daughter === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Son === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyHistoryTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport FamilyHistoryTable from \"../../../../../../Tables/Subjective/FamilyHistoryTable\";\r\n\r\nconst FamilyHistory = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Disease\" },\r\n    { id: 3, label: \"Grandparents\" },\r\n    { id: 4, label: \"Father\" },\r\n    { id: 5, label: \"Mother\" },\r\n    { id: 6, label: \"Brother(s)\" },\r\n    { id: 7, label: \"Sister(s)\" },\r\n    { id: 8, label: \"Daughter(s)\" },\r\n    { id: 9, label: \"Son(s)\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      disease: \"Migraine\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"yes\",\r\n      Daughter: \"yes\",\r\n      Son: \"no\",\r\n    },\r\n    {\r\n      id: 2,\r\n      disease: \"Stroke\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"no\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 3,\r\n      disease: \"Thyroid Disease\",\r\n      grandparents: \"no\",\r\n      father: \"no\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 4,\r\n      disease: \"Sinus\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"yes\",\r\n      Brother: \"no\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 5,\r\n      disease: \"Tuberculosis\",\r\n      grandparents: \"no\",\r\n      father: \"no\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"no\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={8} className=\"\">\r\n            <DateSelector />\r\n          </CCol>\r\n          <CCol\r\n            lg={4}\r\n            className=\"d-flex justify-content-end align-items-center gap-2\"\r\n          >\r\n            <div>\r\n              {!addFormView ? (\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.EditPencil} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Edit</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              ) : (\r\n                <div style={{ width: \"100px\" }}>\r\n                  <PrimaryButton onClick={() => setAddFormView(false)}>\r\n                    <div className=\"d-flex justify-content-center gap-2 w-100\">\r\n                      <span className=\"fs-16 fw-600\">Save</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <PrimaryButton onClick={() => addFormPage()}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                </div>\r\n              </PrimaryButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"mb-2\">\r\n          <FamilyHistoryTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            addFormView={addFormView}\r\n          />\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n                totalItems={rowData?.length}\r\n                itemsPerPage={itemsPerPage}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </>\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyHistory;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport MedicalHistory from \"./Medical History/MedicalHistory\";\r\nimport SurgicalHistory from \"./Surgical History/SurgicalHistory\";\r\nimport OGHistory from \"./OG History/OGHistory\";\r\nimport SocialHistory from \"./Social History/SocialHistory\";\r\nimport FamilyHistory from \"./Family History/FamilyHistory\";\r\n\r\nconst History = ({ OnClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Medical History\" },\r\n    { id: 2, title: \"O/G History\" },\r\n    { id: 3, title: \"Surgical History\" },\r\n    { id: 4, title: \"Family History\" },\r\n    { id: 5, title: \"Social History\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  console.log(\"first\", currentTab);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={OnClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">History</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                {\r\n                  label: \"History\",\r\n                  to: \"/patients/history\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={0}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <MedicalHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <OGHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n          <>\r\n            <SurgicalHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 4 && (\r\n          <>\r\n            <FamilyHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 5 && (\r\n          <>\r\n            <SocialHistory />\r\n          </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Breadcrumb from \"../../../../Breadcrumb/Breadcrumb\";\r\nimport \"../Objective/Objective.css\";\r\nimport Table from \"../../../../Tables/Table\";\r\nimport ChiefComplaints from \"./Chief Complaints/ChiefComplaints\";\r\nimport PresentIllness from \"./Present Illness/PresentIllness\";\r\nimport History from \"./History/History\";\r\n\r\nconst Subjective = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Chief Complaints\", image: Assets.VitalSig },\r\n    { id: 2, name: \"History of Present Illness (HPI)\", image: Assets.PhyExam },\r\n    { id: 3, name: \"History\", image: Assets.History },\r\n    { id: 4, name: \"Wellness Profile\", image: Assets.WellnessProfile },\r\n    { id: 5, name: \"Review of Systems (ROS)\", image: Assets.ReviewSytm },\r\n    { id: 6, name: \"Assessment Tool\", image: Assets.AssesmentTool },\r\n  ];\r\n\r\n  const [selectedData, setSelectedData] = useState();\r\n  const [cardView, setCardView] = useState(false);\r\n  const [presentIll, setPresentIll] = useState(false);\r\n  const [historyView, setHistoryView] = useState(false);\r\n\r\n  const getSelectedData = (data) => {\r\n    setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setCardView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setPresentIll(true);\r\n    }\r\n    if (data?.id === 3) {\r\n      setHistoryView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        {!cardView && !presentIll && !historyView ? (\r\n          <CRow>\r\n            {cardData.map((dt, i) => (\r\n              <CCol md={4} xl={3} className=\"mb-3\">\r\n                <Card\r\n                  className=\"min-height-200\"\r\n                  data={dt}\r\n                  getSelectedData={getSelectedData}\r\n                />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        ) : cardView ? (\r\n          <>\r\n            <ChiefComplaints OnClose={() => setCardView(false)} />\r\n          </>\r\n        ) : presentIll ? (\r\n          <>\r\n            <PresentIllness OnClose={() => setPresentIll(false)} />\r\n          </>\r\n        ) : historyView ? (\r\n          <>\r\n            <History OnClose={() => setHistoryView(false)} />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Subjective;\r\n","import React, { useState } from \"react\";\r\nimport MedicalTab from \"./MedicalTab\";\r\nimport Objective from \"./Objective/Objective\";\r\nimport Assesment from \"./Assesment/Assesment\";\r\nimport Plan from \"./Plan/Plan\";\r\nimport Subjective from \"./Subjective/Subjective\";\r\n\r\nconst MedicalProfile = () => {\r\n  const tabs = [\r\n    { id: 1, title: \"Subjective\" },\r\n    { id: 2, title: \"Objective\" },\r\n    { id: 3, title: \"Assesment\" },\r\n    { id: 4, title: \"Plan\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(2);\r\n\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <MedicalTab tabs={tabs} getCurrentTab={getCurrentTab} defaultTab={1} />\r\n        {currentTab === 1 && <Subjective />}\r\n        {currentTab === 2 && <Objective />}\r\n        {currentTab === 3 && <Assesment />}\r\n        {currentTab === 4 && <Plan />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalProfile;\r\n","import { CCard, CCardBody, CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst PairTab = () => {\r\n  return (\r\n    <CContainer>\r\n      <CRow>\r\n        <CCol md={12} className=\"p-0\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <div className=\"d-flex justify-content-center align-items-center gap-3\">\r\n                <div>\r\n                  <img alt=\"qrCode\" src={Assets.QrCode} />\r\n                </div>\r\n                <div className=\"d-flex flex-column mb-3\">\r\n                  <span className=\"fs-16 fw-600 text-secondary\">\r\n                    User Name : <strong style={{ color: \"black\" }}>10</strong>\r\n                  </span>\r\n                  <span className=\"fs-16 fw-600 text-secondary\">\r\n                    Password : <strong style={{ color: \"black\" }}>98786</strong>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default PairTab;\r\n","import React, { useState } from \"react\";\r\nimport \"./PatientDetailsView.css\";\r\nimport PatentProfile from \"../../../Components/Dashboard/PatentProfile/PatentProfile\";\r\nimport { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport PatientTabs from \"../../../Components/Dashboard/PatientTabs/PatientTabs\";\r\nimport Breadcrumb from \"../../../Components/Breadcrumb/Breadcrumb\";\r\nimport VitalsTab from \"../../../Components/Dashboard/PatientTabs/VitalsTab/VitalsTab\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport MedicalProfile from \"../../../Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalProfile\";\r\nimport PairTab from \"../../../Components/Dashboard/PatientTabs/PairTab/PairTab\";\r\nimport CallHistoryView from \"../../CallHistory/CallHistoryView\";\r\n\r\nconst PatientDetailsView = () => {\r\n  const [currentTab, setCurrentTab] = useState(() => {\r\n    // Initial state setup using localStorage\r\n    const storedCount = localStorage.getItem(\"patiendDetailTab\");\r\n    const parsedData = storedCount && JSON.parse(storedCount);\r\n    return storedCount ? parsedData?.id : 1;\r\n  });\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  return (\r\n    <div className=\"\">\r\n      {/* <CContainer> */}\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={12} xl={5} className=\"mb-2\">\r\n          <PatentProfile />\r\n        </CCol>\r\n        <CCol md={12} xl={7}>\r\n          {/* tabs={tabs} */}\r\n          <PatientTabs getCurrentTab={getCurrentTab} />\r\n        </CCol>\r\n      </CRow>\r\n      {currentTab === 1 && <CallHistoryView />}\r\n\r\n      {currentTab === 2 && (\r\n        <CRow>\r\n          <CCol md={12}>\r\n            <MedicalProfile />\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {currentTab === 4 && (\r\n        <CRow>\r\n          <CCol md={12}>\r\n            <PairTab />\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {/* </CContainer> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientDetailsView;\r\n"],"names":["_ref","paths","lastIndex","length","_jsx","_Fragment","children","CBreadcrumb","map","data","index","CBreadcrumbItem","href","to","className","concat","label","onClick","PatentProfile","CCard","_jsxs","CCardBody","src","Assets","patient1","alt","getCurrentTab","tabs","id","title","image","Call","Notes","Camera","Qr","currentTab","setCurrentTab","useState","storedCount","localStorage","getItem","JSON","parse","setItem","stringify","switchTab","DoctorDetail","profile","name","email","mobile","mrn","age","notes","visible","setVisible","today","Date","startDate","setStartDate","endDate","setEndDate","CModal","onClose","backdrop","CModalHeader","CModalTitle","CModalBody","CFormSelect","options","value","CRow","CCol","lg","sm","DatePicker","showIcon","selected","onChange","date","isClearable","dateFormat","CModalFooter","CButton","color","navigate","useNavigate","Patient","Link","filter","i","DoctorCards","FilterModal","_datas$tableData","datas","removePercent","str","replace","formattedData","tableData","item","_item$date","split","data1","parseInt","CustomTooltip","_ref2","active","payload","style","backgroundColor","border","padding","chartLabel1","LineChart","width","height","margin","top","right","left","bottom","Tooltip","content","Line","type","dataKey","stroke","strokeWidth","category","openModal","filteredProducts","icon","VitalBP","badge","columnsData","result","status","systolic","diastolic","action","VitalBs","blood_sugar","blood_sugar_value","VitalBMI","bmi","weight","VitalHCT","hct_rate","VitalHBeat","ecg_result","ecg","contentType","link","ecgSample","interpretation","ecg_type","VitalHae","hemoglobin","hemoglobinValue","BKetone","blood_ketone","blood_ketone_value","VitalLipid","total_cholesterol","totalOnly","triglycerides","hdl","ldl","vldl","VitalRespi","SpO2","spo2","Temp","temperature","temperature_value","LFT","BUAcid","blood_uric_acid","blood_uric_acid_value","Urinalysis","chartLabel2","urine","chartValue","ph","sugar","protein","leukocytes","rbc","Urea","urea","urea_value","Creatinine","creatinine","creatinine_value","GFR","gfr","gfr_value","product","md","xl","dt","Badge","contentUrl","maxWidth","maxHeight","CardChart","defaultTab","getSelectedData","isOpen","alignment","size","CloseBtn","data2","minValue","Math","min","maxValue","max","isNaN","Infinity","XAxis","axisLine","tickLine","YAxis","yMax","domain","formatter","tooltipFormatter","props","Legend","CartesianGrid","horizontal","vertical","Set","BarChart","Bar","fill","console","log","LineChartDetails","ColumnChartDetails","addBack","defaultData","selectedTime","setSelectedTime","selectedDate","setSelectedDate","useEffect","defaultDateString","defaultDate","dateString","_datePart$split","_timePart$split","parts","datePart","timePart","month","day","year","Number","hours","minutes","parseDateString","CContainer","class","for","closeOnScroll","wrapperClassName","showTimeSelect","showTimeSelectOnly","timeIntervals","defaultValue","xs","PrimaryButton","SecondaryButton","parseFloat","match","setIsOpen","selectedOption","setSelectedOption","toggleDropdown","option","handleOptionClick","_defaultData$ecg","findIndex","indexOf","borderRadius","Dropdown","_defaultData$result","extractNum","placeholder","deleteModal","setDeleteModal","editModal","setEditModal","selectedData","setSelectedData","deleteData","editData","column","row","rowIndex","renderCell","BlurBackground","BMI","BPForm","RespirationRateForm","Spo2","Temperature","LFTForm","HeartRate","BSugar","LipidProfileForm","HCT","Hemogloin","BUricAcid","columnKey","toLowerCase","renderPdf","window","open","renderActionButton","Warning","EditPencil","Delete","maxDate","ActiveButton","CloseX","dateOnly","getDate","slice","getMonth","getFullYear","items","setItems","setFilter","handleFilter","_data$tableData","filteredItems","_data$badge","chartView","setChartView","addView","setAddView","filterView","setFilterView","filterBack","Add","Filter","Chart","ECGChart","ChartTab","DateRangePicker","DynamicTable","setVitalView","currentTabtitle","titleObject","find","findTitleById","isModalOpen","setIsModalOpen","cardSelectedData","setSelectedCardData","BackBtn","Breadcrumb","MedicalTab","VitalsTab","Modal","closeModal","ObjectiveDetailPage","DateSelector","search","deleteorg","currentPage","onPageChange","totalItems","itemsPerPage","totalPages","setTotalPages","pages","setPages","pagesCount","ceil","Array","from","keys","page","SingleDatePicker","onSelect","isSelected","setIsSelected","toggleSelected","_getCurrentPageItems","dateCards","setCurrentPage","addFormView","setAddFormView","selectedOptions","setSelectedOptions","handleSelect","nutritionOpen","setNutritionOpen","constiOpen","setConstiOpen","generalOpen","setGeneralOpen","heentOpen","setHeentOpen","getCurrentPageItems","startIndex","endIndex","DateCards","Pagination","pageNumber","listview","PlusIcon","nutritionTabOpen","MinusIcon","nutritionTabClose","OptionItem","constiTabOpen","constiTabClose","generalTabOpen","generalTabClose","heentTabOpen","heentTabClose","SearchBar","columns","rowData","getselectedData","CTable","CTableHead","CTableRow","CTableHeaderCell","CTableBody","CTableDataCell","file","TableEdit","TableDelete","back","defaultValues","setDate","tabindex","Export","deleteView","setDeleteView","addFormPage","OptionsIcon","LabTable","LabForm","ImagingTable","ImagingForm","Objective","cardData","VitalSig","PhyExam","Lab","Imaging","vitalView","phyView","setPhyView","labView","setLabView","imagingView","setImagingView","VitalSign","PhysicalExam","Card","condition","treatment","remark","DiagnosisTable","DiagnosisForm","takendate","setTakenDate","dosage_date","defaultDateString1","taken_date","defaultDate1","vaccine","period","ImmunizationTable","ImmunizationForm","Assesment","Diagnosis","Immunizaion","diagnosisView","setDiagnosisView","immunizationView","setImmunizationView","Immunization","icd_code","lab_name","lab_status","Accept","display","justifyContent","visibleEye","LabOrder","detailView","setDetailView","LabOrderTable","LabOrderForm","CFormCheck","inline","defaultChecked","scan_name","scan_status","ImagingOrder","ImagingOrderTable","ImagingOrderForm","medicines","setMedicines","strength","strengthMeasurement","days","totalQty","instruction","reason","medicine","paddingRight","boxSizing","newMedicines","handleRemoveMedicine","whiteDel","handleAddMedicine","push","whiteAdd","UpdateIcon","rx","frequency","duration","qty","rowSpan","TickCircle","PlusCircle","MedicationOrder","MedicationOrderTable","MedicationOrderForm","DetailsTable","no","description","ProcedurerTable","ProcedureForm","ProcedureTab","Plan","Orders","Therapies","Vaccine","CPT","PatEdu","ordersView","setOrdersView","cptView","setCptView","Cpt","complaints","date1","setDate1","OnClose","ThreeDots","ChiefComplaintTable","ChiefComplaintsForm","onset","location","duration_days","aggravating","relieving","temporal","characteristics","severity","SignsSymptoms","SymtomsTable","SignsSymptomsForm","route","start_date","end_date","Medication","MedicationTable","MedicationForm","conditions","icd10","chronic","prev_illness","MedicalHistory","MedicalHistoryTable","MedHistoryForm","SurgicalHistory","SurgicalTable","SurgicalForm","date2","setDate2","lmp_date","defaultDateString2","ed_date","defaultDate2","trimster","gravida","para","fert_treatment","lacating","cycle_per_year","cycle_in_days","flow_duration","flow_type","bleeding","irregularity","dysmenorrhea","lmp","date_of_last_pap","history_of_abnormal","date_of_last_mamogram","history_of_mamogram","date_of_last_breast","history_of_breast","date3","setDate3","defaultDateString3","defaultDate3","OGHistory","MenstrualrowData","ScreeningrowData","currentHistoryTab","setCurrentHistoryTab","boxShadow","ObstetricHistoryTable","GynaecHistoryTable","getCurrentMenstrualPageItems","ScreeningHistory","getCurrentScreeningItem","MensturalHistoryForm","ScreeningHistoryForm","smoking","alcohol","drugs","SocialHistory","SocialHistoryTable","disease","grandparents","disabled","father","mother","Brother","Sister","Daughter","Son","FamilyHistory","FamilyHistoryTable","Subjective","History","WellnessProfile","ReviewSytm","AssesmentTool","cardView","setCardView","presentIll","setPresentIll","historyView","setHistoryView","ChiefComplaints","PresentIllness","MedicalProfile","PairTab","QrCode","PatientDetailsView","parsedData","PatientTabs","CallHistoryView"],"sourceRoot":""}