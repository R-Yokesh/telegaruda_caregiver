{"version":3,"file":"static/js/51.2ee797be.chunk.js","mappings":"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","sources":["ApiServices/useApi.jsx","Components/Dashboard/PatentProfile/PatentProfile.jsx","Components/Dashboard/PatientTabs/PatientTabs.jsx","Components/DoctorCards/DoctorCards.jsx","Components/Loader/Loader.jsx","Components/Pagination/Pagination.jsx","Utils/dateUtils.jsx","Components/FilterModal/FilterModal.jsx","Views/CallHistory/CallHistoryView.jsx","../node_modules/@coreui/react/src/components/button/CButton.tsx","../node_modules/@coreui/react/src/components/modal/CModalFooter.tsx","../node_modules/@coreui/react/src/components/modal/CModalTitle.tsx"],"sourcesContent":["import { useState, useCallback, useRef } from \"react\";\r\n\r\nconst useApi = () => {\r\n  const apiUrl = process.env.REACT_APP_API_URL;\r\n  const apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const cache = useRef({});\r\n\r\n  const fetchData = useCallback(\r\n    async (url, options) => {\r\n      setLoading(true);\r\n\r\n      if (cache?.current[url] && url.startsWith(\"resource/vitals\")) {\r\n        setLoading(true);\r\n        cache.current = {};\r\n      }\r\n      if (cache?.current[url]) {\r\n        setLoading(false);\r\n        return cache.current[url];\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(apiUrl + url, options);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch ${url}: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        cache.current[url] = data;\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(`Error: ${error.message}`);\r\n        throw error;\r\n      }\r\n    },\r\n    [apiUrl]\r\n  );\r\n\r\n  const get = useCallback(\r\n    async (url) => {\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData, apiKey]\r\n  );\r\n\r\n  const post = useCallback(\r\n    async (url, body) => {\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n        body: JSON.stringify(body),\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData]\r\n  );\r\n\r\n  const patch = useCallback(\r\n    async (url, body) => {\r\n      const options = {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n        body: JSON.stringify(body),\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData]\r\n  );\r\n\r\n  const del = useCallback(\r\n    async (url) => {\r\n      const options = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n      };\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(apiUrl + url, options);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch ${url}: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(`Error: ${error.message}`);\r\n        throw error;\r\n      }\r\n    },\r\n    [apiKey, apiUrl]\r\n  );\r\n\r\n  // Function to clear all cache entries\r\n  const clearCache = useCallback(() => {\r\n    cache.current = {}; // Clear all entries from cache\r\n  }, []);\r\n  return {\r\n    loading,\r\n    error,\r\n    get,\r\n    post,\r\n    patch,\r\n    del,\r\n    clearCache,\r\n  };\r\n};\r\n\r\nexport default useApi;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./PatentProfile.css\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst PatentProfile = () => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  return (\r\n    <>\r\n      <CCard className=\"card-profile\">\r\n        <CCardBody className=\"d-flex gap-4\">\r\n          <div className=\"img-container\">\r\n            <img src={Assets.patient1} alt=\"profile-img\" />\r\n          </div>\r\n          <div className=\"user-details\">\r\n            <span className=\"user-title\">\r\n              {data?.user?.first_name} {data?.user?.last_name}\r\n            </span>\r\n            <div className=\"d-flex flex-wrap gap-2\">\r\n              <p className=\"user-email\">{data?.user?.email ?? \"--\"}</p>\r\n              <p className=\"user-email\">|</p>\r\n              <p className=\"user-email\">\r\n                {data?.user?.isd_code} {data?.user?.mobile ?? \"--\"}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex flex-wrap gap-2\">\r\n              <p className=\"user-email\">\r\n                MRN: {data?.additional_info?.mrn_number ?? \"--\"}\r\n              </p>\r\n              <p className=\"user-email\">|</p>\r\n              <p className=\"user-email\">\r\n                {data?.additional_info?.age ?? \"--\"} yrs (\r\n                {data?.user?.gender === \"Male\" ? \" M \" : \" F \"})\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatentProfile;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./PatientTabs.css\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst PatientTabs = ({ getCurrentTab }) => {\r\n  const tabs = [\r\n    {\r\n      id: 1,\r\n      title: \"Call\",\r\n      image: Assets.Call,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Medical Profile\",\r\n      image: Assets.Notes,\r\n    },\r\n\r\n    {\r\n      id: 3,\r\n      title: \"Camera Control\",\r\n      image: Assets.Camera,\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Pair\",\r\n      image: Assets.Qr,\r\n    },\r\n    // {\r\n    //   id: 5,\r\n    //   title: \"Call2\",\r\n    //   image: Assets.Call,\r\n    // },\r\n  ];\r\n\r\n  const [currentTab, setCurrentTab] = useState(() => {\r\n    // Initial state setup using localStorage\r\n    const storedCount = localStorage.getItem(\"patiendDetailTab\");\r\n    const storedFrom = localStorage.getItem(\"PatientMenu\");\r\n\r\n    const findObjectById = () => {\r\n      const findedObj = tabs?.find(\r\n        (option) => option?.id === Number(storedFrom)\r\n      );\r\n      return findedObj;\r\n    };\r\n    console.log(findObjectById());\r\n    return storedCount\r\n      ? JSON.parse(storedCount)\r\n      : storedFrom\r\n      ? findObjectById()\r\n      : null;\r\n  });\r\n\r\n  const switchTab = (data) => {\r\n    \r\n    localStorage.removeItem(\"PatientSubMenu-1\");\r\n    localStorage.removeItem(\"PatientSubMenu-2\");\r\n    localStorage.removeItem(\"PatientSubMenu-3\");\r\n    localStorage.removeItem(\"PatientSubMenu-4\");\r\n    localStorage.removeItem(\"PatientSubMenu-5\");\r\n    localStorage.removeItem(\"PatientMenu\");\r\n    localStorage.removeItem(\"PatientConsultTab\");\r\n    \r\n    localStorage.setItem(\"patiendDetailTab\", JSON.stringify(data));\r\n\r\n    setCurrentTab(data);\r\n    getCurrentTab(data?.id);\r\n    if (data?.id === currentTab?.id) {\r\n      getCurrentTab(null);\r\n      setCurrentTab(null);\r\n    }\r\n  };\r\n  return (\r\n    <CCard className=\"card-tabs\">\r\n      <CCardBody className=\"tabs-container\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`tab-items ${\r\n              data?.id === currentTab?.id ? \"tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <img src={data?.image} alt=\"call\" className=\"tab-icon\" />\r\n            <span className=\"tab-title\">{data?.title}</span>\r\n          </div>\r\n        ))}\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default PatientTabs;\r\n","import React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { formatDateTime } from \"../../Utils/dateUtils\";\r\n\r\nfunction DoctorCards({ DoctorDetail }) {\r\n  //   console.log(\"DoctorDetail\", DoctorDetail);\r\n  return (\r\n    <div className=\"card-sec\">\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"profile col-4\">\r\n          <img\r\n            src={DoctorDetail?.profile || Assets.NoImg}\r\n            alt=\"Patient-image\"\r\n          />\r\n        </div>\r\n        <div className=\"patient-details col-8 p-2\">\r\n          <h5>\r\n            Dr.{\" \"}\r\n            {DoctorDetail?.participants\r\n              ? DoctorDetail?.participants[1]?.participant_info?.name\r\n              : \"--\"}\r\n          </h5>\r\n          <p className=\"gap-sec d-flex flex-wrap\">\r\n            <small className=\"fs-10 fw-500\">\r\n              {DoctorDetail?.participants\r\n                ? DoctorDetail?.participants[1]?.participant_info?.email\r\n                : \"--\"}\r\n            </small>\r\n            <small className=\"fs-10 fw-500\">|</small>\r\n            <small className=\"fs-10 fw-500\">\r\n              {DoctorDetail?.participants\r\n                ? DoctorDetail?.participants[1]?.participant_info?.phone\r\n                : \"--\"}\r\n            </small>\r\n          </p>\r\n          <p className=\"flex-sec-wrap gap-sec\">\r\n            <small className=\"fs-10 fw-600\">{DoctorDetail?.participants\r\n                ? DoctorDetail?.participants[1]?.participant_info?.additional_info?.consult_speciality\r\n                : \"--\"}</small>\r\n            <small className=\"fs-10 fw-600\">|</small> \r\n            <small className=\"fs-10 fw-600\">{DoctorDetail?.scheduled_at\r\n                ? formatDateTime(DoctorDetail?.scheduled_at)\r\n                : \"--\"}</small>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <img src={Assets.notes} className=\"edit-icon\" alt=\"edit-icon\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorCards;\r\n","import React from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div class=\"loading\">\r\n      <svg height=\"96px\" width=\"128px\" viewBox=\"0 0 64 48\">\r\n        <polyline\r\n          id=\"back\"\r\n          points=\"0.157 23.954, 14 23.954, 21.843 48, 43 0, 50 24, 64 24\"\r\n        ></polyline>\r\n        <polyline\r\n          id=\"front\"\r\n          points=\"0.157 23.954, 14 23.954, 21.843 48, 43 0, 50 24, 64 24\"\r\n        ></polyline>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../assets/Css/PaginationHome.css\";\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  totalItems,\r\n  onPageChange,\r\n  itemsPerPage,\r\n}) => {\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // Calculate total pages based on totalItems and itemsPerPage\r\n    const pagesCount = Math.ceil(totalItems / itemsPerPage);\r\n    setTotalPages(pagesCount);\r\n  }, [totalItems, itemsPerPage]);\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      onPageChange(page);\r\n    }\r\n  };\r\n\r\n  const getPageNumbers = () => {\r\n    const pageNumbers = [];\r\n    const range = 1; // Number of pages to show around the current page\r\n\r\n    if (totalPages <= 5) {\r\n      // Less than or equal to 5 pages, show all\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n    } else {\r\n      // More than 5 pages, use ellipses\r\n      if (currentPage <= 3) {\r\n        // Show first few pages and the last page\r\n        for (let i = 1; i <= 3; i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n        pageNumbers.push(\"...\");\r\n        pageNumbers.push(totalPages);\r\n      } else if (currentPage >= totalPages - 2) {\r\n        // Show last few pages and the first page\r\n        pageNumbers.push(1);\r\n        pageNumbers.push(\"...\");\r\n        for (let i = totalPages - 2; i <= totalPages; i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n      } else {\r\n        // Show a range around the current page\r\n        pageNumbers.push(1);\r\n        pageNumbers.push(\"...\");\r\n        for (let i = currentPage - range; i <= currentPage + range; i++) {\r\n          if (i > 0 && i <= totalPages) {\r\n            pageNumbers.push(i);\r\n          }\r\n        }\r\n        pageNumbers.push(\"...\");\r\n        pageNumbers.push(totalPages);\r\n      }\r\n    }\r\n\r\n    // Remove duplicate ellipses\r\n    return pageNumbers.filter(\r\n      (item, index, arr) =>\r\n        item !== \"...\" || (index > 0 && arr[index - 1] !== \"...\")\r\n    );\r\n  };\r\n\r\n  const pageNumbers = getPageNumbers();\r\n\r\n  return (\r\n    <div\r\n      // className=\"pagination-home\"\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      <div\r\n        onClick={() => handlePageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n        aria-label=\"Previous\"\r\n        // className=\"div-pagination\"\r\n        style={{\r\n          width: \"56px\",\r\n          height: \"56px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          gap: \"0px\",\r\n          borderRadius: \"8px\",\r\n          opacity: \"0px\",\r\n          boxShadow: \"0px 4px 24px 0px #0084CF14\",\r\n          marginLeft: \"10px\",\r\n          outline: \"none\",\r\n          border: \"none\",\r\n          fontSize: \"20px\",\r\n          fontWeight: \"600\",\r\n          lineHeight: \"28.9px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        &lt;\r\n      </div>\r\n      {pageNumbers.map((number, index) => (\r\n        <div\r\n          key={index}\r\n          onClick={() => {\r\n            if (number !== \"...\") {\r\n              handlePageChange(number);\r\n            }\r\n          }}\r\n          className={number === currentPage ? \"active-home-page\" : \"\"}\r\n          disabled={number === \"...\"}\r\n          aria-current={number === currentPage ? \"page\" : undefined}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            gap: \"0px \",\r\n            borderRadius: \"8px \",\r\n            opacity: \"0px \",\r\n            boxShadow: \"0px 4px 24px 0px #0084CF14 \",\r\n            marginLeft: \"10px \",\r\n            outline: \"none \",\r\n            border: \"none \",\r\n            fontSize: \"20px \",\r\n            fontWeight: \"600 \",\r\n            lineHeight: \"28.9px \",\r\n            cursor: \"pointer\",\r\n            width: \"56px\",\r\n            height: \"56px\",\r\n          }}\r\n        >\r\n          {number}\r\n        </div>\r\n      ))}\r\n      <div\r\n        onClick={() => handlePageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n        aria-label=\"Next\"\r\n        style={{\r\n          width: \"56px\",\r\n          height: \"56px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          gap: \"0px\",\r\n          borderRadius: \"8px\",\r\n          opacity: \"0px\",\r\n          boxShadow: \"0px 4px 24px 0px #0084CF14\",\r\n          marginLeft: \"10px\",\r\n          outline: \"none\",\r\n          border: \"none\",\r\n          fontSize: \"20px\",\r\n          fontWeight: \"600\",\r\n          lineHeight: \"28.9px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        &gt;\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { format, isValid, parse } from \"date-fns\";\r\n\r\n// Function to format date as DD-MM-YYYY HH:mm AM/PM\r\nexport function formatDateTime(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n\r\n  const options = {\r\n    day: \"2-digit\",\r\n    month: \"2-digit\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  };\r\n\r\n  return date.toLocaleString(\"en-GB\", options).replace(\",\", \"\");\r\n}\r\n\r\n// Function to format date as DD-MM-YYYY\r\nexport function formatDate(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are zero-indexed\r\n  const year = date.getFullYear();\r\n\r\n  return `${day}-${month}-${year}`;\r\n}\r\n\r\n// Function to format time as HH:mm AM/PM\r\nexport function formatTime(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n  const options = {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  };\r\n\r\n  return date.toLocaleTimeString(\"en-GB\", options);\r\n}\r\n\r\nexport function tableDateTime(dateTimeString) {\r\n  if (!dateTimeString) {\r\n    return \"Invalid date-time\"; // Handle empty or invalid input\r\n  }\r\n\r\n  // Parse the date and time string\r\n  const parsedDate = parse(dateTimeString, \"yyyy-MM-dd HH:mm\", new Date());\r\n\r\n  // Check if the parsed date is valid\r\n  if (!isValid(parsedDate)) {\r\n    return \"Invalid date-time\"; // Handle invalid date\r\n  }\r\n\r\n  // Format the date and time into 'dd-MM-yyyy HH:mm'\r\n  return format(parsedDate, \"dd-MM-yyyy HH:mm\");\r\n}\r\n\r\nexport function getCurrentTime() {\r\n  const now = new Date();\r\n  const hours = now.getHours().toString().padStart(2, \"0\");\r\n  const minutes = now.getMinutes().toString().padStart(2, \"0\");\r\n  return `${hours}:${minutes}`;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CButton,\r\n  CModalFooter,\r\n  CFormSelect,\r\n  CRow,\r\n  CCol,\r\n} from \"@coreui/react\";\r\n// import { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nfunction FilterModal({ visible, setVisible, RegDoctors, getFilter }) {\r\n  const today = new Date();\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n  const [errors, setErrors] = useState({\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    doctor: \"\",\r\n  });\r\n\r\n  function ClearFunction() {\r\n    setStartDate();\r\n    setEndDate();\r\n    setSelectedDoctor(\"\");\r\n    setErrors({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      doctor: \"\",\r\n    });\r\n  }\r\n\r\n  // Handler function for the select change event\r\n  const handleSelectChange = (event) => {\r\n    const selectedValue = event.target.value;\r\n    setSelectedDoctor(selectedValue);\r\n    console.log(\"Selected doctor ID:\", selectedValue);\r\n    setErrors((prev) => ({ ...prev, doctor: \"\" }));\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      doctor: \"\",\r\n    };\r\n\r\n    // if (!selectedDoctor) {\r\n    //   newErrors.doctor = \"Please select a doctor.\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    if (startDate && endDate && startDate > endDate) {\r\n      newErrors.startDate = \"Start date must be before end date.\";\r\n      newErrors.endDate = \"End date must be after start date.\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!startDate && endDate) {\r\n      newErrors.startDate = \"Start date is required when end date is selected.\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (startDate && !endDate) {\r\n      newErrors.endDate = \"End date is required when start date is selected.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const ApplyFilter = () => {\r\n    if (validate()) {\r\n      setVisible(false);\r\n      const data = {\r\n        id: selectedDoctor ? selectedDoctor : null,\r\n        startDate: startDate ? startDate?.toLocaleDateString() : null,\r\n        endDate: endDate ? endDate?.toLocaleDateString() : null,\r\n      };\r\n      getFilter(data);\r\n    }\r\n  };\r\n  return (\r\n    <CModal\r\n      visible={visible}\r\n      onClose={() => setVisible(false)}\r\n      aria-labelledby=\"LiveDemoExampleLabel\"\r\n      className=\"modal-cutomize\"\r\n      backdrop=\"static\"\r\n    >\r\n      <CModalHeader>\r\n        <CModalTitle id=\"LiveDemoExampleLabel\">FILTER</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        {/* <CFormSelect\r\n          aria-label=\"Default select example\"\r\n          options={[\r\n            \"Filter with Doctor\",\r\n            { label: \"Doctor One\", value: \"1\" },\r\n            { label: \"Doctor Two\", value: \"2\" },\r\n            { label: \"Dcotor Three\", value: \"3\" },\r\n          ]}\r\n        /> */}\r\n        <CFormSelect\r\n          aria-label=\"Default select example\"\r\n          onChange={handleSelectChange}\r\n          value={selectedDoctor} // Optional: to control the select value\r\n        >\r\n          <option value=\"\">Filter with Doctor</option>{\" \"}\r\n          {/* Default or placeholder option */}\r\n          {RegDoctors?.map((doctor) => (\r\n            <option key={doctor?.user?.id} value={doctor?.user?.id}>\r\n              {doctor?.user?.first_name} {doctor?.user?.last_name}\r\n            </option>\r\n          ))}\r\n        </CFormSelect>\r\n        {/* {errors.doctor && <p className=\"error-text\">{errors.doctor}</p>} */}\r\n        <CRow>\r\n          <CCol lg={6} sm={12}>\r\n            <p className=\"date-sec\">From Date</p>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              isClearable\r\n              className=\"date-range-picker picker-sec\"\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={today}\r\n            />\r\n          {errors.startDate && <p className=\"error-text\">{errors.startDate}</p>}\r\n          </CCol>\r\n          <CCol lg={6} sm={12}>\r\n            <p className=\"date-sec\">End Date</p>\r\n            <DatePicker\r\n              showIcon\r\n              selected={endDate}\r\n              onChange={(date) => setEndDate(date)}\r\n              isClearable\r\n              className=\"date-range-picker picker-sec\"\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={today}\r\n            />\r\n            {errors.endDate && <p className=\"error-text\">{errors.endDate}</p>}\r\n          </CCol>\r\n        </CRow>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton\r\n          color=\"secondary\"\r\n          onClick={() => ClearFunction()}\r\n          className=\"clear-filter-btn\"\r\n        >\r\n          Clear Filter\r\n        </CButton>\r\n        <CButton\r\n          color=\"primary\"\r\n          className=\"apply-filter-sec\"\r\n          onClick={() => ApplyFilter()}\r\n        >\r\n          Apply Filter\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n}\r\n\r\nexport default FilterModal;\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport PatentProfile from \"../../Components/Dashboard/PatentProfile/PatentProfile\";\r\nimport PatientTabs from \"../../Components/Dashboard/PatientTabs/PatientTabs\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { useState } from \"react\";\r\nimport DoctorCards from \"../../Components/DoctorCards/DoctorCards\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport FilterModal from \"../../Components/FilterModal/FilterModal\";\r\nimport useApi from \"../../ApiServices/useApi\";\r\nimport Pagination from \"../../Components/Pagination/Pagination\";\r\nimport Loader from \"../../Components/Loader/Loader\";\r\n\r\nfunction CallHistoryView() {\r\n  const [visible, setVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [RegDoctors, setRegDoctors] = useState([]);\r\n  const [DoctorDetail, setDoctorDetail] = useState([]);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [filter, setFilter] = useState({\r\n    id: null,\r\n    startDate: null,\r\n    endDate: null,\r\n  });\r\n\r\n  const { loading, error, get, post } = useApi();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 9;\r\n  // const DoctorDetail = [\r\n  //   {\r\n  //     name: \"Ram Mohan S R\",\r\n  //     email: \"rammohan@cure.com\",\r\n  //     mobile: \"+91 98765 43210\",\r\n  //     mrn: \"MRN 3\",\r\n  //     age: \"34 yrs (M)\",\r\n  //     profile: Assets.Patient,\r\n  //   },\r\n  //   {\r\n  //     name: \"Ram Mohan S R\",\r\n  //     email: \"rammohan@cure.com\",\r\n  //     mobile: \"+91 98765 43210\",\r\n  //     mrn: \"MRN 3\",\r\n  //     age: \"34 yrs (M)\",\r\n  //     profile: Assets.Patient,\r\n  //   },\r\n  //   {\r\n  //     name: \"Ram Mohan S R\",\r\n  //     email: \"rammohan@cure.com\",\r\n  //     mobile: \"+91 98765 43210\",\r\n  //     mrn: \"MRN 3\",\r\n  //     age: \"34 yrs (M)\",\r\n  //     profile: Assets.Patient,\r\n  //   },\r\n  //   {\r\n  //     name: \"Ram Mohan S R\",\r\n  //     email: \"rammohan@cure.com\",\r\n  //     mobile: \"+91 98765 43210\",\r\n  //     mrn: \"MRN 3\",\r\n  //     age: \"34 yrs (M)\",\r\n  //     profile: Assets.Patient,\r\n  //   },\r\n  // ];\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n  const DetailSec = () => {\r\n    navigate(\"/patients/summary\", { state: { PatientDetail: data } });\r\n    localStorage.removeItem(\"patiendDetailTab\");\r\n  };\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  const getDoctors = async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/consults?limit=${itemsPerPage}&page=${currentPage}${\r\n          filter.id !== null ? `&participant_ref_number=${filter.id}` : \"\"\r\n        }${filter.startDate !== null ? `&from_date=${filter.startDate}` : \"\"}${\r\n          filter.endDate !== null ? `&to_date=${filter.endDate}` : \"\"\r\n        }`\r\n      );\r\n      console.log(response); // Handle the data as needed\r\n      if (response.code === 200) {\r\n        setDoctorDetail(response?.data?.consults);\r\n        setTotalItems(response?.data?.pagination?.total);\r\n      } else {\r\n        setDoctorDetail([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching data:\", err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getDoctors();\r\n  }, [currentPage, filter]);\r\n\r\n  const getRegisteredDoctors = useCallback(async () => {\r\n    try {\r\n      const response = await get(`resource/providers?order_by=id&dir=1`);\r\n      console.log(response); // Handle the data as needed\r\n      if (response.code === 200) {\r\n        setRegDoctors(response?.data?.providers);\r\n        // setTotalItems(response?.data?.pagination?.total);\r\n      } else {\r\n        setRegDoctors([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching data:\", err);\r\n    }\r\n  }, [get]);\r\n\r\n  useEffect(() => {\r\n    getRegisteredDoctors();\r\n  }, [getRegisteredDoctors]);\r\n\r\n  const getFilter = (data) => {\r\n    setFilter(data);\r\n  };\r\n\r\n  console.log(\"getFilter\", filter);\r\n\r\n  return (\r\n    <section className=\"call-history-sec\">\r\n      <div className=\"flex-sec top-sec\">\r\n        <div className=\"bread-crumbs\">\r\n          <p className=\"mb-0\">\r\n            <Link to=\"/patients\">Patient</Link> /{\" \"}\r\n            <Link to=\"/patients\" className=\"active\">\r\n              Existing Patient\r\n            </Link>\r\n          </p>\r\n          <h4>Appointments - Call History</h4>\r\n        </div>\r\n        <div className=\"patient-adding\">\r\n          <button onClick={() => setVisible(!visible)}>\r\n            <img src={Assets.filter} alt=\"filter-sec\" className=\"filter-icon\" />{\" \"}\r\n            Filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"doctor-card-sec\">\r\n        <div className=\"row\">\r\n          {!loading ? (\r\n            DoctorDetail.length <= 0 ? (\r\n              <div\r\n                className=\"d-flex w-100 justify-content-center mb-3 align-items-center\"\r\n                style={{ height: \"350px\", maxHeight: \"100%\" }}\r\n              >\r\n                <h5>No Data Found</h5>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {DoctorDetail.map((data, i) => (\r\n                  <div className=\"col-4\" onClick={() => DetailSec()}>\r\n                    <Link className=\"card-link\">\r\n                      <DoctorCards DoctorDetail={data} />\r\n                    </Link>\r\n                  </div>\r\n                ))}\r\n              </>\r\n            )\r\n          ) : (\r\n            <div\r\n              className=\"d-flex w-100 justify-content-center mb-3 align-items-center\"\r\n              style={{ height: \"350px\", maxHeight: \"100%\" }}\r\n            >\r\n              <Loader />\r\n            </div>\r\n          )}\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n                totalItems={totalItems}\r\n                itemsPerPage={itemsPerPage}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-sec\">\r\n        <FilterModal\r\n          visible={visible}\r\n          setVisible={setVisible}\r\n          RegDoctors={RegDoctors}\r\n          getFilter={getFilter}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CallHistoryView;\r\n","import React, { ElementType, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CLink, CLinkProps } from '../link/CLink'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\nimport { colorPropType } from '../../props'\nimport type { Colors, Shapes } from '../../types'\n\nexport interface CButtonProps extends Omit<CLinkProps, 'size'> {\n  /**\n   * Toggle the active state for the component.\n   */\n  active?: boolean\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * The href attribute specifies the URL of the page the link goes to.\n   */\n  href?: string\n  /**\n   * The role attribute describes the role of an element in programs that can make use of it, such as screen readers or magnifiers.\n   */\n  role?: string\n  /**\n   * Select the shape of the component.\n   *\n   * @type 'rounded' | 'rounded-top' | 'rounded-end' | 'rounded-bottom' | 'rounded-start' | 'rounded-circle' | 'rounded-pill' | 'rounded-0' | 'rounded-1' | 'rounded-2' | 'rounded-3' | string\n   */\n  shape?: Shapes\n  /**\n   * Size the component small or large.\n   */\n  size?: 'sm' | 'lg'\n  /**\n   * Specifies the type of button. Always specify the type attribute for the `<button>` element.\n   * Different browsers may use different default types for the `<button>` element.\n   */\n  type?: 'button' | 'submit' | 'reset'\n  /**\n   * Set the button variant to an outlined button or a ghost button.\n   */\n  variant?: 'outline' | 'ghost'\n}\n\nexport const CButton: PolymorphicRefForwardingComponent<'button', CButtonProps> = forwardRef<\n  HTMLButtonElement | HTMLAnchorElement,\n  CButtonProps\n>(\n  (\n    { children, as = 'button', className, color, shape, size, type = 'button', variant, ...rest },\n    ref,\n  ) => {\n    return (\n      <CLink\n        as={rest.href ? 'a' : as}\n        {...(!rest.href && { type: type })}\n        className={classNames(\n          'btn',\n          variant ? `btn-${variant}-${color}` : `btn-${color}`,\n          { [`btn-${size}`]: size },\n          shape,\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </CLink>\n    )\n  },\n)\n\nCButton.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  shape: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  variant: PropTypes.oneOf(['outline', 'ghost']),\n}\n\nCButton.displayName = 'CButton'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CModalFooterProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CModalFooter = forwardRef<HTMLDivElement, CModalFooterProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('modal-footer', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCModalFooter.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCModalFooter.displayName = 'CModalFooter'\n","import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CModalTitleProps extends HTMLAttributes<HTMLHeadingElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n}\n\nexport const CModalTitle: PolymorphicRefForwardingComponent<'h5', CModalTitleProps> = forwardRef<\n  HTMLHeadElement,\n  CModalTitleProps\n>(({ children, as: Component = 'h5', className, ...rest }, ref) => {\n  return (\n    <Component className={classNames('modal-title', className)} {...rest} ref={ref}>\n      {children}\n    </Component>\n  )\n})\n\nCModalTitle.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCModalTitle.displayName = 'CModalTitle'\n"],"names":["useApi","apiUrl","process","apiKey","loading","setLoading","useState","error","setError","cache","useRef","fetchData","useCallback","async","url","options","current","startsWith","response","fetch","ok","Error","concat","statusText","data","json","message","get","method","headers","Authorization","sessionStorage","getItem","post","body","JSON","stringify","patch","del","clearCache","PatentProfile","_location$state","_data$user","_data$user2","_data$user$email","_data$user3","_data$user4","_data$user$mobile","_data$user5","_data$additional_info","_data$additional_info2","_data$additional_info3","_data$additional_info4","_data$user6","useLocation","state","PatientDetail","_jsx","_Fragment","children","CCard","className","_jsxs","CCardBody","src","Assets","patient1","alt","user","first_name","last_name","email","isd_code","mobile","additional_info","mrn_number","age","gender","_ref","getCurrentTab","tabs","id","title","image","Call","Notes","Camera","Qr","currentTab","setCurrentTab","storedCount","localStorage","storedFrom","findObjectById","find","option","Number","console","log","parse","map","index","onClick","removeItem","setItem","switchTab","_DoctorDetail$partici","_DoctorDetail$partici2","_DoctorDetail$partici3","_DoctorDetail$partici4","_DoctorDetail$partici5","_DoctorDetail$partici6","_DoctorDetail$partici7","_DoctorDetail$partici8","_DoctorDetail$partici9","DoctorDetail","profile","NoImg","participants","participant_info","name","phone","consult_speciality","scheduled_at","formatDateTime","notes","Loader","class","height","width","viewBox","points","currentPage","totalItems","onPageChange","itemsPerPage","totalPages","setTotalPages","useEffect","pagesCount","Math","ceil","handlePageChange","page","pageNumbers","getPageNumbers","i","push","filter","item","arr","style","display","disabled","alignItems","justifyContent","gap","borderRadius","opacity","boxShadow","marginLeft","outline","border","fontSize","fontWeight","lineHeight","cursor","number","undefined","originalDateStr","Date","toLocaleString","day","month","year","hour","minute","hour12","replace","formatDate","date","String","getDate","padStart","getMonth","getFullYear","getCurrentTime","now","hours","getHours","toString","minutes","getMinutes","visible","setVisible","RegDoctors","getFilter","today","startDate","setStartDate","endDate","setEndDate","selectedDoctor","setSelectedDoctor","errors","setErrors","doctor","ApplyFilter","validate","isValid","newErrors","toLocaleDateString","CModal","onClose","backdrop","CModalHeader","CModalTitle","CModalBody","CFormSelect","onChange","event","selectedValue","target","value","prev","_doctor$user","_doctor$user2","_doctor$user3","_doctor$user4","CRow","CCol","lg","sm","DatePicker","showIcon","selected","isClearable","dateFormat","maxDate","CModalFooter","CButton","color","navigate","useNavigate","setRegDoctors","setDoctorDetail","setTotalItems","setFilter","setCurrentPage","DetailSec","_response$data","_response$data2","_response$data2$pagin","code","consults","pagination","total","err","getDoctors","getRegisteredDoctors","_response$data3","providers","Link","to","maxHeight","length","DoctorCards","Pagination","pageNumber","FilterModal","forwardRef","_a","ref","_c","as","shape","size","_d","type","variant","rest","__rest","React","CLink","__assign","href","classNames","_b","propTypes","PropTypes","colorPropType","displayName","Component"],"sourceRoot":""}