{"version":3,"file":"static/js/735.8937d4ec.chunk.js","mappings":"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","sources":["Components/PatientDetailCard/PatientDetailCard.jsx","../node_modules/@coreui/react/src/components/tabs/CTabs.tsx","../node_modules/@coreui/react/src/components/tabs/CTabList.tsx","../node_modules/@coreui/react/src/utils/getNextActiveElement.ts","../node_modules/@coreui/react/src/components/tabs/CTab.tsx","../node_modules/@coreui/react/src/components/tabs/CTabContent.tsx","../node_modules/@coreui/react/src/utils/getTransitionDurationFromElement.ts","../node_modules/@coreui/react/src/components/tabs/CTabPanel.tsx","Views/PatientSummary/PatientSummaryView.jsx"],"sourcesContent":["import React from 'react'\r\nimport { CRow, CCol } from '@coreui/react'\r\n\r\nfunction PatientDetailCard() {\r\n    return (\r\n        <div className='patient-card-details'>\r\n            <CRow>\r\n                <CCol sm={12} lg={6}>\r\n                    <div className='blue-card patient-box'>\r\n                        <h5>Patient Details</h5>\r\n                        <CRow>\r\n                            <CCol sm={6}>\r\n                                <span>Patient Name: Ram Mohan S R</span>\r\n                            </CCol>\r\n                            <CCol sm={6}>\r\n                                <span>Date Of Birth & Age: 04-02-1997 & 27 Years</span>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol sm={6}>\r\n                                <span>Gender:Â Male</span>\r\n                            </CCol>\r\n                            <CCol sm={6}>\r\n                                <span>Blood Group:Â O+</span>\r\n                            </CCol>\r\n                        </CRow>\r\n                    </div>\r\n                </CCol>\r\n                <CCol sm={12} lg={6}>\r\n                    <div className='black-card patient-box'>\r\n                        <h5>Consult Details</h5>\r\n                        <CRow>\r\n                            <CCol sm={6}>\r\n                                <span>Scheduled at:Â 21-06-2024 12:34 PM</span>\r\n                            </CCol>\r\n                            <CCol sm={6}>\r\n                                <span>Started at:</span>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol sm={6}>\r\n                                <span>Ended at:</span>\r\n                            </CCol>\r\n                            <CCol sm={6}>\r\n                                <span>Additional Notes:</span>\r\n                            </CCol>\r\n                        </CRow>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientDetailCard\r\n","import React, { createContext, forwardRef, HTMLAttributes, useEffect, useId, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CTabsProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  /**\n   * The active item key.\n   */\n  activeItemKey: number | string\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * The callback is fired when the active tab changes.\n   */\n  onChange?: (value: number | string) => void\n}\n\nexport interface TabsContextProps {\n  _activeItemKey?: number | string\n  setActiveItemKey: React.Dispatch<React.SetStateAction<number | string | undefined>>\n  id?: string\n}\n\nexport const TabsContext = createContext({} as TabsContextProps)\n\nexport const CTabs = forwardRef<HTMLDivElement, CTabsProps>(\n  ({ children, activeItemKey, className, onChange }, ref) => {\n    const id = useId()\n    const [_activeItemKey, setActiveItemKey] = useState(activeItemKey)\n\n    useEffect(() => {\n      _activeItemKey && onChange && onChange(_activeItemKey)\n    }, [_activeItemKey])\n\n    return (\n      <TabsContext.Provider value={{ _activeItemKey, setActiveItemKey, id }}>\n        <div className={classNames('tabs', className)} ref={ref}>\n          {children}\n        </div>\n      </TabsContext.Provider>\n    )\n  },\n)\n\nCTabs.propTypes = {\n  activeItemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\nCTabs.displayName = 'CTabs'\n","import React, { forwardRef, HTMLAttributes, KeyboardEvent, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { useForkedRef } from '../../hooks'\nimport { getNextActiveElement } from '../../utils'\n\nexport interface CTabListProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Specify a layout type for component.\n   */\n  layout?: 'fill' | 'justified'\n  /**\n   * Set the nav variant to tabs or pills.\n   */\n  variant?: 'pills' | 'tabs' | 'underline' | 'underline-border'\n}\n\nexport const CTabList = forwardRef<HTMLDivElement, CTabListProps>(\n  ({ children, className, layout, variant, ...rest }, ref) => {\n    const tabListRef = useRef<HTMLDivElement>(null)\n    const forkedRef = useForkedRef(ref, tabListRef)\n\n    const handleKeydown = (event: KeyboardEvent<HTMLDivElement>) => {\n      if (\n        tabListRef.current !== null &&\n        (event.key === 'ArrowDown' ||\n          event.key === 'ArrowUp' ||\n          event.key === 'ArrowLeft' ||\n          event.key === 'ArrowRight' ||\n          event.key === 'Home' ||\n          event.key === 'End')\n      ) {\n        event.preventDefault()\n        const target = event.target as HTMLElement\n        // eslint-disable-next-line unicorn/prefer-spread\n        const items: HTMLElement[] = Array.from(\n          tabListRef.current.querySelectorAll('.nav-link:not(.disabled):not(:disabled)'),\n        )\n\n        let nextActiveElement\n\n        if (event.key === 'Home' || event.key === 'End') {\n          nextActiveElement = event.key === 'End' ? items.at(-1) : items[0]\n        } else {\n          nextActiveElement = getNextActiveElement(\n            items,\n            target,\n            event.key === 'ArrowDown' || event.key === 'ArrowRight',\n            true,\n          )\n        }\n\n        if (nextActiveElement) {\n          nextActiveElement.focus({ preventScroll: true })\n        }\n      }\n    }\n\n    return (\n      <div\n        className={classNames(\n          'nav',\n          {\n            [`nav-${layout}`]: layout,\n            [`nav-${variant}`]: variant,\n          },\n          className,\n        )}\n        role=\"tablist\"\n        onKeyDown={handleKeydown}\n        ref={forkedRef}\n        {...rest}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCTabList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  layout: PropTypes.oneOf(['fill', 'justified']),\n  variant: PropTypes.oneOf(['pills', 'tabs', 'underline', 'underline-border']),\n}\n\nCTabList.displayName = 'CTabList'\n","const getNextActiveElement = (\n  list: HTMLElement[],\n  activeElement: HTMLElement,\n  shouldGetNext: boolean,\n  isCycleAllowed: boolean,\n) => {\n  const listLength = list.length\n  let index = list.indexOf(activeElement)\n\n  if (index === -1) {\n    return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0]\n  }\n\n  index += shouldGetNext ? 1 : -1\n\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength\n  }\n\n  return list[Math.max(0, Math.min(index, listLength - 1))]\n}\n\nexport default getNextActiveElement\n","import React, { forwardRef, HTMLAttributes, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { TabsContext } from './CTabs'\n\nexport interface CTabProps extends HTMLAttributes<HTMLButtonElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Item key.\n   */\n  itemKey: number | string\n}\n\nexport const CTab = forwardRef<HTMLButtonElement, CTabProps>(\n  ({ children, className, itemKey, ...rest }, ref) => {\n    const { _activeItemKey, setActiveItemKey, id } = useContext(TabsContext)\n\n    const isActive = () => itemKey === _activeItemKey\n\n    return (\n      <button\n        className={classNames(\n          'nav-link',\n          {\n            active: isActive(),\n          },\n          className,\n        )}\n        id={`${id}${itemKey}-tab`}\n        onClick={() => setActiveItemKey(itemKey)}\n        onFocus={() => setActiveItemKey(itemKey)}\n        role=\"tab\"\n        tabIndex={isActive() ? 0 : -1}\n        type=\"button\"\n        aria-controls={`${id}${itemKey}-tab-pane`}\n        aria-selected={isActive()}\n        ref={ref}\n        {...rest}\n      >\n        {children}\n      </button>\n    )\n  },\n)\n\nCTab.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  itemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n}\n\nCTab.displayName = 'CTab'\n","import React, { HTMLAttributes, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CTabContentProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CTabContent = forwardRef<HTMLDivElement, CTabContentProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('tab-content', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCTabContent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCTabContent.displayName = 'CTabContent'\n","const getTransitionDurationFromElement = (element: HTMLElement) => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * 1000\n}\n\nexport default getTransitionDurationFromElement\n","import React, { HTMLAttributes, forwardRef, useContext, useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\n\nimport { TabsContext } from './CTabs'\nimport { useForkedRef } from '../../hooks'\nimport { getTransitionDurationFromElement } from '../../utils'\n\nexport interface CTabPanelProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Item key.\n   */\n  itemKey: number | string\n  /**\n   * Callback fired when the component requests to be hidden.\n   */\n  onHide?: () => void\n  /**\n   * Callback fired when the component requests to be shown.\n   */\n  onShow?: () => void\n  /**\n   * Enable fade in and fade out transition.\n   */\n  transition?: boolean\n  /**\n   * Toggle the visibility of component.\n   */\n  visible?: boolean\n}\n\nexport const CTabPanel = forwardRef<HTMLDivElement, CTabPanelProps>(\n  ({ children, className, itemKey, onHide, onShow, transition = true, visible, ...rest }, ref) => {\n    const { _activeItemKey, id } = useContext(TabsContext)\n\n    const tabPaneRef = useRef()\n    const forkedRef = useForkedRef(ref, tabPaneRef)\n\n    const [_visible, setVisible] = useState(visible || _activeItemKey === itemKey)\n\n    useEffect(() => {\n      visible !== undefined && setVisible(visible)\n    }, [visible])\n\n    useEffect(() => {\n      setVisible(_activeItemKey === itemKey)\n    }, [_activeItemKey])\n\n    return (\n      <Transition\n        in={_visible}\n        nodeRef={tabPaneRef}\n        onEnter={onShow}\n        onExit={onHide}\n        timeout={tabPaneRef.current ? getTransitionDurationFromElement(tabPaneRef.current) : 0}\n      >\n        {(state) => (\n          <div\n            className={classNames(\n              'tab-pane',\n              {\n                active: _visible,\n                fade: transition,\n                show: state === 'entered',\n              },\n              className,\n            )}\n            id={`${id}${itemKey}-tab-pane`}\n            role=\"tabpanel\"\n            aria-labelledby={`${id}${itemKey}-tab`}\n            tabIndex={0}\n            ref={forkedRef}\n            {...rest}\n          >\n            {children}\n          </div>\n        )}\n      </Transition>\n    )\n  },\n)\n\nCTabPanel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  itemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  onHide: PropTypes.func,\n  onShow: PropTypes.func,\n  transition: PropTypes.bool,\n  visible: PropTypes.bool,\n}\n\nCTabPanel.displayName = 'CTabPanel'\n","import React, { useState } from \"react\";\r\nimport PatientDetailCard from \"../../Components/PatientDetailCard/PatientDetailCard\";\r\nimport SummaryTable from \"../../Components/SummaryTable/SummaryTable\";\r\nimport TableRow from \"../../Components/SummaryTable/TableRow\";\r\nimport ExamCard from \"../../Components/SummaryTable/ExamCard\";\r\nimport TableColor from \"../../Components/SummaryTable/TableColor\";\r\nimport TableSec from \"../../Components/SummaryTable/TableSec\";\r\nimport DocumentTable from \"../../Components/SummaryTable/DocumentTable\";\r\nimport Prescription from \"../../Components/SummaryTable/Prescription\";\r\nimport { CTabs, CTab, CTabList, CTabContent, CTabPanel } from \"@coreui/react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport ConsultTable from \"../../Components/Consultant/ConsultTable\";\r\nimport {\r\n  ChiefComplaintsColumn,\r\n  ChiefComplaintsItems,\r\n  MedicationColumn,\r\n  MedicationItems,\r\n  SymptomsColumn,\r\n  SymptomsItems,\r\n} from \"../../Components/Consultant/TableColumnsJson/SubjectiveJson\";\r\nimport MedicalHistory from \"../../Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Medical History/MedicalHistory\";\r\nimport ChiefComplaints from \"../../Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Chief Complaints/ChiefComplaints\";\r\nimport SignsSymptoms from \"../../Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Signs And Symptoms/SignsSymptoms\";\r\nimport Medication from \"../../Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Medication/Medication\";\r\nimport SurgicalHistory from \"../../Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Surgical History/SurgicalHistory\";\r\nimport FamilyHistory from \"../../Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Family History/FamilyHistory\";\r\n\r\nfunction PatientSummaryView() {\r\n  const [ActiveKey, setActiveKey] = useState(\"Vitals\");\r\n  // BMI Data\r\n  const VitalsColumns = [\r\n    {\r\n      key: \"No\",\r\n      label: \"No.\",\r\n    },\r\n    {\r\n      key: \"Result\",\r\n      label: \"Result\",\r\n    },\r\n    {\r\n      key: \"BMI\",\r\n      label: \"BMI\",\r\n    },\r\n    {\r\n      key: \"Height\",\r\n      label: \"Height\",\r\n    },\r\n    {\r\n      key: \"Weight\",\r\n      label: \"Weight\",\r\n    },\r\n    {\r\n      key: \"Date\",\r\n      label: \"Date\",\r\n    },\r\n  ];\r\n\r\n  const VitalsItems = [\r\n    {\r\n      No: 1,\r\n      Result: \"Normal Weight\",\r\n      BMI: \"24.13\",\r\n      Height: \"160 CM\",\r\n      Weight: \"60 KG\",\r\n      Date: \"02-04-2024\",\r\n    },\r\n    {\r\n      No: 2,\r\n      Result: \"Normal Weight\",\r\n      BMI: \"24.13\",\r\n      Height: \"160 CM\",\r\n      Weight: \"60 KG\",\r\n      Date: \"02-04-2024\",\r\n      _cellProps: { class: { scope: \"hey\" } },\r\n    },\r\n  ];\r\n\r\n  // Temparature Data\r\n  const TemColumns = [\r\n    {\r\n      key: \"No\",\r\n      label: \"No.\",\r\n    },\r\n    {\r\n      key: \"Result\",\r\n      label: \"Result\",\r\n    },\r\n    {\r\n      key: \"Temperature\",\r\n      label: \"Temperature\",\r\n    },\r\n    {\r\n      key: \"Type\",\r\n      label: \"Type\",\r\n    },\r\n    {\r\n      key: \"Date\",\r\n      label: \"Date\",\r\n    },\r\n  ];\r\n\r\n  const TemItems = [\r\n    {\r\n      No: 1,\r\n      Result: \"Normal\",\r\n      Temperature: \"99.88 Â°F, 36.8 Â°C\",\r\n      Type: \"Oral\",\r\n      Date: \"02-04-2024   15:45\",\r\n    },\r\n    {\r\n      No: 2,\r\n      Result: \"Normal\",\r\n      Temperature: \"99.88 Â°F, 36.8 Â°C\",\r\n      Type: \"Oral\",\r\n      Date: \"02-04-2024   15:45\",\r\n    },\r\n  ];\r\n\r\n  // Glassess Data\r\n  const GlassColumns = [\r\n    {\r\n      key: \"RX\",\r\n      label: \"RX\",\r\n    },\r\n    {\r\n      key: \"SPH\",\r\n      label: \"SPH\",\r\n    },\r\n    {\r\n      key: \"CYL\",\r\n      label: \"CYL\",\r\n    },\r\n    {\r\n      key: \"Axis\",\r\n      label: \"Axis\",\r\n    },\r\n  ];\r\n\r\n  const GlassItems = [\r\n    {\r\n      RX: \"D.V\",\r\n      SPH: \"2\",\r\n      CYL: \"2\",\r\n      Axis: \"50 Â°\",\r\n    },\r\n    {\r\n      RX: \"D.V\",\r\n      SPH: \"2\",\r\n      CYL: \"2\",\r\n      Axis: \"50 Â°\",\r\n    },\r\n  ];\r\n\r\n  const PrescritionData = {\r\n    id: \"488\",\r\n    eyesight: \"Right Eye (R.E)\",\r\n    date: \"02-04-2024 15:45\",\r\n  };\r\n\r\n  const PrescritionDataTwo = {\r\n    id: \"489\",\r\n    eyesight: \"Left Eye (L.E)\",\r\n    date: \"02-04-2024 15:45\",\r\n  };\r\n\r\n  // Histories Data\r\n  // Glassess Data\r\n  const HistoryColumns = [\r\n    {\r\n      key: \"No\",\r\n      label: \"No.\",\r\n    },\r\n    {\r\n      key: \"Condition\",\r\n      label: \"Condition\",\r\n    },\r\n    {\r\n      key: \"OnsetDate\",\r\n      label: \"Onset Date\",\r\n    },\r\n    {\r\n      key: \"RecoveredDate\",\r\n      label: \"RecoveredDate\",\r\n    },\r\n    {\r\n      key: \"TreatedBy\",\r\n      label: \"Treated By\",\r\n    },\r\n    {\r\n      key: \"Treatment\",\r\n      label: \"Treatment\",\r\n    },\r\n    {\r\n      key: \"Remark\",\r\n      label: \"Remark\",\r\n    },\r\n    {\r\n      key: \"Status\",\r\n      label: \"Status\",\r\n    },\r\n  ];\r\n\r\n  const HistoryItems = [\r\n    {\r\n      No: \"1\",\r\n      Condition: \"Fever\",\r\n      OnsetDate: \"02-04-2024\",\r\n      RecoveredDate: \"02-04-2024\",\r\n      TreatedBy: \"Prathi\",\r\n      Treatment: \"Buddy Splint\",\r\n      Remark: \"-\",\r\n      Status: \"Inactive\",\r\n    },\r\n    {\r\n      No: \"2\",\r\n      Condition: \"Fever\",\r\n      OnsetDate: \"02-04-2024\",\r\n      RecoveredDate: \"02-04-2024\",\r\n      TreatedBy: \"Prathi\",\r\n      Treatment: \"Buddy Splint\",\r\n      Remark: \"-\",\r\n      Status: \"active\",\r\n    },\r\n  ];\r\n\r\n  // History Screens\r\n  const Cheifcolumns = [\r\n    {\r\n      key: \"No\",\r\n      label: \"No.\",\r\n    },\r\n    {\r\n      key: \"Complaints\",\r\n      label: \"Complaints\",\r\n    },\r\n    {\r\n      key: \"Notes\",\r\n      label: \"Notes\",\r\n    },\r\n  ];\r\n\r\n  const Cheifitems = [\r\n    {\r\n      No: 1,\r\n      Complaints:\r\n        \"abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      Notes: \"Taking dole\",\r\n    },\r\n    {\r\n      No: 2,\r\n      Complaints:\r\n        \"abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      Notes: \"Taking dole\",\r\n    },\r\n  ];\r\n\r\n  // Medicine Data\r\n  const Medicinecolumns = [\r\n    {\r\n      key: \"No\",\r\n      label: \"No.\",\r\n    },\r\n    {\r\n      key: \"MEDICINE\",\r\n      label: \"MEDICINE\",\r\n    },\r\n    {\r\n      key: \"Type\",\r\n      label: \"Type\",\r\n    },\r\n    {\r\n      key: \"STRENGTH\",\r\n      label: \"STRENGTH\",\r\n    },\r\n    {\r\n      key: \"INTAKEDAYS\",\r\n      label: \"INTAKE DAYS\",\r\n    },\r\n    {\r\n      key: \"QUANTITY\",\r\n      label: \"QUANTITY\",\r\n    },\r\n    {\r\n      key: \"SIGINFO\",\r\n      label: \"SIG INFO\",\r\n    },\r\n    {\r\n      key: \"START\",\r\n      label: \"START\",\r\n    },\r\n    {\r\n      key: \"END\",\r\n      label: \"END\",\r\n    },\r\n    {\r\n      key: \"Reason\",\r\n      label: \"Reason\",\r\n    },\r\n    {\r\n      key: \"Status\",\r\n      label: \"Status\",\r\n    },\r\n  ];\r\n\r\n  const Medicineitems = [\r\n    {\r\n      No: 1,\r\n      MEDICINE: \"Dolox\",\r\n      Type: \"Brand\",\r\n      STRENGTH: \"Milligram(mg)\",\r\n      INTAKEDAYS: \"6\",\r\n      QUANTITY: \"6\",\r\n      SIGINFO: \"before breakfast\",\r\n      START: \"22-01-2024\",\r\n      END: \"22-01-2024\",\r\n      Reason: \"-\",\r\n      Status: \"Active\",\r\n    },\r\n    {\r\n      No: 2,\r\n      MEDICINE: \"Dolox\",\r\n      Type: \"Brand\",\r\n      STRENGTH: \"Milligram(mg)\",\r\n      INTAKEDAYS: \"6\",\r\n      QUANTITY: \"6\",\r\n      SIGINFO: \"before breakfast\",\r\n      START: \"22-01-2024\",\r\n      END: \"22-01-2024\",\r\n      Reason: \"-\",\r\n      Status: \"Active\",\r\n    },\r\n  ];\r\n\r\n  // HPI Data\r\n  const HPIcolumns = [\r\n    {\r\n      key: \"No\",\r\n      label: \"No.\",\r\n    },\r\n    {\r\n      key: \"Onset\",\r\n      label: \"Onset\",\r\n    },\r\n    {\r\n      key: \"Location\",\r\n      label: \"Location\",\r\n    },\r\n    {\r\n      key: \"Duration\",\r\n      label: \"Duration in Days\",\r\n    },\r\n    {\r\n      key: \"Characteristics\",\r\n      label: \"Characteristics (SL)\",\r\n    },\r\n    {\r\n      key: \"aggravating\",\r\n      label: \"aggravating factors\",\r\n    },\r\n    {\r\n      key: \"Relieving\",\r\n      label: \"Relieving factors\",\r\n    },\r\n    {\r\n      key: \"Temporal\",\r\n      label: \"Temporal factors\",\r\n    },\r\n    {\r\n      key: \"Severity\",\r\n      label: \"Severity\",\r\n    },\r\n    {\r\n      key: \"Notes\",\r\n      label: \"Notes\",\r\n    },\r\n  ];\r\n\r\n  const HPIitems = [\r\n    {\r\n      No: 1,\r\n      Onset: \"02-04-2024\",\r\n      Location: \"Knee\",\r\n      Duration: \"20\",\r\n      Characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      Relieving: \"Fracture\",\r\n      Temporal: \"Fracture\",\r\n      Severity: \"Normal\",\r\n      Notes: \"-\",\r\n    },\r\n    {\r\n      No: 2,\r\n      Onset: \"02-04-2024\",\r\n      Location: \"Knee\",\r\n      Duration: \"20\",\r\n      Characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      Relieving: \"Fracture\",\r\n      Temporal: \"Fracture\",\r\n      Severity: \"Normal\",\r\n      Notes: \"-\",\r\n    },\r\n  ];\r\n\r\n  // HPI Data\r\n  const Surgicalcolumns = [\r\n    {\r\n      key: \"No\",\r\n      label: \"No.\",\r\n    },\r\n    {\r\n      key: \"DATE\",\r\n      label: \"DATE\",\r\n    },\r\n    {\r\n      key: \"Procedure\",\r\n      label: \"Procedure\",\r\n    },\r\n    {\r\n      key: \"Notes\",\r\n      label: \"Notes\",\r\n    },\r\n  ];\r\n\r\n  const Surgicalitems = [\r\n    {\r\n      No: 1,\r\n      DATE: \"02-04-2024\",\r\n      Procedure: \"Demo\",\r\n      Notes: \"Art\",\r\n    },\r\n    {\r\n      No: 2,\r\n      DATE: \"02-04-2024\",\r\n      Procedure: \"Demo\",\r\n      Notes: \"Art\",\r\n    },\r\n  ];\r\n\r\n  const ExaminationaData = [\r\n    {\r\n      type: \"Nutritional\",\r\n      datas: [\r\n        {\r\n          valueOne: \"Lorem Ipsum\",\r\n        },\r\n        {\r\n          valueOne: \"Lorem Ipsum\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      type: \"Constitutional\",\r\n      datas: [\r\n        {\r\n          valueOne: \"Lorem Ipsum\",\r\n        },\r\n        {\r\n          valueOne: \"Lorem Ipsum\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      type: \"HEENT\",\r\n      datas: [\r\n        {\r\n          valueOne: \"Lorem Ipsum\",\r\n        },\r\n        {\r\n          valueOne: \"Lorem Ipsum\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // HPI Data\r\n  const Prescolumns = [\r\n    {\r\n      key: \"RX\",\r\n      label: \"RX\",\r\n    },\r\n    {\r\n      key: \"Frequency\",\r\n      label: \"Frequency\",\r\n    },\r\n    {\r\n      key: \"Duration\",\r\n      label: \"Duration\",\r\n    },\r\n    // {\r\n    //     key: 'M | A | E | N',\r\n    //     label: 'M | A | E | N',\r\n    // },\r\n    {\r\n      key: \"Qty\",\r\n      label: \"Qty / Taken\",\r\n    },\r\n  ];\r\n\r\n  const Presitems = [\r\n    {\r\n      RX: \"Dolox Capsule / Tablet\",\r\n      Frequency: \"1/2 | 0 | 0 | 0\",\r\n      Duration: \"1 Day(s)\",\r\n      Qty: \"1 Tablet\",\r\n      food: \"Before food\",\r\n    },\r\n    {\r\n      RX: \"Dolox Capsule / Tablet\",\r\n      Frequency: \"1/2 | 0 | 0 | 0\",\r\n      Duration: \"1 Day(s)\",\r\n      Qty: \"1 Tablet\",\r\n    },\r\n  ];\r\n\r\n  // HPI Data\r\n  const Documentcolumns = [\r\n    {\r\n      key: \"No.\",\r\n      label: \"No\",\r\n    },\r\n    {\r\n      key: \"Date\",\r\n      label: \"Date\",\r\n    },\r\n    {\r\n      key: \"LabTest\",\r\n      label: \"Lab Test\",\r\n    },\r\n    // {\r\n    //     key: 'M | A | E | N',\r\n    //     label: 'M | A | E | N',\r\n    // },\r\n    {\r\n      key: \"Notes\",\r\n      label: \"Notes\",\r\n    },\r\n    {\r\n      key: \"Link\",\r\n      label: \"Link\",\r\n    },\r\n  ];\r\n\r\n  const Documentitems = [\r\n    {\r\n      No: \"1\",\r\n      Date: \"02-04-2024\",\r\n      LabTest: \"Complete blood count\",\r\n      Notes: \"-\",\r\n      Link: \"https://kartoffel.in/\",\r\n    },\r\n    {\r\n      No: \"2\",\r\n      Date: \"02-04-2024\",\r\n      LabTest: \"Complete blood count\",\r\n      Notes: \"-\",\r\n      Link: \"https://kartoffel.in/\",\r\n    },\r\n  ];\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const locdata = location.state.PatientDetail;\r\n\r\n  const goTo = (\r\n    PatientMenu,\r\n    PatientSubMenu1,\r\n    PatientSubMenu2,\r\n    PatientSubMenu3\r\n  ) => {\r\n    // PatientMenu -> Medical Profile Tab\r\n    // PatientSubMenu1 -> Subjective Tab\r\n    // PatientSubMenu2 -> Chief Complaints Tab\r\n    navigate(\"/patients/history\", { state: { PatientDetail: locdata } });\r\n    localStorage.removeItem(\"patiendDetailTab\");\r\n    localStorage.setItem(\"PatientMenu\", JSON.stringify(PatientMenu));\r\n    localStorage.setItem(\"PatientSubMenu-1\", JSON.stringify(PatientSubMenu1));\r\n    localStorage.setItem(\"PatientSubMenu-2\", JSON.stringify(PatientSubMenu2));\r\n    localStorage.setItem(\"PatientSubMenu-3\", JSON.stringify(PatientSubMenu3));\r\n  };\r\n  return (\r\n    // <section className='patient-summary-sec'>\r\n    //     <div className='detailing-card'>\r\n    //         <PatientDetailCard />\r\n    //     </div>\r\n    //     <div className='tab-sec mt-4 mb-4'>\r\n    //         <CTabs activeItemKey={\"Vitals\"} onChange={(k) => setActiveKey(k)}>\r\n    //             <CTabList variant=\"pills\">\r\n    //                 <CTab aria-controls=\"home-tab-pane\" itemKey={\"Vitals\"}>Vitals</CTab>\r\n    //                 <CTab aria-controls=\"profile-tab-pane\" itemKey={\"Health\"}>Health</CTab>\r\n    //                 <CTab aria-controls=\"contact-tab-pane\" itemKey={\"Prescription\"}>Prescription</CTab>\r\n    //                 <CTab aria-controls=\"contact-tab-pane\" itemKey={\"Glasses\"}>Glasses</CTab>\r\n    //                 <CTab aria-controls=\"contact-tab-pane\" itemKey={\"Examination\"}>Examination</CTab>\r\n    //                 <CTab aria-controls=\"contact-tab-pane\" itemKey={\"Histories\"}>Histories</CTab>\r\n    //                 <CTab aria-controls=\"contact-tab-pane\" itemKey={\"Documents\"}>Documents</CTab>\r\n    //             </CTabList>\r\n    //             <div className=\"bread-crumbs mt-4\">\r\n    //                 <p>\r\n    //                     <Link to=\"/patients\">Patients</Link> / <Link to=\"/patients/history\"> Patient History </Link> / <Link to=\"/patients/summary\" className=\"active\"> {ActiveKey}</Link>\r\n    //                 </p>\r\n    //             </div>\r\n    //             <CTabContent>\r\n    //                 <CTabPanel className=\"p-3\" aria-labelledby=\"home-tab-pane\" itemKey={\"Vitals\"}>\r\n    //                     <TableColor columns={VitalsColumns} items={VitalsItems} head={\"BMI\"} green={\"green\"} />\r\n    //                     <TableColor columns={TemColumns} items={TemItems} head={\"Temperature\"} green={\"green\"} />\r\n    //                 </CTabPanel>\r\n    //                 <CTabPanel className=\"p-3\" aria-labelledby=\"profile-tab-pane\" itemKey={\"Health\"}>\r\n    //                     <SummaryTable columns={Cheifcolumns} items={Cheifitems} head={\"Chief Complaints\"} />\r\n    //                     <SummaryTable columns={Medicinecolumns} items={Medicineitems} head={\"Medicine\"} />\r\n    //                     <SummaryTable columns={HPIcolumns} items={HPIitems} head={\"HPI\"} />\r\n    //                     <SummaryTable columns={Surgicalcolumns} items={Surgicalitems} head={\"Surgical Procedures\"} />\r\n    //                 </CTabPanel>\r\n    //                 <CTabPanel className=\"p-3\" aria-labelledby=\"contact-tab-pane\" itemKey={\"Prescription\"}>\r\n    //                     <TableSec PrescritionData={PrescritionData} />\r\n    //                     <Prescription columns={Prescolumns} items={Presitems} head={\"Prescription\"} />\r\n    //                     <TableSec PrescritionData={PrescritionData} />\r\n    //                     <Prescription columns={Prescolumns} items={Presitems} head={\"Prescription\"} />\r\n    //                 </CTabPanel>\r\n    //                 <CTabPanel className=\"p-3\" aria-labelledby=\"disabled-tab-pane\" itemKey={\"Glasses\"}>\r\n    //                     <TableRow PrescritionData={PrescritionData} />\r\n    //                     <SummaryTable columns={GlassColumns} items={GlassItems} />\r\n    //                     <TableRow PrescritionData={PrescritionDataTwo} />\r\n    //                     <SummaryTable columns={GlassColumns} items={GlassItems} />\r\n    //                 </CTabPanel>\r\n    //                 <CTabPanel className=\"p-3\" aria-labelledby=\"disabled-tab-pane\" itemKey={\"Examination\"}>\r\n    //                     <ExamCard ExaminationaData={ExaminationaData} />\r\n    //                 </CTabPanel>\r\n    //                 <CTabPanel className=\"p-3\" aria-labelledby=\"disabled-tab-pane\" itemKey={\"Histories\"}>\r\n    //                     <SummaryTable columns={HistoryColumns} items={HistoryItems} head={\"Medical History\"} />\r\n    //                 </CTabPanel>\r\n    //                 <CTabPanel className=\"p-3\" aria-labelledby=\"disabled-tab-pane\" itemKey={\"Documents\"}>\r\n    //                     <DocumentTable columns={Documentcolumns} items={Documentitems} head={\"LAB\"} />\r\n    //                     <DocumentTable columns={Documentcolumns} items={Documentitems} head={\"IMAGING\"} />\r\n    //                 </CTabPanel>\r\n    //             </CTabContent>\r\n    //         </CTabs>\r\n    //     </div>\r\n    // </section>\r\n\r\n    <section className=\"patient-summary-sec\">\r\n      <div className=\"detailing-card\">\r\n        <PatientDetailCard />\r\n      </div>\r\n      <div className=\"tab-sec mt-4 mb-4\">\r\n        <CTabs activeItemKey={\"Subjective\"} onChange={(k) => setActiveKey(k)}>\r\n          <CTabList variant=\"pills\">\r\n            <CTab aria-controls=\"home-tab-pane\" itemKey={\"Subjective\"}>\r\n              Subjective\r\n            </CTab>\r\n            <CTab aria-controls=\"profile-tab-pane\" itemKey={\"Objective\"}>\r\n              Objective\r\n            </CTab>\r\n            <CTab aria-controls=\"contact-tab-pane\" itemKey={\"Assessment\"}>\r\n              Assessment\r\n            </CTab>\r\n            <CTab aria-controls=\"contact-tab-pane\" itemKey={\"Plan\"}>\r\n              Plan\r\n            </CTab>\r\n          </CTabList>\r\n          <div className=\"bread-crumbs mt-4\">\r\n            <p>\r\n              <Link to=\"/patients\">Patients</Link> /{\" \"}\r\n              <Link to=\"/patients/history\"> Patient History </Link> /{\" \"}\r\n              <Link to=\"/patients/summary\" className=\"active\">\r\n                {\" \"}\r\n                {ActiveKey}\r\n              </Link>\r\n            </p>\r\n          </div>\r\n          <CTabContent>\r\n            <CTabPanel\r\n              className=\"p-2\"\r\n              aria-labelledby=\"home-tab-pane\"\r\n              itemKey={\"Subjective\"}\r\n            >\r\n              <div>\r\n                <h4\r\n                  onClick={() => {\r\n                    goTo(2, 1, 1);\r\n                  }}\r\n                >\r\n                  Chief Complaints\r\n                </h4>\r\n                <ChiefComplaints from={\"Consult\"} />\r\n              </div>\r\n              <div>\r\n                <h4\r\n                  onClick={() => {\r\n                    goTo(2, 1, 2, 1);\r\n                  }}\r\n                >\r\n                  History of Present Illness (HPI) - SYMPTOMS\r\n                </h4>\r\n                <SignsSymptoms from={\"Consult\"} />\r\n              </div>\r\n              <div>\r\n                <h4\r\n                  onClick={() => {\r\n                    goTo(2, 1, 2, 2);\r\n                  }}\r\n                >\r\n                  History of Present Illness (HPI) - Medication\r\n                </h4>\r\n                <Medication from={\"Consult\"} />\r\n              </div>\r\n              <div>\r\n                <h4\r\n                  onClick={() => {\r\n                    goTo(2, 1, 3, 1);\r\n                  }}\r\n                >\r\n                  History - Medical History\r\n                </h4>\r\n                <MedicalHistory from={\"Consult\"} />\r\n              </div>\r\n              <div>\r\n                <h4\r\n                  onClick={() => {\r\n                    goTo(2, 1, 3, 3);\r\n                  }}\r\n                >\r\n                  History - Surgical History\r\n                </h4>\r\n                <SurgicalHistory from={\"Consult\"} />\r\n              </div>\r\n              <div>\r\n                <h4\r\n                  onClick={() => {\r\n                    goTo(2, 1, 3, 4);\r\n                  }}\r\n                >\r\n                  History - Family History\r\n                </h4>\r\n                <FamilyHistory from={\"Consult\"} />\r\n              </div>\r\n              <div>\r\n                <h4\r\n                  onClick={() => {\r\n                    goTo(2, 1, 3, 5);\r\n                  }}\r\n                >\r\n                  History - Social History\r\n                </h4>\r\n                <FamilyHistory from={\"Consult\"} />\r\n              </div>\r\n            </CTabPanel>\r\n          </CTabContent>\r\n        </CTabs>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PatientSummaryView;\r\n"],"names":["_jsx","className","children","_jsxs","CRow","CCol","sm","lg","TabsContext","createContext","CTabs","forwardRef","_a","ref","activeItemKey","onChange","id","useId","_b","useState","_activeItemKey","setActiveItemKey","useEffect","React","Provider","value","classNames","propTypes","PropTypes","isRequired","displayName","CTabList","layout","variant","rest","__rest","tabListRef","useRef","forkedRef","useForkedRef","__assign","concat","role","onKeyDown","event","current","key","preventDefault","target","items","Array","from","querySelectorAll","nextActiveElement","at","list","activeElement","shouldGetNext","isCycleAllowed","listLength","length","index","indexOf","Math","max","min","getNextActiveElement","focus","preventScroll","CTab","itemKey","useContext","isActive","active","onClick","onFocus","tabIndex","type","CTabContent","getTransitionDurationFromElement","element","window","getComputedStyle","transitionDuration","transitionDelay","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","split","CTabPanel","onHide","onShow","transition","visible","_c","tabPaneRef","_d","_visible","setVisible","undefined","Transition","in","nodeRef","onEnter","onExit","timeout","state","fade","show","ActiveKey","setActiveKey","location","useLocation","navigate","useNavigate","locdata","PatientDetail","goTo","PatientMenu","PatientSubMenu1","PatientSubMenu2","PatientSubMenu3","localStorage","removeItem","setItem","JSON","stringify","PatientDetailCard","k","Link","to","ChiefComplaints","SignsSymptoms","Medication","MedicalHistory","SurgicalHistory","FamilyHistory"],"sourceRoot":""}