{"version":3,"file":"static/js/566.b18dc564.chunk.js","mappings":"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","sources":["Components/Charts/CardChart.jsx","Components/Dashboard/PatientTabs/VitalsTab/VitalsTab.jsx","Components/Cards/Card.jsx","Components/Modal/Modal.jsx","Components/Tables/Table.jsx","Components/Buttons/ActiveButton/ActiveButton.jsx","Components/Charts/LineChart.jsx","Components/Charts/ColumnChartDetails.jsx","Components/Charts/ChartTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm.jsx","Components/Tables/DynamicTable.jsx","Components/DateRangePicker/DateRangePicker.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/ECG Chart/ECGChart.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/DetailPage/ObjectiveDetailPage.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/VitalSign/VitalSign.jsx","Components/DateCards/DateCards.jsx","Components/OptionItems/OptionItem.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/PhysicalExam/PhysicalExam.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Lab/Lab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Imaging/ImagingForm.jsx","Components/Tables/ImagingTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Imaging/Imaging.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Objective.jsx","Components/Tables/AssessmentTools/PsychiatricTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Psychiatric/PsychiatricForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Psychiatric/Psychiatric.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Neurological/Neurological.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Peadiatric/Peadiatric.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Ophthalmic/Ophthalmic.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/AssessmentTool.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Assesment.jsx","Components/Buttons/DropDownButton/DropDownButton.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/DetailsTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationCompleted.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Orders.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureForm.jsx","Components/Tables/ProcedurerTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/Cpt.jsx","Components/Tables/TherapiesTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/TherapiesTab/TherapiesForm.jsx","Components/DateRangePicker/DateSearch.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/TherapiesTab/TherapiesTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/Therapies.jsx","Components/Tables/PatientEducationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducationTab/PatientEducationForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducationTab/PatientEducationTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducation.jsx","Components/Tables/NextAppointmentTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointmentTab/NextAppointmentForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointmentTab/NextAppointmentTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointment.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Plan.jsx","Components/Tables/Subjective/AllergiesTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Allergies/AllergiesForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Allergies/Allergies.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/PresentIllness.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/History.jsx","Components/Tables/Subjective/WellnessProfileTable/ExerciseHabitTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/ExerciseHabit/ExcerciseHabitForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/ExerciseHabit/ExerciseHabit.jsx","Components/Tables/Subjective/WellnessProfileTable/MoodTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Mood/MoodForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Mood/Mood.jsx","Components/Tables/Subjective/WellnessProfileTable/NutritionDietTable.jsx","Components/Tables/Subjective/WellnessProfileTable/NutritionFluidTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/DietForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/FluidIntakeForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/Nutrition.jsx","Components/Tables/Subjective/WellnessProfileTable/SexualStatusTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/SexualStatus/SexualStatusForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/SexualStatus/SexualStatus.jsx","Components/Tables/Subjective/WellnessProfileTable/SleepTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Sleep/SleepForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Sleep/Sleep.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/WellnessProfile.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Ros/Ros.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Subjective.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalProfile.jsx","Components/Dashboard/PatientTabs/PairTab/PairTab.jsx","Components/Dashboard/PatientTabs/CallTab/Filter/Filter.jsx","Components/Dashboard/PatientTabs/CallTab/CallTab.jsx","Views/Dashboard/PatientDetails/PatientDetailsView.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Line, LineChart, ResponsiveContainer, Tooltip, XAxis } from \"recharts\";\r\n\r\nconst CardChart = ({ datas }) => {\r\n  function removePercent(str) {\r\n    // Remove trailing percent sign (%) using String.replace() method\r\n    // Replace '%' with an empty string ''\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n\r\n  // Transform tableData to the desired format\r\n  const formattedData = datas?.tableData?.map((item) => {\r\n    const datePart = item?.date?.split(\" \")[0]; // Extract date part only\r\n\r\n    return {\r\n      name: datePart,\r\n      data1: parseInt(\r\n        item?.[\"blood_ketone_value\"] ||\r\n          item?.[\"hemoglobinValue\"] ||\r\n          item?.[\"bmi\"] ||\r\n          item?.[\"blood_sugar_value\"] ||\r\n          item?.[\"pulse_(in_bpm)\"] ||\r\n          item?.[\"heart_rate_(bpm)\"] ||\r\n          item?.[\"respiration_rate_(bpm)\"] ||\r\n          removePercent(item?.[\"spo2\"]) ||\r\n          removePercent(item?.[\"hct_rate\"]) ||\r\n          item?.[\"fvc_(l)\"] ||\r\n          item?.[\"totalOnly\"] ||\r\n          item?.[\"chartValue\"] ||\r\n          item?.[\"temperature_value\"] ||\r\n          item?.[\"blood_uric_acid_value\"] ||\r\n          item?.[\"urea_value\"] ||\r\n          item?.[\"creatinine_value\"] ||\r\n          item?.[\"gfr_value\"]\r\n      ),\r\n    };\r\n  });\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#fff\",\r\n            border: \"1px solid #ccc\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          <h5>{payload[0].payload.name}</h5>\r\n          <p className=\"label\">{`${datas?.chartLabel1} : ${payload[0].value}`}</p>\r\n          {/* <p className=\"intro\">{getIntroOfPage(label)}</p> */}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n  return (\r\n    <>\r\n      <LineChart\r\n        width={250}\r\n        height={90}\r\n        data={formattedData}\r\n        margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\r\n      >\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"data1\"\r\n          stroke=\"#0084CF\"\r\n          strokeWidth={2}\r\n        />\r\n      </LineChart>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardChart;\r\n","import { CBadge, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./VitalsTab.css\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport CardChart from \"../../../Charts/CardChart\";\r\n\r\nconst VitalsTab = ({ category, openModal }) => {\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      icon: Assets.VitalBP,\r\n      name: \"Blood Pressure\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      category: \"Primary Vitals\",\r\n      badge: [\r\n        { label: \"120/80 mm Hg\", color: \"success\" },\r\n        // { label: \"DIA : 71\", color: \"success\" },\r\n        // { label: \"Pulse : 89\", color: \"success\" },\r\n      ],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"SYSTOLIC\" },\r\n        { id: 4, label: \"DIASTOLIC\" },\r\n        { id: 5, label: \"PULSE (IN BPM)\" },\r\n        { id: 6, label: \"DATE\" },\r\n        { id: 7, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          systolic: \"112\",\r\n          diastolic: \"25\",\r\n          \"pulse_(in_bpm)\": \"89\",\r\n          chartLabel1: \"PULSE (IN BPM)\",\r\n          date: \"02-04-2024 12:13\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Pressure\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"error\",\r\n            name: \"High Blood Pressure (Hypertension) Stage 1\",\r\n          },\r\n          systolic: \"112\",\r\n          diastolic: \"25\",\r\n          \"pulse_(in_bpm)\": \"125\",\r\n          date: \"05-04-2024 13:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Pressure\",\r\n        },\r\n      ],\r\n      chartLabel1: \"PULSE (IN BPM)\",\r\n    },\r\n    {\r\n      id: 2,\r\n      icon: Assets.VitalBs,\r\n      name: \"Blood Sugar\",\r\n      category: \"Metabolic And Biochemical Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"110 mg/DL\", color: \"success\" }],\r\n      chartLabel1: \"Blood Sugar (mg/DL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Blood Sugar\" },\r\n        { id: 4, label: \"Type\" },\r\n        { id: 5, label: \"DATE\" },\r\n        { id: 6, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          blood_sugar: \"110 mg/dL\",\r\n          blood_sugar_value: \"110\",\r\n          type: \"Random\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Sugar\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          blood_sugar: \"110 mg/dL\",\r\n          blood_sugar_value: \"110\",\r\n          type: \"Random\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Blood Sugar\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      icon: Assets.VitalBMI,\r\n      name: \"BMI\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"24.5 kg/m²\", color: \"success\" }],\r\n      chartLabel1: \"BMI (kg/m²)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"BMI\" },\r\n        { id: 4, label: \"Height\" },\r\n        { id: 5, label: \"Weight\" },\r\n        { id: 6, label: \"DATE\" },\r\n        { id: 7, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          bmi: \"24.13\",\r\n          height: \"159cm\",\r\n          weight: \"61kg\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"BMI\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"error\",\r\n            name: \"Overweight\",\r\n          },\r\n          bmi: \"27.01\",\r\n          height: \"180cm\",\r\n          weight: \"87.5kg\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"BMI\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      icon: Assets.VitalHCT,\r\n      name: \"HCT\",\r\n      category: \"Hematologic Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"23%\", color: \"error\" }],\r\n      chartLabel1: \"HCT Rate (in %)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"HCT Rate\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          hct_rate: \"42%\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"HCT\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          hct_rate: \"45%\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"HCT\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      icon: Assets.VitalHBeat,\r\n      name: \"ECG\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"1 Bpm\", color: \"success\" }],\r\n      chartLabel1: \"Heart Rate (BPM)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"INTERPRETATION\" },\r\n        { id: 3, label: \"ECG\" },\r\n        { id: 4, label: \"ECG TYPE\" },\r\n        { id: 5, label: \"DATE\" },\r\n        { id: 6, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          ecg_result: { status: \"error\", name: \"Abnormal Heart Rate\" },\r\n          ecg: {\r\n            contentType: \"image\",\r\n            link: Assets.ecgSample,\r\n          },\r\n          \"heart_rate_(bpm)\": \"120\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Heart Rate\",\r\n          interpretation: \"ECG Interpretation\",\r\n          ecg_type: \"3 Lead\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          ecg_result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          ecg: {\r\n            contentType: \"pdf\",\r\n            link: \"https://www.orimi.com/pdf-test.pdf\",\r\n          },\r\n          \"heart_rate_(bpm)\": \"70\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Heart Rate\",\r\n          interpretation: \"ECG Interpretation\",\r\n          ecg_type: \"3 Lead\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      icon: Assets.VitalHae,\r\n      name: \"Hemoglobin\",\r\n      category: \"Hematologic Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"14 g/dL\", color: \"error\" }],\r\n      chartLabel1: \"Hemoglobin (g/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Hemoglobin\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          hemoglobin: \"15 g/dL\",\r\n          hemoglobinValue: \"15\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Hemoglobin\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          hemoglobin: \"15 g/dL\",\r\n          hemoglobinValue: \"15\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Hemoglobin\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      icon: Assets.BKetone,\r\n      name: \"Blood Ketone\",\r\n      category: \"Hematologic Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"0.5 mmol/L\", color: \"error\" }],\r\n      chartLabel1: \"Blood Ketone (mmol/L)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"BLOOD KETONE\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          blood_ketone: \"0.33 mmol/L\",\r\n          blood_ketone_value: \"0.33\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Ketone\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          blood_ketone: \"0.33 mmol/L\",\r\n          blood_ketone_value: \"0.33\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Blood Ketone\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      icon: Assets.VitalLipid,\r\n      name: \"Lipid Profile\",\r\n      category: \"Metabolic And Biochemical Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [\r\n        { label: \"Total Cholesterol: 180 mg/dL \", color: \"success\" },\r\n        { label: \"LDL: 100 mg/dL\", color: \"error\" },\r\n        { label: \"HDL: 50 mg/dL \", color: \"error\" },\r\n        // { label: \"TG: Optimal\", color: \"error\" },\r\n        { label: \"Triglycerides: 150 mg/dL\", color: \"success\" },\r\n      ],\r\n      chartLabel1: \"Lipid Profile (mg/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Total Cholesterol\" },\r\n        { id: 4, label: \"Triglycerides\" },\r\n        { id: 5, label: \"HDL\" },\r\n        { id: 6, label: \"LDL\" },\r\n        { id: 7, label: \"LDL/HDL\" },\r\n        { id: 8, label: \"VLDL\" },\r\n        { id: 9, label: \"DATE\" },\r\n        { id: 10, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          total_cholesterol: \"180 mg/dL\",\r\n          totalOnly: \"180\",\r\n          triglycerides: \"140 mg/dL\",\r\n          hdl: \"60 mg/dL\",\r\n          ldl: \"60 mg/dL\",\r\n          \"ldl/hdl\": \"1\",\r\n          vldl: \"5 mg/dL\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Lipid Profile\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          total_cholesterol: \"180 mg/dL\",\r\n          totalOnly: \"190\",\r\n          triglycerides: \"140 mg/dL\",\r\n          hdl: \"60 mg/dL\",\r\n          ldl: \"60 mg/dL\",\r\n          \"ldl/hdl\": \"1\",\r\n          vldl: \"5 mg/dL\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Lipid Profile\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      icon: Assets.VitalRespi,\r\n      name: \"Respiration Rate\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"16 bpm\", color: \"error\" }],\r\n      chartLabel1: \"Respiration Rate (BPM)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Respiration Rate (BPM)\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"error\", name: \"High\" },\r\n          \"respiration_rate_(bpm)\": \"44\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Respiration Rate\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          \"respiration_rate_(bpm)\": \"18\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Respiration Rate\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      icon: Assets.SpO2,\r\n      name: \"SpO2\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"92%\", color: \"success\" }],\r\n      chartLabel1: \"SpO2 (%)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        // { id: 3, label: \"Pulse Rate (BPM)\" },\r\n        { id: 3, label: \"SpO2\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"error\", name: \"Abnormal\" },\r\n          \"pulse_rate_(bpm)\": \"120\",\r\n          spo2: \"99%\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"SpO2\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          spo2: \"90%\",\r\n          \"pulse_rate_(bpm)\": \"70\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"SpO2\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 11,\r\n      icon: Assets.Temp,\r\n      name: \"Temperature\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"36.6*C\", color: \"success\" }],\r\n      chartLabel1: \"Temperature (°F)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Temperature\" },\r\n        { id: 4, label: \"Type\" },\r\n        { id: 5, label: \"DATE\" },\r\n        { id: 6, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          temperature: \"96.80 ° F, 36 ° C\",\r\n          temperature_value: \"96.8\",\r\n          type: \"Oral\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Temperature\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          temperature: \"97.88 ° F, 36.6 ° C\",\r\n          temperature_value: \"97.8\",\r\n          type: \"Oral\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Temperature\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 12,\r\n      icon: Assets.LFT,\r\n      name: \"Lung Function Test (LFT)\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      category: \"Primary Vitals\",\r\n      chartLabel1: \"FVC (L)\",\r\n      badge: [\r\n        { label: \"FEV1: 1L\", color: \"error\" },\r\n        { label: \"FVC: 1L\", color: \"error\" },\r\n        { label: \"FEV1/FVC: 40\", color: \"error\" },\r\n        { label: \"PEF: 1L/min\", color: \"error\" },\r\n      ],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"FVC (L)\" },\r\n        { id: 3, label: \"FEV1 (L)\" },\r\n        { id: 4, label: \"FEV1/FVC\" },\r\n        { id: 5, label: \"PEF (L/MIN)\" },\r\n        { id: 6, label: \"SVC (L)\" },\r\n        { id: 7, label: \"DATE\" },\r\n        { id: 8, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          \"fvc_(l)\": \"5.94\",\r\n          \"fev1_(l)\": \"2.45\",\r\n          \"fev1/fvc\": \"41\",\r\n          \"pef_(l/min)\": \"2.62\",\r\n          \"svc_(l)\": \"3.51\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Lung Function Test (LFT)\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          \"fvc_(l)\": \"6.94\",\r\n          \"fev1_(l)\": \"2.45\",\r\n          \"fev1/fvc\": \"41\",\r\n          \"pef_(l/min)\": \"2.62\",\r\n          \"svc_(l)\": \"3.51\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Lung Function Test (LFT)\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 13,\r\n      icon: Assets.BUAcid,\r\n      name: \"Blood Uric Acid\",\r\n      category: \"Hematologic Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"6 mg/dL\", color: \"error\" }],\r\n      chartLabel1: \"Blood Uric Acid (mg/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"BLOOD URIC ACID\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          blood_uric_acid: \"5 mg/dL\",\r\n          blood_uric_acid_value: \"5\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Uric Acid\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          blood_uric_acid: \"5 mg/dL\",\r\n          blood_uric_acid_value: \"5\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Blood Uric Acid\",\r\n        },\r\n      ],\r\n    },\r\n    // {\r\n    //   id: 14,\r\n    //   icon: Assets.Urinalysis,\r\n    //   name: \"Urinalysis\",\r\n    //   category: \"Renal and Metabolic Markers\",\r\n    //   date: \"Recently Added 27-03-2024\",\r\n    //   badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n    //   chartLabel1: \"Urine (μmol/kg/d)\",\r\n    //   chartLabel2: \"ph\",\r\n    //   columnsData: [\r\n    //     { id: 1, label: \"NO.\" },\r\n    //     { id: 2, label: \"RESULT\" },\r\n    //     { id: 3, label: \"URINE\" },\r\n    //     { id: 4, label: \"PH\" },\r\n    //     { id: 5, label: \"SUGAR\" },\r\n    //     { id: 6, label: \"PROTEIN\" },\r\n    //     { id: 7, label: \"LEUKOCYTES\" },\r\n    //     { id: 8, label: \"RBC\" },\r\n    //     { id: 9, label: \"DATE\" },\r\n    //     { id: 10, label: \"ACTION\" },\r\n    //   ],\r\n    //   tableData: [\r\n    //     {\r\n    //       \"no.\": 1,\r\n    //       result: { status: \"success\", name: \"Normal\" },\r\n    //       urine: \"100 μmol/kg/d\",\r\n    //       chartValue: \"100\",\r\n    //       ph: \"17.5\",\r\n    //       sugar: \"0.8 mmol/L\",\r\n    //       protein: \"None\",\r\n    //       leukocytes: \"None\",\r\n    //       rbc: \"None\",\r\n    //       date: \"06-24-2024 10:15\",\r\n    //       action: [{ type: \"warning\" }],\r\n    //       name: \"Urinalysis\",\r\n    //     },\r\n    //     {\r\n    //       \"no.\": 2,\r\n    //       result: {\r\n    //         status: \"success\",\r\n    //         name: \"Normal\",\r\n    //       },\r\n    //       urine: \"110 μmol/kg/d\",\r\n    //       chartValue: \"110\",\r\n    //       ph: \"6.5\",\r\n    //       sugar: \"0.8 mmol/L\",\r\n    //       protein: \"None\",\r\n    //       leukocytes: \"None\",\r\n    //       rbc: \"None\",\r\n    //       date: \"05-24-2024 10:15\",\r\n    //       action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n    //       name: \"Urinalysis\",\r\n    //     },\r\n    //   ],\r\n    // },\r\n    {\r\n      id: 14,\r\n      icon: Assets.Urinalysis,\r\n      name: \"Urinalysis\",\r\n      category: \"Renal and Metabolic Markers\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      // badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n      badge: [\r\n        { label: \"Color: Straw \", color: \"success\" },\r\n        { label: \"Clarity: Clear\", color: \"success\" },\r\n        { label: \"Specific Gravity: 1.008 \", color: \"success\" },\r\n        { label: \"PH: Normal (6-7)\", color: \"success\" },\r\n        { label: \"Protein: Trace\", color: \"success\" },\r\n        { label: \"Glucose: Negative\", color: \"success\" },\r\n      ],\r\n      chartLabel1: \"Specific gravity\",\r\n      chartLabel2: \"ph\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"Color\" },\r\n        { id: 3, label: \"Clarity\" },\r\n        { id: 4, label: \"Specific Gravity\" },\r\n        { id: 5, label: \"PH\" },\r\n        { id: 6, label: \"Protein\" },\r\n        { id: 7, label: \"Glucose\" },\r\n        { id: 8, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          color: \"Straw\",\r\n          chartValue: \"1.008\",\r\n          specific_gravity: \"1.008\",\r\n          ph: \"Normal (6-7)\",\r\n          clarity: \"Clear\",\r\n          protein: \"Trace\",\r\n          glucose: \"Negative\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Urinalysis\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          color: \"Straw\",\r\n          chartValue: \"1.308\",\r\n          specific_gravity: \"1.308\",\r\n          ph: \"Normal (6-7)\",\r\n          clarity: \"Clear\",\r\n          protein: \"Trace\",\r\n          glucose: \"Negative\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Urinalysis\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 15,\r\n      icon: Assets.Urea,\r\n      name: \"Urea\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      category: \"Renal and Metabolic Markers\",\r\n      badge: [{ label: \"32mg/dl\", color: \"error\" }],\r\n      chartLabel1: \"Urea (mg/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"UREA\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          urea: \"20 mg/dL\",\r\n          urea_value: \"20\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Urea\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          urea: \"20 mg/dL\",\r\n          urea_value: \"20\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Urea\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 16,\r\n      icon: Assets.Creatinine,\r\n      name: \"Creatinine\",\r\n      category: \"Renal and Metabolic Markers\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"1.7 mg/dL\", color: \"error\" }],\r\n      chartLabel1: \"Creatinine (mg/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"CREATININE\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          creatinine: \"1.2 mg/dL\",\r\n          creatinine_value: \"1.2\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Creatinine\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          creatinine: \"1.2 mg/dL\",\r\n          creatinine_value: \"1.2\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Creatinine\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 17,\r\n      icon: Assets.GFR,\r\n      name: \"GFR\",\r\n      category: \"Renal and Metabolic Markers\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"55 mL/min/1.73m²\", color: \"error\" }],\r\n      chartLabel1: \"GFR (mL/min/1.73m²)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"GFR\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          gfr: \"92 mL/min/1.73m²\",\r\n          gfr_value: \"92\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"GFR\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          gfr: \"90 mL/min/1.73m²\",\r\n          gfr_value: \"90\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"GFR\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const filteredProducts = data.filter(\r\n    (product) => product.category === category\r\n  );\r\n\r\n  const renderImage = (contentUrl) => {\r\n    return (\r\n      <img\r\n        src={contentUrl}\r\n        alt=\"mage1\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  // // Function to render PDF content\r\n  const renderPdf = (contentUrl) => {\r\n    return (\r\n      <iframe\r\n        title=\"PDF Viewer\"\r\n        src={contentUrl}\r\n        style={{ width: \"100%\", height: \"140px\", border: \"none\" }}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-1\">\r\n        <CCol md={12}>\r\n          <CRow className=\"mt-3 \">\r\n            {filteredProducts?.map((item, index) => (\r\n              <CCol md={6} xl={4} key={index} className=\"mb-3\">\r\n                <CCard\r\n                  className={`vital-cards`}\r\n                  onClick={() => {\r\n                    openModal(item);\r\n                  }}\r\n                >\r\n                  <CCardBody>\r\n                    <div className=\"vital-icon-and-title\">\r\n                      <div>\r\n                        <img alt=\"bp\" src={item.icon} />\r\n                      </div>\r\n                      <div className=\"vital-card-title\">\r\n                        <span className=\"vital-card-text-bold\">\r\n                          {item.name}\r\n                        </span>\r\n                        <span className=\"vital-card-text\">{item.date}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"vital-badge\">\r\n                      <div className=\"vital-badge-list\">\r\n                        {item.badge.map((dt, i) => (\r\n                          <div key={i} style={{ height: \"24px\" }}>\r\n                            <Badge label={dt?.label} color={dt?.color} />\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"vital-line-container\">\r\n                      {/* <img alt=\"line\" src={Assets.Vitalline} /> */}\r\n                      {item?.name === \"ECG\" ? (\r\n                        <div className=\"chart-item\">\r\n                          {/* <div className=\"rectangle\">\r\n                            <img src={Assets.ecgSample} alt=\"ecg\" />\r\n                          </div> */}\r\n                          {renderImage(Assets.ecgSample)}\r\n                          {/* {renderPdf(\"https://www.orimi.com/pdf-test.pdf\")} */}\r\n                        </div>\r\n                      ) : (\r\n                        <CardChart datas={item} />\r\n                      )}\r\n                    </div>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VitalsTab;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./Cards.css\";\r\n\r\nconst Card = ({ data, getSelectedData, className }) => {\r\n  return (\r\n    <>\r\n      <CCard\r\n        className={`card ${\r\n          className ? className : \"minheight-188 max-height-100\"\r\n        }`}\r\n        onClick={() => getSelectedData(data)}\r\n      >\r\n        <CCardBody\r\n          key={data.id}\r\n          className=\"d-flex flex-column justify-content-center align-items-center\"\r\n        >\r\n          <img alt=\"images\" src={data?.image} />\r\n          <span className=\"mt-2 card-text-title text-align-center\">\r\n            {data?.name}\r\n          </span>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Modal.css\"; // Import your CSS file for styling modal (optional)\r\nimport { CModal, CModalBody } from \"@coreui/react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst Modal = ({ isOpen, onClose, children }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <CModal\r\n      visible={isOpen}\r\n      onClose={onClose}\r\n      aria-labelledby=\"LiveDemoExampleLabel\"\r\n      alignment=\"center\"\r\n      size=\"lg\"\r\n    >\r\n      <CModalBody className=\"p-0\">\r\n        <div className=\"close-modal\" onClick={onClose}>\r\n          <img\r\n            src={Assets.CloseBtn}\r\n            alt=\"close-btn\"\r\n            style={{ width: \"100%\" }}\r\n          />{\" \"}\r\n        </div>\r\n        <div>{children}</div>\r\n      </CModalBody>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst Table = ({ columns, rowData, data }) => {\r\n  const formattedColumns = data?.columnsData.map((column) => ({\r\n    ...column,\r\n    accessor: column.label.toLowerCase().replace(/\\s/g, \"_\"), // Create accessor for dynamic data access\r\n  }));\r\n\r\n  // Handle potential missing rows\r\n  const formattedData = data?.tableData.map((row) => {\r\n    return formattedColumns.reduce((acc, column) => {\r\n      const value = row[column.label.toLowerCase().replace(/\\s/g, \"_\")]; // Access data based on accessor\r\n      acc[column.accessor === \"ecg_result\" ? \"result\" : column.accessor] =\r\n        value || \"-\"; // Set default value if data is missing\r\n      return acc;\r\n    }, {});\r\n  });\r\n\r\n  console.log(data, formattedColumns, \"first formattedData\", formattedData);\r\n\r\n  return (\r\n    // <>\r\n    //   <CTable className=\"responsive-table\">\r\n    //     <CTableHead color=\"dark\">\r\n    //       <CTableRow>\r\n    //         {columns?.map((data, i) => (\r\n    //           <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n    //         ))}\r\n    //       </CTableRow>\r\n    //     </CTableHead>\r\n    //     <CTableBody>\r\n    //       {rowData?.map((dt, i) => (\r\n    //         <CTableRow key={i}>\r\n    //           <CTableHeaderCell>{dt?.id}</CTableHeaderCell>\r\n    //           <CTableDataCell>\r\n    //             <Badge label={dt?.result?.name} color={dt?.result?.status} />\r\n    //           </CTableDataCell>\r\n    //           <CTableDataCell>{dt?.systolic}</CTableDataCell>\r\n    //           <CTableDataCell>{dt?.diastolic}</CTableDataCell>\r\n    //           <CTableDataCell>{dt?.pluse}</CTableDataCell>\r\n    //           <CTableDataCell>{dt?.date}</CTableDataCell>\r\n    //           <CTableDataCell>{dt?.diastolic}</CTableDataCell>\r\n    //         </CTableRow>\r\n    //       ))}\r\n    //     </CTableBody>\r\n    //   </CTable>\r\n    // </>\r\n    <>\r\n      <div className=\"responsive-table-container\">\r\n        <table class=\"responsive-table\">\r\n          <thead>\r\n            <tr>\r\n              {formattedColumns?.map((data, i) => (\r\n                <th key={i}>{data?.label}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {formattedData?.map((dt, i) => (\r\n              <tr key={i}>\r\n                <td>{dt?.id}</td>\r\n                <td>\r\n                  <div style={{ width: \"180px\" }}>\r\n                    <Badge\r\n                      label={dt?.result?.name}\r\n                      color={dt?.result?.status}\r\n                    />\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <span className=\"fs-16 fw-500\">{dt?.systolic}</span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"fs-16 fw-500\">{dt?.diastolic}</span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"fs-16 fw-500\">{dt?.pluse}</span>\r\n                </td>\r\n                <td>\r\n                  <div style={{ width: \"100px\" }}>\r\n                    <div className=\"table-content fs-16 fw-500\">{dt?.date}</div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div className=\"d-flex gap-2\">\r\n                    {dt?.action?.map((data, i) => (\r\n                      <div className=\"d-flex\">\r\n                        {data.type === \"warning\" && (\r\n                          <img\r\n                            src={Assets.Warning}\r\n                            alt=\"warn\"\r\n                            className=\"cursor\"\r\n                          />\r\n                        )}\r\n                        {data.type === \"edit\" && (\r\n                          <img\r\n                            src={Assets.EditPencil}\r\n                            alt=\"warn\"\r\n                            className=\"cursor\"\r\n                          />\r\n                        )}\r\n                        {data.type === \"delete\" && (\r\n                          <img\r\n                            src={Assets.Delete}\r\n                            alt=\"warn\"\r\n                            className=\"cursor\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n            \r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport \"./ActiveButton.css\";\r\n\r\nconst ActiveButton = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"act-button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ActiveButton;\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nconst LineChartDetails = ({ datas }) => {\r\n  function removePercent(str) {\r\n    // Remove trailing percent sign (%) using String.replace() method\r\n    // Replace '%' with an empty string ''\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n\r\n  // Transform tableData to the desired format\r\n  const formattedData = datas?.tableData?.map((item) => ({\r\n    name: item?.date?.split(\" \")[0], // Extract date part only\r\n    data1: parseFloat(\r\n      item?.[\"blood_ketone_value\"] ||\r\n        item?.[\"hemoglobinValue\"] ||\r\n        item?.[\"bmi\"] ||\r\n        item?.[\"blood_sugar_value\"] ||\r\n        item?.[\"pulse_(in_bpm)\"] ||\r\n        item?.[\"heart_rate_(bpm)\"] ||\r\n        item?.[\"respiration_rate_(bpm)\"] ||\r\n        removePercent(item?.[\"spo2\"]) ||\r\n        removePercent(item?.[\"hct_rate\"]) ||\r\n        item?.[\"fvc_(l)\"] ||\r\n        item?.[\"totalOnly\"] ||\r\n        item?.[\"chartValue\"] ||\r\n        item?.[\"temperature_value\"] ||\r\n        item?.[\"blood_uric_acid_value\"] ||\r\n        item?.[\"urea_value\"] ||\r\n        item?.[\"creatinine_value\"] ||\r\n        item?.[\"gfr_value\"]\r\n    ), // Convert pluse to integer if needed\r\n    data2: parseInt(item?.[\"ph\"] ? item?.[\"ph\"] : \"\"),\r\n  }));\r\n\r\n  const data = [\r\n    {\r\n      name: \"21-03-2024\",\r\n      amt: 70,\r\n    },\r\n    {\r\n      name: \"22-03-2024\",\r\n      amt: 70,\r\n    },\r\n    {\r\n      name: \"23-03-2024\",\r\n      amt: 100,\r\n    },\r\n    {\r\n      name: \"24-03-2024\",\r\n      amt: 95,\r\n    },\r\n    {\r\n      name: \"25-03-2024\",\r\n      amt: 70,\r\n    },\r\n    {\r\n      name: \"26-03-2024\",\r\n      amt: 77,\r\n    },\r\n    {\r\n      name: \"27-03-2024\",\r\n      amt: 100,\r\n    },\r\n  ];\r\n\r\n  const minValue = Math?.min(...formattedData?.map((item) => item.data1));\r\n  const maxValue = Math?.max(\r\n    ...formattedData?.map((item) =>\r\n      !isNaN(item?.data1) ? item?.data1 : -Infinity\r\n    )\r\n  );\r\n  // Custom tooltip formatter function\r\n  const tooltipFormatter = (value, name, props) => {\r\n    if (name === \"data1\") {\r\n      return [value, datas?.chartLabel1];\r\n    }\r\n    if (name === \"data2\") {\r\n      return [value, datas?.chartLabel2];\r\n    }\r\n    return [name, value];\r\n  };\r\n\r\n  return (\r\n    <LineChart\r\n      width={750}\r\n      height={300}\r\n      data={formattedData}\r\n      margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\r\n    >\r\n      <XAxis\r\n        dataKey=\"name\"\r\n        padding={{ left: 30, right: 30, bottom: 20 }}\r\n        axisLine={false}\r\n        tickLine={false}\r\n      />\r\n      <YAxis\r\n        yMax={Math.min(...formattedData?.map((item) => item?.data1))}\r\n        domain={[minValue, maxValue + 10]}\r\n        axisLine={false}\r\n        tickLine={false}\r\n      />\r\n      <Tooltip formatter={tooltipFormatter} />\r\n      {!formattedData[0].data2 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n          ]}\r\n        />\r\n      ) : (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#0194CF\" },\r\n          ]}\r\n        />\r\n      )}\r\n      <CartesianGrid horizontal={true} vertical={false} strokeWidth={1} />\r\n      <Line type=\"linear\" dataKey=\"data1\" stroke=\"#0084CF\" />\r\n      {formattedData[0].data2 && (\r\n        <Line type=\"linear\" dataKey=\"data2\" stroke=\"#0194CF\" />\r\n      )}\r\n    </LineChart>\r\n  );\r\n};\r\n\r\nexport default LineChartDetails;\r\n","import React from \"react\";\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\n\r\nconst ColumnChartDetails = ({ datas }) => {\r\n  function removePercent(str) {\r\n    // Remove trailing percent sign (%) using String.replace() method\r\n    // Replace '%' with an empty string ''\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n  // Transform tableData to the desired format\r\n  const formattedData = datas?.tableData?.map((item) => ({\r\n    name: item?.date?.split(\" \")[0],\r\n    data1: parseFloat(\r\n      item?.[\"blood_ketone_value\"] ||\r\n        item?.[\"hemoglobinValue\"] ||\r\n        item?.[\"bmi\"] ||\r\n        item?.[\"blood_sugar_value\"] ||\r\n        item?.[\"pulse_(in_bpm)\"] ||\r\n        item?.[\"heart_rate_(bpm)\"] ||\r\n        item?.[\"respiration_rate_(bpm)\"] ||\r\n        removePercent(item?.[\"spo2\"]) ||\r\n        removePercent(item?.[\"hct_rate\"]) ||\r\n        item?.[\"fvc_(l)\"] ||\r\n        item?.[\"totalOnly\"] ||\r\n        item?.[\"chartValue\"] ||\r\n        item?.[\"temperature_value\"] ||\r\n        item?.[\"blood_uric_acid_value\"] ||\r\n        item?.[\"urea_value\"] ||\r\n        item?.[\"creatinine_value\"] ||\r\n        item?.[\"gfr_value\"]\r\n    ),\r\n    data2: parseInt(item?.[\"ph\"] ? item?.[\"ph\"] : \"\"),\r\n  }));\r\n  const data = [\r\n    {\r\n      name: \"21-03-2024\",\r\n      bloodPressure: 70,\r\n    },\r\n    {\r\n      name: \"22-03-2024\",\r\n      bloodPressure: 70,\r\n    },\r\n    {\r\n      name: \"23-03-2024\",\r\n      bloodPressure: 100,\r\n    },\r\n    {\r\n      name: \"24-03-2024\",\r\n      bloodPressure: 95,\r\n    },\r\n    {\r\n      name: \"25-03-2024\",\r\n      bloodPressure: 70,\r\n    },\r\n    {\r\n      name: \"26-03-2024\",\r\n      bloodPressure: 77,\r\n    },\r\n    {\r\n      name: \"27-03-2024\",\r\n      bloodPressure: 100,\r\n    },\r\n  ];\r\n  const minValue = Math?.min(...formattedData?.map((item) => item.data1));\r\n  const maxValue = Math?.max(\r\n    ...formattedData?.map((item) =>\r\n      !isNaN(item?.data1) ? item?.data1 : -Infinity\r\n    )\r\n  );\r\n  const bloodPressureValues = new Set(\r\n    formattedData?.map((item) => datas?.name)\r\n  ); // Create a Set with \"Blood Pressure\"\r\n\r\n  const tooltipFormatter = (value, name, props) => {\r\n    if (name === \"data1\") {\r\n      return [value, datas?.chartLabel1];\r\n    }\r\n    if (name === \"data2\") {\r\n      return [value, datas?.chartLabel2];\r\n    }\r\n    return [name, value];\r\n  };\r\n  return (\r\n    <BarChart\r\n      width={720}\r\n      height={300}\r\n      data={formattedData}\r\n      margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\r\n    >\r\n      <XAxis dataKey=\"name\" padding={{ left: 30, right: 30 }} />\r\n      <YAxis domain={[0, maxValue + 10]} axisLine={false} tickLine={false} />\r\n      {/* {datas.name === \"SpO2\" ? (\r\n        <Tooltip formatter={(value) => `${value}%`} />\r\n      ) : ( */}\r\n      <Tooltip formatter={tooltipFormatter} />\r\n      {/* )} */}\r\n      {/* <Legend\r\n        payload={[...bloodPressureValues]?.map((value) => ({\r\n          id: value, // Set id (optional)\r\n          value: value, // Legend label\r\n          color: \"#0084CF\",\r\n        }))}\r\n      /> */}\r\n\r\n      {/* {!formattedData[0].data2 ? (\r\n        <Legend\r\n          payload={[{ value: datas?.name, type: \"square\", color: \"#0084CF\" }]}\r\n        />\r\n      ) : (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"square\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"square\", color: \"#0194CF\" },\r\n          ]}\r\n        />\r\n      )} */}\r\n            {!formattedData[0].data2 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n          ]}\r\n        />\r\n      ) : (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#0194CF\" },\r\n          ]}\r\n        />\r\n      )}\r\n      <Bar dataKey=\"data1\" fill=\"#0084CF\" />\r\n      {formattedData[0].data2 && <Bar dataKey=\"data2\" fill=\"#0094CF\" />}\r\n    </BarChart>\r\n  );\r\n};\r\n\r\nexport default ColumnChartDetails;\r\n","import React, { useState } from \"react\";\r\nimport LineChartDetails from \"./LineChart\";\r\nimport ColumnChartDetails from \"./ColumnChartDetails\";\r\n\r\nconst ChartTab = ({ data }) => {\r\n  console.log(data, \"data d\");\r\n  const tabs = [\r\n    {\r\n      id: 1,\r\n      title: \"LINE\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"COLUMN\",\r\n    },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(tabs[0]);\r\n\r\n  const switchTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"chart-tabs-container mb-3\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chart-tab-items ${\r\n              data.id === currentTab?.id ? \"chart-tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <span\r\n              className={`chart-tab-title ${\r\n                data.id === currentTab?.id ? \"chart-tab-title-active\" : \"\"\r\n              }`}\r\n            >\r\n              {data.title}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        {currentTab?.id === 1 && <LineChartDetails datas={data} />}\r\n        {currentTab?.id === 2 && <ColumnChartDetails datas={data}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartTab;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst RespirationRateForm = ({ addBack, defaultData }) => {\r\n  // const [selectedDate, setSelectedDate] = useState(new Date());\r\n  // const [selectedTime, setSelectedTime] = useState(new Date());\r\n\r\n  // const handleDateChange = (date) => {\r\n  //   setSelectedDate(date);\r\n  // };\r\n\r\n  // const handleTimeChange = (date) => {\r\n  //   setSelectedTime(date);\r\n  // };\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Respiration Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"respiration_rate_(bpm)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RespirationRateForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Spo2 = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"pulse_rate_(bpm)\"]}\r\n              />\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                SpO2 (%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.spo2)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spo2;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Temperature = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.type}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'F'}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Temperature *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.temperature_value}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst LFTForm = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FVC (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"fvc_(l)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1 (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"fev1_(l)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1/FVC Ratio *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"fev1/fvc\"]}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                PEF (L/Min) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"pef_(l/min)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                SVC (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"svc_(l)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={8}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LFTForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\n\r\nconst HeartRate = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [type, setType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const options = [\"Single Lead\", \"3 Lead\", \"12 Lead\"];\r\n  const findIndex = defaultData?.ecg_type\r\n    ? options?.indexOf(defaultData?.ecg_type)\r\n    : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      setType(data);\r\n    };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[findIndex]}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"heart_rate_(bpm)\"]}\r\n              /> */}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG *\r\n              </label>\r\n              <input type=\"file\" id=\"file\" />\r\n              <label for=\"file\">Choose file</label>\r\n\r\n              <div class=\"d-flex flex-column gap-1 justify-content-center h-100\">\r\n                {defaultData?.ecg ? (\r\n                  <span className=\"\">\r\n                    ECG{\"(\"}\r\n                    {defaultData?.ecg?.contentType}\r\n                    {\")\"}\r\n                  </span>\r\n                ) : (\r\n                  <span className=\"\">No File Chosen</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1 justify-content-center h-100\">\r\n              {defaultData?.ecg ? (\r\n                <span className=\"mt-2\">{defaultData?.ecg}</span>\r\n              ) : (\r\n                <span className=\"mt-2\">No File Chosen</span>\r\n              )}\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={8}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Interpretation *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.interpretation}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeartRate;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BSugar = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.type}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'mg/dL'}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Sugar *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.blood_sugar_value}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BSugar;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst LipidProfileForm = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Result *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultData?.result?.name}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Total) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Total Cholesterol*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.totalOnly}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Triglycerides) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Triglycerides *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.triglycerides)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (HDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hdl)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (LDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.ldl)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL/HDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"ldl/hdl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (VLDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                VLDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"vldl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LipidProfileForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst HCT = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HCT(%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hct_rate)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HCT;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Hemogloin = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Hemogloin(g/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hemoglobin)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hemogloin;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BKetone = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Ketone(mmol/L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.blood_ketone)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BKetone;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BUricAcid = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Uric Acid(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.blood_uric_acid)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BUricAcid;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst GFR = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                GFR(mL/min/1.73m²) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.gfr)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GFR;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Creatinine = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Creatinine(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.creatinine)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Creatinine;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Urea = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urea(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.urea)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urea;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Urinalysis = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [cell, setCell] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     return new Date(year, month - 1, day, hours, minutes);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultData?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultData\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setSelectedDate(defaultDate);\r\n  //   setSelectedTime(defaultDate);\r\n  // }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        {/* <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (μmol/kg/d)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.urine)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (pH)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Sugar (mg/dL)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.sugar}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.protein}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocytes*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.leukocytes}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                RBC*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.rbc}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow> */}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Color *\r\n              </label>\r\n              <select class=\"form-select\" aria-label=\"Disabled select example\">\r\n                <option>Select</option>\r\n                <option value=\"straw\">Straw</option>\r\n                <option value=\"yellow\">Yellow</option>\r\n                <option value=\"amber\">Amber</option>\r\n                <option value=\"red\">Red</option>\r\n                <option value=\"brown\">Brown</option>\r\n                <option value=\"green\">Green</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Clarity *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"clear\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"clear\">Clear</option>\r\n                <option value=\"slightly cloudy\">Slightly Cloudy</option>\r\n                <option value=\"cloudy\">Cloudy</option>\r\n                <option value=\"turbid\">Turbid</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Specific Gravity *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                pH *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Normal\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Normal (6-7)\">Normal (6-7)</option>\r\n                <option value=\"Acidic(<6)\">Acidic ({\"<\"}6)</option>\r\n                <option value=\"Alkaline(>7)\">Alkaline ({\">\"}7)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Trace\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"1+ (30 mg/dL)\">1+ (30 mg/dL)</option>\r\n                <option value=\"2+ (100 mg/dL)\">2+ (100 mg/dL)</option>\r\n                <option value=\"3+ (300 mg/dL)\">3+ (300 mg/dL)</option>\r\n                <option value=\"4+ (>2000 mg/dL)\">4+ ({\">\"}2000 mg/dL)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Glucose *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"1+ (100 mg/dL)\">1+ (100 mg/dL)</option>\r\n                <option value=\"2+ (250 mg/dL)\">2+ (250 mg/dL)</option>\r\n                <option value=\"3+ (500 mg/dL)\">3+ (500 mg/dL)</option>\r\n                <option value=\"4+ (1000 mg/dL)\">4+ (1000 mg/dL)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Ketones *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+)\">Small (1+)</option>\r\n                <option value=\"Moderate (2+)\">Moderate (2+)</option>\r\n                <option value=\"Large (3+)\">Large (3+)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood in Urine *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+)\">Small (1+)</option>\r\n                <option value=\"Moderate (2+)\">Moderate (2+)</option>\r\n                <option value=\"Large (3+)\">Large (3+)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocyte Esterase *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+)\">Small (1+)</option>\r\n                <option value=\"Moderate (2+)\">Moderate (2+)</option>\r\n                <option value=\"Large (3+)\">Large (3+)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Nitrites *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Positive\">Positive</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urobilinogen *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Bilirubin *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Positive\">Positive</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"vertical-line mb-3\"></div>\r\n        <CRow>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cells *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Red Blood Cell\"}\r\n                onChange={(e) => setCell(e.target.value)}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Red Blood Cell\">Red Blood Cell</option>\r\n                <option value=\"White Blood Cell\">White Blood Cell</option>\r\n                <option value=\"Epithelial Cell\">Epithelial Cell</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Crystals *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Uric Acid Crystals\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Uric Acid Crystals\">Uric Acid Crystals</option>\r\n                <option value=\"Calcium Oxalate Crystals\">\r\n                  Calcium Oxalate Crystals\r\n                </option>\r\n                <option value=\"Struvite Crystals\">Struvite Crystals</option>\r\n                <option value=\"Cystine Crystals \">Cystine Crystals </option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Microorganisms *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Bacteria\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Bacteria\">Bacteria</option>\r\n                <option value=\"Yeast\">Yeast</option>\r\n                <option value=\"Parasites\">Parasites</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          {cell === \"Epithelial Cell\" && (\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Epithelial Cells *\r\n                </label>\r\n                <select\r\n                  class=\"form-select\"\r\n                  aria-label=\"Disabled select example\"\r\n                  // defaultValue={\"Squamous Epithelial Cells\"}\r\n                >\r\n                  <option>Select</option>\r\n\r\n                  <option value=\"Squamous Epithelial Cells\">\r\n                    Squamous Epithelial Cells\r\n                  </option>\r\n                  <option value=\"Transitional Epithelial Cells\">\r\n                    Transitional Epithelial Cells\r\n                  </option>\r\n                  <option value=\"Renal Tubular Epithelial Cells\">\r\n                    Renal Tubular Epithelial Cells\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </CCol>\r\n          )}\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urinalysis;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BMI = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Height)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={\"cm\"}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Height *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.height)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Weight)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={\"kg\"}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Weight *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.weight)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                BMI *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.bmi}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BMI;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\n\r\nconst BPForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [systolic, setSystolic] = useState(\r\n    (defaultData?.systolic || \"\").toString()\r\n  );\r\n  const [diastolic, setDiastolic] = useState(\r\n    (defaultData?.diastolic || \"\").toString()\r\n  );\r\n  const [pulse, setPulse] = useState(\r\n    (defaultData?.[\"pulse_(in_bpm)\"] || \"\").toString()\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const convertISOToTime = (isoString) => {\r\n    // Parse the ISO string into a Date object\r\n    const date = new Date(isoString);\r\n\r\n    // Ensure the Date object is valid\r\n    if (isNaN(date.getTime())) {\r\n      throw new Error(\"Invalid ISO string\");\r\n    }\r\n\r\n    // Extract hours and minutes\r\n    const hours = String(date.getUTCHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getUTCMinutes()).padStart(2, \"0\");\r\n\r\n    // Return the formatted time\r\n    return `${hours}:${minutes}`;\r\n  };\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const year = date.getFullYear();\r\n  \r\n    return `${day}-${month}-${year}`;\r\n  };\r\n  \r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n  \r\n  console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n  const defaultDateTime = defaultData?.date || '';\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(' ')[0] || '';\r\n  const defaultTime = defaultDateTime.split(' ')[1] || '00:00';\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, 'yyyy-MM-dd', new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(':').map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     return new Date(year, month - 1, day, hours, minutes);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultData?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultData\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString1 = defaultData?.time;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate1 = defaultData ? defaultDateString1 : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setSelectedDate(defaultDate);\r\n  //   // setSelectedTime(defaultDate1);\r\n  // }, [defaultData]);\r\n\r\n\r\n\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!systolic?.trim()) {\r\n      newErrors.systolic = \"Systolic is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(systolic)) {\r\n      newErrors.systolic = \"Systolic must be a number.\";\r\n      isValid = false;\r\n    }\r\n    if (!diastolic?.trim()) {\r\n      newErrors.diastolic = \"Diastolic is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(diastolic)) {\r\n      newErrors.diastolic = \"Diastolic must be a number.\";\r\n      isValid = false;\r\n    }\r\n    if (!pulse?.trim()) {\r\n      newErrors.pulse = \"Pulse is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(pulse)) {\r\n      newErrors.pulse = \"Pulse must be a number.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          systolic: systolic,\r\n          diastolic: diastolic,\r\n          pulse: pulse,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"blood-pressure\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          systolic: systolic,\r\n          diastolic: diastolic,\r\n          pulse: pulse,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"blood-pressure\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Systolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"systolic\"\r\n                value={systolic}\r\n                onChange={(e) => setSystolic(e.target.value)}\r\n              />\r\n              {errors.systolic && (\r\n                <div className=\"error-text\">{errors.systolic}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Diastolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"diastolic\"\r\n                value={diastolic}\r\n                onChange={(e) => setDiastolic(e.target.value)}\r\n              />\r\n              {errors.diastolic && (\r\n                <div className=\"error-text\">{errors.diastolic}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse (in BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"pulse\"\r\n                value={pulse}\r\n                onChange={(e) => setPulse(e.target.value)}\r\n              />\r\n              {errors.pulse && <div className=\"error-text\">{errors.pulse}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BPForm;\r\n","import React, { useState } from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { CModal, CModalBody, CModalHeader } from \"@coreui/react\";\r\nimport BlurBackground from \"../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../Buttons/SecondaryButton/SecondaryButton\";\r\nimport RespirationRateForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm\";\r\nimport Spo2 from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2\";\r\nimport Temperature from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature\";\r\nimport LFTForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm\";\r\nimport HeartRate from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate\";\r\nimport BSugar from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar\";\r\nimport LipidProfileForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm\";\r\nimport HCT from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT\";\r\nimport Hemogloin from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin\";\r\nimport BKetone from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone\";\r\nimport BUricAcid from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid\";\r\nimport GFR from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR\";\r\nimport Creatinine from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine\";\r\nimport Urea from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea\";\r\nimport Urinalysis from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis\";\r\nimport BMI from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI\";\r\nimport BPForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm\";\r\nimport useApi from \"../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\n\r\nconst DynamicTable = ({ columnsData, tableData, getTableDatas }) => {\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [selectedData, setSelectedData] = useState(\"\");\r\n  const { loading, del, clearCache } = useApi();\r\n\r\n  const deleteData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setDeleteModal(true);\r\n    }\r\n  };\r\n\r\n  const editData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setEditModal(true);\r\n    }\r\n  };\r\n\r\n  const onDelete = async () => {\r\n    try {\r\n      const url = `resource/vitals/${selectedData?.id}`; // Replace with your API endpoint\r\n      await del(url);\r\n      await getTableDatas(selectedData);\r\n      toast.success(\"Deleted successfully\");\r\n      setDeleteModal(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"responsive-table-container\">\r\n        <table class=\"responsive-table\">\r\n          <thead>\r\n            <tr>\r\n              {columnsData?.map((column) => (\r\n                <th key={column.id}>{column.label}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableData?.map((row, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {columnsData.map((column) => (\r\n                  <td key={`${rowIndex}-${column?.id}`}>\r\n                    {renderCell(row, column)}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Delete Modal */}\r\n      {deleteModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteModal}\r\n            onClose={() => setDeleteModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => onDelete()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteModal(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {/* Edit Modal */}\r\n      {editModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={editModal}\r\n            onClose={() => setEditModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalHeader>\r\n              <h4 className=\"fw-600\">Edit {selectedData?.name}</h4>\r\n            </CModalHeader>\r\n            <CModalBody className=\"p-3\">\r\n              {selectedData?.name === \"BMI\" && (\r\n                <BMI\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Pressure\" && (\r\n                <BPForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={getTableDatas}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Respiration Rate\" && (\r\n                <RespirationRateForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"SpO2\" && (\r\n                <Spo2\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Temperature\" && (\r\n                <Temperature\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Lung Function Test (LFT)\" && (\r\n                <LFTForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Heart Rate\" && (\r\n                <HeartRate\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Sugar\" && (\r\n                <BSugar\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Lipid Profile\" && (\r\n                <LipidProfileForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"HCT\" && (\r\n                <HCT\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Hemoglobin\" && (\r\n                <Hemogloin\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Ketone\" && (\r\n                <BKetone\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Uric Acid\" && (\r\n                <BUricAcid\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"GFR\" && (\r\n                <GFR\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Creatinine\" && (\r\n                <Creatinine\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urea\" && (\r\n                <Urea\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urinalysis\" && (\r\n                <Urinalysis\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const renderImage = (contentUrl) => {\r\n    return (\r\n      <img\r\n        src={contentUrl}\r\n        alt=\"Image\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  function renderCell(row, column) {\r\n    const columnKey = getColumnKey(column?.label);\r\n    const value = row[columnKey];\r\n    // console.log(\"first\", value);\r\n\r\n    if (columnKey === \"ecg\") {\r\n      // Function to render PDF content\r\n      const renderPdf = (contentUrl) => {\r\n        window.open(contentUrl, \"_blank\");\r\n      };\r\n      return (\r\n        <div style={{ width: \"80px\" }} onClick={() => renderPdf(value.link)}>\r\n          <span className=\"hyperlink\">ECG</span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"result\") {\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          <Badge label={value?.name} color={value?.status} />\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"date\") {\r\n      // Function to format date-time string\r\n      const formatDateTime = (dateTimeString) => {\r\n        if (!dateTimeString) {\r\n          return \"Invalid date-time\"; // Handle empty or invalid input\r\n        }\r\n\r\n        // Parse the date and time string\r\n        const parsedDate = parse(\r\n          dateTimeString,\r\n          \"yyyy-MM-dd HH:mm\",\r\n          new Date()\r\n        );\r\n\r\n        // Check if the parsed date is valid\r\n        if (!isValid(parsedDate)) {\r\n          return \"Invalid date-time\"; // Handle invalid date\r\n        }\r\n\r\n        // Format the date and time into 'dd-MM-yyyy HH:mm'\r\n        return format(parsedDate, \"dd-MM-yyyy HH:mm\");\r\n      };\r\n\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          <span>{formatDateTime(value)} </span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"action\") {\r\n      return (\r\n        <div className=\"d-flex gap-2\">\r\n          {value.map((data, i) => (\r\n            <div key={i} className=\"d-flex\">\r\n              {renderActionButton(data, row)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      // Default rendering for regular data\r\n      return <span className=\"fs-16 fw-500\">{value}</span>;\r\n    }\r\n  }\r\n\r\n  function renderActionButton(data, row) {\r\n    switch (data.type) {\r\n      case \"warning\":\r\n        return <img src={Assets.Warning} alt=\"warn\" className=\"cursor\" />;\r\n      case \"edit\":\r\n        return (\r\n          <img\r\n            src={Assets.EditPencil}\r\n            alt=\"edit\"\r\n            className=\"cursor\"\r\n            onClick={() => editData(row)}\r\n          />\r\n        );\r\n      case \"delete\":\r\n        return (\r\n          <img\r\n            src={Assets.Delete}\r\n            alt=\"delete\"\r\n            className=\"cursor\"\r\n            onClick={() => deleteData(row)}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function getColumnKey(columnLabel) {\r\n    // Convert label to a key format used in your data object\r\n    // Example: \"Heart Rate (BPM)\" -> \"heart_rate_(bpm)\"\r\n    return columnLabel.toLowerCase().replace(/\\s+/g, \"_\");\r\n  }\r\n};\r\n\r\nexport default DynamicTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport ActiveButton from \"../Buttons/ActiveButton/ActiveButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst DateRangePicker = ({ onClose }) => {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2 p-3\">\r\n        <CCol md={4} className=\"d-flex flex-column gap-1\">\r\n          <span>From Date *</span>\r\n          <DatePicker\r\n            showIcon\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n            isClearable\r\n            className=\"date-range-picker\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </CCol>\r\n        <CCol md={4} className=\"d-flex flex-column gap-1\">\r\n          <span>To Date *</span>\r\n          <DatePicker\r\n            showIcon\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            isClearable\r\n            className=\"date-range-picker\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </CCol>\r\n        <CCol\r\n          md={4}\r\n          className=\"d-flex flex-column gap-1 justify-content-center\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <ActiveButton onClick={onClose}>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.CloseX} alt=\"close\" />\r\n            </div>\r\n          </ActiveButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateRangePicker;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./ECGChart.css\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\n\r\nconst ECGChart = ({ data }) => {\r\n  console.log(\"data\", data.tableData);\r\n  const dateOnly = (data) => {\r\n    // Create a new Date object with the specified date and time\r\n    const date = new Date(data);\r\n\r\n    // Get individual date and time components\r\n    const day = (\"0\" + date.getDate()).slice(-2); // Get day with leading zero if necessary\r\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // Get month with leading zero if necessary\r\n    const year = date.getFullYear();\r\n    // const hours = (\"0\" + date.getHours()).slice(-2); // Get hours with leading zero if necessary\r\n    // const minutes = (\"0\" + date.getMinutes()).slice(-2); // Get minutes with leading zero if necessary\r\n\r\n    // Format the date in DD-MM-YYYY HH:mm format\r\n    const formattedDate = `${day}-${month}-${year}`;\r\n\r\n    return formattedDate; // Output: 24-06-2024 10:15\r\n  };\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [filter, setFilter] = useState(\"Single Lead\"); // Initial filter set to 'A'\r\n\r\n  // Function to handle filtering based on category\r\n  const handleFilter = (category) => {\r\n    setFilter(category);\r\n  };\r\n\r\n  // Effect to filter items based on the current filter\r\n  useEffect(() => {\r\n    const filteredItems = data?.tableData?.filter(\r\n      (item) => item.ecg_type === filter\r\n    );\r\n    setItems(filteredItems);\r\n  }, [filter]);\r\n\r\n  // Initialize items on component mount\r\n  useEffect(() => {\r\n    handleFilter(\"Single Lead\"); // Default to 'A' category initially\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"carousel-container\">\r\n        {items.length === 0 ? (\r\n          <span className=\"fs-18 fw-600\">No Data</span>\r\n        ) : (\r\n          <div className=\"carousel\">\r\n            {items?.map((item, i) => (\r\n              <>\r\n                <div key={i} className=\"chart-item\">\r\n                  <div className=\"rectangle\">\r\n                    <img src={Assets.ecgSample} alt=\"ecg\" />\r\n                  </div>\r\n                  <div className=\"captions\">\r\n                    <span>{dateOnly(item?.date)}</span>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"ecg_btngrp\">\r\n        <button\r\n          onClick={() => handleFilter(\"Single Lead\")}\r\n          style={{\r\n            backgroundColor: filter === \"Single Lead\" ? \"#0084CF\" : \"initial\",\r\n            color: filter === \"Single Lead\" ? \"white\" : \"black\",\r\n          }}\r\n          className=\"ecg_button\"\r\n        >\r\n          Single Lead\r\n        </button>\r\n        <button\r\n          onClick={() => handleFilter(\"3 Lead\")}\r\n          style={{\r\n            backgroundColor: filter === \"3 Lead\" ? \"#0084CF\" : \"initial\",\r\n            color: filter === \"3 Lead\" ? \"white\" : \"black\",\r\n          }}\r\n          className=\"ecg_button\"\r\n        >\r\n          3 Lead\r\n        </button>\r\n        <button\r\n          onClick={() => handleFilter(\"12 Lead\")}\r\n          style={{\r\n            backgroundColor: filter === \"12 Lead\" ? \"#0084CF\" : \"initial\",\r\n            color: filter === \"12 Lead\" ? \"white\" : \"black\",\r\n          }}\r\n          className=\"ecg_button\"\r\n        >\r\n          12 Lead\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ECGChart;\r\n","import {\r\n  CBadge,\r\n  CCol,\r\n  CContainer,\r\n  CFormInput,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport Table from \"../../../../../Tables/Table\";\r\nimport Badge from \"../../../../../Badge/Badge\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport ChartTab from \"../../../../../Charts/ChartTab\";\r\nimport DynamicTable from \"../../../../../Tables/DynamicTable\";\r\n\r\nimport BPForm from \"../Forms/BPForm\";\r\nimport HeartRate from \"../Forms/HeartRate\";\r\nimport LFTForm from \"../Forms/LFTForm\";\r\nimport LipidProfileForm from \"../Forms/LipidProfileForm\";\r\nimport Temperature from \"../Forms/Temperature\";\r\nimport Spo2 from \"../Forms/Spo2\";\r\nimport RespirationRateForm from \"../Forms/RespirationRateForm\";\r\nimport BMI from \"../Forms/BMI\";\r\nimport BSugar from \"../Forms/BSugar\";\r\nimport Hemogloin from \"../Forms/Hemogloin\";\r\nimport HCT from \"../Forms/HCT\";\r\nimport BUricAcid from \"../Forms/BUricAcid\";\r\nimport BKetone from \"../Forms/BKetone\";\r\nimport Urea from \"../Forms/Urea\";\r\nimport Creatinine from \"../Forms/Creatinine\";\r\nimport GFR from \"../Forms/GFR\";\r\nimport Urinalysis from \"../Forms/Urinalysis\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DateRangePicker from \"../../../../../DateRangePicker/DateRangePicker\";\r\nimport ECGChart from \"../ECG Chart/ECGChart\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\n\r\nconst ObjectiveDetailPage = ({ data, getTableDatas }) => {\r\n\r\n  const [chartView, setChartView] = useState(false);\r\n  const [addView, setAddView] = useState(false);\r\n  const [filterView, setFilterView] = useState(false);\r\n\r\n  const chartPage = () => {\r\n    setChartView(true);\r\n  };\r\n  const tablePage = () => {\r\n    setChartView(false);\r\n  };\r\n  const addPage = () => {\r\n    setAddView(true);\r\n  };\r\n  const addBack = () => {\r\n    setAddView(false);\r\n  };\r\n\r\n  const filterPage = () => {\r\n    setFilterView(true);\r\n  };\r\n  const filterBack = () => {\r\n    setFilterView(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer className=\"p-0\">\r\n        <CContainer className=\"mt-2 mb-3\">\r\n          <CRow>\r\n            <CCol lg={7}>\r\n              <div className=\"d-flex flex-row gap-3\">\r\n                <img src={data?.icon} alt=\"icon\" />\r\n                <div className=\"d-flex flex-column gap-2\">\r\n                  <span className=\"fs-20 fw-600\">{data?.name}</span>\r\n                  <div className=\"d-flex flex-row gap-2 flex-wrap\">\r\n                    {data?.badge?.map((dt, i) => (\r\n                      <Badge label={dt?.label} color={dt?.color} />\r\n                    ))}\r\n                  </div>\r\n                  <span className=\"fs-14 fw-500\">{data?.date}</span>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={5} className=\"d-flex align-items-center mt-2\">\r\n              <CRow className=\"w-100 d-flex justify-content-around\">\r\n                <CCol xs={4} md={4} lg={4}>\r\n                  {!addView && (\r\n                    <PrimaryButton onClick={() => addPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  )}\r\n                  {addView && (\r\n                    <ActiveButton onClick={() => addBack()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.CloseX} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </ActiveButton>\r\n                  )}\r\n                </CCol>\r\n                <CCol xs={4} md={4} lg={4}>\r\n                  {filterView && (\r\n                    <ActiveButton onClick={() => filterBack()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.CloseX} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Filter</span>\r\n                      </div>\r\n                    </ActiveButton>\r\n                  )}\r\n                  {!filterView && (\r\n                    <PrimaryButton>\r\n                      <div\r\n                        className=\"d-flex align-items-center gap-2\"\r\n                        onClick={() => filterPage()}\r\n                      >\r\n                        <img src={Assets.Filter} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Filter</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  )}\r\n                </CCol>\r\n                {/* {data.id !== 14 && ( */}\r\n                <>\r\n                  {!chartView && (\r\n                    <CCol xs={4} md={4} lg={4}>\r\n                      <PrimaryButton onClick={() => chartPage()}>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.Chart} alt=\"add\" />\r\n                          <span className=\"fs-16 fw-600\">Chart</span>\r\n                        </div>\r\n                      </PrimaryButton>\r\n                    </CCol>\r\n                  )}\r\n                  {chartView && (\r\n                    <CCol xs={4} md={4} lg={4}>\r\n                      <ActiveButton onClick={() => tablePage()}>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.CloseX} alt=\"add\" />\r\n                          <span className=\"fs-16 fw-600\">Chart</span>\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </CCol>\r\n                  )}\r\n                </>\r\n                {/* )} */}\r\n              </CRow>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n        <CRow>\r\n          <CCol xl={12}>\r\n            {chartView ? (\r\n              data?.name === \"ECG\" ? (\r\n                <ECGChart data={data} />\r\n              ) : (\r\n                <ChartTab data={data} />\r\n              )\r\n            ) : (\r\n              <>\r\n                {filterView && <DateRangePicker onClose={filterBack} />}\r\n                <DynamicTable\r\n                  columnsData={data?.columnsData}\r\n                  tableData={data?.tableData}\r\n                  getTableDatas={getTableDatas}\r\n                />\r\n              </>\r\n            )}\r\n          </CCol>\r\n        </CRow>\r\n\r\n        {/* Modal for add  */}\r\n        {addView && (\r\n          <BlurBackground>\r\n            <CModal\r\n              alignment=\"center\"\r\n              visible={addView}\r\n              onClose={addBack}\r\n              aria-labelledby=\"VerticallyCenteredExample\"\r\n              size=\"lg\"\r\n            >\r\n              <CModalHeader>\r\n                <h4 className=\"fw-600\">Add {data?.name}</h4>\r\n              </CModalHeader>\r\n              <CModalBody className=\"p-4\">\r\n                {data?.name === \"Blood Pressure\" && (\r\n                  <BPForm addBack={addBack}  getTableDatas={getTableDatas}/>\r\n                )}\r\n                {data?.name === \"ECG\" && <HeartRate addBack={addBack} />}\r\n                {data?.name === \"Lung Function Test (LFT)\" && (\r\n                  <LFTForm addBack={addBack} />\r\n                )}\r\n                {data?.name === \"Lipid Profile\" && (\r\n                  <LipidProfileForm addBack={addBack} />\r\n                )}\r\n                {data?.name === \"Temperature\" && (\r\n                  <Temperature addBack={addBack} />\r\n                )}\r\n                {data?.name === \"SpO2\" && <Spo2 addBack={addBack} />}\r\n                {data?.name === \"Respiration Rate\" && (\r\n                  <RespirationRateForm addBack={addBack} />\r\n                )}\r\n                {data?.name === \"BMI\" && <BMI addBack={addBack} />}\r\n                {data?.name === \"Blood Sugar\" && <BSugar addBack={addBack} />}\r\n                {data?.name === \"Hemoglobin\" && <Hemogloin addBack={addBack} />}\r\n                {data?.name === \"HCT\" && <HCT addBack={addBack} />}\r\n                {data?.name === \"Blood Uric Acid\" && (\r\n                  <BUricAcid addBack={addBack} />\r\n                )}\r\n                {data?.name === \"Blood Ketone\" && <BKetone addBack={addBack} />}\r\n                {data?.name === \"Urea\" && <Urea addBack={addBack} />}\r\n                {data?.name === \"Creatinine\" && (\r\n                  <Creatinine addBack={addBack} />\r\n                )}\r\n                {data?.name === \"GFR\" && <GFR addBack={addBack} />}\r\n                {data?.name === \"Urinalysis\" && (\r\n                  <Urinalysis addBack={addBack} />\r\n                )}\r\n              </CModalBody>\r\n            </CModal>\r\n          </BlurBackground>\r\n        )}\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObjectiveDetailPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport VitalsTab from \"../../../VitalsTab/VitalsTab\";\r\nimport { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport Modal from \"../../../../../Modal/Modal\";\r\nimport ObjectiveDetailPage from \"../DetailPage/ObjectiveDetailPage\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\n\r\nconst VitalSign = ({ setVitalView }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Primary Vitals\" },\r\n    { id: 2, title: \"Metabolic And Biochemical Profile\" },\r\n    { id: 3, title: \"Hematologic Profile\" },\r\n    { id: 4, title: \"Renal and Metabolic Markers\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState({\r\n    id: 1,\r\n    title: \"Primary Vitals\",\r\n  });\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  function findTitleById(id) {\r\n    const titleObject = tabs?.find((title) => title.id === id);\r\n    return titleObject ? titleObject?.title : \"Primary Vitals\"; // Return the title or a message if not found\r\n  }\r\n\r\n  const currentTabtitle = findTitleById(currentTab);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [cardSelectedData, setSelectedCardData] = useState();\r\n  const [entities, setEntities] = useState([]);\r\n\r\n  const { loading, error, get } = useApi();\r\n\r\n  const transformData = (originalData) => {\r\n    if (!Array.isArray(originalData) || originalData.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    // Map through original data to create tableData\r\n    const tableData = originalData.map((item, index) => ({\r\n      \"no.\": index + 1,\r\n      result: {\r\n        status: item.details.bpFlagColor === \"success\" ? \"success\" : \"error\",\r\n        name: item.details.bpFlag || \"Unknown\",\r\n      },\r\n      systolic: item.details.systolic || \"N/A\",\r\n      diastolic: item.details.diastolic || \"N/A\",\r\n      \"pulse_(in_bpm)\": item.details.pulse || \"N/A\",\r\n      date: `${item.details.date} ${item.details.time || \"\"}`,\r\n      action:\r\n        item.freeze === 1\r\n          ? [{ type: \"warning\" }]\r\n          : [{ type: \"edit\" }, { type: \"delete\" }],\r\n      name: \"Blood Pressure\",\r\n      id: item.id,\r\n      user_id: item.user_id,\r\n    }));\r\n\r\n    // Create badge and other static information\r\n    const badge =\r\n      tableData.length > 0\r\n        ? [\r\n            {\r\n              label: `${tableData[0].systolic}/${tableData[0].diastolic} mm Hg`,\r\n              color: tableData[0].result.status,\r\n            },\r\n          ]\r\n        : [];\r\n\r\n    return {\r\n      id: 1,\r\n      icon: Assets.VitalBP,\r\n      name: \"Blood Pressure\",\r\n      date: `Recently Added ${tableData[0].date\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .reverse()\r\n        .join(\"-\")}`,\r\n      category: \"Primary Vitals\",\r\n      badge,\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"SYSTOLIC\" },\r\n        { id: 4, label: \"DIASTOLIC\" },\r\n        { id: 5, label: \"PULSE (IN BPM)\" },\r\n        { id: 6, label: \"DATE\" },\r\n        { id: 7, label: \"ACTION\" },\r\n      ],\r\n      tableData,\r\n      chartLabel1: \"PULSE (IN BPM)\",\r\n    };\r\n  };\r\n\r\n  const TableDatas = async (data) => {\r\n    try {\r\n      const response = await get(\r\n        `resource/vitals?limit=10&page=1&from=&to=&order_by=details-%3Edate&dir=2&user_id=10&slug=blood-pressure`\r\n      );\r\n      setIsModalOpen(true);\r\n      if (response.code === 200) {\r\n        const formattedData = transformData(response?.data?.vitals);\r\n        setEntities(formattedData);\r\n      } else {\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching data:\", err);\r\n    }\r\n  };\r\n\r\n  const openModal = (data) => {\r\n    setSelectedCardData(data);\r\n    TableDatas(data);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={setVitalView}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Vital Signs\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Vital Signs\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={0}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <VitalsTab category={currentTabtitle} openModal={openModal} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n        <CContainer className=\"p-0\">\r\n          <CRow>\r\n            <CCol className=\"mb-3\">\r\n              {/* <ObjectiveDetailPage data={cardSelectedData} /> */}\r\n              <ObjectiveDetailPage\r\n                data={entities}\r\n                getTableDatas={(data) => TableDatas(data)}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VitalSign;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst DateCards = ({ data, onClick }) => {\r\n  return (\r\n    <>\r\n      <CCard className=\"date-card cursor-default\">\r\n        <CCardBody>\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <div onClick={() => onClick(data, \"edit\")} className=\"cursor\">\r\n              <span className=\"fs-20 fw-600\">\r\n                {format(data?.date, \"dd/MM/yyyy\")}\r\n              </span>\r\n            </div>\r\n            <div onClick={() => onClick(data, \"delete\")}>\r\n              <img src={Assets.deleteorg} alt=\"Del\" className=\"cursor\" />\r\n            </div>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateCards;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst OptionItem = ({ label, onSelect, selected, disabled }) => {\r\n  const [isSelected, setIsSelected] = useState(selected);\r\n  useEffect(() => {\r\n    setIsSelected(selected);\r\n  }, [selected]);\r\n  const toggleSelected = () => {\r\n    setIsSelected(!isSelected);\r\n    onSelect(label, !isSelected); // Notify parent component of selection change\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`option-item ${isSelected ? \"selected\" : \"\"} ${\r\n        disabled ? \"disabled\" : \"\"\r\n      }`}\r\n      onClick={toggleSelected}\r\n    >\r\n      {label}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DateCards from \"../../../../../DateCards/DateCards\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst PhysicalExam = ({ onClose }) => {\r\n  const dateCards = [\r\n    {\r\n      id: 1,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    { id: 9, date: \"06/07/2024\" },\r\n    { id: 10, date: \"06/07/2024\" },\r\n    { id: 11, date: \"06/07/2024\" },\r\n    { id: 12, date: \"06/07/2024\" },\r\n    { id: 13, date: \"06/07/2024\" },\r\n    { id: 14, date: \"06/07/2024\" },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(true);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [skinselectedOptions, setSkinSelectedOptions] = useState([]);\r\n\r\n  const [labelName1, setLabelname1] = useState(\"\");\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const [labelName, setLabelname] = useState(selectedData?.ga?.status || \"\");\r\n  const [editView, setEditView] = useState(false);\r\n\r\n  const options = [\r\n    \"Appearance (well, ill, distressed, etc.)\",\r\n    \"Level of Consciousness (alert, drowsy, unresponsive, etc.)\",\r\n    \"Posture and Gait\",\r\n  ];\r\n\r\n  const skinoptions = [\r\n    \"Appearance (well, ill, distressed, etc.)\",\r\n    \"Level of Consciousness (alert, drowsy, unresponsive, etc.)\",\r\n    \"Posture and Gait\",\r\n  ];\r\n\r\n  const itemsPerPage = 9; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return dateCards?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const handleSelect = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    } else {\r\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const handleSelectSkin = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSkinSelectedOptions([...skinselectedOptions, option]);\r\n    } else {\r\n      setSkinSelectedOptions(\r\n        skinselectedOptions.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const [nutritionOpen, setNutritionOpen] = useState(false);\r\n  const [constiOpen, setConstiOpen] = useState(false);\r\n  const [generalOpen, setGeneralOpen] = useState(false);\r\n  const [heentOpen, setHeentOpen] = useState(false);\r\n\r\n  const nutritionTabOpen = () => {\r\n    setNutritionOpen(true);\r\n  };\r\n\r\n  const nutritionTabClose = () => {\r\n    setNutritionOpen(false);\r\n  };\r\n\r\n  const constiTabOpen = () => {\r\n    setConstiOpen(true);\r\n  };\r\n\r\n  const constiTabClose = () => {\r\n    setConstiOpen(false);\r\n  };\r\n\r\n  const generalTabOpen = () => {\r\n    setGeneralOpen(true);\r\n  };\r\n\r\n  const generalTabClose = () => {\r\n    setGeneralOpen(false);\r\n  };\r\n\r\n  const heentTabOpen = () => {\r\n    setHeentOpen(true);\r\n  };\r\n\r\n  const heentTabClose = () => {\r\n    setHeentOpen(false);\r\n  };\r\n\r\n  const toggleSelected = (label) => {\r\n    setIsSelected(!isSelected);\r\n    setLabelname(label);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editView) {\r\n      setLabelname(selectedData?.ga?.status);\r\n      setLabelname1(selectedData?.skin?.status);\r\n      setSelectedOptions(selectedData?.ga?.select);\r\n      setSkinSelectedOptions(selectedData?.skin?.select);\r\n      if (selectedData?.ga?.status === \"Abnormal\") {\r\n        setGeneralOpen(true);\r\n      }\r\n      if (selectedData?.skin?.status === \"Abnormal\") {\r\n        setHeentOpen(true);\r\n      }\r\n    } else {\r\n      setLabelname(\"\");\r\n      setLabelname1(\"\");\r\n      setGeneralOpen(false);\r\n      setHeentOpen(false);\r\n      setSelectedOptions([]);\r\n    }\r\n  }, [editView]);\r\n\r\n  const getselected = (data, method) => {\r\n    setSelectedData(data);\r\n    if (method === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (method === \"edit\") {\r\n      addFormPage();\r\n      setEditView(true);\r\n    }\r\n  };\r\n\r\n  const toggleSelected1 = (label) => {\r\n    setLabelname1(label);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Physical Exam\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Physical Exam\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center\"\r\n            >\r\n              <div>\r\n                <PrimaryButton\r\n                  onClick={() => {\r\n                    addFormPage();\r\n                    setSelectedData({});\r\n                  }}\r\n                >\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              {getCurrentPageItems()?.map((item, i) => (\r\n                <CCol lg={4} className=\"mb-3\" key={i}>\r\n                  <DateCards data={item} onClick={getselected} />\r\n                </CCol>\r\n              ))}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={dateCards?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <CRow className=\"mb-2\">\r\n              <CCol className=\"d-flex align-items-center gap-2\">\r\n                <span>Date</span>\r\n                <SingleDatePicker defaultDate={selectedData?.date} />\r\n              </CCol>\r\n              <CCol className=\"d-flex justify-content-end\">\r\n                <div style={{ width: \"120px\" }}>\r\n                  <ActiveButton\r\n                    onClick={() => {\r\n                      setAddFormView(false);\r\n                      setEditView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                  >\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets?.listview} alt=\"close\" />\r\n                      <span>List View</span>\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            {/* <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!nutritionOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={nutritionTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {nutritionOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={nutritionTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Nutritional</span>\r\n              </CCol>\r\n              {nutritionOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!constiOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={constiTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {constiOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={constiTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Constitutional</span>\r\n              </CCol>\r\n              {constiOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div> */}\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">General Appearance</span>\r\n              </CCol>\r\n              <CRow>\r\n                <CCol>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <label class=\"form-label\">Status:</label>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected(\"Normal\");\r\n                        setGeneralOpen(false);\r\n                      }}\r\n                    >\r\n                      {\"Normal\"}\r\n                    </div>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName === \"Abnormal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected(\"Abnormal\");\r\n                        setGeneralOpen(true);\r\n                      }}\r\n                    >\r\n                      {\"Abnormal\"}\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              {generalOpen && (\r\n                <>\r\n                  {labelName === \"Abnormal\" && (\r\n                    <CRow>\r\n                      {options?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelect}\r\n                            selected={selectedOptions.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={heentTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={heentTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Skin</span>\r\n              </CCol>\r\n              <CRow>\r\n                <CCol>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <label class=\"form-label\">Status:</label>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected1(\"Normal\");\r\n                        setHeentOpen(false);\r\n                      }}\r\n                    >\r\n                      {\"Normal\"}\r\n                    </div>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName1 === \"Abnormal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected1(\"Abnormal\");\r\n                        setHeentOpen(true);\r\n                      }}\r\n                    >\r\n                      {\"Abnormal\"}\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              {heentOpen && (\r\n                <>\r\n                  {/* <CRow>\r\n                    <CCol>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <label class=\"form-label\">Status:</label>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                          }`}\r\n                          onClick={() => toggleSelected1(\"Normal\")}\r\n                        >\r\n                          {\"Normal\"}\r\n                        </div>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Abnormal\"\r\n                              ? \"selected primary-bg\"\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => toggleSelected1(\"Abnormal\")}\r\n                        >\r\n                          {\"Abnormal\"}\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow> */}\r\n                  {labelName1 === \"Abnormal\" && (\r\n                    <>\r\n                      <CRow>\r\n                        {skinoptions?.map((option, index) => (\r\n                          <CCol lg={\"auto\"}>\r\n                            <OptionItem\r\n                              key={index}\r\n                              label={option}\r\n                              onSelect={handleSelectSkin}\r\n                              selected={skinselectedOptions?.includes(option)}\r\n                              disabled={editView}\r\n                            />\r\n                          </CCol>\r\n                        ))}\r\n                      </CRow>\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            disabled={editView}\r\n                            defaultValue={selectedData?.skin?.notes}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            {!editView && (\r\n              <>\r\n                <div className=\"vertical-line mt-2 mb-3\"></div>\r\n                <CRow className=\"mb-1\">\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton\r\n                      onClick={() => {\r\n                        setAddFormView(false);\r\n                        setEditView(false);\r\n                      }}\r\n                    >\r\n                      CANCEL\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </CRow>\r\n              </>\r\n            )}\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhysicalExam;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport LabTable from \"../../../../../Tables/LabTable\";\r\nimport LabForm from \"./LabForm\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst Lab = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"LAB TEST DATE\" },\r\n    { id: 3, label: \"LAB TEST NAME\" },\r\n    { id: 4, label: \"FILE\" },\r\n    { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Lab</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Lab\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <SearchBar />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <LabTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <LabForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lab;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ImagingForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Scan Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Upload Results / Image (pdf, jpg, jpeg, png)\r\n              </label>\r\n              <div class=\"input-file-container\">\r\n                <input class=\"input-file\" id=\"my-file\" type=\"file\" />\r\n                <label\r\n                  tabindex=\"0\"\r\n                  for=\"my-file\"\r\n                  className=\"input-file-trigger\"\r\n                >\r\n                  <img alt=\"upload\" src={Assets.Export} />\r\n                  <span>Choose File</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol className=\"d-flex align-items-center\">\r\n          <span className=\"fs-18 fw-400\">No Files Chosen</span>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImagingTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <Badge label={dt?.file} color={\"primary\"} />\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.notes}</CTableDataCell>\r\n              <CTableDataCell>{dt?.link}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport LabTable from \"../../../../../Tables/LabTable\";\r\nimport ImagingForm from \"./ImagingForm\";\r\nimport ImagingTable from \"../../../../../Tables/ImagingTable\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst Imaging = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"SCAN DATE\" },\r\n    { id: 3, label: \"SCAN TYPE\" },\r\n    { id: 4, label: \"FILE\" },\r\n    { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-05-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"JPG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"JPG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Imaging</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Imaging\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <SearchBar />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <ImagingTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ImagingForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Imaging;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Breadcrumb from \"../../../../Breadcrumb/Breadcrumb\";\r\nimport \"./Objective.css\";\r\nimport MedicalTab from \"../MedicalTab\";\r\nimport VitalsTab from \"../../VitalsTab/VitalsTab\";\r\nimport Modal from \"../../../../Modal/Modal\";\r\nimport ObjectiveDetailPage from \"./DetailPage/ObjectiveDetailPage\";\r\nimport VitalSign from \"./VitalSign/VitalSign\";\r\nimport PhysicalExam from \"./PhysicalExam/PhysicalExam\";\r\nimport Lab from \"./Lab/Lab\";\r\nimport Imaging from \"./Imaging/Imaging\";\r\n\r\nconst Objective = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Vital Signs\", image: Assets.VitalSig },\r\n    { id: 2, name: \"Physical Exam\", image: Assets.PhyExam },\r\n    // { id: 3, name: \"Lab\", image: Assets.Lab },\r\n    // { id: 4, name: \"Imaging\", image: Assets.Imaging },\r\n  ];\r\n\r\n  // const [selectedData, setSelectedData] = useState();\r\n  const [vitalView, setVitalView] = useState(false);\r\n  const [phyView, setPhyView] = useState(false);\r\n  const [labView, setLabView] = useState(false);\r\n  const [imagingView, setImagingView] = useState(false);\r\n\r\n  const getSelectedData = (data) => {\r\n    console.log(\"first data\", data);\r\n    // setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setVitalView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setPhyView(true);\r\n    }\r\n    if (data?.id === 3) {\r\n      setLabView(true);\r\n    }\r\n    if (data?.id === 4) {\r\n      setImagingView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        {!vitalView && !phyView && !labView && !imagingView ? (\r\n          <CRow>\r\n            {cardData.map((dt, i) => (\r\n              <CCol md={4} xl={3} className=\"mb-3\">\r\n                <Card data={dt} getSelectedData={getSelectedData} />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        ) : vitalView ? (\r\n          <VitalSign setVitalView={() => setVitalView(false)} />\r\n        ) : phyView ? (\r\n          <PhysicalExam onClose={() => setPhyView(false)} />\r\n        ) : labView ? (\r\n          <Lab onClose={() => setLabView(false)} />\r\n        ) : imagingView ? (\r\n          <Imaging onClose={() => setImagingView(false)} />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Objective;\r\n","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../Badge/Badge\";\r\n  import { Assets } from \"../../../assets/Assets\";\r\n  \r\nconst PsychiatricTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{dt?.result}</span>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <Badge\r\n                    label={dt?.result}\r\n                    color={\r\n                      dt?.result \r\n                        ? \"error\"\r\n                        : \"\"\r\n                      \r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            \r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    \r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={i === 0 ? Assets?.testSubIcon : Assets?.testUnSubIcon}\r\n                    className=\"cursor\"\r\n                  />\r\n                   {/* {i === 0 && ( */}\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.testViewIcon}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"view\")}\r\n                    />\r\n                  {/* )} */}\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PsychiatricTable","import { CCol, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\n\r\nconst PsychiatricForm = ({ back, defaultValues, questions,formTitle }) => {\r\n    const [formData, setFormData] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(formData);\r\n        // Add your submit logic here\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <h3>{formTitle}</h3>\r\n                <hr />\r\n                {questions?.map((question, index) => (\r\n                    <CRow key={index} className=\"mb-3\">\r\n                        <CCol>\r\n                            <h5>{question?.label}</h5>\r\n                            {question?.options.map((option, cIndex) => (\r\n                                <CFormCheck\r\n                                    key={cIndex}\r\n                                    type=\"radio\"\r\n                                    name={`question${index + 1}`}\r\n                                    id={`question${index + 1}_choice${cIndex + 1}`}\r\n                                    value={option}\r\n                                    label={option}\r\n                                    onChange={handleChange}\r\n                                    checked={formData[`question${index + 1}`] === option}\r\n                                />\r\n                            ))}\r\n                        </CCol>\r\n                    </CRow>\r\n                ))}\r\n            </form>\r\n            <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PsychiatricForm;\r\n","import {\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"./PsychiatricForm\";\r\n\r\nconst Psychiatric = () => {\r\n\r\n    const columnData = [\r\n        { label: \"NO\" },\r\n        { label: \"Name\" },\r\n        { label: \"Taken\" },\r\n        { label: \"result\" },\r\n        { label: \"Actions\" },\r\n    ];\r\n    const rowData = [\r\n        {\r\n            id: 1,\r\n            name: \"Physical Symptoms\",\r\n            date: \"26-07-2024 \",\r\n            result: \"12 Score Medium\",\r\n            questions: [\r\n                {\r\n                    label: \"1. Stomach pain\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"2. Back pain\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"3. Pain in your arms, legs, or joints (knees, hips, etc.)\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"4. Menstrual cramps or other problems with your periods WOMEN ONLY\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"5. Headaches\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"6. Chest pain\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"7. Dizziness\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"8. Fainting spells\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"9. Feeling your heart pound or race\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"10. Shortness of breath\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"11. Pain or problems during sexual intercourse\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"12. Constipation, loose bowels, or diarrhea\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"13. Nausea, gas, or indigestion\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"14. Feeling tired or having low energy\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"15. Trouble sleeping\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Anger\",\r\n            questions: [\r\n                {\r\n                    label: \"1. I was irritated more than people knew\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"2. I felt angry\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"3. I felt like I was ready to explode\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"4. I was grouchy\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"5. I felt annoyed\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n\r\n            ]\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Anxiety\",\r\n            questions: [\r\n                {\r\n                    label: \"1. I felt fearful\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"2. I felt anxious\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"3. I felt worried\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"4. I found it hard to focus on anything other than my anxiety\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"5. I felt nervous\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"6. I felt uneasy\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"7. I felt tense\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Depression\",\r\n            questions: [\r\n                {\r\n                    label: \"1. I felt worthless\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"2. I felt that I had nothing to look forward to\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"3. I felt helpless\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"4. I felt sad\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"5. I felt like a failure\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"6. I felt depressed\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"7. I felt unhappy\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"8. I felt hopeless\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n\r\n            ]\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Mania\",\r\n            questions: [\r\n                {\r\n                    label: \"Question 1\",\r\n                    options: [\"I do not feel happier or more cheerful than usual\", \"I occasionally feel happier or more cheerful than usual\", \"I often feel happier or more cheerful than usual\", \"I feel happier or more cheerful than usual most of the time\", \"I feel happier of more cheerful than usual all of the time\"]\r\n                },\r\n                {\r\n                    label: \"Question 2\",\r\n                    options: [\"I do not feel more self-confident than usual\", \"I occasionally feel more self-confident than usual\", \"I often feel more self-confident than usual\", \"I frequently feel more self-confident than usual\", \"I feel extremely self-confident all of the time\"]\r\n                },\r\n                {\r\n                    label: \"Question 3\",\r\n                    options: [\"I do not need less sleep than usual\", \"I occasionally need less sleep than usual\", \"I often need less sleep than usual\", \"I frequently need less sleep than usual\", \"I can go all day and all night without any sleep and still not feel tired\"]\r\n                },\r\n                {\r\n                    label: \"Question 4\",\r\n                    options: [\"I do not talk more than usual\", \"I occasionally talk more than usual\", \"I often talk more than usual\", \"I frequently talk more than usual\", \"I talk constantly and cannot be interrupted\"]\r\n                },\r\n                {\r\n                    label: \"Question 5\",\r\n                    options: [\"I have not been more active (either socially, sexually, at work, home, or school) than usual\", \"I have occasionally been more active than usual\", \"I have often been more active than usual\", \"I have frequently been more active than usual\", \"I am constantly more active or on the go all the time\"]\r\n                },\r\n            ] \r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Autism Spectrum Disorder\",\r\n            questions: [\r\n                {\r\n                    label: \"1. Rate the level or severity of the Autism Spectrum Disorder problems that are present for this individual\",\r\n                    options: [\"None\", \"Mild Requiring support (i.e., Rituals and repetitive behaviors [RRBs] cause significant interference with functioning in one or more contexts. Resists attempts by others to interrupt RRBs or to be redirected from fixated interest.)\", \"Moderate Requiring SUBSTANTIAL support (i.e., RRBs and/or preoccupations and/or fixated interests appear frequently enough to be obvious to the casual observer and interfere with functioning in a variety of contexts. Distress or frustration is apparent when RRBs are interrupted; difficult to redirect from fixated interest.)\", \"Severe Requiring VERY SUBSTANTIAL support (i.e., Preoccupations, fixed rituals and/or repetitive behaviors markedly interfere with functioning in all spheres. Marked distress when rituals or routines are interrupted; very difficult to redirect from fixated interest or returns to it quickly.)\"]\r\n                },  \r\n            ]\r\n        },\r\n        {\r\n            id: 7,\r\n            name: \"Social Communication Disorder\",\r\n            questions: [\r\n                {\r\n                    label: \"1. Rate the level or severity of the Social Communication Disorder problems that are present for this individual\",\r\n                    options: [\"None\", \"Mild Requiring support (i.e., Without supports in place, deficits in social communication cause noticeable impairments. Has difficulty initiating social interactions and demonstrates clear examples of atypical or unsuccessful responses to social overtures of others. May appear to have decreased interest in social interactions.)\", \"Moderate Requiring SUBSTANTIAL support (i.e., Marked deficits in verbal and nonverbal social communication skills; social impairments apparent even with supports in place; limited initiation of social interactions and reduced or abnormal response to social overtures from others.)\", \"Severe Requiring VERY SUBSTANTIAL support (i.e., Severe deficits in verbal and nonverbal social communication skills cause severe impairments in functioning; very limited initiation of social interactions and minimal response to social overtures from others.)\"]\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 8,\r\n            name: \"Dimensions Of Psychosis Symptom Severity\",\r\n            questions: [\r\n                {\r\n                    label: \"1. Hallucinations\",\r\n                    options: [\"Not present\", \"Equivocal (severity or duration not sufficient to be considered psychosis)\", \"Present, but mild (little pressure to act upon voices, not very bothered by voices)\", \"Present and moderate (some pressure to respond to voices, or is somewhat bothered by voices)\", \"Present and severe (severe pressure to respond to voices, or is very bothered by voices)\"]\r\n                },\r\n                {\r\n                    label: \"2. Delusions\",\r\n                    options: [\"Not present\", \"Equivocal (severity or duration not sufficient to be considered psychosis)\", \"Present, but mild (little pressure to act upon delusional beliefs, not very bothered by beliefs)\", \"Present and moderate (some pressure to act upon beliefs, or is somewhat bothered by beliefs)\", \"Present and severe (severe pressure to act upon beliefs, or is very bothered by beliefs)\"]\r\n                },\r\n                {\r\n                    label: \"3. Disorganized speech\",\r\n                    options: [\"Not present\", \"Equivocal (severity or duration not sufficient to be considered disorganization)\", \"Present, but mild (some difficulty following speech)\", \"Present and moderate (speech often difficult to follow)\", \"Present and severe (speech almost impossible to follow)\"]\r\n                },\r\n                {\r\n                    label: \"4. Abnormal psychomotor behavior\",\r\n                    options: [\"Not present\", \"Equivocal (severity or duration not sufficient to be considered abnormal psychomotor behavior)\", \"Present, but mild (occasional abnormal or bizarre motor behavior or catatonia)\", \"Present and moderate (frequent abnormal or bizarre motor behavior or catatonia)\", \"Present and severe (abnormal or bizarre motor behavior or catatonia almost constant)\"]\r\n                },\r\n                {\r\n                    label: \"5. Negative symptoms (restricted emotional expression or avolition)\",\r\n                    options: [\"Not present\", \"Equivocal decrease in facial expressivity, prosody, gestures, or self-initiated behavior\", \"Present, but mild decrease in facial expressivity, prosody, gestures, or self-initiated behavior\", \"Present and moderate decrease in facial expressivity, prosody, gestures, or self-initiated behavior\", \"Present and severe decrease in facial expressivity, prosody, gestures, or self-initiated behavior\"]\r\n                },\r\n                {\r\n                    label: \"6. Impaired cognition\",\r\n                    options: [\"Not present\", \"Equivocal (cognitive function not clearly outside the range expected for age or SES; i.e., within 0.5 SD of mean)\", \"Present, but mild (some reduction in cognitive function; below expected for age and SES, 0.5–1 SD from mean)\", \"Present and moderate (clear reduction in cognitive function; below expected for age and SES, 1–2 SD from mean)\", \"Present and severe (severe reduction in cognitive function; below expected for age and SES, > 2 SD from mean)\"]\r\n                },\r\n                {\r\n                    label: \"7. Depression\",\r\n                    options: [\"Not present\", \"Equivocal (occasionally feels sad, down, depressed, or hopeless; concerned about having failed someone or at something but not preoccupied)\", \"Present, but mild (frequent periods of feeling very sad, down, moderately depressed, or hopeless; concerned about having failed someone or at something, with some preoccupation)\", \"Present and moderate (frequent periods of deep depression or hopelessness; preoccupation with guilt, having done wrong)\", \"Present and severe (deeply depressed or hopeless daily; delusional guilt or unreasonable self-reproach grossly out of proportion to circumstances)\"]\r\n                },\r\n                {\r\n                    label: \"8. Mania\",\r\n                    options: [\"Not present\", \"Equivocal (occasional elevated, expansive, or irritable mood or some restlessness)\", \"Present, but mild (frequent periods of somewhat elevated, expansive, or irritable mood or restlessness)\", \"Present and moderate (frequent periods of extensively elevated, expansive, or irritable mood or restlessness)\", \"Present and severe (daily and extensively elevated, expansive, or irritable mood or restlessness)\"]\r\n                },\r\n\r\n            ]\r\n        },\r\n        {\r\n            id: 9,\r\n            name: \"Conduct Disorder\",\r\n            questions: [\r\n                {\r\n                    label: \"1. Rate the level or severity of the conduct problems that are present for this individual\",\r\n                    options: [\"None (No conduct problems)\", \"Mild (Few if any conduct problems in excess of those required to make the diagnosis are present, and conduct problems cause relatively minor harm to others [e.g., lying, truancy, staying out after dark without permission, or other rule breaking])\", \"Moderate (The number of conduct problems and the effect on others are intermediate between “mild” and “severe” [e.g., stealing without confronting a victim, vandalism])\", \"Severe (Many conduct problems in excess of those required to make the diagnosis are present, or conduct problems cause considerable harm to others [e.g., forced sex, physical cruelty, use of a weapon, stealing while confronting a victim, breaking and entering])\"]\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 10,\r\n            name: \"Nonsuicidal Self-Injury\",\r\n            questions: [\r\n                {\r\n                    label: \"1. Rate the level or severity of the Nonsuicidal Self-injury problems that are present for this individual\",\r\n                    options: [\"None (No NSSI acts or NSSI acts on fewer than 3 days AND no urge to self- injure again.)\", \"Subthreshold (NSSI acts on 2-4 days OR has self- injured in the past on 5 or more days and has reported urges to self-injure again.)\", \"Mild (NSSI acts on 5–7 days using a single method and not requiring surgical treatment [other than cosmetic].)\", \"Moderate (NSSI acts on 8–11 days using a single method and not requiring surgical treatment [other than cosmetic] OR NSSI acts on 5–7 days using more than one method.)\", \"Severe (At least 1 NSSI act that required surgical treatment [other than cosmetic] OR NSSI acts on 12 or more days using a single method OR NSSI acts on 8 or more days using more than one method.)\"]\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 11,\r\n            name: \"Oppositional Defiant Disorder\",\r\n            questions: [\r\n                {\r\n                    label: \"1. Rate the level or severity of the Oppositional Defiant problems that are present for this individual\",\r\n                    options: [\"None (No oppositional defiant symptoms)\", \"Mild (Symptoms are confined to only one setting [e.g., at home, at school, at work, with peers])\", \"Moderate (Some symptoms are present in at least two settings)\", \"Severe (Some symptoms are present in three or more settings)\"]\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 12,\r\n            name: \"Somatic Symptom Disorder\",\r\n            questions: [\r\n                {\r\n                    label: \"1. Does the individual have or show disproportionate and persistent concerns about the medical seriousness of his/her symptoms?\",\r\n                    options: [\"Not at all\", \"A little bit\", \"Somewhat\", \"Quite a bit\", \"Very much\"]\r\n                },\r\n                {\r\n                    label: \"2. Does the individual have or show a high level of health-related anxiety?\",\r\n                    options: [\"Not at all\", \"A little bit\", \"Somewhat\", \"Quite a bit\", \"Very much\"]\r\n                },\r\n                {\r\n                    label: \"3. Does the individual spend excessive time and energy devoted to these symptoms or health concerns?\",\r\n                    options: [\"Not at all\", \"A little bit\", \"Somewhat\", \"Quite a bit\", \"Very much\"]\r\n                },\r\n            ]\r\n        },\r\n\r\n    ];\r\n\r\n    const [addFormView, setAddFormView] = useState(false);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [selectedData, setSelectedData] = useState({});\r\n    const [formTitle, setFormTitle] = useState(\"\"); // State for form title\r\n\r\n    const itemsPerPage = 12; // Number of items to display per page\r\n\r\n    // Function to handle page change\r\n    const onPageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    // Function to get items for the current page\r\n    const getCurrentPageItems = () => {\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return rowData?.slice(startIndex, endIndex);\r\n    };\r\n\r\n    const viewFormPage = () => {\r\n        setAddFormView(true);\r\n    };\r\n\r\n    const getselectedData = (data, type) => {\r\n        console.log(type, \"first\", data);\r\n        setSelectedData(data);\r\n        setFormTitle(data?.name); // Set form title based on selected data\r\n        if (type === \"view\") {\r\n            viewFormPage();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {!addFormView && (\r\n                <>\r\n                    <div className=\"mb-2\">\r\n                        <PsychiatricTable\r\n                            rowData={getCurrentPageItems()}\r\n                            columns={columnData}\r\n                            getselectedData={getselectedData}\r\n                        />\r\n\r\n                        {/* <CRow className=\"mb-3\">\r\n                            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                                <Pagination\r\n                                    currentPage={currentPage}\r\n                                    onPageChange={onPageChange}\r\n                                    totalItems={rowData?.length}\r\n                                    itemsPerPage={itemsPerPage}\r\n                                />\r\n                            </CCol>\r\n                        </CRow> */}\r\n                    </div>\r\n                </>\r\n            )}\r\n            {addFormView && (\r\n                <CCard className=\"p-2 cursor-default mb-5\">\r\n                    <CCardBody className=\"mb-3\">\r\n                        <PsychiatricForm\r\n                            back={() => {\r\n                                setAddFormView(false);\r\n                                setSelectedData({});\r\n                            }}\r\n                            defaultValues={selectedData}\r\n                            questions={selectedData.questions || []}\r\n                            formTitle={formTitle}\r\n                        />\r\n                    </CCardBody>\r\n                </CCard>\r\n            )}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Psychiatric","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../../AssessmentTool/Psychiatric/PsychiatricForm\";\r\n\r\nconst Neurological = () => {\r\n\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"NIH Stroke Scale/Score (NIHSS)\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Level of consciousness\",\r\n          options: [\"Alert, keenly responsive\", \"Arouses to minor stimulation\", \"Requires repeated stimulation to arouse\", \"Movements to pain\", \"Postures or unresponsive\"]\r\n        },\r\n        {\r\n          label: \"2. Ask month and age\",\r\n          options: [\"Both questions right\", \"1 question right\", \"0 questions right\", \"Dysarthric/intubated/trauma/language barrier\", \"Aphasic\"]\r\n        },\r\n        {\r\n          label: \"3. Blink eyes & squeeze hands\",\r\n          options: [\"Performs both tasks\", \"Performs 1 task\", \"Performs 0 tasks\",]\r\n        },\r\n        {\r\n          label: \"4. Horizontal extraocular movements\",\r\n          options: [\"Normal\", \"Partial gaze palsy: can be overcome\", \"Partial gaze palsy: corrects with oculocephalic reflex\", \"Forced gaze palsy: cannot be overcome\"]\r\n        },\r\n        {\r\n          label: \"5. Visual fields\",\r\n          options: [\"No visual loss\", \"Partial hemianopia\", \"Complete hemianopia\", \"Patient is bilaterally blind\", \"Bilateral hemianopia\"]\r\n        },\r\n        {\r\n          label: \"6. Facial palsy\",\r\n          options: [\"Normal symmetry\", \"Minor paralysis (flat nasolabial fold, smile asymmetry)\", \"Partial paralysis (lower face)\", \"Unilateral complete paralysis (upper/lower face)\", \"Bilateral complete paralysis (upper/lower face)\"]\r\n        },\r\n        {\r\n          label: \"6. Left arm motor drift\",\r\n          options: [\"No drift for 10 seconds\", \"Drift, but doesn't hit bed\", \"Drift, hits bed\", \"Some effort against gravity\", \"No effort against gravity\", \"No movement\", \"Amputation/joint fusion\"]\r\n        },\r\n        {\r\n          label: \"7. Right arm motor drift\",\r\n          options: [\"No drift for 10 seconds\", \"Drift, but doesn't hit bed\", \"Drift, hits bed\", \"Some effort against gravity\", \"No effort against gravity\", \"No movement\", \"Amputation/joint fusion\"]\r\n        },\r\n        {\r\n          label: \"8. Left leg motor drift\",\r\n          options: [\"No drift for 10 seconds\", \"Drift, but doesn't hit bed\", \"Drift, hits bed\", \"Some effort against gravity\", \"Some effort against gravity\", \"No movement\", \"Amputation/joint fusion\"]\r\n        },\r\n        {\r\n          label: \"9. Right leg motor drift\",\r\n          options: [\"No drift for 10 seconds\", \"Drift, but doesn't hit bed\", \"Drift, hits bed\", \"Some effort against gravity\",\"No effort against gravity\",\"No movement\",\"Amputation/joint fusion\",]\r\n        },\r\n        {\r\n          label: \"10. Limb Ataxia\",\r\n          options: [\"No ataxia\", \"Ataxia in 1 Limb\", \"Ataxia in 2 Limbs\", \"Does not understand\",\"Paralyzed\",\"Amputation/joint fusion\"]\r\n        },\r\n        {\r\n          label: \"11. Sensation\",\r\n          options: [\"Normal: no sensory loss\", \"Mild-moderate loss: less sharp/more dull\", \"Mild-moderate loss: can sense being touched\", \"Complete loss: cannot sense being touched at all\",\"No response and quadriplegic\",\"Coma/unresponsive\"]\r\n        },\r\n        {\r\n          label: \"12. Language/aphasia\",\r\n          options: [\"Normal: no aphasia\", \"Mild-moderate aphasia: some obvious changes, without significant limitation\", \"Severe aphasia: fragmentary expression, inference needed, cannot identify materials+\", \"Mute/global aphasia: no usable speech/auditory comprehension\",\"Coma/unresponsive\"]\r\n        },\r\n        {\r\n          label: \"13. Dysarthria\",\r\n          options: [\"Normal\", \"Mild-moderate dysarthria: slurring but can be understood\", \"Severe dysarthria: unintelligible slurring or out of proportion to dysphasia\", \"Mute/anarthric\",\"Intubated/unable to test\"]\r\n        },\r\n        {\r\n          label: \"14. Extinction/inattention\",\r\n          options: [\"No abnormality\", \"Visual/tactile/auditory/spatial/personal inattention\", \"Extinction to bilateral simultaneous stimulation\", \"Profound hemi-inattention (ex: does not recognize own hand)\",\"Extinction to >1 modality\"]\r\n      }\r\n      ],\r\n    },\r\n\r\n  ];\r\n\r\n  const formTitle = \"NIH Stroke Scale/Score (NIHSS)\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n\r\n            {/* <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow> */}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Neurological","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../Psychiatric/PsychiatricForm\";\r\n\r\nconst Peadiatric = () => {\r\n\r\n  const columnData = [\r\n    {  label: \"NO\" },\r\n    {  label: \"Name\" },\r\n    {  label: \"Taken\" },\r\n    {  label: \"result\" },\r\n    {  label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"APGAR Score\",\r\n      date: \"26-07-2024 \",\r\n      result:\"12 Score Medium\",\r\n      questions : [\r\n        {\r\n            label: \"1. Activity (muscle tone)\",\r\n            options: [\"Absent\", \"Flex arms and legs\", \"Active\"]\r\n        },\r\n        {\r\n            label: \"2. Pulse\",\r\n            options: [\"Absent\", \"Below 100 bpm\", \"Over 100 bpm\"]\r\n        },\r\n        {\r\n            label: \"3. Grimace (reflex irritability)\",\r\n            options: [\"Floppy\", \"Minimal response to stimulation\", \"Prompt response to stimulation\"]\r\n        },\r\n        {\r\n            label: \"4. Appearance (skin color)\",\r\n            options: [\"Blue, Pale\", \"Pink body, Blue Extremities\", \"Pink\"]\r\n        },\r\n        {\r\n          label: \"5. Respiration\",\r\n          options: [\"Absent\", \"Slow and irregular\", \"Vigorous cry\"]\r\n      }\r\n    ],\r\n    },\r\n  ];\r\n\r\n  const formTitle = \"APGAR Score\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n \r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n        viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {!addFormView && (\r\n      <>\r\n        <div className=\"mb-2\">\r\n          <PsychiatricTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n          />\r\n\r\n        </div>\r\n      </>\r\n    )}\r\n    {addFormView && (\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <PsychiatricForm\r\n            back={() => {\r\n              setAddFormView(false);\r\n              setSelectedData({});\r\n            }}\r\n            defaultValues={selectedData}\r\n            questions={selectedData.questions || []} \r\n            formTitle={formTitle}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    )}\r\n\r\n   \r\n  </>\r\n  )\r\n}\r\n\r\nexport default Peadiatric","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../Psychiatric/PsychiatricForm\";\r\n\r\nconst Ophthalmic = () => {\r\n\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"Vision Symptoms\",\r\n      date: \"26-07-2024 \",\r\n      result: \"6 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. As a teacher or parent are you concerned with this student’s vision?\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"2. Tilts head, squints, closes or covers one eye when reading?\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"3. Gaze issues, eyes turn in or out, crossed eyes, eyes wander\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"4. Different size pupils or eyes\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"5. Watery eyes, eyes appear hazy or clouded\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"6. Words float, move, or jump around when reading\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"7. Complains of headaches, dizziness, or nausea when reading\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"8. Complains of itching, burning, or scratchy eyes\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"9. Complains of blurred or double vision, unusual sensitivity to light, or difficulty seeing\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"10. History of head injury with vision complaints\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"11. Loses place when reading\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"12. Skips over or leaves out small words when reading\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"13. Writes uphill or downhill; difficulty writing in a straight line\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"14. Has difficulty copying from the board\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"15. Avoids near work, such as reading or writing\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"16. Has difficulty lining up numbers when doing math\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"17. Has difficulty finishing assignments on time\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"18. Holds books too close; leans too close to a computer screen\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"19. Clumsy; bumps into things; knocks things over\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n      ],\r\n    },\r\n\r\n  ];\r\n\r\n  const formTitle = \"Vision Symptoms\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ophthalmic","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport Psychiatric from \"./Psychiatric/Psychiatric\";\r\nimport Neurological from \"./Neurological/Neurological\";\r\nimport Peadiatric from \"./Peadiatric/Peadiatric\";\r\nimport Ophthalmic from \"./Ophthalmic/Ophthalmic\";\r\n\r\n\r\nconst AssessmentTool = ({onClose}) => {\r\n\r\n \r\n    const tabs = [\r\n        { id: 1, title: \"psychiatric\" },\r\n        { id: 2, title: \"Neurological\" },\r\n        { id: 3, title: \"Peadiatric\" },\r\n        { id: 4, title: \"Ophthalmic\" },\r\n      ];\r\n      const [currentTab, setCurrentTab] = useState(1);\r\n      const getCurrentTab = (data) => {\r\n        setCurrentTab(data);\r\n      };\r\n\r\n  return (\r\n      <>\r\n    <CRow className=\"mb-0\">\r\n      <CCol md={4} className=\"mb-2\">\r\n        <div className=\"d-flex gap-2\">\r\n          <img\r\n            alt=\"BackBtn\"\r\n            src={Assets.BackBtn}\r\n            style={{ width: \"35px\" }}\r\n            onClick={onClose}\r\n            className=\"cursor\"\r\n          />\r\n          <span className=\"Obj-name d-flex align-items-center\">Assessment Tools</span>\r\n        </div>\r\n      </CCol>\r\n      <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n        <div className=\"d-flex mt-2\">\r\n          <Breadcrumb\r\n            paths={[\r\n              { label: \"Home\", to: \"/patients\" },\r\n              { label: \"Patient List\", to: \"/patients\" },\r\n              { label: \"Medical Profile\", to: \"/patients/history\" },\r\n              {\r\n                label: \"Assessment Tools\",\r\n                to: \"/patients/history\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow>\r\n      <CCol md={12}>\r\n        <MedicalTab\r\n          tabs={tabs}\r\n          getCurrentTab={getCurrentTab}\r\n          defaultTab={0}\r\n        />\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mt-3\">\r\n      {currentTab === 1 && (\r\n        <>\r\n          <Psychiatric />\r\n        </>\r\n      )}\r\n      {currentTab === 2 && (\r\n        <>\r\n          <Neurological />\r\n        </>\r\n      )}\r\n      {currentTab === 3 && (\r\n        <>\r\n          <Peadiatric />\r\n        </>\r\n      )}\r\n      {currentTab === 4 && (\r\n        <>\r\n          <Ophthalmic />\r\n        </>\r\n      )}\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default AssessmentTool","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Diagnosis from \"./Diagnosis/Diagnosis\";\r\nimport Immunization from \"./Immunization/Immunization\";\r\nimport AssessmentTool from \"./AssessmentTool/AssessmentTool\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Assesment = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Diagnosis (Including ICD)\", image: Assets.Diagnosis },\r\n    { id: 2, name: \"Immunization Status\", image: Assets.Immunizaion },\r\n    { id: 3, name: \"Assessment Tool\", image: Assets.AssesmentTool },\r\n  ];\r\n  const navigate = useNavigate();\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-2\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 0;\r\n  const GoTOConsultPage = localStorage.getItem(\"PatientConsultTab\");\r\n  const parsedConsult = GoTOConsultPage ? JSON.parse(GoTOConsultPage) : false;\r\n\r\n  const [diagnosisView, setDiagnosisView] = useState(\r\n    ParsedPatientSubMenu === 1 ? true : false\r\n  );\r\n  const [immunizationView, setImmunizationView] = useState(\r\n    ParsedPatientSubMenu === 2 ? true : false\r\n  );\r\n  const [assessmentView, setAssessmentView] = useState(\r\n    ParsedPatientSubMenu === 3 ? true : false\r\n  );\r\n\r\n  const getSelectedData = (data) => {\r\n    console.log(\"first data\", data);\r\n    // setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setDiagnosisView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setImmunizationView(true);\r\n    }\r\n    if (data?.id === 3) {\r\n      setAssessmentView(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {!diagnosisView && !immunizationView && !assessmentView ? (\r\n        <CRow>\r\n          {cardData.map((dt, i) => (\r\n            <CCol md={4} xl={3} className=\"mb-3\">\r\n              <Card data={dt} getSelectedData={getSelectedData} />\r\n            </CCol>\r\n          ))}\r\n        </CRow>\r\n      ) : diagnosisView ? (\r\n        <Diagnosis\r\n          onClose={() => {\r\n            if (parsedConsult) {\r\n              navigate(-1);\r\n              setDiagnosisView(false);\r\n              localStorage.setItem(\"PatientConsultTab\", JSON.stringify(false));\r\n            } else {\r\n              setDiagnosisView(false);\r\n            }\r\n          }}\r\n        />\r\n      ) : immunizationView ? (\r\n        <Immunization\r\n          onClose={() => {\r\n            if (parsedConsult) {\r\n              navigate(-1);\r\n              setImmunizationView(false);\r\n              localStorage.setItem(\"PatientConsultTab\", JSON.stringify(false));\r\n            } else {\r\n              setImmunizationView(false);\r\n            }\r\n          }}\r\n        />\r\n      ) : assessmentView ? (\r\n        <AssessmentTool\r\n          onClose={() => {\r\n            if (parsedConsult) {\r\n              navigate(-1);\r\n              setAssessmentView(false);\r\n              localStorage.setItem(\"PatientConsultTab\", JSON.stringify(false));\r\n            } else {\r\n              setAssessmentView(false);\r\n            }\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assesment;\r\n","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst DropdownButton = ({ buttonName2, getbtnNames }) => {\r\n  const [buttonText, setButtonText] = useState(\"SAVE\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleItemClick = (text) => {\r\n    setButtonText(text);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button className=\"dropdown-button button\">\r\n        <div className=\"d-flex align-items-center justify-content-between\" onClick={() => getbtnNames(buttonText)}>\r\n          <div className=\"w-100\" >\r\n            <span className=\"fs-16 fw-600\">{buttonText}</span>\r\n          </div>\r\n          <div onClick={toggleDropdown}>\r\n            {!isOpen ? (\r\n              <img src={Assets.cDown} alt=\"down\" />\r\n            ) : (\r\n              <img src={Assets.cUp} alt=\"up\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"dropdown-content\">\r\n          {buttonText === buttonName2 && (\r\n            <span\r\n              onClick={() => handleItemClick(\"SAVE\")}\r\n              className=\"fs-14 fw-600\"\r\n            >\r\n              SAVE\r\n            </span>\r\n          )}\r\n          {buttonText === \"SAVE\" && (\r\n            <span\r\n              onClick={() => handleItemClick(buttonName2)}\r\n              className=\"fs-14 fw-600\"\r\n            >\r\n              {buttonName2}\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownButton;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\n\r\nconst LabOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Raj Scan 1\", \"Raj Scan 2\", \"Raj Scan 3\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getbtnNames = () => {\r\n    console.log(\"getbtnNames\");\r\n  };\r\n  const eoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd_code}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={eoptions}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lab Test Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Lab *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"250px\" }}>\r\n          {/* <PrimaryButton>SEND TO LAB</PrimaryButton> */}\r\n          <DropdownButton\r\n            buttonName2={\"SEND TO LAB\"}\r\n            getbtnNames={getbtnNames}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrderForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport LabOrderForm from \"./LabOrderForm\";\r\n\r\nconst LabOrder = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"NAME\" },\r\n    { id: 4, label: \"FILE\" },\r\n    // { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"LAB & STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Accepted\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <LabOrderTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <LabOrderForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalBody className=\"p-5\">\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12}>\r\n                  <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.date}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Test Name</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.name}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">ICD Code</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">\r\n                      Lab/Scan Center\r\n                    </span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.lab_name}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                    <div\r\n                      className=\"w-100\"\r\n                      // style={{\r\n                      //   border: \"1px solid #17171D33\",\r\n                      //   borderRadius: \"5px\",\r\n                      // }}\r\n                    >\r\n                      {/* <Dropdown\r\n                        options={options}\r\n                        getSelectedValue={getSelectedValue}\r\n                      /> */}\r\n                      <CFormSelect\r\n                        aria-label=\"Default select example\"\r\n                        disabled={\r\n                          selectedData.lab_status === \"Uploaded\" ||\r\n                          selectedData.lab_status === \"Not Uploaded\" && true\r\n                        }\r\n                      >\r\n                        <option>Select</option>\r\n                        <option value=\"Morning\">Morning</option>\r\n                        <option value=\"Afternoon\">Afternoon</option>\r\n                        <option value=\"Evening\">Evening</option>\r\n                        <option value=\"Night\">Night</option>\r\n                      </CFormSelect>\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Test Type</span>\r\n                    <div>\r\n                      <CFormCheck\r\n                        inline\r\n                        type=\"radio\"\r\n                        name=\"inlineRadioOptions\"\r\n                        id=\"inlineCheckbox1\"\r\n                        value=\"Lab Test\"\r\n                        label=\"Lab Test\"\r\n                        defaultChecked\r\n                        disabled={\r\n                          selectedData.lab_status === \"Uploaded\" ||\r\n                          selectedData.lab_status === \"Not Uploaded\" && true\r\n                        }\r\n                      />\r\n                      <CFormCheck\r\n                        inline\r\n                        type=\"radio\"\r\n                        name=\"inlineRadioOptions\"\r\n                        id=\"inlineCheckbox2\"\r\n                        value=\"Home Test\"\r\n                        label=\"Home Test\"\r\n                        disabled={\r\n                          selectedData.lab_status === \"Uploaded\" ||\r\n                          selectedData.lab_status === \"Not Uploaded\" && true\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <div style={{ width: \"128px\" }}>\r\n                  <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                  <SecondaryButton onClick={() => setDetailView(false)}>\r\n                    CANCEL\r\n                  </SecondaryButton>\r\n                </div>\r\n              </CRow>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrder;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\n\r\nconst ImagingOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Raj Scan 1\", \"Raj Scan 2\", \"Raj Scan 3\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getbtnNames = () => {\r\n    console.log(\"getbtnNames\");\r\n  };\r\n  const eoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd_code}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={eoptions}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Imaging Order Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Scan Center *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"250px\" }}>\r\n          {/* <PrimaryButton>SEND TO LAB</PrimaryButton> */}\r\n          <DropdownButton\r\n            buttonName2={\"SEND TO SCAN CENTER\"}\r\n            getbtnNames={getbtnNames}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ImagingOrderForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\n\r\nconst ImagingOrder = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"NAME\" },\r\n    { id: 4, label: \"FILES\" },\r\n    // { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"SCAN CENTER & STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"01-01-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Accepted\",\r\n      scan_name: \"Raj Scan 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Prescribed\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <ImagingOrderTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ImagingOrderForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalBody className=\"p-5\">\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12}>\r\n                  <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.date}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Scan Name</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.name}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">ICD Code</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">\r\n                      Scan Center\r\n                    </span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.scan_name}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                    <div\r\n                      className=\"w-100\"\r\n                      // style={{\r\n                      //   border: \"1px solid #17171D33\",\r\n                      //   borderRadius: \"5px\",\r\n                      // }}\r\n                    >\r\n                      {/* <Dropdown\r\n                        options={options}\r\n                        getSelectedValue={getSelectedValue}\r\n                      /> */}\r\n                      <CFormSelect\r\n                        aria-label=\"Default select example\"\r\n                        disabled={\r\n                          selectedData.scan_status === \"Uploaded\" ||\r\n                          selectedData.scan_status === \"Not Uploaded\" && true\r\n                        }\r\n                      >\r\n                        <option>Select</option>\r\n                        <option value=\"Morning\">Morning</option>\r\n                        <option value=\"Afternoon\">Afternoon</option>\r\n                        <option value=\"Evening\">Evening</option>\r\n                        <option value=\"Night\">Night</option>\r\n                      </CFormSelect>\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <div style={{ width: \"128px\" }}>\r\n                  <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                  <SecondaryButton onClick={() => setDetailView(false)}>\r\n                    CANCEL\r\n                  </SecondaryButton>\r\n                </div>\r\n              </CRow>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrder;\r\n","import {\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst MedicationOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState(\r\n    defaultValues.medicines\r\n      ? defaultValues.medicines\r\n      : [\r\n          {\r\n            id: 1,\r\n            type: \"\",\r\n            name: \"\",\r\n            strength: \"\",\r\n            strengthMeasurement: \"\",\r\n            days: \"\",\r\n            totalQty: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            instruction: \"\",\r\n            reason: \"\",\r\n            status: \"\",\r\n            m: 0,\r\n            a: 0,\r\n            e: 0,\r\n            n: 0,\r\n            food: \"bf\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, value, fieldName) => {\r\n    console.log(fieldName, value);\r\n    const newValue = value?.replace(/[^0-9]/g, \"\");\r\n    const processedValue =\r\n      fieldName === \"startDate\" || fieldName === \"endDate\"\r\n        ? value\r\n          ? value.toISOString()\r\n          : \"\" // Convert date to ISO string\r\n        : fieldName === \"strength\"\r\n        ? newValue\r\n        : fieldName === \"totalQty\"\r\n        ? newValue\r\n        : fieldName === \"days\"\r\n        ? newValue\r\n        : value;\r\n\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [fieldName]: processedValue };\r\n      }\r\n      return medicine;\r\n    });\r\n\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  console.log(\"first\", medicines);\r\n  const [btnValue, setBtnValue] = useState();\r\n  const [btnView, setBtnView] = useState(false);\r\n\r\n  const getbtnNames = (data) => {\r\n    setBtnValue(data);\r\n    if (data === \"SEND TO PHARMACY\") {\r\n      setBtnView(true);\r\n    }\r\n  };\r\n  console.log(btnValue, \"SEND TO PHARMACY\");\r\n\r\n  const [strength, setStrength] = useState(defaultValues?.strength || \"\");\r\n  const [qty, setQty] = useState(defaultValues?.strength || \"\");\r\n  const [timeTaken, setTimeTaken] = useState(defaultValues?.strength || \"\");\r\n\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newValue = input.replace(/[^0-9]/g, \"\");\r\n    if (name === \"strength\") {\r\n      setStrength(newValue);\r\n    }\r\n    if (name === \"totalQty\") {\r\n      setQty(newValue);\r\n    }\r\n    if (name === \"days\") {\r\n      setTimeTaken(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">\r\n              {defaultValues?.medicines?.length >= 1 ? \"Edit \" : \"Add \"} New\r\n              Medicine\r\n            </span>\r\n          </CCol>\r\n\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3 h-100 d-flex align-items-center justify-content-between\">\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              <CCol\r\n                lg={8}\r\n                className=\"mt-4 d-flex justify-content-between\"\r\n                style={{ width: \"42%\" }}\r\n              >\r\n                <CRow className=\"mb-3\">\r\n                  <div style={{ width: \"250px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                    {/* <DropdownButton /> */}\r\n                  </div>\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                  </div>\r\n                </CRow>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ) : null}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine, index) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\" key={index}>\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"type\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"Brand\">Brand</option>\r\n                          <option value=\"Generic\">Generic</option>\r\n                        </CFormSelect>\r\n                        {/* <input\r\n                          name=\"type\"\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"name\"\r\n                          defaultValue={medicine?.name}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"strength\"\r\n                          value={medicine?.strength}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Route of administration\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strengthMeasurement\"\r\n                          defaultValue={medicine?.strengthMeasurement}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"days\"\r\n                          value={medicine?.days}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"totalQty\"\r\n                          value={medicine?.totalQty}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"startDate\"\r\n                          defaultValue={medicine?.startDate}\r\n                          onChange={(e) => handleMedicineInputChange(medicine?.id, e.target.value, e.target.name)}\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : defaultValues?.medicines?.length >= 1\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            name=\"startDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.startDate\r\n                                ? new Date(medicine?.startDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"startDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"endDate\"\r\n                          defaultValue={medicine?.endDate}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : defaultValues?.medicines?.length >= 1\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            name=\"endDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.endDate\r\n                                ? new Date(medicine?.endDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"endDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"m\"\r\n                          defaultValue={medicine?.m}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"a\"\r\n                          defaultValue={medicine?.a}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"e\"\r\n                          defaultValue={medicine?.e}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"n\"\r\n                          defaultValue={medicine?.n}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          key={index}\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"bf\"\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"bf\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"af\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"af\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"instruction\"\r\n                          defaultValue={medicine?.instruction}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"reason\"\r\n                          defaultValue={medicine?.reason}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              {defaultValues?.medicines?.length >= 1 ? (\r\n                defaultValues?.lab_status === \"Prescribed\" &&\r\n                (medicine?.id === 1 ? null : (\r\n                  <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => handleRemoveMedicine(medicine.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                ))\r\n              ) : medicine.id === 1 ? null : (\r\n                <CCol lg={1}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton\r\n                      onClick={() => handleRemoveMedicine(medicine.id)}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteDel} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              )}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          defaultValues?.lab_status === \"Prescribed\" && (\r\n            <>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton onClick={handleAddMedicine}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteAdd} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div className=\"vertical-line\"></div>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddMedicine}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? null : (\r\n          <>\r\n            <CRow>\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"250px\" }}>\r\n                {/* <PrimaryButton>SEND TO PHARMACY</PrimaryButton> */}\r\n                <DropdownButton\r\n                  buttonName2={\"SEND TO PHARMACY\"}\r\n                  getbtnNames={getbtnNames}\r\n                />\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {btnView && (\r\n          <BlurBackground>\r\n            <CModal\r\n              alignment=\"center\"\r\n              visible={btnView}\r\n              onClose={() => setBtnView(false)}\r\n              aria-labelledby=\"VerticallyCenteredExample\"\r\n              size=\"md\"\r\n            >\r\n              <CModalBody className=\"p-3\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Select a Pharmacy\r\n                </label>\r\n                <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                  <CFormSelect\r\n                    size=\"lg\"\r\n                    className=\"mb-3\"\r\n                    aria-label=\"Large select example\"\r\n                    name=\"strength\"\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"1\">One</option>\r\n                    <option value=\"2\">Two</option>\r\n                    <option value=\"3\">Three</option>\r\n                  </CFormSelect>\r\n                  <div className=\"d-flex gap-2 mt-2\">\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <PrimaryButton onClick={() => setBtnView(false)}>\r\n                        Save\r\n                      </PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <SecondaryButton onClick={() => setBtnView(false)}>\r\n                        Cancel\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CModalBody>\r\n            </CModal>\r\n          </BlurBackground>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrderForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport Badge from \"../../../../../../Badge/Badge\";\r\n\r\nconst DetailsTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"detailsTable\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.rx}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.frequency[0]}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.qty}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {i === 0 && (\r\n                <CTableDataCell\r\n                  style={{ height: \"10px\" }}\r\n                  rowSpan={rowData.length}\r\n                >\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.TickCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.PlusCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                        style={{transform:'rotate(45deg)'}}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsTable;\r\n","import { CCol, CFormCheck, CFormSelect, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\n\r\nconst MedicationCompleted = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState(\r\n    defaultValues.medicines\r\n      ? defaultValues.medicines\r\n      : [\r\n          {\r\n            id: 1,\r\n            type: \"\",\r\n            name: \"\",\r\n            strength: \"\",\r\n            strengthMeasurement: \"\",\r\n            days: \"\",\r\n            totalQty: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            instruction: \"\",\r\n            reason: \"\",\r\n            status: \"\",\r\n            m: 0,\r\n            a: 0,\r\n            e: 0,\r\n            n: 0,\r\n            food: \"bf\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, value, fieldName) => {\r\n    // Handle date values differently\r\n    const processedValue =\r\n      fieldName === \"startDate\" || fieldName === \"endDate\"\r\n        ? value\r\n          ? value.toISOString()\r\n          : \"\" // Convert date to ISO string\r\n        : value; // For non-date fields, just use the value directly\r\n\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [fieldName]: processedValue };\r\n      }\r\n      return medicine;\r\n    });\r\n\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  console.log(\"first\", medicines);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">View Medicine</span>\r\n          </CCol>\r\n\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine, index) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\" key={index}>\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <input\r\n                          name=\"type\"\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"name\"\r\n                          defaultValue={medicine?.name}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Route of administration\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strengthMeasurement\"\r\n                          defaultValue={medicine?.strengthMeasurement}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"days\"\r\n                          defaultValue={medicine?.days}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"totalQty\"\r\n                          defaultValue={medicine?.totalQty}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"startDate\"\r\n                          defaultValue={medicine?.startDate}\r\n                          onChange={(e) => handleMedicineInputChange(medicine?.id, e.target.value, e.target.name)}\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                            name=\"startDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.startDate\r\n                                ? new Date(medicine?.startDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"startDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"endDate\"\r\n                          defaultValue={medicine?.endDate}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                            name=\"endDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.endDate\r\n                                ? new Date(medicine?.endDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"endDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"m\"\r\n                          defaultValue={medicine?.m}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"a\"\r\n                          defaultValue={medicine?.a}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"e\"\r\n                          defaultValue={medicine?.e}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"n\"\r\n                          defaultValue={medicine?.n}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          key={index}\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"bf\"\r\n                          disabled={true}\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"bf\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"af\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                          disabled={true}\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"af\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"instruction\"\r\n                          defaultValue={medicine?.instruction}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"reason\"\r\n                          defaultValue={medicine?.reason}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              {defaultValues?.medicines?.length >= 1 ? (\r\n                defaultValues?.lab_status === \"Prescribed\" && (\r\n                  <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => handleRemoveMedicine(medicine.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                )\r\n              ) : (\r\n                <CCol lg={1}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton\r\n                      onClick={() => handleRemoveMedicine(medicine.id)}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteDel} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              )}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          defaultValues?.lab_status === \"Prescribed\" && (\r\n            <>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton onClick={handleAddMedicine}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteAdd} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div className=\"vertical-line\"></div>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddMedicine}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? null : (\r\n          <>\r\n            <CRow>\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"250px\" }}>\r\n                {/* <PrimaryButton>SEND TO PHARMACY</PrimaryButton> */}\r\n                <DropdownButton />\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationCompleted;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicationOrderForm from \"./MedicationOrderForm\";\r\nimport MedicationOrderTable from \"../../../../../../Tables/MedicationOrderTable\";\r\nimport DetailsTable from \"./DetailsTable\";\r\nimport MedicationCompleted from \"./MedicationCompleted\";\r\n\r\nconst MedicationOrder = () => {\r\n  const detailsData = [\r\n    { id: 1, label: \"\" },\r\n    { id: 2, label: \"RX\" },\r\n    { id: 3, label: \"FREQUENCY\" },\r\n    { id: 4, label: \"DURATION\" },\r\n    { id: 5, label: \"QTY/TAKEN\" },\r\n    { id: 6, label: \"ACTIONS​\" },\r\n  ];\r\n\r\n  const detailsValue = [\r\n    {\r\n      id: 1,\r\n      name: \"Prescribed\",\r\n      rx: \"Medicine 1\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Alternative\",\r\n      rx: \"Medicine 2\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n  ];\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"MEDICATION DATE\" },\r\n    { id: 3, label: \"MEDICATION NAME\" },\r\n    { id: 4, label: \"Strength & Dosage\" },\r\n    { id: 5, label: \"M | A | E | N\" },\r\n    { id: 6, label: \"BF/AF\" },\r\n    { id: 7, label: \"Pharmacy & STATUS\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Received\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine A\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine C\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Waiting For Approval\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine D\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine A\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine AB\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine J\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1,\r\n          n: 1,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [completedView, setCompletedView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (type === \"completed\") {\r\n      setCompletedView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={8} className=\"\">\r\n            <DateSelector />\r\n          </CCol>\r\n          <CCol\r\n            lg={4}\r\n            className=\"d-flex justify-content-end align-items-center gap-2\"\r\n          >\r\n            <div>\r\n              <PrimaryButton onClick={() => addFormPage()}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.Add} alt=\"add\" />\r\n                  <span className=\"fs-16 fw-600\">Add</span>\r\n                </div>\r\n              </PrimaryButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"mb-2\">\r\n          <CRow>\r\n            <MedicationOrderTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n                totalItems={rowData?.length}\r\n                itemsPerPage={itemsPerPage}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </>\r\n      {addFormView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={addFormView}\r\n            onClose={() => setAddFormView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"xl\"\r\n          >\r\n            <CModalBody className=\"p-0\">\r\n              <div\r\n                className=\"close-modal\"\r\n                onClick={() => {\r\n                  setAddFormView(false);\r\n                }}\r\n              >\r\n                <img\r\n                  src={Assets.CloseBtn}\r\n                  alt=\"close-btn\"\r\n                  style={{ width: \"100%\" }}\r\n                />{\" \"}\r\n              </div>\r\n              <MedicationOrderForm\r\n                back={() => {\r\n                  setAddFormView(false);\r\n                  setSelectedData({});\r\n                }}\r\n                defaultValues={selectedData}\r\n              />\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {completedView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={completedView}\r\n            onClose={() => setCompletedView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"xl\"\r\n          >\r\n            <CModalBody className=\"p-0\">\r\n              <div\r\n                className=\"close-modal\"\r\n                onClick={() => {\r\n                  setCompletedView(false);\r\n                }}\r\n              >\r\n                <img\r\n                  src={Assets.CloseBtn}\r\n                  alt=\"close-btn\"\r\n                  style={{ width: \"100%\" }}\r\n                />{\" \"}\r\n              </div>\r\n              <MedicationCompleted\r\n                back={() => {\r\n                  setCompletedView(false);\r\n                  setSelectedData({});\r\n                }}\r\n                defaultValues={selectedData}\r\n              />\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalBody className=\"p-0\">\r\n              <div className=\"close-modal\" onClick={() => setDetailView(false)}>\r\n                <img\r\n                  src={Assets.CloseBtn}\r\n                  alt=\"close-btn\"\r\n                  style={{ width: \"100%\" }}\r\n                />{\" \"}\r\n              </div>\r\n              <DetailsTable\r\n                rowData={detailsValue}\r\n                columns={detailsData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrder;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport LabOrder from \"./Lab Order/LabOrder\";\r\nimport ImagingOrder from \"./Imaging Order/ImagingOrder\";\r\nimport MedicationOrder from \"./Medication Order/MedicationOrder\";\r\n\r\nconst Orders = ({ onClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Medication Order\" },\r\n    { id: 2, title: \"Lab Order\" },\r\n    { id: 3, title: \"Imaging Order\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  console.log(\"first\", currentTab);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Orders</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Orders\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={0}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <MedicationOrder />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <LabOrder />\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n          <>\r\n            <ImagingOrder />\r\n          </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst ProcedureForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [disableText, setDisableText] = useState(false);\r\n  const gravidaoptions = [\"93000\", \"93009\", \"93001\", \"93002\", \"93003\"];\r\n  const findgravidaIndex =\r\n    defaultValues?.id &&\r\n    gravidaoptions?.indexOf(defaultValues?.id);\r\n  const getSelectedGravida = (data) => {\r\n    console.log(data);\r\n    setDisableText(true);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                CPT Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.treatment}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Description *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                // defaultValue={defaultValues?.remark}\r\n                disabled\r\n                defaultValue={defaultValues?.description}\r\n                value={\r\n                  disableText\r\n                    ? \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\"\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ProcedurerTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.no}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.description}</CTableDataCell>\r\n              {/* <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.visibleEye}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"details\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedurerTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport ProcedureForm from \"./ProcedureForm\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport DiagnosisTable from \"../../../../../../Tables/DiagnosisTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ProcedurerTable from \"../../../../../../Tables/ProcedurerTable\";\r\n\r\nconst ProcedureTab = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"CPT Code\" },\r\n    { id: 4, label: \"DESCRIPTION\" },\r\n    { id: 5, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      no: 1,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 2,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 3,\r\n      date: \"06-07-2024\",\r\n      id: \"93008\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 4,\r\n      date: \"06-07-2024\",\r\n      id: \"93006\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 5,\r\n      date: \"06-07-2024\",\r\n      id: \"93005\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 6,\r\n      date: \"06-07-2024\",\r\n      id: \"93002\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 7,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 8,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 9,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 10,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    // {\r\n    //   no: 11,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12321\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n    // {\r\n    //   no: 12,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12322\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n    // {\r\n    //   no: 13,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12323\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              \r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <ProcedurerTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ProcedureForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport ProcedureTab from \"./ProcedureTab/ProcedureTab\";\r\n\r\nconst Cpt = ({ onClose }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Procedure (CPT Code)\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Procedure (CPT Code)\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol>\r\n          <ProcedureTab />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cpt;\r\n","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../Badge/Badge\";\r\n  import { Assets } from \"../../assets/Assets\";\r\n\r\nconst TherapiesTable = ({ columns, rowData, getselectedData }) => {\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n      <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date_time}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{dt?.therapy_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{dt?.therapist_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{dt?.duration}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TherapiesTable","import { CCol, CFormCheck, CFormSelect, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst TherapiesForm = ({ back, defaultValues }) => {\r\n\r\n    const options = [\"Physical\", \"Occupational\", \"Speech\",\"Psychotherapy\",\"Others\"];\r\n\r\n    const getSelectedValue = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    const options1 = [\"one\", \"Two\", \"Three\",];\r\n\r\n    const getSelectedValue1 = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div class=\"position-relative\">\r\n                            <label for=\"validationTooltip01\" class=\"form-label\">\r\n                                Type *\r\n                            </label>\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{\r\n                                    border: \"1px solid #17171D33\",\r\n                                    borderRadius: \"5px\",\r\n                                }}\r\n                            >\r\n                                <Dropdown\r\n                                    options={options}\r\n                                    getSelectedValue={getSelectedValue}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div class=\"position-relative\">\r\n                            <label for=\"validationTooltip01\" class=\"form-label\">\r\n                                Therapy Name *\r\n                            </label>\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{\r\n                                    border: \"1px solid #17171D33\",\r\n                                    borderRadius: \"5px\",\r\n                                }}\r\n                            >\r\n                                <Dropdown\r\n                                    options={options1}\r\n                                    getSelectedValue={getSelectedValue1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                        <div class=\"position-relative\">\r\n                            <label for=\"validationTooltip01\" class=\"form-label\">\r\n                                Therapy Name *\r\n                            </label>\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{\r\n                                    border: \"1px solid #17171D33\",\r\n                                    borderRadius: \"5px\",\r\n                                }}\r\n                            >\r\n                                <Dropdown\r\n                                    options={options1}\r\n                                    getSelectedValue={getSelectedValue1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                                Duration (in days)\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"00\"\r\n                                defaultValue={defaultValues?.duration}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                               Notes\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                defaultValue={defaultValues?.notes}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n\r\n\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TherapiesForm","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst DateSearch = () => {\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n  \r\n    // Get today's date\r\n    const today = new Date();\r\n\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-2\">\r\n      <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n        <span className=\"fs-18 fw-400 label-color\">Start Date *</span>\r\n        <div style={{ width: \"100%\" }}>\r\n          <DatePicker\r\n            showIcon\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n            className=\"date-range-selector\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n        <span className=\"fs-18 fw-400 label-color\">End Date *</span>\r\n        <div style={{ width: \"100%\" }}>\r\n          <DatePicker\r\n            showIcon\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            className=\"date-range-selector\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol\r\n       md={3}\r\n        className=\"d-flex flex-column gap-1 justify-content-end\"\r\n      >\r\n      <div className=\"search-bar\"  style={{ width: \"100%\",borderRadius: \"10px\" }}>\r\n            <input type=\"text\" placeholder=\"Search\" style={{ padding: \"7px\" }} />\r\n          </div>\r\n      </CCol>\r\n      <CCol\r\n        md={3}\r\n        className=\"d-flex flex-column gap-1 justify-content-end\"\r\n        style={{ width: \"60px\" }}\r\n      >\r\n        <PrimaryButton>\r\n          <div className=\"d-flex align-items-center gap-2\">\r\n            <img src={Assets.search} alt=\"close\" />\r\n          </div>\r\n        </PrimaryButton>\r\n      </CCol>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default DateSearch","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport TherapiesTable from \"../../../../../../Tables/TherapiesTable\";\r\nimport TherapiesForm from \"./TherapiesForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst TherapiesTab = () => {\r\n\r\n    const columnData = [\r\n        { id: 1, label: \"No.\" },\r\n        { id: 2, label: \"Date & Time\" },\r\n        { id: 3, label: \"Type\" },\r\n        { id: 4, label: \"Therapy Name\" },\r\n        { id: 5, label: \"Therapist Name\" },\r\n        { id: 6, label: \"Duration (in days)\" },\r\n        { id: 7, label: \"ACTIONS\" },\r\n      ];\r\n      const rowData = [\r\n        {\r\n            id: 1,\r\n            date_time: \"06-07-2024\",\r\n            type: \"Physical\",\r\n            therapy_name: \"Lorem ipsum\",\r\n            therapist_name: \"Lorem ipsum\",\r\n            duration: \"5\",\r\n          },\r\n        {\r\n          id: 2,\r\n          date_time: \"06-07-2024\",\r\n          type:\"Occupational\",\r\n          therapy_name: \"Lorem ipsum\",\r\n          therapist_name: \"Lorem ipsum\",\r\n          duration: \"5\",\r\n         \r\n        },\r\n      ];\r\n      const [currentPage, setCurrentPage] = useState(1);\r\n      const [addFormView, setAddFormView] = useState(false);\r\n      const [deleteView, setDeleteView] = useState(false);\r\n    \r\n      const [selectedData, setSelectedData] = useState({});\r\n    \r\n      const itemsPerPage = 5; // Number of items to display per page\r\n    \r\n      // Function to handle page change\r\n      const onPageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n      };\r\n    \r\n      // Function to get items for the current page\r\n      const getCurrentPageItems = () => {\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return rowData?.slice(startIndex, endIndex);\r\n      };\r\n    \r\n      const addFormPage = () => {\r\n        setAddFormView(true);\r\n      };\r\n    \r\n      const getselectedData = (data, type) => {\r\n        console.log(type, \"first\", data);\r\n        setSelectedData(data);\r\n        if (type === \"edit\") {\r\n          addFormPage();\r\n        }\r\n        if (type === \"delete\") {\r\n          setDeleteView(true);\r\n        }\r\n      };\r\n\r\n      \r\n  return (\r\n    <>\r\n    {!addFormView && (\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={8} className=\"\">\r\n            <DateSearch />\r\n          </CCol>\r\n          <CCol\r\n            lg={4}\r\n            className=\"d-flex justify-content-end align-items-center gap-2\"\r\n          >\r\n            <div>\r\n              <PrimaryButton onClick={() => addFormPage()}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.Add} alt=\"add\" />\r\n                  <span className=\"fs-16 fw-600\">Add</span>\r\n                </div>\r\n              </PrimaryButton>\r\n            </div>\r\n            \r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"mb-2\">\r\n          <CRow>\r\n            <TherapiesTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n                totalItems={rowData?.length}\r\n                itemsPerPage={itemsPerPage}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </>\r\n    )}\r\n    {addFormView && (\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <TherapiesForm\r\n            back={() => {\r\n              setAddFormView(false);\r\n              setSelectedData({});\r\n            }}\r\n            defaultValues={selectedData}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    )}\r\n\r\n    {deleteView && (\r\n      <BlurBackground>\r\n        <CModal\r\n          alignment=\"center\"\r\n          visible={deleteView}\r\n          onClose={() => setDeleteView(false)}\r\n          aria-labelledby=\"VerticallyCenteredExample\"\r\n        >\r\n          <CModalBody className=\"p-3\">\r\n            <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n              <h5>Are you sure want to delete ?</h5>\r\n              <div className=\"d-flex gap-2 mt-2\">\r\n                <div style={{ width: \"80px\" }}>\r\n                  <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                    Yes\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"80px\" }}>\r\n                  <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                    No\r\n                  </SecondaryButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </BlurBackground>\r\n    )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default TherapiesTab","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport TherapiesTab from \"./TherapiesTab/TherapiesTab\";\r\n\r\nconst Therapies = ({ onClose }) => {\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-0\">\r\n      <CCol md={4} className=\"mb-2\">\r\n        <div className=\"d-flex gap-2\">\r\n          <img\r\n            alt=\"BackBtn\"\r\n            src={Assets.BackBtn}\r\n            style={{ width: \"35px\" }}\r\n            onClick={onClose}\r\n            className=\"cursor\"\r\n          />\r\n          <span className=\"Obj-name d-flex align-items-center\">\r\n          Therapies\r\n          </span>\r\n        </div>\r\n      </CCol>\r\n      <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n        <div className=\"d-flex mt-2\">\r\n          <Breadcrumb\r\n            paths={[\r\n              { label: \"Home\", to: \"/patients\" },\r\n              { label: \"Patient List\", to: \"/patients\" },\r\n              { label: \"Medical Profile\", to: \"/patients/history\" },\r\n              { label: \"Therapies\", to: \"/patients/history\" },\r\n            ]}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol>\r\n        <TherapiesTab />\r\n      </CCol>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Therapies","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import { Assets } from \"../../assets/Assets\";\r\n\r\n\r\nconst PatientEducationTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n      <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.notes}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PatientEducationTable","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\n\r\n\r\nconst PatientEducationForm = ({ back, defaultValues }) => {\r\n\r\n    const [date, setDate] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n      const parseDateString = (dateString) => {\r\n        const parts = dateString?.split(\" \");\r\n        const datePart = parts[0];\r\n        const timePart = parts[1];\r\n        const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n        const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n        const date = new Date(year, month - 1, day, hours, minutes);\r\n        return date;\r\n      };\r\n  \r\n      // Example default date string\r\n      const defaultDateString = defaultValues?.date;\r\n  \r\n      // Parse default date string to Date object\r\n      const defaultDate = defaultValues?.date\r\n        ? parseDateString(defaultDateString)\r\n        : new Date();\r\n  \r\n      // Set default date in state\r\n      setDate(defaultDate);\r\n    }, [defaultValues]);\r\n  \r\n    \r\n      const options = [\"one\", \"Two\",\"Three\"];\r\n      const findIndex = defaultValues?.prev_illness\r\n        ? options?.indexOf(defaultValues?.prev_illness)\r\n        : 0;\r\n  \r\n      const getSelectedValue = (data) => {\r\n        console.log(data);\r\n      };\r\n  \r\n\r\n   \r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n              //  dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={8}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Notes *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"Enter\"\r\n              defaultValue={defaultValues?.notes}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n      \r\n    </CRow>\r\n \r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n\r\n  )\r\n}\r\n\r\nexport default PatientEducationForm","import React, { useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PatientEducationTable from \"../../../../../../Tables/PatientEducationTable\";\r\nimport PatientEducationForm from \"./PatientEducationForm\";\r\n\r\n\r\nconst PatientEducationTab = () => {\r\n\r\n    const columnData = [\r\n        { id: 1, label: \"No\" },\r\n        { id: 2, label: \"Date\" },\r\n        { id: 3, label: \"Notes\" },\r\n        { id: 7, label: \"ACTIONS\" },\r\n      ];\r\n      const rowData = [\r\n        {\r\n            id: 1,\r\n            date: \"06-07-2024\",\r\n            notes: \"Lorem ipsum Lorem ipsum\",\r\n          },\r\n        {\r\n          id: 2,\r\n          date: \"06-07-2024\",\r\n          notes:\"Lorem ipsum Lorem ipsum\",\r\n        },\r\n        {\r\n            id: 3,\r\n            date: \"06-07-2024\",\r\n            notes:\"Lorem ipsum Lorem ipsum\",\r\n          },\r\n          {\r\n            id: 4,\r\n            date: \"06-07-2024\",\r\n            notes:\"Lorem ipsum Lorem ipsum\",\r\n          },\r\n          {\r\n            id: 5,\r\n            date: \"06-07-2024\",\r\n            notes:\"Lorem ipsum Lorem ipsum\",\r\n          },\r\n      ];\r\n      const [currentPage, setCurrentPage] = useState(1);\r\n      const [addFormView, setAddFormView] = useState(false);\r\n      const [deleteView, setDeleteView] = useState(false);\r\n    \r\n      const [selectedData, setSelectedData] = useState({});\r\n    \r\n      const itemsPerPage = 5; // Number of items to display per page\r\n    \r\n      // Function to handle page change\r\n      const onPageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n      };\r\n    \r\n      // Function to get items for the current page\r\n      const getCurrentPageItems = () => {\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return rowData?.slice(startIndex, endIndex);\r\n      };\r\n    \r\n      const addFormPage = () => {\r\n        setAddFormView(true);\r\n      };\r\n    \r\n      const getselectedData = (data, type) => {\r\n        console.log(type, \"first\", data);\r\n        setSelectedData(data);\r\n        if (type === \"edit\") {\r\n          addFormPage();\r\n        }\r\n        if (type === \"delete\") {\r\n          setDeleteView(true);\r\n        }\r\n      };\r\n\r\n  return (\r\n    <>\r\n    {!addFormView && (\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={8} className=\"\">\r\n            <DateSelector />\r\n          </CCol>\r\n          <CCol\r\n            lg={4}\r\n            className=\"d-flex justify-content-end align-items-center gap-2\"\r\n          >\r\n            <div>\r\n              <PrimaryButton onClick={() => addFormPage()}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.Add} alt=\"add\" />\r\n                  <span className=\"fs-16 fw-600\">Add</span>\r\n                </div>\r\n              </PrimaryButton>\r\n            </div>\r\n            \r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"mb-2\">\r\n          <CRow>\r\n            <PatientEducationTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n                totalItems={rowData?.length}\r\n                itemsPerPage={itemsPerPage}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </>\r\n    )}\r\n    {addFormView && (\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <PatientEducationForm\r\n            back={() => {\r\n              setAddFormView(false);\r\n              setSelectedData({});\r\n            }}\r\n            defaultValues={selectedData}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    )}\r\n\r\n    {deleteView && (\r\n      <BlurBackground>\r\n        <CModal\r\n          alignment=\"center\"\r\n          visible={deleteView}\r\n          onClose={() => setDeleteView(false)}\r\n          aria-labelledby=\"VerticallyCenteredExample\"\r\n        >\r\n          <CModalBody className=\"p-3\">\r\n            <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n              <h5>Are you sure want to delete ?</h5>\r\n              <div className=\"d-flex gap-2 mt-2\">\r\n                <div style={{ width: \"80px\" }}>\r\n                  <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                    Yes\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"80px\" }}>\r\n                  <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                    No\r\n                  </SecondaryButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </BlurBackground>\r\n    )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default PatientEducationTab","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PatientEducationTab from \"./PatientEducationTab/PatientEducationTab\";\r\n\r\nconst PatientEducation = ({ onClose }) => {\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-0\">\r\n      <CCol md={4} className=\"mb-2\">\r\n        <div className=\"d-flex gap-2\">\r\n          <img\r\n            alt=\"BackBtn\"\r\n            src={Assets.BackBtn}\r\n            style={{ width: \"35px\" }}\r\n            onClick={onClose}\r\n            className=\"cursor\"\r\n          />\r\n          <span className=\"Obj-name d-flex align-items-center\">\r\n          Patient Education \r\n          \r\n          </span>\r\n        </div>\r\n      </CCol>\r\n      <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n        <div className=\"d-flex mt-2\">\r\n          <Breadcrumb\r\n            paths={[\r\n              { label: \"Home\", to: \"/patients\" },\r\n              { label: \"Patient List\", to: \"/patients\" },\r\n              { label: \"Medical Profile\", to: \"/patients/history\" },\r\n              { label: \"Patient Education\", to: \"/patients/history\" },\r\n            ]}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol>\r\n        <PatientEducationTab />\r\n      </CCol>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default PatientEducation","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import { Assets } from \"../../assets/Assets\";\r\n\r\nconst NextAppointmentTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    \r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n     <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.provider_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.reason}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextAppointmentTable","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst NextAppointmentForm = ({ back, defaultValues }) => {\r\n\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  \r\n    const options = [\"one\", \"Two\",\"Three\"];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n              //  dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Provider Name *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Reason *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"Enter\"\r\n              defaultValue={defaultValues?.reason}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NextAppointmentForm","import React, { useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PatientEducationForm from \"../../PatientEducation/PatientEducationTab/PatientEducationForm\";\r\nimport NextAppointmentTable from \"../../../../../../Tables/NextAppointmentTable\";\r\nimport NextAppointmentForm from \"./NextAppointmentForm\";\r\n\r\nconst NextAppointmentTab = () => {\r\n\r\n    const columnData = [\r\n        { id: 1, label: \"No\" },\r\n        { id: 2, label: \"Date & Time\" },\r\n        { id: 3, label: \"Provider Name\" },\r\n        { id: 3, label: \"Reason\" },\r\n        { id: 7, label: \"ACTIONS\" },\r\n      ];\r\n      const rowData = [\r\n        {\r\n            id: 1,\r\n            date: \"02-04-2024 12:13\",\r\n            provider_name: \"Lorem ipsum \",\r\n            reason: \"Lorem ipsum\",\r\n          },\r\n        {\r\n          id: 2,\r\n          date: \"02-04-2024 12:13\",\r\n          provider_name: \"Lorem ipsum \",\r\n          reason: \"Lorem ipsum\",\r\n        },\r\n        {\r\n            id: 3,\r\n            date: \"02-04-2024 12:13\",\r\n            provider_name: \"Lorem ipsum \",\r\n            reason: \"Lorem ipsum\",\r\n          },\r\n          {\r\n            id: 4,\r\n            date: \"02-04-2024 12:13\",\r\n            provider_name: \"Lorem ipsum \",\r\n            reason: \"Lorem ipsum\",\r\n          },\r\n          {\r\n            id: 5,\r\n            date: \"02-04-2024 12:13\",\r\n            provider_name: \"Lorem ipsum \",\r\n            reason: \"Lorem ipsum\",\r\n          },\r\n      ];\r\n      const [currentPage, setCurrentPage] = useState(1);\r\n      const [addFormView, setAddFormView] = useState(false);\r\n      const [deleteView, setDeleteView] = useState(false);\r\n    \r\n      const [selectedData, setSelectedData] = useState({});\r\n    \r\n      const itemsPerPage = 5; // Number of items to display per page\r\n    \r\n      // Function to handle page change\r\n      const onPageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n      };\r\n    \r\n      // Function to get items for the current page\r\n      const getCurrentPageItems = () => {\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return rowData?.slice(startIndex, endIndex);\r\n      };\r\n    \r\n      const addFormPage = () => {\r\n        setAddFormView(true);\r\n      };\r\n    \r\n      const getselectedData = (data, type) => {\r\n        console.log(type, \"first\", data);\r\n        setSelectedData(data);\r\n        if (type === \"edit\") {\r\n          addFormPage();\r\n        }\r\n        if (type === \"delete\") {\r\n          setDeleteView(true);\r\n        }\r\n      };\r\n\r\n  return (\r\n    <>\r\n    {!addFormView && (\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={8} className=\"\">\r\n            <DateSelector />\r\n          </CCol>\r\n          <CCol\r\n            lg={4}\r\n            className=\"d-flex justify-content-end align-items-center gap-2\"\r\n          >\r\n            <div>\r\n              <PrimaryButton onClick={() => addFormPage()}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.Add} alt=\"add\" />\r\n                  <span className=\"fs-16 fw-600\">Add</span>\r\n                </div>\r\n              </PrimaryButton>\r\n            </div>\r\n            \r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"mb-2\">\r\n          <CRow>\r\n            <NextAppointmentTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n                totalItems={rowData?.length}\r\n                itemsPerPage={itemsPerPage}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </>\r\n    )}\r\n    {addFormView && (\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <NextAppointmentForm\r\n            back={() => {\r\n              setAddFormView(false);\r\n              setSelectedData({});\r\n            }}\r\n            defaultValues={selectedData}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    )}\r\n\r\n    {deleteView && (\r\n      <BlurBackground>\r\n        <CModal\r\n          alignment=\"center\"\r\n          visible={deleteView}\r\n          onClose={() => setDeleteView(false)}\r\n          aria-labelledby=\"VerticallyCenteredExample\"\r\n        >\r\n          <CModalBody className=\"p-3\">\r\n            <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n              <h5>Are you sure want to delete ?</h5>\r\n              <div className=\"d-flex gap-2 mt-2\">\r\n                <div style={{ width: \"80px\" }}>\r\n                  <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                    Yes\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"80px\" }}>\r\n                  <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                    No\r\n                  </SecondaryButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </BlurBackground>\r\n    )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NextAppointmentTab","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PatientEducationTab from \"./NextAppointmentTab/NextAppointmentTab\";\r\n\r\nconst NextAppointment = ({ onClose }) => {\r\n\r\n  return (\r\n      <>\r\n    <CRow className=\"mb-0\">\r\n      <CCol md={4} className=\"mb-2\">\r\n        <div className=\"d-flex gap-2\">\r\n          <img\r\n            alt=\"BackBtn\"\r\n            src={Assets.BackBtn}\r\n            style={{ width: \"35px\" }}\r\n            onClick={onClose}\r\n            className=\"cursor\"\r\n          />\r\n          <span className=\"Obj-name d-flex align-items-center\">\r\n          Next Appointment\r\n          </span>\r\n        </div>\r\n      </CCol>\r\n      <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n        <div className=\"d-flex mt-2\">\r\n          <Breadcrumb\r\n            paths={[\r\n              { label: \"Home\", to: \"/patients\" },\r\n              { label: \"Patient List\", to: \"/patients\" },\r\n              { label: \"Medical Profile\", to: \"/patients/history\" },\r\n              { label: \"Next Appointment\", to: \"/patients/history\" },\r\n            ]}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol>\r\n        <PatientEducationTab />\r\n      </CCol>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NextAppointment","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Orders from \"./Orders/Orders\";\r\nimport Cpt from \"./Procedure CPT/Cpt\";\r\nimport Therapies from \"./Therapies/Therapies\";\r\nimport PatientEducation from \"./PatientEducation/PatientEducation\";\r\nimport NextAppointment from \"./NextAppointment/NextAppointment\";\r\n\r\nconst Plan = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Orders\", image: Assets.Orders },\r\n    { id: 2, name: \"Therapies\", image: Assets.Therapies },\r\n    { id: 3, name: \"Vaccinations\", image: Assets.Vaccine },\r\n    { id: 4, name: \"Procedure (CPT Code)\", image: Assets.CPT },\r\n    { id: 5, name: \"Patient Education\", image: Assets.PatEdu },\r\n    { id: 6, name: \"Next Appointment\", image: Assets.PatEdu },\r\n  ];\r\n  const [ordersView, setOrdersView] = useState(false);\r\n  const [cptView, setCptView] = useState(false);\r\n  const [therapiesView, setTherapiesView] = useState(false);\r\n  const [patientView, setPatientView] = useState(false);\r\n  const [appointView, setAppointmentView] = useState(false);\r\n\r\n  const getSelectedData = (data) => {\r\n    // setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setOrdersView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setTherapiesView(true);\r\n    }\r\n    if (data?.id === 4) {\r\n      setCptView(true);\r\n    }\r\n    if (data?.id === 5) {\r\n      setPatientView(true);\r\n    }\r\n    if (data?.id === 6) {\r\n      setAppointmentView(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {!ordersView && !cptView && !therapiesView && !patientView  && !appointView ? (\r\n        <CRow>\r\n          {cardData.map((dt, i) => (\r\n            <CCol md={4} xl={3} className=\"mb-3\">\r\n              <Card data={dt} getSelectedData={getSelectedData} />\r\n            </CCol>\r\n          ))}\r\n        </CRow>\r\n      ) : ordersView ? (\r\n        <Orders onClose={() => setOrdersView(false)} />\r\n      )  : therapiesView ? (\r\n        <Therapies onClose={() => setTherapiesView(false)} />\r\n     ) : cptView ? (\r\n        <Cpt onClose={() => setCptView(false)} />\r\n      ) : patientView ? (\r\n      <PatientEducation onClose={() => setPatientView(false)} />\r\n     ) : appointView ? (\r\n      <NextAppointment onClose={() => setAppointmentView(false)} />\r\n     )  : null}\r\n    \r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plan;\r\n","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../Badge/Badge\";\r\n  import { Assets } from \"../../../assets/Assets\";\r\n\r\nconst AllergiesTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n       <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100 flex-column\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.onset_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.allergy}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.reaction}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.severity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.status}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllergiesTable","import { CCol, CFormCheck, CFormSelect, CRow,CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\n\r\n\r\nconst AllergiesForm = ({ back, defaultValues }) => {\r\n\r\n    const [date, setDate] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n      const parseDateString = (dateString) => {\r\n        const parts = dateString?.split(\" \");\r\n        const datePart = parts[0];\r\n        const timePart = parts[1];\r\n        const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n        const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n        const date = new Date(year, month - 1, day, hours, minutes);\r\n        return date;\r\n      };\r\n  \r\n      // Example default date string\r\n      const defaultDateString = defaultValues?.date;\r\n  \r\n      // Parse default date string to Date object\r\n      const defaultDate = defaultValues?.date\r\n        ? parseDateString(defaultDateString)\r\n        : new Date();\r\n  \r\n      // Set default date in state\r\n      setDate(defaultDate);\r\n    }, [defaultValues]);\r\n    \r\n      const options = [\"One\", \"Two\",\"Three\",];\r\n  \r\n      const getSelectedValue = (data) => {\r\n        console.log(data);\r\n      };\r\n\r\n      const options1 = [\"Mild\", \"Moderate\",\"Severe\",];\r\n      \r\n      const getSelectedValue1 = (data) => {\r\n        console.log(data);\r\n      };\r\n\r\n      const options2 = [\"Active\", \"Inactive\"];\r\n      \r\n      const getSelectedValue2 = (data) => {\r\n        console.log(data);\r\n      };\r\n\r\n  return (\r\n     <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Onset Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Allergy Name *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Category *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"\"\r\n              defaultValue={defaultValues?.allergy}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n    <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Reaction *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Other Reactions\r\n            </label>\r\n            <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.reaction}\r\n              />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Severity *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options1}\r\n                getSelectedValue={getSelectedValue1}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n    <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Provider *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Notes\r\n            </label>\r\n            <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.severity}\r\n              />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Status *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options2}\r\n                getSelectedValue={getSelectedValue2}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n\r\n   \r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default AllergiesForm","import {\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFormCheck,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n  } from \"@coreui/react\";\r\n  import React, { useState } from \"react\";\r\n  import Pagination from \"../../../../../../Pagination/Pagination\";\r\n  import PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\n  import { Assets } from \"../../../../../../../assets/Assets\";\r\n  import DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\n  import BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\n  import SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n  import MedicationForm from \"../Medication/MedicationForm\";\r\n  import AllergiesTable from \"../../../../../../Tables/Subjective/AllergiesTable\";\r\nimport AllergiesForm from \"./AllergiesForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Allergies = () => {\r\n\r\n    const columnData = [\r\n        { id: 1, label: \"No.\" },\r\n        { id: 2, label: \"Onset Date\" },\r\n        { id: 6, label: \"Allergy\" },\r\n        { id: 7, label: \"Reaction\" },\r\n        { id: 8, label: \"Severity\" },\r\n        { id: 9, label: \" Status\" },\r\n        { id: 11, label: \"ACTIONS\" },\r\n      ];\r\n      const rowData = [\r\n        {\r\n          id: 1,\r\n          onset_date: \"06-07-2024\",\r\n          allergy: \"Knee (category 1)\",\r\n          reaction: \"-\",\r\n          severity: \"-\",\r\n          status: \"-\",\r\n        },\r\n        {\r\n          id: 2,\r\n          onset_date: \"06-07-2024\",\r\n          allergy: \"Knee (category 1)\",\r\n          reaction: \"-\",\r\n          severity: \"-\",\r\n          status: \"-\",\r\n        \r\n        },\r\n       \r\n      ];\r\n      const [addFormView, setAddFormView] = useState(false);\r\n      const [detailView, setDetailView] = useState(false);\r\n    \r\n      const [currentPage, setCurrentPage] = useState(1);\r\n      const [selectedData, setSelectedData] = useState({});\r\n    \r\n      const itemsPerPage = 5; // Number of items to display per page\r\n    \r\n      // Function to handle page change\r\n      const onPageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n      };\r\n    \r\n      // Function to get items for the current page\r\n      const getCurrentPageItems = () => {\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return rowData?.slice(startIndex, endIndex);\r\n      };\r\n    \r\n      const addFormPage = () => {\r\n        setAddFormView(true);\r\n      };\r\n    \r\n      const detailPage = () => {\r\n        setDetailView(true);\r\n      };\r\n    \r\n      const getselectedData = (data, type) => {\r\n        console.log(type, \"first\", data);\r\n        setSelectedData(data);\r\n        if (type === \"edit\") {\r\n          addFormPage();\r\n        }\r\n        if (type === \"delete\") {\r\n          detailPage();\r\n        }\r\n      };\r\n    \r\n     \r\n  return (\r\n      <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={10} className=\"\">\r\n              <DateSearch />\r\n            </CCol>\r\n            <CCol\r\n              lg={2}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <AllergiesTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <AllergiesForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Allergies","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport SignsSymptoms from \"./Signs And Symptoms/SignsSymptoms\";\r\nimport Medication from \"./Medication/Medication\";\r\nimport Allergies from \"./Allergies/Allergies\";\r\n\r\nconst PresentIllness = ({ OnClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Symptoms\" },\r\n    { id: 2, title: \"Medication\" },\r\n    { id: 3, title: \"Allergies\" },\r\n  ];\r\n  const PatientSubMenu3 = localStorage.getItem(\"PatientSubMenu-3\");\r\n  const ParsedPatientSubMenu = PatientSubMenu3\r\n    ? JSON.parse(PatientSubMenu3)\r\n    : 1;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  console.log(\"first\", currentTab);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={OnClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              History of Present Illness (HPI)\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                {\r\n                  label: \"History of Present Illness (HPI)\",\r\n                  to: \"/patients/history\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={currentTab - 1}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <SignsSymptoms />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <Medication />\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n        <> \r\n        <Allergies />\r\n        </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PresentIllness;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport MedicalHistory from \"./Medical History/MedicalHistory\";\r\nimport SurgicalHistory from \"./Surgical History/SurgicalHistory\";\r\nimport OGHistory from \"./OG History/OGHistory\";\r\nimport SocialHistory from \"./Social History/SocialHistory\";\r\nimport FamilyHistory from \"./Family History/FamilyHistory\";\r\n\r\nconst History = ({ OnClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Medical History\" },\r\n    { id: 2, title: \"O/G History\" },\r\n    { id: 3, title: \"Surgical History\" },\r\n    { id: 4, title: \"Family History\" },\r\n    { id: 5, title: \"Social History\" },\r\n  ];\r\n  const PatientSubMenu3 = localStorage.getItem(\"PatientSubMenu-3\");\r\n  const ParsedPatientSubMenu = PatientSubMenu3\r\n    ? JSON.parse(PatientSubMenu3)\r\n    : 1;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  console.log(\"first\", currentTab);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={OnClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">History</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                {\r\n                  label: \"History\",\r\n                  to: \"/patients/history\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={ParsedPatientSubMenu - 1}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <MedicalHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <OGHistory from={\"\"}/>\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n          <>\r\n            <SurgicalHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 4 && (\r\n          <>\r\n            <FamilyHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 5 && (\r\n          <>\r\n            <SocialHistory />\r\n          </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../../Badge/Badge\";\r\n  import { Assets } from \"../../../../assets/Assets\";\r\n\r\nfunction ExerciseHabitTable({ columns, rowData, getselectedData }) {\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n  <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.intensity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExerciseHabitTable","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\n\r\nconst ExcerciseHabitForm = ({ back, defaultValues }) => {\r\n  const [exercises, setExercises] = useState([\r\n    {\r\n      id: 1,\r\n      type: \"\",\r\n      date:  new Date(),\r\n      time: new Date(),\r\n      duration: \"\",\r\n      intensity: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleAddExercise = () => {\r\n    const newExercises = [\r\n      ...exercises,\r\n      {\r\n        id: exercises.length + 1,\r\n        type: \"\",\r\n        date: new Date(),\r\n        time: new Date(),\r\n        duration: \"\",\r\n        intensity: \"\",\r\n      },\r\n    ];\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  const handleRemoveExercise = (id) => {\r\n    const newExercises = exercises.filter((exercise) => exercise.id !== id);\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  const handleChange = (id, updatedData) => {\r\n    const newExercises = exercises.map((ex) =>\r\n      ex.id === id ? { ...ex, ...updatedData } : ex\r\n    );\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {exercises.map((exercise, index) => (\r\n        <div key={index}>\r\n          <CRow className=\"mb-3\">\r\n             <CCol lg={12}>\r\n               <div className=\"vertical-line\"></div>\r\n             </CCol>\r\n           </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={4}>\r\n              <div className=\"position-relative\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Date *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={exercise.date}\r\n                    onChange={(date) => handleChange(exercise.id, { date })}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4}>\r\n              <div className=\"position-relative\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Time *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={exercise.date}\r\n                    onChange={(date) => handleChange(exercise.id, { date })}\r\n                    showTimeSelect\r\n                    showTimeSelectOnly\r\n                    timeIntervals={15}\r\n                    timeCaption=\"Time\"\r\n                    dateFormat=\"h:mm aa\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Type *\r\n                  </label>\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={[\"One\", \"Two\"]}\r\n                      defaultValue={exercise.type}\r\n                      getSelectedValue={(value) =>\r\n                        handleChange(exercise.id, { type: value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Duration (in minutes)\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"000\"\r\n                    maxLength={3}\r\n                    defaultValue={defaultValues?.duration}\r\n                    onInput={(e) => {\r\n                      e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Intensity *\r\n                  </label>\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={[\"One\", \"Two\"]}\r\n                      defaultValue={exercise.intensity}\r\n                      getSelectedValue={(value) =>\r\n                        handleChange(exercise.id, { intensity: value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {index > 0 && (\r\n            <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton hgdf\r\n                        onClick={() => handleRemoveExercise(exercise.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n            </CRow>\r\n           </>\r\n            \r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddExercise}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExcerciseHabitForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExerciseHabitTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/ExerciseHabitTable\";\r\nimport ExcerciseHabitForm from \"./ExcerciseHabitForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\n\r\nconst ExerciseHabit = () => {\r\n\r\n  const columnData = [\r\n    {  label: \"NO.\" },\r\n    {  label: \"Date\" },\r\n    {  label: \"Type\" },\r\n    {  label: \"DURATION\" },\r\n    {  label: \"INTENSITY\" },\r\n    {  label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration:\"30\",\r\n      intensity:\"Moderate\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration:\"30\",\r\n      intensity:\"Moderate\",\r\n    },\r\n    {\r\n      id: 3,\r\n     date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration:\"30\",\r\n      intensity:\"Moderate\",\r\n    },\r\n    { \r\n      id: 4,\r\n     date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration:\"30\",\r\n      intensity:\"Moderate\",\r\n    },\r\n    {\r\n      id: 5,\r\n     date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration:\"30\",\r\n      intensity:\"Moderate\",\r\n    },\r\n    {\r\n      id: 6,\r\n     date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration:\"30\",\r\n      intensity:\"Moderate\",\r\n    }\r\n\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n     <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSearch />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <ExerciseHabitTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ExcerciseHabitForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExerciseHabit","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../../Badge/Badge\";\r\n  import { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst MoodTable = ({ columns, rowData, getselectedData }) => {\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"20%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"20%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoodTable","import { CCol, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\n\r\nconst MoodForm = ({ back, defaultValues }) => {\r\n\r\n    const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n              //  dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n          </CCol>\r\n                <CCol lg={6}>\r\n                <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n                </CCol>\r\n\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n                <p className=\"radio-label\">Type *</p>\r\n                <CCol lg={12}>\r\n\r\n                    <div className=\"h-100 d-flex align-items-end w-100 \">\r\n\r\n                        <div\r\n                            style={{\r\n                                boxSizing: \"border-box\",\r\n                                borderRadius: \"5px\",\r\n                                border: \"1px solid #17171D33\",\r\n                                padding: \"10px\",\r\n                            }}\r\n                        >\r\n                            <CFormCheck\r\n\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox1\"\r\n                                value=\"bf\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Happy\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox2\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Sad\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox3\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Angry\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox4\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Relaxed\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox5\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Excited\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox6\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Anxious\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox7\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Content\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox8\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Frustrated\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox9\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Surprised\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox10\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Confident\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MoodForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport MoodTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/MoodTable\";\r\nimport MoodForm from \"./MoodForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Mood = () => {\r\n  const columnData = [\r\n    {  label: \"NO.\" },\r\n    {  label: \"Date\" },\r\n    {  label: \"Type\" },\r\n    {  label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    { \r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    }\r\n\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n        <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSearch />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <MoodTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MoodForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              //  defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mood","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../../Badge/Badge\";\r\n  import { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst NutritionDietTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n     \r\n    \r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type_of_diet}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NutritionDietTable","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../../Badge/Badge\";\r\n  import { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst NutritionFluidTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n      <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.intake}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NutritionFluidTable","import { CCol, CRow,CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst DietForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  \r\n    const options = [\"Veg\", \"Non-Veg\",\"Others\"];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n              //  dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type of Diet * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Notes\r\n            </label>\r\n            <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default DietForm","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst FluidIntakeForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n    const options = [\"Water\", \"Oral Rehydration Solutions\",\"Clear Broth\", \"Milk\",\"Fruit Juices\",\"Herbal Teas\",\"Coffee\",\"Tea\",\"Sports Drinks\",\"Soft Drinks\",\r\n        \"Energy Drinks\",\"Coconut Water\",\"Infused Water\",\"Soup\",\"Electrolyte Solutions\",\"Alcoholic Beverages\",];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n              //  dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Intake (ml)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"0000\"\r\n              maxLength={4}\r\n              defaultValue={defaultValues?.name}\r\n              onInput={(e) => {\r\n                e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default FluidIntakeForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicalTab from '../../../MedicalTab';\r\nimport ExerciseHabitTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/ExerciseHabitTable\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport NutritionDietTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/NutritionDietTable\";\r\nimport NutritionFluidTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/NutritionFluidTable\";\r\nimport DietForm from \"./DietForm\";\r\nimport FluidIntakeForm from \"./FluidIntakeForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Nutrition = () => {\r\n\r\n\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Type of Diet\" },\r\n    { id: 4, label: \"Notes\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type_of_diet: \"Non-Veg\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type_of_diet: \"Non-Veg\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type_of_diet: \"Non-Veg\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n\r\n  ];\r\n\r\n  const FluidIntakecolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 3, label: \"Date\" },\r\n    { id: 3, label: \"Type\" },\r\n    { id: 4, label: \"INTAKE (ML)\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const FluidIntakerowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Water\",\r\n      intake: \"1500\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Water\",\r\n      intake: \"1500\",\r\n    },\r\n\r\n  ];\r\n\r\n  const tabs = [\r\n    { id: 1, title: \"Diet\" },\r\n    { id: 2, title: \"Fluid Intake\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentFluidPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return FluidIntakerowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={12} className=\"\">\r\n            <MedicalTab\r\n              tabs={tabs}\r\n              getCurrentTab={getCurrentTab}\r\n              defaultTab={0}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n        {!addFormView && (\r\n          <>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"mb-2\">\r\n              {currentTab === 1 && (\r\n                <>\r\n                  <CRow>\r\n                    <NutritionDietTable\r\n                      rowData={getCurrentPageItems()}\r\n                      columns={columnData}\r\n                      getselectedData={getselectedData}\r\n                    />\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                      <Pagination\r\n                        currentPage={currentPage}\r\n                        onPageChange={onPageChange}\r\n                        totalItems={rowData?.length}\r\n                        itemsPerPage={itemsPerPage}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </>\r\n              )}\r\n              {currentTab === 2 && (\r\n                <>\r\n                  <CRow>\r\n                    <NutritionFluidTable\r\n                      rowData={getCurrentFluidPageItems()}\r\n                      columns={FluidIntakecolumnData}\r\n                      getselectedData={getselectedData}\r\n                    />\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                      <Pagination\r\n                        currentPage={currentPage}\r\n                        onPageChange={onPageChange}\r\n                        totalItems={rowData?.length}\r\n                        itemsPerPage={itemsPerPage}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </>\r\n\r\n      {addFormView && (\r\n        <CRow className=\"mb-2\">\r\n          <CCard className=\"p-2 cursor-default mb-5\">\r\n            <CCardBody className=\"mb-3\">\r\n              {currentTab === 1 && (\r\n                <DietForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  // defaultValues={selectedData}\r\n                />\r\n              )}\r\n              {currentTab === 2 && (\r\n                <FluidIntakeForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  // defaultValues={selectedData}\r\n                />\r\n              )}\r\n            </CCardBody>\r\n          </CCard>\r\n        </CRow>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Nutrition","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../../Badge/Badge\";\r\n  import { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst SexualStatusTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n    <>\r\n    <CTable className=\"lab-responsive-table\">\r\n      <CTableHead color=\"dark\">\r\n        <CTableRow>\r\n          {columns?.map((data, i) => (\r\n            <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n          ))}\r\n        </CTableRow>\r\n      </CTableHead>\r\n      <CTableBody>\r\n        {rowData?.map((dt, i) => (\r\n          <CTableRow key={i}>\r\n            <CTableHeaderCell style={{ height: \"10px\" }}>\r\n              <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </div>\r\n            </CTableHeaderCell>\r\n            <CTableDataCell style={{ height: \"10px\" }}>\r\n              <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.sexual_activity}</span>\r\n              </div>\r\n            </CTableDataCell>\r\n            <CTableDataCell style={{ height: \"10px\" }}>\r\n              <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.history}</span>\r\n              </div>\r\n            </CTableDataCell>\r\n            <CTableDataCell style={{ height: \"10px\" }}>\r\n              <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.screening_date}</span>\r\n              </div>\r\n            </CTableDataCell>\r\n            <CTableDataCell style={{ height: \"10px\" }}>\r\n              <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.current_status}</span>\r\n              </div>\r\n            </CTableDataCell>\r\n            <CTableDataCell style={{ height: \"10px\" }}>\r\n              <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                <div\r\n                  style={{\r\n                    width: \"50%\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.EditPencil}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    width: \"50%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.Delete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CTableDataCell>\r\n          </CTableRow>\r\n        ))}\r\n      </CTableBody>\r\n    </CTable>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default SexualStatusTable","import { CCol, CRow, CFormCheck ,CFormTextarea} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\n\r\nconst SexualStatusForm = ({ back, defaultValues }) => {\r\n    const [date, setDate] = useState(null);\r\n    const [historySti, setHistorySti] = useState(false);\r\n    const [currentSti, setCurrentSti] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const parseDateString = (dateString) => {\r\n            const parts = dateString?.split(\" \");\r\n            const datePart = parts[0];\r\n            const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n            return new Date(year, month - 1, day);\r\n        };\r\n\r\n        const defaultDateString = defaultValues?.date;\r\n        const defaultDate = defaultValues?.date ? parseDateString(defaultDateString) : new Date();\r\n        setDate(defaultDate);\r\n    }, [defaultValues]);\r\n\r\n    const handleHistoryStiClick = (event) => {\r\n        setHistorySti(event.target.value === \"yes\");\r\n    };\r\n\r\n    const handleCurrentStiClick = (event) => {\r\n        setCurrentSti(event.target.value === \"positive\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <p className=\"radio-label\">Sexual Activity</p>\r\n                    <div className=\"d-flex align-items-end w-100\">\r\n                        <div\r\n                            style={{\r\n                                boxSizing: \"border-box\",\r\n                                borderRadius: \"5px\",\r\n                                border: \"1px solid #17171D33\",\r\n                                padding: \"10px\",\r\n                            }}\r\n                        >\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"activityYes\"\r\n                                value=\"yes\"\r\n                                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                                name=\"activity\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"activityNo\"\r\n                                value=\"no\"\r\n                                label={<label className=\"form-label mb-0\">No</label>}\r\n                                name=\"activity\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n\r\n                <CCol lg={6}>\r\n                    <p className=\"radio-label\">History of STI</p>\r\n                    <div className=\"d-flex align-items-end w-100\">\r\n                        <div\r\n                            style={{\r\n                                boxSizing: \"border-box\",\r\n                                borderRadius: \"5px\",\r\n                                border: \"1px solid #17171D33\",\r\n                                padding: \"10px\",\r\n                            }}\r\n                        >\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"historyYes\"\r\n                                value=\"yes\"\r\n                                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                                name=\"sti\"\r\n                                checked={historySti === true}\r\n                                onChange={handleHistoryStiClick}\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"historyNo\"\r\n                                value=\"no\"\r\n                                label={<label className=\"form-label mb-0\">No</label>}\r\n                                name=\"sti\"\r\n                                checked={historySti === false}\r\n                                onChange={handleHistoryStiClick}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n            {historySti && (\r\n                <>\r\n                    <CRow className=\"mb-3\">\r\n                        <CCol lg={6}>\r\n                            <div className=\"position-relative\">\r\n                                <label className=\"form-label\">Last STI Screening Date *</label>\r\n                                <div className=\"date-size\">\r\n                                    <DatePicker\r\n                                        showIcon\r\n                                        selected={date}\r\n                                        onChange={(date) => setDate(date)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </CCol>\r\n                        <CCol lg={6}>\r\n                            <div style={{ width: \"100%\" }}>\r\n                                <div className=\"position-relative\">\r\n                                    <label className=\"form-label\">STI History Notes</label>\r\n                                    <CFormTextarea\r\n                                            type=\"text\"\r\n                                            class=\"form-control  pad-10\"\r\n                                            id=\"validationTooltip01\"\r\n                                            placeholder=\"Enter\"\r\n                                            defaultValue={defaultValues?.name}\r\n                                        />\r\n                                </div>\r\n                            </div>\r\n                        </CCol>\r\n                    </CRow>\r\n                    <CRow className=\"mb-3\">\r\n                        <CCol lg={6}>\r\n                            <p className=\"radio-label\">Current STI Status</p>\r\n                            <div className=\"d-flex align-items-end w-100\">\r\n                                <div\r\n                                    style={{\r\n                                        boxSizing: \"border-box\",\r\n                                        borderRadius: \"5px\",\r\n                                        border: \"1px solid #17171D33\",\r\n                                        padding: \"10px\",\r\n                                    }}\r\n                                >\r\n                                    <CFormCheck\r\n                                        className=\"mb-0\"\r\n                                        inline\r\n                                        type=\"radio\"\r\n                                        id=\"statusPositive\"\r\n                                        value=\"positive\"\r\n                                        label={<label className=\"form-label mb-0\">Positive</label>}\r\n                                        name=\"sti_status\"\r\n                                        checked={currentSti === true}\r\n                                        onChange={handleCurrentStiClick}\r\n                                    />\r\n                                    <CFormCheck\r\n                                        className=\"mb-0\"\r\n                                        inline\r\n                                        type=\"radio\"\r\n                                        id=\"statusNegative\"\r\n                                        value=\"negative\"\r\n                                        label={<label className=\"form-label mb-0\">Negative</label>}\r\n                                        name=\"sti_status\"\r\n                                        checked={currentSti === false}\r\n                                        onChange={handleCurrentStiClick}\r\n                                    />\r\n                                    <CFormCheck\r\n                                        className=\"mb-0\"\r\n                                        inline\r\n                                        type=\"radio\"\r\n                                        id=\"statusUnknown\"\r\n                                        value=\"unknown\"\r\n                                        label={<label className=\"form-label mb-0\">Unknown</label>}\r\n                                        name=\"sti_status\"\r\n                                        checked={currentSti === false}\r\n                                        onChange={handleCurrentStiClick}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </CCol>\r\n                        {currentSti && (\r\n                            <CCol lg={6}>\r\n                                <div style={{ width: \"100%\" }}>\r\n                                    <div className=\"position-relative\">\r\n                                        <label className=\"form-label\">Current STI Notes</label>\r\n                                        <CFormTextarea\r\n                                            type=\"text\"\r\n                                            class=\"form-control  pad-10\"\r\n                                            id=\"validationTooltip01\"\r\n                                            placeholder=\"Enter\"\r\n                                            defaultValue={defaultValues?.name}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </CCol>\r\n                        )}\r\n                    </CRow>\r\n                </>\r\n            )}\r\n\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SexualStatusForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport MoodTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/MoodTable\";\r\nimport SexualStatusTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/SexualStatusTable\";\r\nimport SexualStatusForm from \"./SexualStatusForm\";\r\n\r\nconst SexualStatus = () => {\r\n  const columnData = [\r\n    {  label: \"NO.\" },\r\n    {  label: \"Sexual Activity\" },\r\n    {  label: \"History of STI\" },\r\n    {label: \"Last STI Screening Date\"},\r\n    {label: \"Current STI Status\"},\r\n    {  label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      sexual_activity:\"Active\",\r\n      history: \"Yes \",\r\n      screening_date: \"06-06-2024 \",\r\n      current_status: \"Active \",\r\n    },\r\n    {\r\n      id: 2,\r\n      sexual_activity:\"Active\",\r\n      history: \"Yes \",\r\n      screening_date: \"06-06-2024\",\r\n      current_status: \"Active \",\r\n    },\r\n    {\r\n      id: 3,\r\n      sexual_activity:\"Active\",\r\n      history: \"Yes \",\r\n      screening_date: \"06-06-2024\",\r\n      current_status: \"Active \",\r\n    },\r\n    { \r\n      id: 4,\r\n      sexual_activity:\"Active\",\r\n      history: \"Yes \",\r\n      screening_date: \"06-06-2024\",\r\n      current_status: \"Active \",\r\n    },\r\n    {\r\n      id: 5,\r\n      sexual_activity:\"Active\",\r\n      history: \"Yes \",\r\n      screening_date: \"06-06-2024\",\r\n      current_status: \"Active \",\r\n    },\r\n    {\r\n      id: 6,\r\n      sexual_activity:\"Active\",\r\n      history: \"Yes \",\r\n      screening_date: \"06-06-2024\",\r\n      current_status: \"Active \",\r\n    }\r\n\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {!addFormView && (\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={8} className=\"\">\r\n            <DateSelector />\r\n          </CCol>\r\n          <CCol\r\n            lg={4}\r\n            className=\"d-flex justify-content-end align-items-center gap-2\"\r\n          >\r\n            <div>\r\n              <PrimaryButton onClick={() => addFormPage()}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.Add} alt=\"add\" />\r\n                  <span className=\"fs-16 fw-600\">Add</span>\r\n                </div>\r\n              </PrimaryButton>\r\n            </div>\r\n            <div>\r\n              <PrimaryButton onClick={() => addFormPage()}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                </div>\r\n              </PrimaryButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"mb-2\">\r\n          <SexualStatusTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n          />\r\n\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n                totalItems={rowData?.length}\r\n                itemsPerPage={itemsPerPage}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </>\r\n    )}\r\n    {addFormView && (\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <SexualStatusForm\r\n            back={() => {\r\n              setAddFormView(false);\r\n              setSelectedData({});\r\n            }}\r\n            // defaultValues={selectedData}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    )}\r\n\r\n    {detailView && (\r\n      <BlurBackground>\r\n        <CModal\r\n          alignment=\"center\"\r\n          visible={detailView}\r\n          onClose={() => setDetailView(false)}\r\n          aria-labelledby=\"VerticallyCenteredExample\"\r\n        >\r\n          <CModalBody className=\"p-3\">\r\n            <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n              <h5>Are you sure want to delete ?</h5>\r\n              <div className=\"d-flex gap-2 mt-2\">\r\n                <div style={{ width: \"80px\" }}>\r\n                  <PrimaryButton onClick={() => setDetailView(false)}>\r\n                    Yes\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"80px\" }}>\r\n                  <SecondaryButton onClick={() => setDetailView(false)}>\r\n                    No\r\n                  </SecondaryButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </BlurBackground>\r\n    )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default SexualStatus","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../../Badge/Badge\";\r\n  import { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst SleepTable = ({ columns, rowData, getselectedData }) => {\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n   <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SleepTable","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst SleepForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  \r\n    const options = [\"Disturbed\", \"Undisturbed\",\"Excess Dreams\",];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n              //  dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n           Duration (mins)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"0000\"\r\n              maxLength={4}\r\n              defaultValue={defaultValues?.name}\r\n              onInput={(e) => {\r\n                e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default SleepForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport SleepTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/SleepTable\";\r\nimport SleepForm from \"./SleepForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Sleep = () => {\r\n\r\n  const columnData = [\r\n    {  label: \"NO.\" },\r\n    {  label: \"Date\" },\r\n    {  label: \"Type\" },\r\n    {  label: \"DURATION (IN MINS)\" },\r\n    {  label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration:\"360\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration:\"360\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration:\"360\",\r\n    },\r\n    { \r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration:\"360\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration:\"360\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration:\"360\",\r\n    }\r\n\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n        <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSearch />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <SleepTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <SleepForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              // defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sleep","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport ExcerciseHabit from \"./ExerciseHabit/ExerciseHabit\";\r\nimport Mood from \"./Mood/Mood\";\r\nimport Nutrition from \"./Nutrition/Nutrition\";\r\nimport SexualStatus from \"./SexualStatus/SexualStatus\";\r\nimport Sleep from \"./Sleep/Sleep\";\r\n\r\n\r\nconst WellnessProfile = ({OnClose}) => {\r\n\r\n\r\n    const tabs = [\r\n        { id: 1, title: \"Exercise Habit\" },\r\n        { id: 2, title: \"Nutrition\" },\r\n        { id: 3, title: \"Sleep\" },\r\n        { id: 4, title: \"Mood\" },\r\n        { id: 5, title: \"Sexual Status\" },\r\n      ];\r\n      const [currentTab, setCurrentTab] = useState(1);\r\n      const getCurrentTab = (data) => {\r\n        setCurrentTab(data);\r\n      };\r\n\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-0\">\r\n      <CCol md={4} className=\"mb-2\">\r\n        <div className=\"d-flex gap-2\">\r\n          <img\r\n            alt=\"BackBtn\"\r\n            src={Assets.BackBtn}\r\n            style={{ width: \"35px\" }}\r\n            onClick={OnClose}\r\n            className=\"cursor\"\r\n          />\r\n          <span className=\"Obj-name d-flex align-items-center\">Wellness</span>\r\n        </div>\r\n      </CCol>\r\n      <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n        <div className=\"d-flex mt-2\">\r\n          <Breadcrumb\r\n            paths={[\r\n              { label: \"Home\", to: \"/patients\" },\r\n              { label: \"Patient List\", to: \"/patients\" },\r\n              { label: \"Medical Profile\", to: \"/patients/history\" },\r\n              {\r\n                label: \"Wellness\",\r\n                to: \"/patients/history\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow>\r\n      <CCol md={12}>\r\n        <MedicalTab\r\n          tabs={tabs}\r\n          getCurrentTab={getCurrentTab}\r\n          defaultTab={0}\r\n        />\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mt-3\">\r\n      {currentTab === 1 && (\r\n        <>\r\n          <ExcerciseHabit />\r\n        </>\r\n      )}\r\n      {currentTab === 2 && (\r\n        <>\r\n          <Nutrition />\r\n        </>\r\n      )}\r\n      {currentTab === 3 && (\r\n        <>\r\n          <Sleep />\r\n        </>\r\n      )}\r\n      {currentTab === 4 && (\r\n        <>\r\n          <Mood />\r\n        </>\r\n      )}\r\n      {currentTab === 5 && (\r\n        <>\r\n          <SexualStatus />\r\n        </>\r\n      )}\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default WellnessProfile","import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DateCards from \"../../../../../DateCards/DateCards\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst Ros = ({ onClose }) => {\r\n  const dateCards = [\r\n    {\r\n      id: 1,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Fever\", \"Sweating\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Hay fever\"],\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    { id: 9, date: \"06/07/2024\" },\r\n    { id: 10, date: \"06/07/2024\" },\r\n    { id: 11, date: \"06/07/2024\" },\r\n    { id: 12, date: \"06/07/2024\" },\r\n    { id: 13, date: \"06/07/2024\" },\r\n    { id: 14, date: \"06/07/2024\" },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(true);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [skinselectedOptions, setSkinSelectedOptions] = useState([]);\r\n  const [skinselectedOptions1, setSkinSelectedOptions1] = useState([]);\r\n  const [headselectedOptions, setHeadSelectedOptions] = useState([]);\r\n\r\n  const [labelName1, setLabelname1] = useState(\"\");\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const [labelName, setLabelname] = useState(selectedData?.ga?.status || \"\");\r\n  const [labelNameSkin, setLabelNameSkin] = useState(\r\n    selectedData?.ga?.status || \"\"\r\n  );\r\n  const [labelNameHead, setLabelNameHead] = useState(\r\n    selectedData?.ga?.status || \"\"\r\n  );\r\n  const [generalOpen, setGeneralOpen] = useState(false);\r\n  const [heentOpen, setHeentOpen] = useState(false);\r\n  const [skinOpen, setSkinOpen] = useState(false);\r\n  const [headOpen, setHeadOpen] = useState(false);\r\n\r\n  const [editView, setEditView] = useState(false);\r\n\r\n  const options = [\r\n    \"Weight Loss\",\r\n    \"Fever\",\r\n    \"Fatigue\",\r\n    \"Sweating\",\r\n    \"Appetite Changes\",\r\n    \"Night Sweats\",\r\n    \"Weakness\",\r\n    \"Chills\",\r\n  ];\r\n\r\n  const allergyoptions = [\r\n    \"Hives\",\r\n    \"Swelling of lips or tongue\",\r\n    \"Hay fever\",\r\n    \"Asthma\",\r\n    \"Eczema/Sensitive\",\r\n    \"AutoImmune Disorder\",\r\n    \"Sensitivity to drugs,food,pollens,or dander\",\r\n  ];\r\n\r\n  const skinyoptions = [\r\n    \"Rashes\",\r\n    \"Itching\",\r\n    \"Change in hair or nails\",\r\n    \"Skin Lesions\",\r\n  ];\r\n\r\n  const headoptions = [\"Headaches\", \"Head injury\"];\r\n\r\n  const itemsPerPage = 9; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return dateCards?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const handleSelect = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    } else {\r\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const handleSelectSkin = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSkinSelectedOptions([...skinselectedOptions, option]);\r\n    } else {\r\n      setSkinSelectedOptions(\r\n        skinselectedOptions.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSelectSkin1 = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSkinSelectedOptions1([...skinselectedOptions1, option]);\r\n    } else {\r\n      setSkinSelectedOptions1(\r\n        skinselectedOptions1.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSelectHead = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setHeadSelectedOptions([...headselectedOptions, option]);\r\n    } else {\r\n      setHeadSelectedOptions(\r\n        headselectedOptions.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const getselected = (data, method) => {\r\n    setSelectedData(data);\r\n    if (method === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (method === \"edit\") {\r\n      addFormPage();\r\n      setEditView(true);\r\n    }\r\n  };\r\n\r\n  const toggleSelected1 = (label) => {\r\n    setLabelname1(label);\r\n  };\r\n\r\n  const toggleSelectedSkin = (label) => {\r\n    setLabelNameSkin(label);\r\n  };\r\n\r\n  const HeadtoggleSelectedSkin = (label) => {\r\n    setLabelNameHead(label);\r\n  };\r\n\r\n  const toggleSelected = (label) => {\r\n    setIsSelected(!isSelected);\r\n    setLabelname(label);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editView) {\r\n      setLabelname(selectedData?.ga?.status);\r\n      setLabelname1(selectedData?.skin?.status);\r\n      setSelectedOptions(selectedData?.ga?.select);\r\n      setSkinSelectedOptions(selectedData?.skin?.select);\r\n      if (selectedData?.ga?.status === \"Yes\") {\r\n        setGeneralOpen(true);\r\n      }\r\n      if (selectedData?.skin?.status === \"Yes\") {\r\n        setHeentOpen(true);\r\n      }\r\n    } else {\r\n      setLabelname(\"\");\r\n      setLabelname1(\"\");\r\n      setGeneralOpen(false);\r\n      setHeentOpen(false);\r\n      setSelectedOptions([]);\r\n    }\r\n  }, [editView]);\r\n\r\n  const [eyesOpen, setEyesOpen] = useState(false);\r\n  const [eyesLabel, setEyesLabel] = useState(selectedData?.ga?.status || \"\");\r\n  const [eyeselection, setEyeselection] = useState([]);\r\n  const eyeOptions = [\r\n    \"Glasses or contacts\",\r\n    \"Change in vision\",\r\n    \"Eye pain\",\r\n    \"Double vision\",\r\n    \"Flashing lights\",\r\n    \"Glaucoma/Cataracts\",\r\n  ];\r\n  const toggleEyes = (label) => {\r\n    setEyesLabel(label);\r\n  };\r\n  const handleSelectEyes = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setEyeselection([...eyeselection, option]);\r\n    } else {\r\n      setEyeselection(eyeselection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const Ears = [\r\n    \"Change in hearing\",\r\n    \"Ear pain\",\r\n    \"Ear discharge\",\r\n    \"Ringing\",\r\n    \"Dizziness\",\r\n  ];\r\n  const [earsOpen, setEarsOpen] = useState(false);\r\n  const [earsLabel, setEarsLabel] = useState(selectedData?.ga?.status || \"\");\r\n  const [earSelection, setEarSelection] = useState([]);\r\n  const toggleEars = (label) => {\r\n    setEarsLabel(label);\r\n  };\r\n  const handleSelectEars = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setEarSelection([...earSelection, option]);\r\n    } else {\r\n      setEarSelection(earSelection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const Nose = [\"Nose bleeds\", \"Nasal stuffiness\", \"Frequent colds\"];\r\n  const [noseOpen, setNoseOpen] = useState(false);\r\n  const [noseLabel, setNoseLabel] = useState(\"\");\r\n  const [noseSelection, setNoseSelection] = useState([]);\r\n  const toggleNose = (label) => {\r\n    setNoseLabel(label);\r\n  };\r\n  const handleSelectNose = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setNoseSelection([...noseSelection, option]);\r\n    } else {\r\n      setNoseSelection(noseSelection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const MouthThroat = [\r\n    \"Bleeding gums\",\r\n    \"Sore tongue\",\r\n    \"Sore throat\",\r\n    \"Hoarseness\",\r\n  ];\r\n\r\n  const [mouthThroatOpen, setMouthThroatOpen] = useState(false);\r\n  const [mouthThroatLabel, setMouthThroatLabel] = useState(\"\");\r\n  const [mouthThroatSelection, setMouthThroatSelection] = useState([]);\r\n  const toggleMouth = (label) => {\r\n    setMouthThroatLabel(label);\r\n  };\r\n  const handleSelectMouth = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setMouthThroatSelection([...mouthThroatSelection, option]);\r\n    } else {\r\n      setMouthThroatSelection(\r\n        mouthThroatSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n  const Neck = [\"Lumps\", \"Goiter\", \"Swollen glands\", \"Stiffness\"];\r\n  const [neckOpen, setNeckOpen] = useState(false);\r\n  const [neckLabel, setNeckLabel] = useState(\"\");\r\n  const [neckSelection, setNeckSelection] = useState([]);\r\n  const toggleNeck = (label) => {\r\n    setNeckLabel(label);\r\n  };\r\n  const handleSelectNeck = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setNeckSelection([...neckSelection, option]);\r\n    } else {\r\n      setNeckSelection(neckSelection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const Breast = [\r\n    \"Lumps\",\r\n    \"Nipple discharge\",\r\n    \"Pain\",\r\n    \"BSE (Breast Self-Examination)\",\r\n  ];\r\n  const [breastOpen, setBreastOpen] = useState(false);\r\n  const [breastLabel, setBreastLabel] = useState(\"\");\r\n  const [breastSelection, setBreastSelection] = useState([]);\r\n  const toggleBreast = (label) => {\r\n    setBreastLabel(label);\r\n  };\r\n  const handleSelectBreast = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setBreastSelection([...breastSelection, option]);\r\n    } else {\r\n      setBreastSelection(breastSelection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const Respiratory = [\r\n    \"Shortness of breath\",\r\n    \"Cough\",\r\n    \"Production of phlegm, color\",\r\n    \"Wheezing\",\r\n    \"Dyspnea (Difficulty Breathing)\",\r\n    \"Coughing up blood\",\r\n    \"Chest pain\",\r\n  ];\r\n  const [respiratoryOpen, setRespiratoryOpen] = useState(false);\r\n  const [respiratoryLabel, setRespiratoryLabel] = useState(\"\");\r\n  const [respiratorySelection, setRespiratorySelection] = useState([]);\r\n  const toggleRespi = (label) => {\r\n    setRespiratoryLabel(label);\r\n  };\r\n  const handleSelectRespi = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setRespiratorySelection([...respiratorySelection, option]);\r\n    } else {\r\n      setRespiratorySelection(\r\n        respiratorySelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Cardiovascular = [\r\n    \"Chest Pain\",\r\n    \"Palpitations\",\r\n    \"Heart murmur\",\r\n    \"Blue fingers/toes\",\r\n    \"Swelling in hands/feet\",\r\n    \"HX of heart medication\",\r\n    \"High blood pressure\",\r\n    \"Skipping heart beats\",\r\n  ];\r\n  const [cardiovascularOpen, setCardiovascularOpen] = useState(false);\r\n  const [cardiovascularLabel, setCardiovascularLabel] = useState(\"\");\r\n  const [cardiovascularSelection, setCardiovascularSelection] = useState([]);\r\n  const toggleCardio = (label) => {\r\n    setCardiovascularLabel(label);\r\n  };\r\n  const handleSelectCardio = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setCardiovascularSelection([...cardiovascularSelection, option]);\r\n    } else {\r\n      setCardiovascularSelection(\r\n        cardiovascularSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Gastrointestinal = [\r\n    \"Difficulty in urination\",\r\n    \"Frequent urination at night\",\r\n    \"Pain or burning on urination\",\r\n    \"Urgent need to urinate\",\r\n    \"Dribbling\",\r\n    \"Incontinence of urine\",\r\n    \"Decreased urine stream\",\r\n    \"Blood in urine\",\r\n    \"UTI/stones/prostate\",\r\n    \"Infection\",\r\n  ];\r\n  const [gastrointestinalOpen, setGastrointestinalOpen] = useState(false);\r\n  const [gastrointestinalLabel, setGastrointestinalLabel] = useState(\"\");\r\n  const [gastrointestinalSelection, setGastrointestinalSelection] = useState(\r\n    []\r\n  );\r\n  const toggleGastro = (label) => {\r\n    setGastrointestinalLabel(label);\r\n  };\r\n  const handleSelectGastro = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setGastrointestinalSelection([...gastrointestinalSelection, option]);\r\n    } else {\r\n      setGastrointestinalSelection(\r\n        gastrointestinalSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const PeripheralVascularDisease = [\r\n    \"Leg cramps\",\r\n    \"Varicose veins\",\r\n    \"Clots in veins\",\r\n  ];\r\n  const [peripheralVascularDiseaseOpen, setPeripheralVascularDiseaseOpen] =\r\n    useState(false);\r\n  const [peripheralVascularDiseaseLabel, setPeripheralVascularDiseaseLabel] =\r\n    useState(\"\");\r\n  const [\r\n    peripheralVascularDiseaseSelection,\r\n    setPeripheralVascularDiseaseSelection,\r\n  ] = useState([]);\r\n  const togglePeripheral = (label) => {\r\n    setPeripheralVascularDiseaseLabel(label);\r\n  };\r\n  const handleSelectPeripheral = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setPeripheralVascularDiseaseSelection([\r\n        ...peripheralVascularDiseaseSelection,\r\n        option,\r\n      ]);\r\n    } else {\r\n      setPeripheralVascularDiseaseSelection(\r\n        peripheralVascularDiseaseSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n  const Musculoskeletal = [\r\n    \"Pain\",\r\n    \"Swelling\",\r\n    \"Stiffness\",\r\n    \"Decreased joint motion\",\r\n    \"Broken bone\",\r\n    \"Serious sprains\",\r\n    \"Arthritis\",\r\n    \"Gout\",\r\n  ];\r\n  const [musculoskeletalOpen, setMusculoskeletalOpen] = useState(false);\r\n  const [musculoskeletalLabel, setMusculoskeletalLabel] = useState(\"\");\r\n  const [musculoskeletalSelection, setMusculoskeletalSelection] = useState([]);\r\n  const toggleMusculo = (label) => {\r\n    setMusculoskeletalLabel(label);\r\n  };\r\n  const handleSelectMusculo = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setMusculoskeletalSelection([...musculoskeletalSelection, option]);\r\n    } else {\r\n      setMusculoskeletalSelection(\r\n        musculoskeletalSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Neurological = [\r\n    \"Headaches\",\r\n    \"Seizures\",\r\n    \"Syncope (Fainting)\",\r\n    \"Paralysis\",\r\n    \"Loss of muscle size\",\r\n    \"Muscle spasm\",\r\n    \"Weakness\",\r\n    \"Tremor\",\r\n    \"Incoordination\",\r\n    \"Numbness\",\r\n    \"Feeling of “pins and needles/tingles”\",\r\n    \"Involuntary movement\",\r\n  ];\r\n  const [neurologicalOpen, setNeurologicalOpen] = useState(false);\r\n  const [neurologicalLabel, setNeurologicalLabel] = useState(\"\");\r\n  const [neurologicalSelection, setNeurologicalSelection] = useState([]);\r\n  const toggleNeuro = (label) => {\r\n    setNeurologicalLabel(label);\r\n  };\r\n  const handleSelectNeuro = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setNeurologicalSelection([...neurologicalSelection, option]);\r\n    } else {\r\n      setNeurologicalSelection(\r\n        neurologicalSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Hematology = [\"Anemia\", \"Easy bruising/bleeding\", \"Past Transfusions\"];\r\n  const [hematologyOpen, setHematologyOpen] = useState(false);\r\n  const [hematologyLabel, setHematologyLabel] = useState(\"\");\r\n  const [hematologySelection, setHematologySelection] = useState([]);\r\n  const toggleHemato = (label) => {\r\n    setHematologyLabel(label);\r\n  };\r\n  const handleSelectHemato = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setHematologySelection([...hematologySelection, option]);\r\n    } else {\r\n      setHematologySelection(\r\n        hematologySelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Endocrine = [\r\n    \"Abnormal growth\",\r\n    \"Increased appetite\",\r\n    \"Increased thirst\",\r\n    \"Thyroid trouble\",\r\n    \"Diabetes\",\r\n    \"Heat/cold intolerance\",\r\n  ];\r\n  const [endocrineOpen, setEndocrineOpen] = useState(false);\r\n  const [endocrineLabel, setEndocrineLabel] = useState(\"\");\r\n  const [endocrineSelection, setEndocrineSelection] = useState([]);\r\n  const toggleEndo = (label) => {\r\n    setEndocrineLabel(label);\r\n  };\r\n  const handleSelectEndo = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setEndocrineSelection([...endocrineSelection, option]);\r\n    } else {\r\n      setEndocrineSelection(\r\n        endocrineSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n  const Psychiatric = [\r\n    \"Tension/Anxiety\",\r\n    \"Depression/suicide ideation\",\r\n    \"Memory problems\",\r\n    \"Unusual problems\",\r\n    \"Excessive sweating\",\r\n  ];\r\n  const [psychiatricOpen, setPsychiatricOpen] = useState(false);\r\n  const [psychiatricLabel, setPsychiatricLabel] = useState(\"\");\r\n  const [psychiatricSelection, setPsychiatricSelection] = useState([]);\r\n  const togglePsych = (label) => {\r\n    setPsychiatricLabel(label);\r\n  };\r\n  const handleSelectPsych = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setPsychiatricSelection([...psychiatricSelection, option]);\r\n    } else {\r\n      setPsychiatricSelection(\r\n        psychiatricSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={5} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Review of Systems (ROS)\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={7} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Review of Systems (ROS)\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center\"\r\n            >\r\n              <div>\r\n                <PrimaryButton\r\n                  onClick={() => {\r\n                    addFormPage();\r\n                    setSelectedData({});\r\n                  }}\r\n                >\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              {getCurrentPageItems()?.map((item, i) => (\r\n                <CCol lg={4} className=\"mb-3\" key={i}>\r\n                  <DateCards data={item} onClick={getselected} />\r\n                </CCol>\r\n              ))}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={dateCards?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <CRow className=\"mb-2\">\r\n              <CCol className=\"d-flex align-items-center gap-2\">\r\n                <span>Date</span>\r\n                <SingleDatePicker defaultDate={selectedData?.date} />\r\n              </CCol>\r\n              <CCol className=\"d-flex justify-content-end\">\r\n                <div style={{ width: \"120px\" }}>\r\n                  <ActiveButton\r\n                    onClick={() => {\r\n                      setAddFormView(false);\r\n                      setEditView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                  >\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets?.listview} alt=\"close\" />\r\n                      <span>List View</span>\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">General</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelName === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelected(\"Yes\");\r\n                      setGeneralOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelName === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelected(\"No\");\r\n                      setGeneralOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {generalOpen && (\r\n                <>\r\n                  {labelName === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {options?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelect}\r\n                            selected={selectedOptions.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={heentTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={heentTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Allergy</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelName1 === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelected1(\"Yes\");\r\n                      setHeentOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelName1 === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelected1(\"No\");\r\n                      setHeentOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {heentOpen && (\r\n                <>\r\n                  {labelName1 === \"Yes\" && (\r\n                    <>\r\n                      <CRow>\r\n                        {allergyoptions?.map((option, index) => (\r\n                          <CCol lg={\"auto\"}>\r\n                            <OptionItem\r\n                              key={index}\r\n                              label={option}\r\n                              onSelect={handleSelectSkin}\r\n                              selected={skinselectedOptions?.includes(option)}\r\n                              disabled={editView}\r\n                            />\r\n                          </CCol>\r\n                        ))}\r\n                      </CRow>\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            disabled={editView}\r\n                            defaultValue={selectedData?.skin?.notes}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!skinOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {skinOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Skin</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelNameSkin === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelectedSkin(\"Yes\");\r\n                      setSkinOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelNameSkin === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelectedSkin(\"No\");\r\n                      setSkinOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {skinOpen && (\r\n                <>\r\n                  {labelNameSkin === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {skinyoptions?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectSkin1}\r\n                            selected={skinselectedOptions1.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!headOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {headOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Head</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelNameHead === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      HeadtoggleSelectedSkin(\"Yes\");\r\n                      setHeadOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelNameHead === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      HeadtoggleSelectedSkin(\"No\");\r\n                      setHeadOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {headOpen && (\r\n                <>\r\n                  {labelNameHead === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {headoptions?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectHead}\r\n                            selected={headselectedOptions.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!eyesOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {eyesOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Eyes</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      eyesLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEyes(\"Yes\");\r\n                      setEyesOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      eyesLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEyes(\"No\");\r\n                      setEyesOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {eyesOpen && (\r\n                <>\r\n                  {eyesLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {eyeOptions?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectEyes}\r\n                            selected={eyeselection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!earsOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {earsOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Ears</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      earsLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEars(\"Yes\");\r\n                      setEarsOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      earsLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEars(\"No\");\r\n                      setEarsOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {earsOpen && (\r\n                <>\r\n                  {earsLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Ears?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectEars}\r\n                            selected={earSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!noseOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {noseOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Nose</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      noseLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNose(\"Yes\");\r\n                      setNoseOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      noseLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNose(\"No\");\r\n                      setNoseOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {noseOpen && (\r\n                <>\r\n                  {noseLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Nose?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectNose}\r\n                            selected={noseSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!mouthThroatOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {mouthThroatOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Mouth/Throat</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      mouthThroatLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleMouth(\"Yes\");\r\n                      setMouthThroatOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      mouthThroatLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleMouth(\"No\");\r\n                      setMouthThroatOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {mouthThroatOpen && (\r\n                <>\r\n                  {mouthThroatLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {MouthThroat?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectMouth}\r\n                            selected={mouthThroatSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!neckOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {neckOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Neck</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      neckLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNeck(\"Yes\");\r\n                      setNeckOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      neckLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNeck(\"No\");\r\n                      setNeckOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {neckOpen && (\r\n                <>\r\n                  {neckLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Neck?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectNeck}\r\n                            selected={neckSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!breastOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {breastOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Breast</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      breastLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleBreast(\"Yes\");\r\n                      setBreastOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      breastLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleBreast(\"No\");\r\n                      setBreastOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {breastOpen && (\r\n                <>\r\n                  {breastLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Breast?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectBreast}\r\n                            selected={breastSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!respiratoryOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {respiratoryOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Respiratory</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      respiratoryLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleRespi(\"Yes\");\r\n                      setRespiratoryOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      respiratoryLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleRespi(\"No\");\r\n                      setRespiratoryOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {respiratoryOpen && (\r\n                <>\r\n                  {respiratoryLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Respiratory?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectRespi}\r\n                            selected={respiratorySelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!cardiovascularOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {cardiovascularOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Cardiovascular</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      cardiovascularLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleCardio(\"Yes\");\r\n                      setCardiovascularOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      cardiovascularLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleCardio(\"No\");\r\n                      setCardiovascularOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {cardiovascularOpen && (\r\n                <>\r\n                  {cardiovascularLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Cardiovascular?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectCardio}\r\n                            selected={cardiovascularSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!gastrointestinalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {gastrointestinalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Gastrointestinal</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      gastrointestinalLabel === \"Yes\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleGastro(\"Yes\");\r\n                      setGastrointestinalOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      gastrointestinalLabel === \"No\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleGastro(\"No\");\r\n                      setGastrointestinalOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {gastrointestinalOpen && (\r\n                <>\r\n                  {gastrointestinalLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Gastrointestinal?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectGastro}\r\n                            selected={gastrointestinalSelection.includes(\r\n                              option\r\n                            )}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!peripheralVascularDiseaseOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {peripheralVascularDiseaseOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">\r\n                  Peripheral Vascular Disease\r\n                </span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      peripheralVascularDiseaseLabel === \"Yes\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      togglePeripheral(\"Yes\");\r\n                      setPeripheralVascularDiseaseOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      peripheralVascularDiseaseLabel === \"No\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      togglePeripheral(\"No\");\r\n                      setPeripheralVascularDiseaseOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {peripheralVascularDiseaseOpen && (\r\n                <>\r\n                  {peripheralVascularDiseaseLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {PeripheralVascularDisease?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectPeripheral}\r\n                            selected={peripheralVascularDiseaseSelection.includes(\r\n                              option\r\n                            )}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!musculoskeletalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {musculoskeletalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Musculoskeletal</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      musculoskeletalLabel === \"Yes\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleMusculo(\"Yes\");\r\n                      setMusculoskeletalOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      musculoskeletalLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleMusculo(\"No\");\r\n                      setMusculoskeletalOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {musculoskeletalOpen && (\r\n                <>\r\n                  {musculoskeletalLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Musculoskeletal?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectMusculo}\r\n                            selected={musculoskeletalSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!neurologicalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {neurologicalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Neurological</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      neurologicalLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNeuro(\"Yes\");\r\n                      setNeurologicalOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      neurologicalLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNeuro(\"No\");\r\n                      setNeurologicalOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {neurologicalOpen && (\r\n                <>\r\n                  {neurologicalLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Neurological?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectNeuro}\r\n                            selected={neurologicalSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!hematologyOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {hematologyOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Hematology</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      hematologyLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleHemato(\"Yes\");\r\n                      setHematologyOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      hematologyLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleHemato(\"No\");\r\n                      setHematologyOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {hematologyOpen && (\r\n                <>\r\n                  {hematologyLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Hematology?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectHemato}\r\n                            selected={hematologySelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!endocrineOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {endocrineOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Endocrine</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      endocrineLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEndo(\"Yes\");\r\n                      setEndocrineOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      endocrineLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEndo(\"No\");\r\n                      setEndocrineOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {endocrineOpen && (\r\n                <>\r\n                  {endocrineLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Endocrine?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectEndo}\r\n                            selected={endocrineSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!psychiatricOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {psychiatricOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Psychiatric</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      psychiatricLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      togglePsych(\"Yes\");\r\n                      setPsychiatricOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      psychiatricLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      togglePsych(\"No\");\r\n                      setPsychiatricOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {psychiatricOpen && (\r\n                <>\r\n                  {psychiatricLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Psychiatric?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectPsych}\r\n                            selected={psychiatricSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            {!editView && (\r\n              <>\r\n                <div className=\"vertical-line mt-2 mb-3\"></div>\r\n                <CRow className=\"mb-1\">\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton\r\n                      onClick={() => {\r\n                        setAddFormView(false);\r\n                        setEditView(false);\r\n                      }}\r\n                    >\r\n                      CANCEL\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </CRow>\r\n              </>\r\n            )}\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ros;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Breadcrumb from \"../../../../Breadcrumb/Breadcrumb\";\r\nimport \"../Objective/Objective.css\";\r\nimport Table from \"../../../../Tables/Table\";\r\nimport ChiefComplaints from \"./Chief Complaints/ChiefComplaints\";\r\nimport PresentIllness from \"./Present Illness/PresentIllness\";\r\nimport History from \"./History/History\";\r\nimport WellnessProfile from \"./WellnessProfile/WellnessProfile\";\r\nimport Ros from \"./Ros/Ros\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Subjective = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Chief Complaints\", image: Assets.VitalSig },\r\n    { id: 2, name: \"History of Present Illness (HPI)\", image: Assets.PhyExam },\r\n    { id: 3, name: \"History\", image: Assets.History },\r\n    { id: 4, name: \"Wellness Profile\", image: Assets.WellnessProfile },\r\n    { id: 5, name: \"Review of Systems (ROS)\", image: Assets.ReviewSytm },\r\n  ];\r\n  const navigate = useNavigate();\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-2\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 0;\r\n  const GoTOConsultPage = localStorage.getItem(\"PatientConsultTab\");\r\n  const parsedConsult = GoTOConsultPage ? JSON.parse(GoTOConsultPage) : false;\r\n \r\n  const [selectedData, setSelectedData] = useState();\r\n  const [cardView, setCardView] = useState(\r\n    ParsedPatientSubMenu === 1 ? true : false\r\n  );\r\n  const [presentIll, setPresentIll] = useState(\r\n    ParsedPatientSubMenu === 2 ? true : false\r\n  );\r\n  const [historyView, setHistoryView] = useState(\r\n    ParsedPatientSubMenu === 3 ? true : false\r\n  );\r\n  const [wellnessView, setWellnessView] = useState(\r\n    ParsedPatientSubMenu === 4 ? true : false\r\n  );\r\n  const [rosView, setRosView] = useState(\r\n    ParsedPatientSubMenu === 5 ? true : false\r\n  );\r\n\r\n  const getSelectedData = (data) => {\r\n    setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setCardView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setPresentIll(true);\r\n    }\r\n    if (data?.id === 3) {\r\n      setHistoryView(true);\r\n    }\r\n    if (data?.id === 4) {\r\n      setWellnessView(true);\r\n    }\r\n    if (data?.id === 5) {\r\n      setRosView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        {!cardView &&\r\n        !presentIll &&\r\n        !historyView &&\r\n        !wellnessView &&\r\n        !rosView ? (\r\n          <CRow>\r\n            {cardData.map((dt, i) => (\r\n              <CCol md={4} xl={3} className=\"mb-3\">\r\n                <Card\r\n                  className=\"min-height-200\"\r\n                  data={dt}\r\n                  getSelectedData={getSelectedData}\r\n                />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        ) : cardView ? (\r\n          <>\r\n            <ChiefComplaints\r\n              OnClose={() => {\r\n                if (parsedConsult) {\r\n                  navigate(-1);\r\n                  setCardView(false);\r\n                  localStorage.setItem(\r\n                    \"PatientConsultTab\",\r\n                    JSON.stringify(false)\r\n                  );\r\n                } else {\r\n                  setCardView(false);\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        ) : presentIll ? (\r\n          <>\r\n            <PresentIllness\r\n              OnClose={() => {\r\n                if (parsedConsult) {\r\n                  navigate(-1);\r\n                  setPresentIll(false);\r\n                  localStorage.setItem(\r\n                    \"PatientConsultTab\",\r\n                    JSON.stringify(false)\r\n                  );\r\n                } else {\r\n                  setPresentIll(false);\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        ) : historyView ? (\r\n          <>\r\n            <History\r\n              OnClose={() => {\r\n                if (parsedConsult) {\r\n                  navigate(-1);\r\n                  setHistoryView(false);\r\n                  localStorage.setItem(\r\n                    \"PatientConsultTab\",\r\n                    JSON.stringify(false)\r\n                  );\r\n                } else {\r\n                  setHistoryView(false);\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        ) : wellnessView ? (\r\n          <>\r\n            <WellnessProfile\r\n              OnClose={() => {\r\n                if (parsedConsult) {\r\n                  navigate(-1);\r\n                  setWellnessView(false);\r\n                  localStorage.setItem(\r\n                    \"PatientConsultTab\",\r\n                    JSON.stringify(false)\r\n                  );\r\n                } else {\r\n                  setWellnessView(false);\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        ) : rosView ? (\r\n          <>\r\n            <Ros\r\n              onClose={() => {\r\n                if (parsedConsult) {\r\n                  navigate(-1);\r\n                  setRosView(false);\r\n                  localStorage.setItem(\r\n                    \"PatientConsultTab\",\r\n                    JSON.stringify(false)\r\n                  );\r\n                } else {\r\n                  setRosView(false);\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Subjective;\r\n","import React, { useState } from \"react\";\r\nimport MedicalTab from \"./MedicalTab\";\r\nimport Objective from \"./Objective/Objective\";\r\nimport Assesment from \"./Assesment/Assesment\";\r\nimport Plan from \"./Plan/Plan\";\r\nimport Subjective from \"./Subjective/Subjective\";\r\n\r\nconst MedicalProfile = () => {\r\n  const tabs = [\r\n    { id: 1, title: \"Subjective\" },\r\n    { id: 2, title: \"Objective\" },\r\n    { id: 3, title: \"Assesment\" },\r\n    { id: 4, title: \"Plan\" },\r\n  ];\r\n  const PatientSubMenu = localStorage.getItem(\"PatientSubMenu-1\");\r\n  const ParsedPatientSubMenu = PatientSubMenu ? JSON.parse(PatientSubMenu) : 1;\r\n\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <MedicalTab tabs={tabs} getCurrentTab={getCurrentTab} defaultTab={currentTab - 1} />\r\n        {currentTab === 1 && <Subjective />}\r\n        {currentTab === 2 && <Objective />}\r\n        {currentTab === 3 && <Assesment />}\r\n        {currentTab === 4 && <Plan />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalProfile;\r\n","import { CCard, CCardBody, CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst PairTab = () => {\r\n  return (\r\n    <CContainer>\r\n      <CRow>\r\n        <CCol md={12} className=\"p-0\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <div className=\"d-flex justify-content-center align-items-center gap-3\">\r\n                <div>\r\n                  <img alt=\"qrCode\" src={Assets.QrCode} />\r\n                </div>\r\n                <div className=\"d-flex flex-column mb-3\">\r\n                  <span className=\"fs-16 fw-600 text-secondary\">\r\n                    User Name : <strong style={{ color: \"black\" }}>10</strong>\r\n                  </span>\r\n                  <span className=\"fs-16 fw-600 text-secondary\">\r\n                    Password : <strong style={{ color: \"black\" }}>98786</strong>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default PairTab;\r\n","import React, { useState } from 'react'\r\nimport { CModal, CModalBody, CModalHeader, CModalTitle, CButton, CModalFooter, CFormSelect, CRow, CCol } from '@coreui/react'\r\n// import { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst Filter = ({ visible, setVisible }) => {\r\n\r\n  const today = new Date();\r\n\r\n  const [startDate, setStartDate] = useState(today);\r\n  const [endDate, setEndDate] = useState(today);\r\n\r\n  function ClearFunction() {\r\n      setStartDate();\r\n      setEndDate();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       <CModal\r\n            visible={visible}\r\n            onClose={() => setVisible(false)}\r\n            aria-labelledby=\"LiveDemoExampleLabel\"\r\n            className='modal-cutomize'\r\n            backdrop=\"static\"\r\n        >\r\n            <CModalHeader>\r\n                <CModalTitle id=\"LiveDemoExampleLabel\">FILTER</CModalTitle>\r\n            </CModalHeader>\r\n            <CModalBody>\r\n                <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    options={[\r\n                        'Filter with Doctor',\r\n                        { label: 'Doctor One', value: '1' },\r\n                        { label: 'Doctor Two', value: '2' },\r\n                        { label: 'Dcotor Three', value: '3' }\r\n                    ]}\r\n                />\r\n                <CRow className='mb-4'>\r\n                    <CCol lg={6} sm={12}>\r\n                        <p className='date-sec'>From Date</p>\r\n                        <DatePicker\r\n                            showIcon\r\n                            selected={startDate}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            isClearable\r\n                            className=\"date-range-picker picker-sec\"\r\n                            dateFormat=\"MM/dd/yyyy\"\r\n                        />\r\n                    </CCol>\r\n                    <CCol lg={6} sm={12}>\r\n                        <p className='date-sec'>End Date</p>\r\n                        <DatePicker\r\n                            showIcon\r\n                            selected={endDate}\r\n                            onChange={(date) => setEndDate(date)}\r\n                            isClearable\r\n                            className=\"date-range-picker picker-sec\"\r\n                        />\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow className=''>\r\n                  <CCol lg={6} md={6} sm={12}>\r\n                  <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    label={\"Specialty\"}\r\n                    options={[\r\n                        'MD',\r\n                        { label: 'Doctor One', value: '1' },\r\n                        { label: 'Doctor Two', value: '2' },\r\n                        { label: 'Dcotor Three', value: '3' }\r\n                    ]}\r\n                />\r\n                  </CCol>\r\n                  <CCol lg={6} md={6} sm={12}>\r\n                  <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    label={\"Roaster Availability\"}\r\n                    options={[\r\n                        'Available',\r\n                        { label: 'Doctor One', value: '1' },\r\n                        { label: 'Doctor Two', value: '2' },\r\n                        { label: 'Dcotor Three', value: '3' }\r\n                    ]}\r\n                />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=''>\r\n                  <CCol lg={6} md={6} sm={12}>\r\n                  <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    label={\"Gender\"}\r\n                    options={[\r\n                        'All',\r\n                        { label: 'Male', value: '1' },\r\n                        { label: 'Female', value: '2' },\r\n                        { label: 'Others', value: '3' }\r\n                    ]}\r\n                />\r\n                  </CCol>\r\n                  </CRow>\r\n            </CModalBody>\r\n            <CModalFooter>\r\n                <CButton color=\"secondary\" onClick={() => ClearFunction()} className='clear-filter-btn'>\r\n                    Clear Filter\r\n                </CButton>\r\n                <CButton color=\"primary\" className='apply-filter-sec' onClick={() => setVisible(false)}>Apply Filter</CButton>\r\n            </CModalFooter>\r\n        </CModal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\nimport DoctorCards from \"../../../../Components/DoctorCards/DoctorCards\";\r\nimport { CModal, CModalBody, CModalHeader, CModalTitle, CForm, CFormInput, CButton, CModalFooter, CFormSelect, CRow, CCol } from '@coreui/react'\r\nimport './Call.css';\r\nimport Filter from \"./Filter/Filter\";\r\n\r\n\r\n\r\nconst CallTab = () => {\r\n\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const [showMobileInput, setShowMobileInput] = useState(false);\r\n  const [showEmailInput, setShowEmailInput] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const DoctorDetail = [\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n  ];\r\n\r\n  const DetailSec = () => {\r\n    navigate(\"/patients/summary\");\r\n  };\r\n  const handleMobileClick = () => {\r\n    setShowMobileInput(!showMobileInput);\r\n    setShowEmailInput(false);\r\n  };\r\n\r\n  const handleEmailClick = () => {\r\n    setShowEmailInput(!showEmailInput);\r\n    setShowMobileInput(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <section className=\"call-tab-sec mt-3\">\r\n      <div className=\"flex-sec top-sec\">\r\n        <div className=\"bread-crumbs\">\r\n          <p className=\"mb-0\">\r\n            <Link to=\"/patients\">Patient</Link> /{\" \"}\r\n            <Link to=\"/patients\" className=\"active\">\r\n              Registered Doctor\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"search-filter-sec\">\r\n          <div className=\"search-bar\">\r\n            <input type=\"text\" placeholder=\"Search Doctor\" />\r\n            <button type=\"submit\">\r\n              <i className=\"fas fa-search\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"patient-adding\">\r\n            <button onClick={() => setVisible(!visible)}>\r\n              <img src={Assets.filter} alt=\"filter-sec\" className=\"filter-icon\" />{\" \"}\r\n              Filter\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"invite-doc-sec\">\r\n        <div className=\"invite-doc-sec-inside\">\r\n          <h3>Invite a Doctor</h3>\r\n          <div className=\"mobi-mail-btn-sec\">\r\n            <div className={showMobileInput ? \"cliked-icon\" : \"mobile-icon\"}>\r\n              <button type=\"button\" onClick={handleMobileClick}>\r\n                <i className=\"fas fa-mobile\"></i> &nbsp; Mobile\r\n              </button>\r\n            </div>\r\n            <div className={showEmailInput ? \"cliked-icon\" : \"mobile-icon\"}>\r\n              <button type=\"button\" onClick={handleEmailClick}>\r\n                <i className=\"fas fa-envelope\"></i> &nbsp;\r\n                Email\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {showMobileInput && (\r\n          <>\r\n\r\n            <hr />\r\n            <CForm>\r\n              <div className=\"mobile-input-section\">\r\n                <div>\r\n                  <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    label={\"ISD Code\"}\r\n                    options={[\r\n                      '+91 India',\r\n                      { label: ' One', value: '1' },\r\n                      { label: ' Two', value: '2' },\r\n                      { label: ' Three', value: '3' }\r\n                    ]}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"exampleFormControlInput1\"\r\n                    label=\"Mobile Number\"\r\n                    placeholder=\"Enter\"\r\n                    aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <CButton color=\"primary\" className=\"start-btn\">Start</CButton>\r\n                </div>\r\n              </div>\r\n            </CForm>\r\n\r\n\r\n          </>\r\n        )}\r\n        {showEmailInput && (\r\n          <>\r\n            <hr />\r\n              <CForm>\r\n              <div className=\"mobile-input-section\">\r\n              <div>\r\n              <CFormInput\r\n                  type=\"email\"\r\n                  id=\"exampleFormControlInput1\"\r\n                  label=\"Email Address\"\r\n                  placeholder=\"Enter\"\r\n                  aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                />\r\n                </div>\r\n                <div>\r\n                <CButton color=\"primary\" className=\"start-btn\">Start</CButton>\r\n                </div>\r\n              </div>\r\n              </CForm>\r\n           \r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"doctor-card-sec\">\r\n        <div className=\"row\">\r\n          {DoctorDetail?.map((data, i) => (\r\n            <div className=\"col-4\" onClick={() => DetailSec()} >\r\n              <Link className=\"card-link\">\r\n                <DoctorCards DoctorDetail={data} />\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className='modal-sec'>\r\n        <Filter visible={visible} setVisible={setVisible} />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CallTab","import React, { useState } from \"react\";\r\nimport \"./PatientDetailsView.css\";\r\nimport PatentProfile from \"../../../Components/Dashboard/PatentProfile/PatentProfile\";\r\nimport { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport PatientTabs from \"../../../Components/Dashboard/PatientTabs/PatientTabs\";\r\nimport Breadcrumb from \"../../../Components/Breadcrumb/Breadcrumb\";\r\nimport VitalsTab from \"../../../Components/Dashboard/PatientTabs/VitalsTab/VitalsTab\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport MedicalProfile from \"../../../Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalProfile\";\r\nimport PairTab from \"../../../Components/Dashboard/PatientTabs/PairTab/PairTab\";\r\nimport CallHistoryView from \"../../CallHistory/CallHistoryView\";\r\nimport CallTab from \"../../../Components/Dashboard/PatientTabs/CallTab/CallTab\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst PatientDetailsView = () => {\r\n  const [currentTab, setCurrentTab] = useState(() => {\r\n    // Initial state setup using localStorage\r\n    const storedCount = localStorage.getItem(\"patiendDetailTab\");\r\n    const storedFrom = localStorage.getItem(\"PatientMenu\");\r\n    const parsedData = storedCount && JSON.parse(storedCount);\r\n    return storedCount ? parsedData?.id : storedFrom ? Number(storedFrom) : null;\r\n  });\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {/* <CContainer> */}\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={12} xl={5} className=\"mb-2\">\r\n          <PatentProfile />\r\n        </CCol>\r\n        <CCol md={12} xl={7}>\r\n          {/* tabs={tabs} */}\r\n          <PatientTabs getCurrentTab={getCurrentTab} />\r\n        </CCol>\r\n      </CRow>\r\n      {!currentTab && <CallHistoryView />}\r\n\r\n      {currentTab === 2 && (\r\n        <CRow>\r\n          <CCol md={12}>\r\n            <MedicalProfile />\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {currentTab === 4 && (\r\n        <CRow>\r\n          <CCol md={12}>\r\n            <PairTab />\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {currentTab === 1 && (\r\n        <CRow>\r\n          <CCol md={12}>\r\n            <CallTab />\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {/* </CContainer> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientDetailsView;\r\n"],"names":["_ref","_datas$tableData","datas","removePercent","str","replace","formattedData","tableData","map","item","_item$date","name","date","split","data1","parseInt","CustomTooltip","_ref2","active","payload","label","length","_jsxs","style","backgroundColor","border","padding","children","_jsx","className","concat","chartLabel1","value","_Fragment","LineChart","width","height","data","margin","top","right","left","bottom","Tooltip","content","Line","type","dataKey","stroke","strokeWidth","category","openModal","filteredProducts","id","icon","Assets","VitalBP","badge","color","columnsData","result","status","systolic","diastolic","action","VitalBs","blood_sugar","blood_sugar_value","VitalBMI","bmi","weight","VitalHCT","hct_rate","VitalHBeat","ecg_result","ecg","contentType","link","ecgSample","interpretation","ecg_type","VitalHae","hemoglobin","hemoglobinValue","BKetone","blood_ketone","blood_ketone_value","VitalLipid","total_cholesterol","totalOnly","triglycerides","hdl","ldl","vldl","VitalRespi","SpO2","spo2","Temp","temperature","temperature_value","LFT","BUAcid","blood_uric_acid","blood_uric_acid_value","Urinalysis","chartLabel2","chartValue","specific_gravity","ph","clarity","protein","glucose","Urea","urea","urea_value","Creatinine","creatinine","creatinine_value","GFR","gfr","gfr_value","filter","product","CRow","CCol","md","index","xl","CCard","onClick","CCardBody","alt","src","dt","i","Badge","contentUrl","maxWidth","maxHeight","CardChart","getSelectedData","image","isOpen","onClose","CModal","visible","alignment","size","CModalBody","CloseBtn","parseFloat","data2","minValue","Math","min","maxValue","max","isNaN","Infinity","XAxis","axisLine","tickLine","YAxis","yMax","domain","formatter","tooltipFormatter","props","Legend","CartesianGrid","horizontal","vertical","Set","BarChart","Bar","fill","console","log","tabs","title","currentTab","setCurrentTab","useState","switchTab","LineChartDetails","ColumnChartDetails","addBack","defaultData","selectedTime","setSelectedTime","selectedDate","setSelectedDate","useEffect","defaultDateString","defaultDate","dateString","_datePart$split","_timePart$split","parts","datePart","timePart","month","day","year","Number","hours","minutes","Date","parseDateString","CContainer","lg","class","for","DatePicker","showIcon","selected","onChange","isClearable","closeOnScroll","wrapperClassName","showTimeSelect","showTimeSelectOnly","timeIntervals","dateFormat","defaultValue","xs","PrimaryButton","SecondaryButton","match","_defaultData$ecg","setType","options","findIndex","indexOf","borderRadius","Dropdown","getSelectedValue","_defaultData$result","extractNum","placeholder","cell","setCell","e","target","getTableDatas","post","patch","useApi","setSystolic","toString","setDiastolic","pulse","setPulse","errors","setErrors","formattedDate","String","getDate","padStart","getMonth","getFullYear","getFormattedDate","defaultDateTime","defaultTime","parsedDate","parse","isValid","setHours","setMinutes","setSeconds","onSubmit","validate","newErrors","time","trim","onEdit","onAdd","async","url","body","details","format","user_id","slug","toast","success","error","DATE_FORMAT","updatedDateTime","getHours","getMinutes","deleteModal","setDeleteModal","editModal","setEditModal","selectedData","setSelectedData","loading","del","clearCache","deleteData","editData","column","row","rowIndex","renderCell","BlurBackground","onDelete","CModalHeader","BMI","BPForm","RespirationRateForm","Spo2","Temperature","LFTForm","HeartRate","BSugar","LipidProfileForm","HCT","Hemogloin","BUricAcid","columnKey","toLowerCase","renderPdf","window","open","formatDateTime","dateTimeString","renderActionButton","Warning","EditPencil","Delete","startDate","setStartDate","endDate","setEndDate","today","maxDate","ActiveButton","CloseX","dateOnly","slice","items","setItems","setFilter","handleFilter","_data$tableData","filteredItems","_data$badge","chartView","setChartView","addView","setAddView","filterView","setFilterView","filterBack","Add","Filter","Chart","ECGChart","ChartTab","DateRangePicker","DynamicTable","setVitalView","currentTabtitle","titleObject","find","findTitleById","isModalOpen","setIsModalOpen","cardSelectedData","setSelectedCardData","entities","setEntities","get","TableDatas","response","code","_response$data","originalData","Array","isArray","bpFlagColor","bpFlag","freeze","reverse","join","transformData","vitals","err","BackBtn","Breadcrumb","paths","to","MedicalTab","getCurrentTab","defaultTab","VitalsTab","Modal","closeModal","ObjectiveDetailPage","deleteorg","onSelect","disabled","isSelected","setIsSelected","toggleSelected","_selectedData$ga","_getCurrentPageItems","_selectedData$ga5","_selectedData$skin4","dateCards","ga","notes","select","skin","currentPage","setCurrentPage","addFormView","setAddFormView","selectedOptions","setSelectedOptions","skinselectedOptions","setSkinSelectedOptions","labelName1","setLabelname1","deleteView","setDeleteView","labelName","setLabelname","editView","setEditView","skinoptions","addFormPage","handleSelect","option","handleSelectSkin","nutritionOpen","setNutritionOpen","constiOpen","setConstiOpen","generalOpen","setGeneralOpen","heentOpen","setHeentOpen","_selectedData$ga2","_selectedData$skin","_selectedData$ga3","_selectedData$skin2","_selectedData$ga4","_selectedData$skin3","getselected","method","toggleSelected1","DateSelector","getCurrentPageItems","startIndex","endIndex","DateCards","Pagination","onPageChange","pageNumber","totalItems","itemsPerPage","SingleDatePicker","listview","PlusIcon","MinusIcon","OptionItem","includes","rowData","file","SearchBar","OptionsIcon","LabTable","columns","getselectedData","LabForm","back","defaultValues","setDate","tabindex","Export","CTable","CTableHead","CTableRow","CTableHeaderCell","CTableBody","CTableDataCell","TableEdit","TableDelete","ImagingTable","ImagingForm","Objective","cardData","VitalSig","PhyExam","vitalView","phyView","setPhyView","labView","setLabView","imagingView","setImagingView","VitalSign","PhysicalExam","Lab","Imaging","Card","testSubIcon","testUnSubIcon","testViewIcon","questions","formTitle","formData","setFormData","handleChange","prevState","preventDefault","question","cIndex","CFormCheck","checked","Psychiatric","setFormTitle","PsychiatricTable","PsychiatricForm","Neurological","Peadiatric","Ophthalmic","Assesment","Diagnosis","Immunizaion","AssesmentTool","navigate","useNavigate","PatientSubMenu2","localStorage","getItem","ParsedPatientSubMenu","JSON","GoTOConsultPage","parsedConsult","diagnosisView","setDiagnosisView","immunizationView","setImmunizationView","assessmentView","setAssessmentView","setItem","stringify","Immunization","AssessmentTool","buttonName2","getbtnNames","buttonText","setButtonText","setIsOpen","handleItemClick","text","toggleDropdown","cUp","cDown","trimester","setTrimester","DropdownButton","LabOrder","icd_code","lab_status","lab_name","detailView","setDetailView","LabOrderTable","LabOrderForm","CFormSelect","inline","defaultChecked","ImagingOrder","scan_status","scan_name","ImagingOrderTable","ImagingOrderForm","_defaultValues$medici","_defaultValues$medici2","_defaultValues$medici21","_defaultValues$medici22","medicines","setMedicines","strength","strengthMeasurement","days","totalQty","instruction","reason","m","a","n","food","handleAddMedicine","newMedicines","push","handleRemoveMedicine","medicine","handleMedicineInputChange","fieldName","newValue","processedValue","toISOString","btnValue","setBtnValue","btnView","setBtnView","setStrength","qty","setQty","timeTaken","setTimeTaken","_defaultValues$medici3","_defaultValues$medici4","_defaultValues$medici5","_defaultValues$medici6","_defaultValues$medici7","_defaultValues$medici8","_defaultValues$medici9","_defaultValues$medici10","_defaultValues$medici11","_defaultValues$medici12","_defaultValues$medici13","_defaultValues$medici14","_defaultValues$medici15","_defaultValues$medici16","_defaultValues$medici17","_defaultValues$medici18","_defaultValues$medici19","_defaultValues$medici20","paddingRight","boxSizing","whiteDel","whiteAdd","rx","frequency","duration","rowSpan","TickCircle","display","justifyContent","PlusCircle","transform","MedicationOrder","completedView","setCompletedView","MedicationOrderTable","MedicationOrderForm","MedicationCompleted","DetailsTable","disableText","setDisableText","gravidaoptions","findgravidaIndex","description","no","ProcedurerTable","ProcedureForm","ProcedureTab","date_time","therapy_name","therapist_name","options1","getSelectedValue1","htmlFor","DateSearch","search","TherapiesTab","TherapiesTable","TherapiesForm","prev_illness","PatientEducationTab","PatientEducationTable","PatientEducationForm","provider_name","timeCaption","NextAppointmentTab","NextAppointmentTable","NextAppointmentForm","Plan","Orders","Therapies","Vaccine","CPT","PatEdu","ordersView","setOrdersView","cptView","setCptView","therapiesView","setTherapiesView","patientView","setPatientView","appointView","setAppointmentView","Cpt","PatientEducation","NextAppointment","onset_date","allergy","reaction","severity","CFormTextarea","Allergies","AllergiesTable","AllergiesForm","OnClose","PatientSubMenu3","SignsSymptoms","Medication","MedicalHistory","OGHistory","from","SurgicalHistory","FamilyHistory","SocialHistory","intensity","exercises","setExercises","updatedData","newExercises","ex","exercise","maxLength","onInput","hgdf","handleRemoveExercise","handleAddExercise","ExerciseHabit","ExerciseHabitTable","ExcerciseHabitForm","Mood","MoodTable","MoodForm","type_of_diet","intake","chronic","Nutrition","FluidIntakerowData","NutritionDietTable","NutritionFluidTable","getCurrentFluidPageItems","DietForm","FluidIntakeForm","sexual_activity","history","screening_date","current_status","historySti","setHistorySti","currentSti","setCurrentSti","handleHistoryStiClick","event","handleCurrentStiClick","SexualStatus","SexualStatusTable","SexualStatusForm","Sleep","SleepTable","SleepForm","ExcerciseHabit","_selectedData$ga7","_selectedData$ga8","_selectedData$ga9","_selectedData$ga10","_selectedData$ga11","_selectedData$ga12","_selectedData$ga13","_selectedData$ga14","_selectedData$ga15","_selectedData$ga16","_selectedData$ga17","_selectedData$ga18","_selectedData$ga19","_selectedData$ga20","_selectedData$ga21","_selectedData$ga22","_selectedData$ga23","_selectedData$ga24","_selectedData$ga25","_selectedData$ga26","skinselectedOptions1","setSkinSelectedOptions1","headselectedOptions","setHeadSelectedOptions","labelNameSkin","setLabelNameSkin","labelNameHead","setLabelNameHead","skinOpen","setSkinOpen","headOpen","setHeadOpen","allergyoptions","skinyoptions","headoptions","handleSelectSkin1","handleSelectHead","toggleSelectedSkin","HeadtoggleSelectedSkin","_selectedData$ga6","eyesOpen","setEyesOpen","eyesLabel","setEyesLabel","eyeselection","setEyeselection","eyeOptions","toggleEyes","handleSelectEyes","Ears","earsOpen","setEarsOpen","earsLabel","setEarsLabel","earSelection","setEarSelection","toggleEars","handleSelectEars","Nose","noseOpen","setNoseOpen","noseLabel","setNoseLabel","noseSelection","setNoseSelection","toggleNose","handleSelectNose","MouthThroat","mouthThroatOpen","setMouthThroatOpen","mouthThroatLabel","setMouthThroatLabel","mouthThroatSelection","setMouthThroatSelection","toggleMouth","handleSelectMouth","Neck","neckOpen","setNeckOpen","neckLabel","setNeckLabel","neckSelection","setNeckSelection","toggleNeck","handleSelectNeck","Breast","breastOpen","setBreastOpen","breastLabel","setBreastLabel","breastSelection","setBreastSelection","toggleBreast","handleSelectBreast","Respiratory","respiratoryOpen","setRespiratoryOpen","respiratoryLabel","setRespiratoryLabel","respiratorySelection","setRespiratorySelection","toggleRespi","handleSelectRespi","Cardiovascular","cardiovascularOpen","setCardiovascularOpen","cardiovascularLabel","setCardiovascularLabel","cardiovascularSelection","setCardiovascularSelection","toggleCardio","handleSelectCardio","Gastrointestinal","gastrointestinalOpen","setGastrointestinalOpen","gastrointestinalLabel","setGastrointestinalLabel","gastrointestinalSelection","setGastrointestinalSelection","toggleGastro","handleSelectGastro","PeripheralVascularDisease","peripheralVascularDiseaseOpen","setPeripheralVascularDiseaseOpen","peripheralVascularDiseaseLabel","setPeripheralVascularDiseaseLabel","peripheralVascularDiseaseSelection","setPeripheralVascularDiseaseSelection","togglePeripheral","handleSelectPeripheral","Musculoskeletal","musculoskeletalOpen","setMusculoskeletalOpen","musculoskeletalLabel","setMusculoskeletalLabel","musculoskeletalSelection","setMusculoskeletalSelection","toggleMusculo","handleSelectMusculo","neurologicalOpen","setNeurologicalOpen","neurologicalLabel","setNeurologicalLabel","neurologicalSelection","setNeurologicalSelection","toggleNeuro","handleSelectNeuro","Hematology","hematologyOpen","setHematologyOpen","hematologyLabel","setHematologyLabel","hematologySelection","setHematologySelection","toggleHemato","handleSelectHemato","Endocrine","endocrineOpen","setEndocrineOpen","endocrineLabel","setEndocrineLabel","endocrineSelection","setEndocrineSelection","toggleEndo","handleSelectEndo","psychiatricOpen","setPsychiatricOpen","psychiatricLabel","setPsychiatricLabel","psychiatricSelection","setPsychiatricSelection","togglePsych","handleSelectPsych","marginBottom","Subjective","History","WellnessProfile","ReviewSytm","cardView","setCardView","presentIll","setPresentIll","historyView","setHistoryView","wellnessView","setWellnessView","rosView","setRosView","ChiefComplaints","PresentIllness","Ros","MedicalProfile","PatientSubMenu","PairTab","QrCode","setVisible","backdrop","CModalTitle","sm","CModalFooter","CButton","CallTab","showMobileInput","setShowMobileInput","showEmailInput","setShowEmailInput","DoctorDetail","email","mobile","mrn","age","profile","Patient","Link","handleMobileClick","handleEmailClick","CForm","CFormInput","DoctorCards","PatientDetailsView","storedCount","storedFrom","parsedData","PatentProfile","PatientTabs","CallHistoryView"],"sourceRoot":""}