{"version":3,"file":"static/js/364.9065c374.chunk.js","mappings":"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","sources":["Components/Dashboard/PatentProfile/PatentProfile.jsx","Components/Dashboard/PatientTabs/PatientTabs.jsx","Components/DoctorCards/DoctorCards.jsx","Components/Loader/Loader.jsx","Components/FilterModal/FilterModal.jsx","Views/CallHistory/CallHistoryView.jsx","Components/Charts/CardChart.jsx","Components/Cards/Card.jsx","Components/Modal/Modal.jsx","Components/Charts/LineChart.jsx","Components/Charts/ColumnChartDetails.jsx","Components/Charts/ChartTab.jsx","Components/DateRangePicker/DateRangePicker.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/DetailPage/ObjectiveDetailPage.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/VitalSign/FormattedDatas.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/VitalSign/VitalSign.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Lab/Lab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Imaging/ImagingForm.jsx","Components/Tables/ImagingTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Imaging/Imaging.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Objective.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/AssessmentTool.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Assesment.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Orders.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Plan.jsx","Components/Tables/Subjective/AllergiesTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Allergies/AllergiesForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Allergies/Allergies.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/PresentIllness.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/History.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/WellnessProfile.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Ros/Ros.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Subjective.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalProfile.jsx","Components/Dashboard/PatientTabs/PairTab/PairTab.jsx","Components/Dashboard/PatientTabs/CallTab/Filter/Filter.jsx","Components/DoctorCards/RegisteredDoctorCards.jsx","Components/Dashboard/PatientTabs/CallTab/CallTab.jsx","Views/Dashboard/PatientDetails/PatientDetailsView.jsx"],"sourcesContent":["import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./PatentProfile.css\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst PatentProfile = () => {\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n  return (\r\n    <>\r\n      <CCard className=\"card-profile\">\r\n        <CCardBody className=\"d-flex gap-4\">\r\n          <div className=\"img-container\">\r\n            <img src={Assets.patient1} alt=\"profile-img\" />\r\n          </div>\r\n          <div className=\"user-details\">\r\n            <span className=\"user-title\">\r\n              {data?.user?.first_name} {data?.user?.last_name}\r\n            </span>\r\n            <div className=\"d-flex flex-wrap gap-2\">\r\n              <p className=\"user-email\">{data?.user?.email ?? \"--\"}</p>\r\n              <p className=\"user-email\">|</p>\r\n              <p className=\"user-email\">\r\n                {data?.user?.isd_code} {data?.user?.mobile ?? \"--\"}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex flex-wrap gap-2\">\r\n              <p className=\"user-email\">\r\n                MRN: {data?.additional_info?.mrn_number ?? \"--\"}\r\n              </p>\r\n              <p className=\"user-email\">|</p>\r\n              <p className=\"user-email\">\r\n                {data?.additional_info?.age ?? \"--\"} yrs (\r\n                {data?.user?.gender === \"Male\" ? \" M \" : \" F \"})\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatentProfile;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./PatientTabs.css\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst PatientTabs = ({ getCurrentTab }) => {\r\n  const tabs = [\r\n    {\r\n      id: 1,\r\n      title: \"Call\",\r\n      image: Assets.Call,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Medical Profile\",\r\n      image: Assets.Notes,\r\n    },\r\n\r\n    {\r\n      id: 3,\r\n      title: \"Camera Control\",\r\n      image: Assets.Camera,\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Pair\",\r\n      image: Assets.Qr,\r\n    },\r\n    // {\r\n    //   id: 5,\r\n    //   title: \"Call2\",\r\n    //   image: Assets.Call,\r\n    // },\r\n  ];\r\n\r\n  const [currentTab, setCurrentTab] = useState(() => {\r\n    // Initial state setup using localStorage\r\n    const storedCount = localStorage.getItem(\"patiendDetailTab\");\r\n    const storedFrom = localStorage.getItem(\"PatientMenu\");\r\n\r\n    const findObjectById = () => {\r\n      const findedObj = tabs?.find(\r\n        (option) => option?.id === Number(storedFrom)\r\n      );\r\n      return findedObj;\r\n    };\r\n    console.log(findObjectById());\r\n    return storedCount\r\n      ? JSON.parse(storedCount)\r\n      : storedFrom\r\n      ? findObjectById()\r\n      : null;\r\n  });\r\n\r\n  const switchTab = (data) => {\r\n    \r\n    localStorage.removeItem(\"PatientSubMenu-1\");\r\n    localStorage.removeItem(\"PatientSubMenu-2\");\r\n    localStorage.removeItem(\"PatientSubMenu-3\");\r\n    localStorage.removeItem(\"PatientSubMenu-4\");\r\n    localStorage.removeItem(\"PatientSubMenu-5\");\r\n    localStorage.removeItem(\"PatientMenu\");\r\n    localStorage.removeItem(\"PatientConsultTab\");\r\n    \r\n    localStorage.setItem(\"patiendDetailTab\", JSON.stringify(data));\r\n\r\n    setCurrentTab(data);\r\n    getCurrentTab(data?.id);\r\n    if (data?.id === currentTab?.id) {\r\n      getCurrentTab(null);\r\n      setCurrentTab(null);\r\n    }\r\n  };\r\n  return (\r\n    <CCard className=\"card-tabs\">\r\n      <CCardBody className=\"tabs-container\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`tab-items ${\r\n              data?.id === currentTab?.id ? \"tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <img src={data?.image} alt=\"call\" className=\"tab-icon\" />\r\n            <span className=\"tab-title\">{data?.title}</span>\r\n          </div>\r\n        ))}\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default PatientTabs;\r\n","import React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { formatDateTime } from \"../../Utils/dateUtils\";\r\n\r\nfunction DoctorCards({ DoctorDetail }) {\r\n  //   console.log(\"DoctorDetail\", DoctorDetail);\r\n  return (\r\n    <div className=\"card-sec\">\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"profile col-4\">\r\n          <img\r\n            src={DoctorDetail?.profile || Assets.NoImg}\r\n            alt=\"Patient-image\"\r\n          />\r\n        </div>\r\n        <div className=\"patient-details col-8 p-2\">\r\n          <h5>\r\n            Dr.{\" \"}\r\n            {DoctorDetail?.participants\r\n              ? DoctorDetail?.participants[1]?.participant_info?.name\r\n              : \"--\"}\r\n          </h5>\r\n          <p className=\"gap-sec d-flex flex-wrap\">\r\n            <small className=\"fs-10 fw-500\">\r\n              {DoctorDetail?.participants\r\n                ? DoctorDetail?.participants[1]?.participant_info?.email\r\n                : \"--\"}\r\n            </small>\r\n            <small className=\"fs-10 fw-500\">|</small>\r\n            <small className=\"fs-10 fw-500\">\r\n              {DoctorDetail?.participants\r\n                ? DoctorDetail?.participants[1]?.participant_info?.phone\r\n                : \"--\"}\r\n            </small>\r\n          </p>\r\n          <p className=\"flex-sec-wrap gap-sec\">\r\n            <small className=\"fs-10 fw-600\">{DoctorDetail?.participants\r\n                ? DoctorDetail?.participants[1]?.participant_info?.additional_info?.consult_speciality\r\n                : \"--\"}</small>\r\n            <small className=\"fs-10 fw-600\">|</small> \r\n            <small className=\"fs-10 fw-600\">{DoctorDetail?.scheduled_at\r\n                ? formatDateTime(DoctorDetail?.scheduled_at)\r\n                : \"--\"}</small>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <img src={Assets.notes} className=\"edit-icon\" alt=\"edit-icon\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorCards;\r\n","import React from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div class=\"loading\">\r\n      <svg height=\"96px\" width=\"128px\" viewBox=\"0 0 64 48\">\r\n        <polyline\r\n          id=\"back\"\r\n          points=\"0.157 23.954, 14 23.954, 21.843 48, 43 0, 50 24, 64 24\"\r\n        ></polyline>\r\n        <polyline\r\n          id=\"front\"\r\n          points=\"0.157 23.954, 14 23.954, 21.843 48, 43 0, 50 24, 64 24\"\r\n        ></polyline>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CButton,\r\n  CModalFooter,\r\n  CFormSelect,\r\n  CRow,\r\n  CCol,\r\n} from \"@coreui/react\";\r\n// import { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nfunction FilterModal({ visible, setVisible, RegDoctors, getFilter }) {\r\n  const today = new Date();\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n  const [errors, setErrors] = useState({\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    doctor: \"\",\r\n  });\r\n\r\n  function ClearFunction() {\r\n    setStartDate();\r\n    setEndDate();\r\n    setSelectedDoctor(\"\");\r\n    setErrors({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      doctor: \"\",\r\n    });\r\n  }\r\n\r\n  // Handler function for the select change event\r\n  const handleSelectChange = (event) => {\r\n    const selectedValue = event.target.value;\r\n    setSelectedDoctor(selectedValue);\r\n    console.log(\"Selected doctor ID:\", selectedValue);\r\n    setErrors((prev) => ({ ...prev, doctor: \"\" }));\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      doctor: \"\",\r\n    };\r\n\r\n    // if (!selectedDoctor) {\r\n    //   newErrors.doctor = \"Please select a doctor.\";\r\n    //   isValid = false;\r\n    // }\r\n\r\n    if (startDate && endDate && startDate > endDate) {\r\n      newErrors.startDate = \"Start date must be before end date.\";\r\n      newErrors.endDate = \"End date must be after start date.\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!startDate && endDate) {\r\n      newErrors.startDate = \"Start date is required when end date is selected.\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (startDate && !endDate) {\r\n      newErrors.endDate = \"End date is required when start date is selected.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const ApplyFilter = () => {\r\n    if (validate()) {\r\n      setVisible(false);\r\n      const data = {\r\n        id: selectedDoctor ? selectedDoctor : null,\r\n        startDate: startDate ? startDate?.toLocaleDateString() : null,\r\n        endDate: endDate ? endDate?.toLocaleDateString() : null,\r\n      };\r\n      getFilter(data);\r\n    }\r\n  };\r\n  return (\r\n    <CModal\r\n      visible={visible}\r\n      onClose={() => setVisible(false)}\r\n      aria-labelledby=\"LiveDemoExampleLabel\"\r\n      className=\"modal-cutomize\"\r\n      backdrop=\"static\"\r\n    >\r\n      <CModalHeader>\r\n        <CModalTitle id=\"LiveDemoExampleLabel\">FILTER</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        {/* <CFormSelect\r\n          aria-label=\"Default select example\"\r\n          options={[\r\n            \"Filter with Doctor\",\r\n            { label: \"Doctor One\", value: \"1\" },\r\n            { label: \"Doctor Two\", value: \"2\" },\r\n            { label: \"Dcotor Three\", value: \"3\" },\r\n          ]}\r\n        /> */}\r\n        <CFormSelect\r\n          aria-label=\"Default select example\"\r\n          onChange={handleSelectChange}\r\n          value={selectedDoctor} // Optional: to control the select value\r\n        >\r\n          <option value=\"\">Filter with Doctor</option>{\" \"}\r\n          {/* Default or placeholder option */}\r\n          {RegDoctors?.map((doctor) => (\r\n            <option key={doctor?.user?.id} value={doctor?.user?.id}>\r\n              {doctor?.user?.first_name} {doctor?.user?.last_name}\r\n            </option>\r\n          ))}\r\n        </CFormSelect>\r\n        {/* {errors.doctor && <p className=\"error-text\">{errors.doctor}</p>} */}\r\n        <CRow>\r\n          <CCol lg={6} sm={12}>\r\n            <p className=\"date-sec\">From Date</p>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              isClearable\r\n              className=\"date-range-picker picker-sec\"\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={today}\r\n            />\r\n          {errors.startDate && <p className=\"error-text\">{errors.startDate}</p>}\r\n          </CCol>\r\n          <CCol lg={6} sm={12}>\r\n            <p className=\"date-sec\">End Date</p>\r\n            <DatePicker\r\n              showIcon\r\n              selected={endDate}\r\n              onChange={(date) => setEndDate(date)}\r\n              isClearable\r\n              className=\"date-range-picker picker-sec\"\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              maxDate={today}\r\n            />\r\n            {errors.endDate && <p className=\"error-text\">{errors.endDate}</p>}\r\n          </CCol>\r\n        </CRow>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton\r\n          color=\"secondary\"\r\n          onClick={() => ClearFunction()}\r\n          className=\"clear-filter-btn\"\r\n        >\r\n          Clear Filter\r\n        </CButton>\r\n        <CButton\r\n          color=\"primary\"\r\n          className=\"apply-filter-sec\"\r\n          onClick={() => ApplyFilter()}\r\n        >\r\n          Apply Filter\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n}\r\n\r\nexport default FilterModal;\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport PatentProfile from \"../../Components/Dashboard/PatentProfile/PatentProfile\";\r\nimport PatientTabs from \"../../Components/Dashboard/PatientTabs/PatientTabs\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { useState } from \"react\";\r\nimport DoctorCards from \"../../Components/DoctorCards/DoctorCards\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport FilterModal from \"../../Components/FilterModal/FilterModal\";\r\nimport useApi from \"../../ApiServices/useApi\";\r\nimport Pagination from \"../../Components/Pagination/Pagination\";\r\nimport Loader from \"../../Components/Loader/Loader\";\r\n\r\nfunction CallHistoryView() {\r\n  const [visible, setVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [RegDoctors, setRegDoctors] = useState([]);\r\n  const [DoctorDetail, setDoctorDetail] = useState([]);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [filter, setFilter] = useState({\r\n    id: null,\r\n    startDate: null,\r\n    endDate: null,\r\n  });\r\n\r\n  const { loading, error, get, post } = useApi();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 9;\r\n  // const DoctorDetail = [\r\n  //   {\r\n  //     name: \"Ram Mohan S R\",\r\n  //     email: \"rammohan@cure.com\",\r\n  //     mobile: \"+91 98765 43210\",\r\n  //     mrn: \"MRN 3\",\r\n  //     age: \"34 yrs (M)\",\r\n  //     profile: Assets.Patient,\r\n  //   },\r\n  //   {\r\n  //     name: \"Ram Mohan S R\",\r\n  //     email: \"rammohan@cure.com\",\r\n  //     mobile: \"+91 98765 43210\",\r\n  //     mrn: \"MRN 3\",\r\n  //     age: \"34 yrs (M)\",\r\n  //     profile: Assets.Patient,\r\n  //   },\r\n  //   {\r\n  //     name: \"Ram Mohan S R\",\r\n  //     email: \"rammohan@cure.com\",\r\n  //     mobile: \"+91 98765 43210\",\r\n  //     mrn: \"MRN 3\",\r\n  //     age: \"34 yrs (M)\",\r\n  //     profile: Assets.Patient,\r\n  //   },\r\n  //   {\r\n  //     name: \"Ram Mohan S R\",\r\n  //     email: \"rammohan@cure.com\",\r\n  //     mobile: \"+91 98765 43210\",\r\n  //     mrn: \"MRN 3\",\r\n  //     age: \"34 yrs (M)\",\r\n  //     profile: Assets.Patient,\r\n  //   },\r\n  // ];\r\n  const location = useLocation();\r\n  const data = location.state?.PatientDetail;\r\n\r\n  const DetailSec = () => {\r\n    navigate(\"/patients/summary\", { state: { PatientDetail: data } });\r\n    localStorage.removeItem(\"patiendDetailTab\");\r\n  };\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  const getDoctors = async () => {\r\n    try {\r\n      const response = await get(\r\n        `resource/consults?limit=${itemsPerPage}&page=${currentPage}${\r\n          filter.id !== null ? `&participant_ref_number=${filter.id}` : \"\"\r\n        }${filter.startDate !== null ? `&from_date=${filter.startDate}` : \"\"}${\r\n          filter.endDate !== null ? `&to_date=${filter.endDate}` : \"\"\r\n        }`\r\n      );\r\n      console.log(response); // Handle the data as needed\r\n      if (response.code === 200) {\r\n        setDoctorDetail(response?.data?.consults);\r\n        setTotalItems(response?.data?.pagination?.total);\r\n      } else {\r\n        setDoctorDetail([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching data:\", err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getDoctors();\r\n  }, [currentPage, filter]);\r\n\r\n  const getRegisteredDoctors = useCallback(async () => {\r\n    try {\r\n      const response = await get(`resource/providers?order_by=id&dir=1`);\r\n      console.log(response); // Handle the data as needed\r\n      if (response.code === 200) {\r\n        setRegDoctors(response?.data?.providers);\r\n        // setTotalItems(response?.data?.pagination?.total);\r\n      } else {\r\n        setRegDoctors([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching data:\", err);\r\n    }\r\n  }, [get]);\r\n\r\n  useEffect(() => {\r\n    getRegisteredDoctors();\r\n  }, [getRegisteredDoctors]);\r\n\r\n  const getFilter = (data) => {\r\n    setFilter(data);\r\n  };\r\n\r\n  console.log(\"getFilter\", filter);\r\n\r\n  return (\r\n    <section className=\"call-history-sec\">\r\n      <div className=\"flex-sec top-sec\">\r\n        <div className=\"bread-crumbs\">\r\n          <p className=\"mb-0\">\r\n            <Link to=\"/patients\">Patient</Link> /{\" \"}\r\n            <Link to=\"/patients\" className=\"active\">\r\n              Existing Patient\r\n            </Link>\r\n          </p>\r\n          <h4>Appointments - Call History</h4>\r\n        </div>\r\n        <div className=\"patient-adding\">\r\n          <button onClick={() => setVisible(!visible)}>\r\n            <img src={Assets.filter} alt=\"filter-sec\" className=\"filter-icon\" />{\" \"}\r\n            Filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"doctor-card-sec\">\r\n        <div className=\"row\">\r\n          {!loading ? (\r\n            DoctorDetail.length <= 0 ? (\r\n              <div\r\n                className=\"d-flex w-100 justify-content-center mb-3 align-items-center\"\r\n                style={{ height: \"350px\", maxHeight: \"100%\" }}\r\n              >\r\n                <h5>No Data Found</h5>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {DoctorDetail.map((data, i) => (\r\n                  <div className=\"col-4\" onClick={() => DetailSec()}>\r\n                    <Link className=\"card-link\">\r\n                      <DoctorCards DoctorDetail={data} />\r\n                    </Link>\r\n                  </div>\r\n                ))}\r\n              </>\r\n            )\r\n          ) : (\r\n            <div\r\n              className=\"d-flex w-100 justify-content-center mb-3 align-items-center\"\r\n              style={{ height: \"350px\", maxHeight: \"100%\" }}\r\n            >\r\n              <Loader />\r\n            </div>\r\n          )}\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n                totalItems={totalItems}\r\n                itemsPerPage={itemsPerPage}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-sec\">\r\n        <FilterModal\r\n          visible={visible}\r\n          setVisible={setVisible}\r\n          RegDoctors={RegDoctors}\r\n          getFilter={getFilter}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CallHistoryView;\r\n","import React from \"react\";\r\nimport { Line, LineChart, ResponsiveContainer, Tooltip, XAxis } from \"recharts\";\r\n\r\nconst CardChart = ({ datas }) => {\r\n  function removePercent(str) {\r\n    // Remove trailing percent sign (%) using String.replace() method\r\n    // Replace '%' with an empty string ''\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n\r\n  // Transform tableData to the desired format\r\n  const formattedData = datas?.tableData?.map((item) => {\r\n    const datePart = item?.date?.split(\" \")[0].split(\"-\").reverse().join(\"-\"); // Extract date part only\r\n\r\n    return {\r\n      name: datePart,\r\n      data1: parseInt(\r\n        item?.[\"blood_ketone_value\"] ||\r\n          item?.[\"hemoglobinValue\"] ||\r\n          item?.[\"bmi_(kg/m²)\"] ||\r\n          item?.[\"blood_sugar_value\"] ||\r\n          item?.[\"pulse_(in_bpm)\"] ||\r\n          item?.[\"hr_(bpm)\"] ||\r\n          item?.[\"respiration_rate_(bpm)\"] ||\r\n          item?.[\"spo2\"] ||\r\n          removePercent(item?.[\"hct_%\"]) ||\r\n          item?.[\"fev1/fvc_(%)\"] ||\r\n          item?.[\"totalOnly\"] ||\r\n          item?.[\"chartValue\"] ||\r\n          item?.[\"temperature\"] ||\r\n          item?.[\"blood_uric_acid_value\"] ||\r\n          item?.[\"urea_value\"] ||\r\n          item?.[\"creatinine_value\"] ||\r\n          item?.[\"gfr_value\"]\r\n      ),\r\n      // For temperature C / F\r\n      unit: item.unit,\r\n    };\r\n  });\r\n\r\n  // const CustomTooltip = ({ active, payload, label }) => {\r\n  //   if (active && payload && payload.length) {\r\n  //     return (\r\n  //       <div\r\n  //         style={{\r\n  //           backgroundColor: \"#fff\",\r\n  //           border: \"1px solid #ccc\",\r\n  //           padding: \"10px\",\r\n  //         }}\r\n  //       >\r\n  //         <h5>{payload[0].payload.name}</h5>\r\n  //         <p className=\"label\">{`${datas?.chartLabel1} : ${payload[0].value}`}</p>\r\n  //         {/* <p className=\"intro\">{getIntroOfPage(label)}</p> */}\r\n  //       </div>\r\n  //     );\r\n  //   }\r\n\r\n  //   return null;\r\n  // };\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      // Determine the temperature unit and format the tooltip content accordingly\r\n      let tooltipContent = \"\";\r\n      if (datas.slug === \"temperature\" && payload[0]?.dataKey === \"data1\") {\r\n        const unit = payload[0].payload?.unit || \"N/A\";\r\n        const temperature = payload[0].value || \"N/A\";\r\n        tooltipContent =\r\n          unit === \"Celsius\"\r\n            ? `Temperature: ${temperature}°C`\r\n            : `Temperature: ${temperature}°F`;\r\n      } else if (\r\n        datas.slug === \"spirometer\" &&\r\n        payload[0]?.dataKey === \"data1\"\r\n      ) {\r\n        tooltipContent = `${datas.chartLabel3} : ${payload[0].value}`;\r\n      } else {\r\n        tooltipContent = `${datas.chartLabel1} : ${payload[0].value}`;\r\n      }\r\n\r\n      return (\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#fff\",\r\n            border: \"1px solid #ccc\",\r\n            padding: \"10px\",\r\n            borderRadius: \"4px\",\r\n          }}\r\n        >\r\n          <h5>{payload[0].payload.name}</h5>\r\n          <p className=\"label\">{tooltipContent}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LineChart\r\n        width={250}\r\n        height={90}\r\n        data={formattedData}\r\n        margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\r\n      >\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"data1\"\r\n          stroke=\"#0084CF\"\r\n          strokeWidth={2}\r\n        />\r\n      </LineChart>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardChart;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./Cards.css\";\r\n\r\nconst Card = ({ data, getSelectedData, className }) => {\r\n  return (\r\n    <>\r\n      <CCard\r\n        className={`card ${\r\n          className ? className : \"minheight-188 max-height-100\"\r\n        }`}\r\n        onClick={() => getSelectedData(data)}\r\n      >\r\n        <CCardBody\r\n          key={data.id}\r\n          className=\"d-flex flex-column justify-content-center align-items-center\"\r\n        >\r\n          <img alt=\"images\" src={data?.image} />\r\n          <span className=\"mt-2 card-text-title text-align-center\">\r\n            {data?.name}\r\n          </span>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Modal.css\"; // Import your CSS file for styling modal (optional)\r\nimport { CModal, CModalBody } from \"@coreui/react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst Modal = ({ isOpen, onClose, children }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <CModal\r\n      visible={isOpen}\r\n      onClose={onClose}\r\n      aria-labelledby=\"LiveDemoExampleLabel\"\r\n      alignment=\"center\"\r\n      size=\"xl\"\r\n    >\r\n      <CModalBody className=\"p-0\">\r\n        <div className=\"close-modal\" onClick={onClose}>\r\n          <img\r\n            src={Assets.CloseBtn}\r\n            alt=\"close-btn\"\r\n            style={{ width: \"100%\" }}\r\n          />{\" \"}\r\n        </div>\r\n        <div>{children}</div>\r\n      </CModalBody>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nconst LineChartDetails = ({ datas }) => {\r\n  function removePercent(str) {\r\n    // Remove trailing percent sign (%) using String.replace() method\r\n    // Replace '%' with an empty string ''\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n\r\n  // Transform tableData to the desired format\r\n  const formattedData = datas?.tableData?.map((item) => ({\r\n    name: item?.date?.split(\" \")[0].split(\"-\").reverse().join(\"-\"), // Extract date part only\r\n    data1: parseFloat(\r\n      item?.[\"blood_ketone_value\"] ||\r\n        item?.[\"hemoglobinValue\"] ||\r\n        item?.[\"bmi_(kg/m²)\"] ||\r\n        item?.[\"blood_sugar_value\"] ||\r\n        item?.[\"pulse_(in_bpm)\"] ||\r\n        item?.[\"hr_(bpm)\"] ||\r\n        item?.[\"respiration_rate_(bpm)\"] ||\r\n        item?.[\"spo2\"] ||\r\n        removePercent(item?.[\"hct_%\"]) ||\r\n        item?.[\"fvc_(l)\"] ||\r\n        item?.[\"totalOnly\"] ||\r\n        item?.[\"specific_gravity\"] ||\r\n        item?.[\"temperature\"] ||\r\n        item?.[\"blood_uric_acid_value\"] ||\r\n        item?.[\"urea_value\"] ||\r\n        item?.[\"creatinine_value\"] ||\r\n        item?.[\"gfr_value\"] ||\r\n        item?.[\"ldl(mg/dl)\"]\r\n    ), // Convert pluse to integer if needed\r\n\r\n    data2: parseInt(\r\n      item?.[\"systolic\"]\r\n        ? item?.[\"systolic\"]\r\n        : item?.[\"fev1_(l)\"]\r\n        ? item?.[\"fev1_(l)\"]\r\n        : item?.[\"hdl(mg/dl)\"]\r\n        ? item?.[\"hdl(mg/dl)\"]\r\n        : item?.[\"ph\"]\r\n        ? item?.[\"ph\"]\r\n        : item?.[\"temperature_fahrenheit\"]\r\n        ? item?.[\"temperature_fahrenheit\"]\r\n        : \"\"\r\n    ),\r\n    data3: parseInt(\r\n      item?.[\"diastolic\"]\r\n        ? item?.[\"diastolic\"]\r\n        : item?.[\"pef_(l/s)\"]\r\n        ? item?.[\"pef_(l/s)\"]\r\n        : item?.[\"vldl(mg/dl)\"]\r\n        ? item?.[\"vldl(mg/dl)\"]\r\n        : item?.[\"urobilinogen\"]\r\n        ? item?.[\"urobilinogen\"]\r\n        : \"\"\r\n    ),\r\n\r\n    data4: parseInt(\r\n      item?.[\"fev1/fvc_(%)\"]\r\n        ? item?.[\"fev1/fvc_(%)\"]\r\n        : item?.[\"ldl/hdl(mg/dl)\"]\r\n        ? item?.[\"ldl/hdl(mg/dl)\"]\r\n        : item?.[\"red_blood_cells\"]\r\n        ? item?.[\"red_blood_cells\"]\r\n        : \"\"\r\n    ),\r\n\r\n    data5: parseInt(\r\n      item?.[\"triglycerides(mg/dl)\"]\r\n        ? item?.[\"triglycerides(mg/dl)\"]\r\n        : item?.[\"white_blood_cells\"]\r\n        ? item?.[\"white_blood_cells\"]\r\n        : \"\"\r\n    ),\r\n    data6: parseInt(\r\n      item?.[\"total_cholesterol(mg/dl)\"]\r\n        ? item?.[\"total_cholesterol(mg/dl)\"]\r\n        : \"\"\r\n    ),\r\n    // For temperature C / F\r\n    unit: item.unit,\r\n  }));\r\n\r\n  const minValue = Math?.min(...formattedData?.map((item) => item.data1));\r\n  const maxValue = Math?.max(\r\n    ...formattedData?.map((item) =>\r\n      !isNaN(item?.data1) ? item?.data1 : -Infinity\r\n    )\r\n  );\r\n  // Custom tooltip formatter function\r\n  const tooltipFormatter = (value, name, props) => {\r\n    const item = formattedData.find((d) => d.name === props.payload.name);\r\n    if (datas.slug === \"temperature\" && name === \"data1\") {\r\n      const unit = item?.unit || \"N/A\";\r\n      const temperature = item?.data1 || \"N/A\";\r\n      return unit === \"Celsius\"\r\n        ? [`Temperature: ${temperature}°C`]\r\n        : [`Temperature: ${temperature}°F`];\r\n    }\r\n\r\n    if (name === \"data1\") {\r\n      return [value, datas?.chartLabel1];\r\n    }\r\n    if (name === \"data2\") {\r\n      return [value, datas?.chartLabel2];\r\n    }\r\n    if (name === \"data3\") {\r\n      return [value, datas?.chartLabel3];\r\n    }\r\n    if (name === \"data4\") {\r\n      return [value, datas?.chartLabel4];\r\n    }\r\n    if (name === \"data5\") {\r\n      return [value, datas?.chartLabel5];\r\n    }\r\n    if (name === \"data6\") {\r\n      return [value, datas?.chartLabel6];\r\n    }\r\n    return [name, value];\r\n  };\r\n  return (\r\n    <LineChart\r\n      width={1000}\r\n      height={350}\r\n      data={formattedData}\r\n      margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\r\n    >\r\n      <XAxis\r\n        dataKey=\"name\"\r\n        padding={{ left: 30, right: 30, bottom: 20 }}\r\n        axisLine={false}\r\n        tickLine={false}\r\n      />\r\n      <YAxis\r\n        yMax={Math.min(...formattedData?.map((item) => item?.data1))}\r\n        domain={[minValue, maxValue + 10]}\r\n        axisLine={false}\r\n        tickLine={false}\r\n      />\r\n      <Tooltip formatter={tooltipFormatter} />\r\n      {formattedData[0].data6 &&\r\n      formattedData[0].data5 &&\r\n      formattedData[0].data4 &&\r\n      formattedData[0].data3 &&\r\n      formattedData[0].data2 &&\r\n      formattedData[0].data1 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#166da9\" },\r\n            { value: datas?.chartLabel3, type: \"line\", color: \"#1858c6\" },\r\n            { value: datas?.chartLabel4, type: \"line\", color: \"#1858c7\" },\r\n            { value: datas?.chartLabel5, type: \"line\", color: \"#1858c7\" },\r\n            { value: datas?.chartLabel6, type: \"line\", color: \"#1858c7\" },\r\n          ]}\r\n        />\r\n      ) : formattedData[0].data5 &&\r\n        formattedData[0].data4 &&\r\n        formattedData[0].data3 &&\r\n        formattedData[0].data2 &&\r\n        formattedData[0].data1 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#166da9\" },\r\n            { value: datas?.chartLabel3, type: \"line\", color: \"#1858c6\" },\r\n            { value: datas?.chartLabel4, type: \"line\", color: \"#1858c7\" },\r\n            { value: datas?.chartLabel5, type: \"line\", color: \"#1858c7\" },\r\n          ]}\r\n        />\r\n      ) : formattedData[0].data4 &&\r\n        formattedData[0].data3 &&\r\n        formattedData[0].data2 &&\r\n        formattedData[0].data1 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#166da9\" },\r\n            { value: datas?.chartLabel3, type: \"line\", color: \"#1858c6\" },\r\n            { value: datas?.chartLabel4, type: \"line\", color: \"#1858c7\" },\r\n          ]}\r\n        />\r\n      ) : formattedData[0].data3 &&\r\n        formattedData[0].data2 &&\r\n        formattedData[0].data1 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#166da9\" },\r\n            { value: datas?.chartLabel3, type: \"line\", color: \"#1858c6\" },\r\n          ]}\r\n        />\r\n      ) : formattedData[0].data2 && formattedData[0].data1 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#166da9\" },\r\n          ]}\r\n        />\r\n      ) : formattedData[0].data1 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n          ]}\r\n        />\r\n      ) : null}\r\n\r\n      <CartesianGrid horizontal={true} vertical={false} strokeWidth={1} />\r\n      <Line type=\"linear\" dataKey=\"data1\" stroke=\"#0084CF\" />\r\n      {formattedData[0].data2 && (\r\n        <Line type=\"linear\" dataKey=\"data2\" stroke=\"#166da9\" />\r\n      )}\r\n      {formattedData[0].data3 && (\r\n        <Line type=\"linear\" dataKey=\"data3\" stroke=\"#1858c6\" />\r\n      )}\r\n      {formattedData[0].data4 && (\r\n        <Line type=\"linear\" dataKey=\"data4\" stroke=\"#1858c7\" />\r\n      )}\r\n      {formattedData[0].data5 && (\r\n        <Line type=\"linear\" dataKey=\"data5\" stroke=\"#1858c7\" />\r\n      )}\r\n      {formattedData[0].data6 && (\r\n        <Line type=\"linear\" dataKey=\"data6\" stroke=\"#1858c7\" />\r\n      )}\r\n    </LineChart>\r\n  );\r\n};\r\n\r\nexport default LineChartDetails;\r\n","import React from \"react\";\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\n\r\nconst ColumnChartDetails = ({ datas }) => {\r\n  function removePercent(str) {\r\n    // Remove trailing percent sign (%) using String.replace() method\r\n    // Replace '%' with an empty string ''\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n  // Transform tableData to the desired format\r\n  const formattedData = datas?.tableData?.map((item) => ({\r\n    name: item?.date?.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\r\n    data1: parseFloat(\r\n      item?.[\"blood_ketone_value\"] ||\r\n        item?.[\"hemoglobinValue\"] ||\r\n        item?.[\"bmi_(kg/m²)\"] ||\r\n        item?.[\"blood_sugar_value\"] ||\r\n        item?.[\"pulse_(in_bpm)\"] ||\r\n        item?.[\"hr_(bpm)\"] ||\r\n        item?.[\"respiration_rate_(bpm)\"] ||\r\n        removePercent(item?.[\"spo2\"]) ||\r\n        removePercent(item?.[\"hct_%\"]) ||\r\n        item?.[\"fvc_(l)\"] ||\r\n        item?.[\"totalOnly\"] ||\r\n        item?.[\"specific_gravity\"] ||\r\n        item?.[\"temperature\"] ||\r\n        item?.[\"blood_uric_acid_value\"] ||\r\n        item?.[\"urea_value\"] ||\r\n        item?.[\"creatinine_value\"] ||\r\n        item?.[\"gfr_value\"] ||\r\n        item?.[\"ldl(mg/dl)\"]\r\n    ),\r\n\r\n    data2: parseInt(\r\n      item?.[\"systolic\"]\r\n        ? item?.[\"systolic\"]\r\n        : item?.[\"fev1_(l)\"]\r\n        ? item?.[\"fev1_(l)\"]\r\n        : item?.[\"hdl(mg/dl)\"]\r\n        ? item?.[\"hdl(mg/dl)\"]\r\n        : item?.[\"ph\"]\r\n        ? item?.[\"ph\"]\r\n        : item?.[\"temperature_fahrenheit\"]\r\n        ? item?.[\"temperature_fahrenheit\"]\r\n        : \"\"\r\n    ),\r\n\r\n    data3: parseInt(\r\n      item?.[\"diastolic\"]\r\n        ? item?.[\"diastolic\"]\r\n        : item?.[\"fev1/fvc_(%)\"]\r\n        ? item?.[\"fev1/fvc_(%)\"]\r\n        : item?.[\"vldl(mg/dl)\"]\r\n        ? item?.[\"vldl(mg/dl)\"]\r\n        : item?.[\"urobilinogen\"]\r\n        ? item?.[\"urobilinogen\"]\r\n        : \"\"\r\n    ),\r\n\r\n    data4: parseInt(\r\n      item?.[\"pef_(l/s)\"]\r\n        ? item?.[\"pef_(l/s)\"]\r\n        : item?.[\"ldl/hdl(mg/dl)\"]\r\n        ? item?.[\"ldl/hdl(mg/dl)\"]\r\n        : item?.[\"red_blood_cells\"]\r\n        ? item?.[\"red_blood_cells\"]\r\n        : \"\"\r\n    ),\r\n\r\n    data5: parseInt(\r\n       item?.[\"triglycerides(mg/dl)\"]\r\n        ? item?.[\"triglycerides(mg/dl)\"]\r\n        : item?.[\"white_blood_cells\"]\r\n        ? item?.[\"white_blood_cells\"]\r\n        : \"\"\r\n    ),\r\n    data6: parseInt(\r\n      item?.[\"total_cholesterol(mg/dl)\"]\r\n        ? item?.[\"total_cholesterol(mg/dl)\"]\r\n        : \"\"\r\n    ),\r\n    // For temperature C / F\r\n    unit: item.unit,\r\n  }));\r\n\r\n  const minValue = Math?.min(...formattedData?.map((item) => item.data1));\r\n  const maxValue = Math?.max(\r\n    ...formattedData?.map((item) =>\r\n      !isNaN(item?.data1) ? item?.data1 : -Infinity\r\n    )\r\n  );\r\n  const bloodPressureValues = new Set(\r\n    formattedData?.map((item) => datas?.name)\r\n  ); // Create a Set with \"Blood Pressure\"\r\n\r\n  const tooltipFormatter = (value, name, props) => {\r\n    const item = formattedData.find((d) => d.name === props.payload.name);\r\n    if (datas.slug === \"temperature\" && name === \"data1\") {\r\n      const unit = item?.unit || \"N/A\";\r\n      const temperature = item?.data1 || \"N/A\";\r\n      return unit === \"Celsius\"\r\n        ? [`Temperature: ${temperature}°C`]\r\n        : [`Temperature: ${temperature}°F`];\r\n    }\r\n\r\n    if (name === \"data1\") {\r\n      return [value, datas?.chartLabel1];\r\n    }\r\n    if (name === \"data2\") {\r\n      return [value, datas?.chartLabel2];\r\n    }\r\n    if (name === \"data3\") {\r\n      return [value, datas?.chartLabel3];\r\n    }\r\n    if (name === \"data4\") {\r\n      return [value, datas?.chartLabel4];\r\n    }\r\n    if (name === \"data5\") {\r\n      return [value, datas?.chartLabel5];\r\n    }\r\n    if (name === \"data6\") {\r\n      return [value, datas?.chartLabel6];\r\n    }\r\n    return [name, value];\r\n  };\r\n  return (\r\n    <BarChart\r\n      width={1000}\r\n      height={350}\r\n      data={formattedData}\r\n      margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\r\n    >\r\n      <XAxis dataKey=\"name\" padding={{ left: 30, right: 30 }} />\r\n      <YAxis domain={[0, maxValue + 10]} axisLine={false} tickLine={false} />\r\n      {/* {datas.name === \"SpO2\" ? (\r\n        <Tooltip formatter={(value) => `${value}%`} />\r\n      ) : ( */}\r\n      <Tooltip formatter={tooltipFormatter} />\r\n\r\n      {formattedData[0].data6 &&\r\n      formattedData[0].data5 &&\r\n      formattedData[0].data4 &&\r\n      formattedData[0].data3 &&\r\n      formattedData[0].data2 &&\r\n      formattedData[0].data1 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#166da9\" },\r\n            { value: datas?.chartLabel3, type: \"line\", color: \"#1858c6\" },\r\n            { value: datas?.chartLabel4, type: \"line\", color: \"#1858c7\" },\r\n            { value: datas?.chartLabel5, type: \"line\", color: \"#1858c7\" },\r\n            { value: datas?.chartLabel6, type: \"line\", color: \"#1858c7\" },\r\n          ]}\r\n        />\r\n      ) : formattedData[0].data5 &&\r\n        formattedData[0].data4 &&\r\n        formattedData[0].data3 &&\r\n        formattedData[0].data2 &&\r\n        formattedData[0].data1 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#166da9\" },\r\n            { value: datas?.chartLabel3, type: \"line\", color: \"#1858c6\" },\r\n            { value: datas?.chartLabel4, type: \"line\", color: \"#1858c7\" },\r\n            { value: datas?.chartLabel5, type: \"line\", color: \"#1858c7\" },\r\n          ]}\r\n        />\r\n      ) : formattedData[0].data4 &&\r\n        formattedData[0].data3 &&\r\n        formattedData[0].data2 &&\r\n        formattedData[0].data1 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#166da9\" },\r\n            { value: datas?.chartLabel3, type: \"line\", color: \"#1858c6\" },\r\n            { value: datas?.chartLabel4, type: \"line\", color: \"#1858c7\" },\r\n          ]}\r\n        />\r\n      ) : formattedData[0].data3 &&\r\n        formattedData[0].data2 &&\r\n        formattedData[0].data1 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#166da9\" },\r\n            { value: datas?.chartLabel3, type: \"line\", color: \"#1858c6\" },\r\n          ]}\r\n        />\r\n      ) : formattedData[0].data2 && formattedData[0].data1 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#166da9\" },\r\n          ]}\r\n        />\r\n      ) : formattedData[0].data1 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n          ]}\r\n        />\r\n      ) : null}\r\n      <Bar dataKey=\"data1\" fill=\"#0084CF\" />\r\n      {formattedData[0].data2 && <Bar dataKey=\"data2\" fill=\"#166da9\" />}\r\n      {formattedData[0].data3 && <Bar dataKey=\"data3\" fill=\"#1858c6\" />}\r\n      {formattedData[0].data4 && <Bar dataKey=\"data4\" fill=\"#1858c7\" />}\r\n      {formattedData[0].data5 && <Bar dataKey=\"data5\" fill=\"#1858c7\" />}\r\n      {formattedData[0].data6 && <Bar dataKey=\"data6\" fill=\"#1858c7\" />}\r\n    </BarChart>\r\n  );\r\n};\r\n\r\nexport default ColumnChartDetails;\r\n","import React, { useState } from \"react\";\r\nimport LineChartDetails from \"./LineChart\";\r\nimport ColumnChartDetails from \"./ColumnChartDetails\";\r\n\r\nconst ChartTab = ({ data }) => {\r\n  console.log(data, \"data d\");\r\n  const tabs = [\r\n    {\r\n      id: 1,\r\n      title: \"LINE\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"COLUMN\",\r\n    },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(tabs[0]);\r\n\r\n  const switchTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"chart-tabs-container mb-3\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chart-tab-items ${\r\n              data.id === currentTab?.id ? \"chart-tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <span\r\n              className={`chart-tab-title ${\r\n                data.id === currentTab?.id ? \"chart-tab-title-active\" : \"\"\r\n              }`}\r\n            >\r\n              {data.title}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"mt-2\" style={{ overflow: \"auto\" }}>\r\n        {currentTab?.id === 1 && <LineChartDetails datas={data} />}\r\n        {currentTab?.id === 2 && <ColumnChartDetails datas={data} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartTab;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport ActiveButton from \"../Buttons/ActiveButton/ActiveButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { formatDate } from \"../../Utils/dateUtils\";\r\n\r\nconst DateRangePicker = ({ onClose, getFilterValues }) => {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  // Get today's date\r\n  const today = new Date();\r\n\r\n  const onSearch = () => {\r\n    const formattedStart =\r\n      formatDate(startDate) === \"01-01-1970\" ? null : formatDate(startDate);\r\n    const formattedEnd =\r\n      formatDate(endDate) === \"01-01-1970\" ? null : formatDate(endDate);\r\n    getFilterValues(formattedStart, formattedEnd, searchValue);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2 p-3\">\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span>From Date *</span>\r\n          <DatePicker\r\n            showIcon\r\n            selected={startDate}\r\n            onChange={(date) => {\r\n              if (date === null) {\r\n                // Explicitly set to null if the clear button is clicked\r\n                setStartDate(null);\r\n              } else {\r\n                setStartDate(date);\r\n              }\r\n            }}\r\n            isClearable\r\n            className=\"date-range-picker\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </CCol>\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span>To Date *</span>\r\n          <DatePicker\r\n            showIcon\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            isClearable\r\n            className=\"date-range-picker\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </CCol>\r\n        <CCol md={3} className=\"d-flex flex-column gap-1 justify-content-end\">\r\n          <div\r\n            className=\"search-bar\"\r\n            style={{ width: \"100%\", borderRadius: \"10px\" }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              style={{ padding: \"7px\" }}\r\n              value={searchValue}\r\n              onChange={(e) => setSearchValue(e.target.value)}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton onClick={() => onSearch()}>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateRangePicker;\r\n","import {\r\n  CBadge,\r\n  CCol,\r\n  CContainer,\r\n  CFormInput,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport Table from \"../../../../../Tables/Table\";\r\nimport Badge from \"../../../../../Badge/Badge\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport ChartTab from \"../../../../../Charts/ChartTab\";\r\nimport DynamicTable from \"../../../../../Tables/DynamicTable\";\r\n\r\nimport BPForm from \"../Forms/BPForm\";\r\nimport HeartRate from \"../Forms/HeartRate\";\r\nimport LFTForm from \"../Forms/LFTForm\";\r\nimport LipidProfileForm from \"../Forms/LipidProfileForm\";\r\nimport Temperature from \"../Forms/Temperature\";\r\nimport Spo2 from \"../Forms/Spo2\";\r\nimport RespirationRateForm from \"../Forms/RespirationRateForm\";\r\nimport BMI from \"../Forms/BMI\";\r\nimport BSugar from \"../Forms/BSugar\";\r\nimport Hemogloin from \"../Forms/Hemogloin\";\r\nimport HCT from \"../Forms/HCT\";\r\nimport BUricAcid from \"../Forms/BUricAcid\";\r\nimport BKetone from \"../Forms/BKetone\";\r\nimport Urea from \"../Forms/Urea\";\r\nimport Creatinine from \"../Forms/Creatinine\";\r\nimport GFR from \"../Forms/GFR\";\r\nimport Urinalysis from \"../Forms/Urinalysis\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DateRangePicker from \"../../../../../DateRangePicker/DateRangePicker\";\r\nimport ECGChart from \"../ECG Chart/ECGChart\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport DateSearch from \"../../../../../DateRangePicker/DateSearch\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\n\r\nconst ObjectiveDetailPage = ({\r\n  data,\r\n  getTableDatas,\r\n  getFilterValues,\r\n  currentPage,\r\n  onPageChange,\r\n}) => {\r\n  const [chartView, setChartView] = useState(false);\r\n  const [addView, setAddView] = useState(false);\r\n  const [filterView, setFilterView] = useState(false);\r\n\r\n  const chartPage = () => {\r\n    setChartView(true);\r\n  };\r\n  const tablePage = () => {\r\n    setChartView(false);\r\n  };\r\n  const addPage = () => {\r\n    setAddView(true);\r\n  };\r\n  const addBack = () => {\r\n    setAddView(false);\r\n  };\r\n\r\n  const filterPage = () => {\r\n    setFilterView(true);\r\n  };\r\n  const filterBack = () => {\r\n    setFilterView(false);\r\n  };\r\n\r\n  const getFilters = async (startDate, endDate, searchValue) => {\r\n    getFilterValues(startDate, endDate, searchValue);\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer className=\"p-0\">\r\n        <CContainer className=\"mt-2 mb-3\">\r\n          <CRow>\r\n            <CCol lg={7}>\r\n              <div className=\"d-flex flex-row gap-3\">\r\n                <img src={data?.icon} alt=\"icon\" />\r\n                <div className=\"d-flex flex-column gap-2\">\r\n                  <span className=\"fs-20 fw-600\">{data?.name}</span>\r\n                  <div className=\"d-flex flex-row gap-2 flex-wrap\">\r\n                    {data?.badge?.map((dt, i) => (\r\n                      <Badge label={dt?.label} color={dt?.color} />\r\n                    ))}\r\n                  </div>\r\n                  <span className=\"fs-14 fw-500\">{data?.date}</span>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={5} className=\"d-flex align-items-center mt-2\">\r\n              <CRow className=\"w-100 d-flex justify-content-around\">\r\n                <CCol xs={4} md={4} lg={4}>\r\n                  {!addView && (\r\n                    <PrimaryButton onClick={() => addPage()}>\r\n                      <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  )}\r\n                  {addView && (\r\n                    <ActiveButton onClick={() => addBack()}>\r\n                      <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                        <img src={Assets.CloseX} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </ActiveButton>\r\n                  )}\r\n                </CCol>\r\n                <CCol xs={4} md={4} lg={4}>\r\n                  {filterView && (\r\n                    <ActiveButton\r\n                      onClick={() => {\r\n                        filterBack();\r\n                        getFilterValues(null, null, null);\r\n                      }}\r\n                    >\r\n                      <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                        <img src={Assets.CloseX} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Filter</span>\r\n                      </div>\r\n                    </ActiveButton>\r\n                  )}\r\n                  {!filterView && (\r\n                    <PrimaryButton>\r\n                      <div\r\n                        className=\"d-flex align-items-center justify-content-center gap-2\"\r\n                        onClick={() => filterPage()}\r\n                      >\r\n                        <img src={Assets.Filter} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Filter</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  )}\r\n                </CCol>\r\n                {/* {data.id !== 14 && ( */}\r\n                <>\r\n                  {!chartView && (\r\n                    <CCol xs={4} md={4} lg={4}>\r\n                      <PrimaryButton onClick={() => chartPage()}>\r\n                        <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                          <img src={Assets.Chart} alt=\"add\" />\r\n                          <span className=\"fs-16 fw-600\">Chart</span>\r\n                        </div>\r\n                      </PrimaryButton>\r\n                    </CCol>\r\n                  )}\r\n                  {chartView && (\r\n                    <CCol xs={4} md={4} lg={4}>\r\n                      <ActiveButton onClick={() => tablePage()}>\r\n                        <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                          <img src={Assets.CloseX} alt=\"add\" />\r\n                          <span className=\"fs-16 fw-600\">Chart</span>\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </CCol>\r\n                  )}\r\n                </>\r\n                {/* )} */}\r\n              </CRow>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n        <CRow>\r\n          <CCol xl={12}>\r\n            {chartView ? (\r\n              // data?.name === \"Heart\" ? (\r\n              //   <ECGChart data={data} />\r\n              // ) :\r\n              <ChartTab data={data} />\r\n            ) : (\r\n              <>\r\n                {/* {filterView && <DateSearch />} */}\r\n                {filterView && (\r\n                  <DateRangePicker\r\n                    onClose={filterBack}\r\n                    getFilterValues={getFilters}\r\n                  />\r\n                )}\r\n                <DynamicTable\r\n                  columnsData={data?.columnsData}\r\n                  tableData={data?.tableData}\r\n                  getTableDatas={getTableDatas}\r\n                />\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={data?.total}\r\n                      itemsPerPage={10}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </>\r\n            )}\r\n          </CCol>\r\n        </CRow>\r\n\r\n        {/* Modal for add  */}\r\n        {addView && (\r\n          <BlurBackground>\r\n            <CModal\r\n              alignment=\"center\"\r\n              visible={addView}\r\n              onClose={addBack}\r\n              aria-labelledby=\"VerticallyCenteredExample\"\r\n              size=\"lg\"\r\n            >\r\n              <CModalHeader>\r\n                <h4 className=\"fw-600\">Add {data?.name}</h4>\r\n              </CModalHeader>\r\n              <CModalBody className=\"p-4\">\r\n                {data?.name === \"Blood Pressure\" && (\r\n                  <BPForm addBack={addBack} getTableDatas={getTableDatas} />\r\n                )}\r\n                {data?.name === \"Heart\" && <HeartRate addBack={addBack} getTableDatas={getTableDatas}/>}\r\n                {data?.name === \"Lung Function Test (LFT)\" && (\r\n                  <LFTForm addBack={addBack} getTableDatas={getTableDatas} />\r\n                )}\r\n                {data?.name === \"Lipid Profile\" && (\r\n                  <LipidProfileForm addBack={addBack} />\r\n                )}\r\n                {data?.name === \"Temperature\" && (\r\n                  <Temperature\r\n                    addBack={addBack}\r\n                    getTableDatas={getTableDatas}\r\n                  />\r\n                )}\r\n                {data?.name === \"SpO2\" && (\r\n                  <Spo2 addBack={addBack} getTableDatas={getTableDatas} />\r\n                )}\r\n                {data?.name === \"Respiration Rate\" && (\r\n                  <RespirationRateForm\r\n                    addBack={addBack}\r\n                    getTableDatas={getTableDatas}\r\n                  />\r\n                )}\r\n                {data?.name === \"BMI\" && (\r\n                  <BMI addBack={addBack} getTableDatas={getTableDatas} />\r\n                )}\r\n                {data?.name === \"Blood Sugar\" && <BSugar addBack={addBack} getTableDatas={getTableDatas} />}\r\n                {data?.name === \"Hemoglobin\" && <Hemogloin addBack={addBack} />}\r\n                {data?.name === \"Hematocrit (HCT)\" && <HCT addBack={addBack} />}\r\n                {data?.name === \"Blood Uric Acid\" && (\r\n                  <BUricAcid addBack={addBack} />\r\n                )}\r\n                {data?.name === \"Blood Ketone\" && <BKetone addBack={addBack} />}\r\n                {data?.name === \"Urea\" && <Urea addBack={addBack} />}\r\n                {data?.name === \"Creatinine\" && (\r\n                  <Creatinine addBack={addBack} />\r\n                )}\r\n                {data?.name === \"GFR\" && <GFR addBack={addBack} />}\r\n                {data?.name === \"Urinalysis\" && (\r\n                  <Urinalysis addBack={addBack} />\r\n                )}\r\n              </CModalBody>\r\n            </CModal>\r\n          </BlurBackground>\r\n        )}\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObjectiveDetailPage;\r\n","import { Assets } from \"../../../../../../assets/Assets\";\r\n\r\nexport const transformBPData = (originalData, pagination) => {\r\n  if (!Array.isArray(originalData) || originalData.length === 0) {\r\n    return {\r\n      id: 1,\r\n      icon: Assets.VitalBP,\r\n      name: \"Blood Pressure\",\r\n      date: \"-\",\r\n      category: \"Primary Vitals\",\r\n      badge: [],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"SYSTOLIC\" },\r\n        { id: 4, label: \"DIASTOLIC\" },\r\n        { id: 5, label: \"PULSE (IN BPM)\" },\r\n        { id: 6, label: \"DATE\" },\r\n        { id: 7, label: \"ACTION\" },\r\n      ],\r\n      tableData: [],\r\n      chartLabel1: \"PULSE (bpm)\",\r\n      chartLabel2: \"SYSTOLE (mm Hg)\",\r\n      chartLabel3: \"DIASTOLE (mm Hg)\",\r\n    };\r\n  }\r\n\r\n  // Map through original data to create tableData\r\n  const tableData = originalData?.map((item, index) => ({\r\n    \"no.\": index + 1,\r\n    result: {\r\n      status: item.details.bpFlagColor === \"success\" ? \"success\" : \"error\",\r\n      name: item.details.bpFlag || \"Unknown\",\r\n    },\r\n    systolic: item.details.systolic || \"N/A\",\r\n    diastolic: item.details.diastolic || \"N/A\",\r\n    \"pulse_(in_bpm)\": item.details.pulse || \"N/A\",\r\n    date: `${item.details.date} ${item.details.time || \"\"}`,\r\n    action:\r\n      item.freeze === 1\r\n        ? [{ type: \"warning\" }]\r\n        : [{ type: \"edit\" }, { type: \"delete\" }],\r\n    name: \"Blood Pressure\",\r\n    id: item.id,\r\n    user_id: item.user_id,\r\n    slug: \"blood-pressure\",\r\n  }));\r\n\r\n  // Create badge and other static information\r\n  const badge =\r\n    tableData.length > 0\r\n      ? [\r\n          {\r\n            label: `${tableData[0].systolic}/${tableData[0].diastolic} mm Hg`,\r\n            color: tableData[0].result.status,\r\n          },\r\n          {\r\n            label: `${tableData[0][\"pulse_(in_bpm)\"]} Pulse (bpm)`,\r\n            color: tableData[0].result.status,\r\n          },\r\n        ]\r\n      : [];\r\n\r\n  return {\r\n    id: 1,\r\n    icon: Assets.VitalBP,\r\n    name: \"Blood Pressure\",\r\n    date: `Recently Added ${tableData[0].date\r\n      .split(\" \")[0]\r\n      .split(\"-\")\r\n      .reverse()\r\n      .join(\"-\")}`,\r\n    category: \"Primary Vitals\",\r\n    badge,\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"SYSTOLIC\" },\r\n      { id: 4, label: \"DIASTOLIC\" },\r\n      { id: 5, label: \"PULSE (IN BPM)\" },\r\n      { id: 6, label: \"DATE\" },\r\n      { id: 7, label: \"ACTION\" },\r\n    ],\r\n    tableData,\r\n    chartLabel1: \"PULSE (bpm)\",\r\n    chartLabel2: \"SYSTOLE (mm Hg)\",\r\n    chartLabel3: \"DIASTOLE (mm Hg)\",\r\n    total: pagination?.total,\r\n  };\r\n};\r\n\r\nexport const transformBMIData = (originalData, pagination) => {\r\n  if (!Array.isArray(originalData) || originalData.length === 0) {\r\n    return {\r\n      id: 3,\r\n      icon: Assets.VitalBMI,\r\n      name: \"BMI\",\r\n      date: \"-\",\r\n      category: \"Primary Vitals\",\r\n      badge: [],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"BMI (kg/m²)\" },\r\n        { id: 4, label: \"Height (cm)\" },\r\n        { id: 5, label: \"Weight (kg)\" },\r\n        { id: 6, label: \"DATE\" },\r\n        { id: 7, label: \"ACTION\" },\r\n      ],\r\n      tableData: [],\r\n      chartLabel1: \"BMI (kg/m²)\",\r\n      chartLabel2: \"Height (cm)\",\r\n      chartLabel3: \"Weight (kg)\",\r\n    };\r\n  }\r\n\r\n  // Map through original data to create tableData\r\n  const tableData = originalData.map((item, index) => ({\r\n    \"no.\": index + 1,\r\n    result: {\r\n      status: item?.details?.bmiFlagColor,\r\n      name: item?.details?.bmiFlag || \"Unknown\",\r\n    },\r\n    \"bmi_(kg/m²)\": item?.details?.bmi || \"N/A\",\r\n    \"height_(cm)\": item?.details?.height || \"N/A\",\r\n    \"weight_(kg)\": item?.details?.weight || \"N/A\",\r\n    date: `${item.details.date} ${item.details.time || \"\"}`,\r\n    action:\r\n      item.freeze === 1\r\n        ? [{ type: \"warning\" }]\r\n        : [{ type: \"edit\" }, { type: \"delete\" }],\r\n    name: \"BMI\",\r\n    id: item.id,\r\n    user_id: item.user_id,\r\n    slug: \"bmi\",\r\n    height_unit: item?.details?.height_unit || \"\",\r\n    weight_unit: item?.details?.weight_unit || \"\",\r\n  }));\r\n\r\n  // Create badge and other static information\r\n  const badge =\r\n    tableData.length > 0\r\n      ? [\r\n          {\r\n            label: `${tableData[0][\"bmi_(kg/m²)\"]} kg/m²`,\r\n            color: tableData[0].result.status,\r\n          },\r\n        ]\r\n      : [];\r\n\r\n  return {\r\n    id: 3,\r\n    icon: Assets.VitalBMI,\r\n    name: \"BMI\",\r\n    date: `Recently Added ${tableData[0].date\r\n      .split(\" \")[0]\r\n      .split(\"-\")\r\n      .reverse()\r\n      .join(\"-\")}`,\r\n    category: \"Primary Vitals\",\r\n    badge,\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BMI (kg/m²)\" },\r\n      { id: 4, label: \"Height (cm)\" },\r\n      { id: 5, label: \"Weight (kg)\" },\r\n      { id: 6, label: \"DATE\" },\r\n      { id: 7, label: \"ACTION\" },\r\n    ],\r\n    tableData,\r\n    chartLabel1: \"BMI (kg/m²)\",\r\n    chartLabel2: \"Height (cm)\",\r\n    chartLabel3: \"Weight (kg)\",\r\n    total: pagination?.total,\r\n  };\r\n};\r\n\r\nexport const transformRespirationRateData = (originalData, pagination) => {\r\n  if (!Array.isArray(originalData) || originalData.length === 0) {\r\n    return {\r\n      id: 9,\r\n      icon: Assets.VitalRespi,\r\n      name: \"Respiration Rate\",\r\n      date: \"-\",\r\n      category: \"Primary Vitals\",\r\n      badge: [],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Respiration Rate (BPM)\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [],\r\n      chartLabel1: \"Respiration Rate (BPM)\",\r\n    };\r\n  }\r\n\r\n  // Map through original data to create tableData\r\n  const tableData = originalData?.map((item, index) => ({\r\n    \"no.\": index + 1,\r\n    result: {\r\n      status: item.details.respirationFlagColor,\r\n      name: item.details.respirationFlag,\r\n    },\r\n    \"respiration_rate_(bpm)\": item.details.respiration || \"N/A\",\r\n    date: `${item.details.date} ${item.details.time || \"\"}`,\r\n    action:\r\n      item.freeze === 1\r\n        ? [{ type: \"warning\" }]\r\n        : [{ type: \"edit\" }, { type: \"delete\" }],\r\n    name: \"Respiration Rate\",\r\n    id: item.id,\r\n    user_id: item.user_id,\r\n    slug: \"respiration\",\r\n  }));\r\n\r\n  // Create badge and other static information\r\n  const badge =\r\n    tableData.length > 0\r\n      ? [\r\n          {\r\n            label: `${tableData[0][\"respiration_rate_(bpm)\"]} bpm`,\r\n            color: tableData[0].result.status,\r\n          },\r\n        ]\r\n      : [];\r\n\r\n  return {\r\n    id: 9,\r\n    icon: Assets.VitalRespi,\r\n    name: \"Respiration Rate\",\r\n    date: `Recently Added ${tableData[0].date\r\n      .split(\" \")[0]\r\n      .split(\"-\")\r\n      .reverse()\r\n      .join(\"-\")}`,\r\n    category: \"Primary Vitals\",\r\n    badge,\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Respiration Rate (BPM)\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData,\r\n    chartLabel1: \"Respiration Rate (BPM)\",\r\n    total: pagination?.total,\r\n  };\r\n};\r\n\r\nexport const transformSpO2Data = (originalData, pagination) => {\r\n  if (!Array.isArray(originalData) || originalData.length === 0) {\r\n    return {\r\n      id: 10,\r\n      icon: Assets.SpO2,\r\n      name: \"SpO2\",\r\n      date: \"-\",\r\n      category: \"Primary Vitals\",\r\n      badge: [],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"SpO2\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [],\r\n      chartLabel1: \"SpO2 (%)\",\r\n    };\r\n  }\r\n\r\n  // Map through original data to create tableData\r\n  const tableData = originalData?.map((item, index) => ({\r\n    \"no.\": index + 1,\r\n    result: {\r\n      status: item?.details?.spo2FlagColor,\r\n      name: item?.details?.spo2Flag,\r\n    },\r\n    spo2: item.details.spo2 + \"\" + item?.details?.unit || \"N/A\",\r\n    date: `${item.details.date} ${item.details.time || \"\"}`,\r\n    action:\r\n      item.freeze === 1\r\n        ? [{ type: \"warning\" }]\r\n        : [{ type: \"edit\" }, { type: \"delete\" }],\r\n    name: \"SpO2\",\r\n    id: item.id,\r\n    user_id: item.user_id,\r\n    slug: \"spO2\",\r\n    unit: item?.details?.unit,\r\n  }));\r\n\r\n  // Create badge and other static information\r\n  const badge =\r\n    tableData.length > 0\r\n      ? [\r\n          {\r\n            label: `${tableData[0].spo2}`,\r\n            color: tableData[0].result.status,\r\n          },\r\n        ]\r\n      : [];\r\n\r\n  return {\r\n    id: 10,\r\n    icon: Assets.SpO2,\r\n    name: \"SpO2\",\r\n    date: `Recently Added ${tableData[0].date\r\n      .split(\" \")[0]\r\n      .split(\"-\")\r\n      .reverse()\r\n      .join(\"-\")}`,\r\n    category: \"Primary Vitals\",\r\n    badge,\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"SpO2\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData,\r\n    chartLabel1: \"SpO2 (%)\",\r\n    total: pagination?.total,\r\n  };\r\n};\r\n\r\nexport const transformTemperatureData = (originalData, pagination) => {\r\n  if (!Array.isArray(originalData) || originalData.length === 0) {\r\n    return {\r\n      id: 11,\r\n      icon: Assets.Temp,\r\n      name: \"Temperature\",\r\n      date: \"-\",\r\n      category: \"Primary Vitals\",\r\n      badge: [],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Temperature\" },\r\n        { id: 4, label: \"Method\" },\r\n        { id: 5, label: \"DATE\" },\r\n        { id: 6, label: \"ACTION\" },\r\n      ],\r\n      tableData: [],\r\n      chartLabel1: \"Temperature (°F)\",\r\n    };\r\n  }\r\n\r\n  // Map through original data to create tableData\r\n  const tableData = originalData?.map((item, index) => ({\r\n    \"no.\": index + 1,\r\n    result: {\r\n      status: item?.details?.temperatureFlagColor,\r\n      name: item?.details?.temperatureFlag,\r\n    },\r\n    temperature: `${item?.details?.temperature}${\r\n      item?.details?.unit === \"Fahrenheit\" ? \"°F\" : \"°C\" || \"N/A\"\r\n    }`,\r\n    method: item?.details?.type,\r\n    date: `${item?.details?.date} ${item?.details?.time || \"\"}`,\r\n    action:\r\n      item.freeze === 1\r\n        ? [{ type: \"warning\" }]\r\n        : [{ type: \"edit\" }, { type: \"delete\" }],\r\n    name: \"Temperature\",\r\n    id: item?.id,\r\n    unit: item?.details?.unit,\r\n    slug: \"temperature\",\r\n  }));\r\n\r\n  // Create badge and other static information\r\n  const badge =\r\n    tableData.length > 0\r\n      ? [\r\n          {\r\n            label: `${tableData[0]?.temperature}`,\r\n            color: tableData[0]?.result?.status,\r\n          },\r\n        ]\r\n      : [];\r\n\r\n  return {\r\n    id: 11,\r\n    icon: Assets.Temp,\r\n    name: \"Temperature\",\r\n    date: `Recently Added ${\r\n      tableData[0]?.date.split(\" \")[0]?.split(\"-\")?.reverse()?.join(\"-\") || \"-\"\r\n    }`,\r\n    category: \"Primary Vitals\",\r\n    badge,\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Temperature\" },\r\n      { id: 4, label: \"Method\" },\r\n      { id: 5, label: \"DATE\" },\r\n      { id: 6, label: \"ACTION\" },\r\n    ],\r\n    tableData,\r\n    chartLabel1: \"Temperature(°F / °C)\",\r\n    total: pagination?.total,\r\n  };\r\n};\r\n\r\nexport const transformLFTData = (originalData, pagination) => {\r\n  if (!Array.isArray(originalData) || originalData.length === 0) {\r\n    return {\r\n      id: 12,\r\n      icon: Assets.LFT,\r\n      name: \"Lung Function Test (LFT)\",\r\n      date: \"-\",\r\n      category: \"Primary Vitals\",\r\n      badge: [],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"FVC (L)\" },\r\n        { id: 4, label: \"FEV1 (L)\" },\r\n        { id: 5, label: \"PEF (L/s)\" },\r\n        { id: 6, label: \"FEV1/FVC (%)\" },\r\n        { id: 7, label: \"DATE\" },\r\n        { id: 8, label: \"ACTION\" },\r\n      ],\r\n      tableData: [],\r\n      chartLabel1: \"FVC (L)\",\r\n      chartLabel2: \"FEV1 (%)\",\r\n      chartLabel3: \"FEV1/FVC Ratio (%)\",\r\n      chartLabel4: \"PEF (%)\",\r\n    };\r\n  }\r\n\r\n  // Map through original data to create tableData\r\n  const tableData = originalData?.map((item, index) => ({\r\n    \"no.\": index + 1,\r\n    result: {\r\n      status: item?.details?.spirometerFlagColor,\r\n      name: item?.details?.spirometerFlag || \"Unknown\",\r\n    },\r\n    \"fvc_(l)\": item?.details?.fvc || \"N/A\",\r\n    \"fev1_(l)\": item?.details?.fev1 || \"N/A\",\r\n    \"fev1/fvc_(%)\": item?.details?.fev1_fvc || \"N/A\",\r\n    \"pef_(l/s)\": item?.details?.pef || \"N/A\",\r\n    date: `${item.details.date} ${item.details.time || \"\"}`,\r\n    action:\r\n      item.freeze === 1\r\n        ? [{ type: \"warning\" }]\r\n        : [{ type: \"edit\" }, { type: \"delete\" }],\r\n    name: \"Lung Function Test (LFT)\",\r\n    id: item.id,\r\n    user_id: item.user_id,\r\n    slug: \"spirometer\",\r\n    fvcPercent: item?.details?.fvcPercent,\r\n    fev1Percent: item?.details?.fev1Percent,\r\n    pefPercent: item?.details?.pefPercent,\r\n    fef25: item?.details?.fef25,\r\n    fef25Percent: item?.details?.fef25Percent,\r\n    fef50: item?.details?.fef50,\r\n    fef50Percent: item?.details?.fef50Percent,\r\n    fef75: item?.details?.fef75,\r\n    fef75Percent: item?.details?.fef75Percent,\r\n    fef2575: item?.details?.fef2575,\r\n    fef2575Percent: item?.details?.fef2575Percent,\r\n    notes: item?.details?.notes,\r\n  }));\r\n\r\n  // Create badge and other static information\r\n  const badge = [\r\n    {\r\n      label: `FVC (%): ${tableData[0]?.[\"fvc_(l)\"] || \"N/A\"}`,\r\n      color: tableData[0].result.status,\r\n    },\r\n    {\r\n      label: `FEV1 (%): ${tableData[0]?.[\"fev1_(l)\"] || \"N/A\"}`,\r\n      color: tableData[0].result.status,\r\n    },\r\n\r\n    {\r\n      label: `PEF (%): ${tableData[0]?.[\"pef_(l/s)\"] || \"N/A\"}`,\r\n      color: tableData[0].result.status,\r\n    },\r\n    {\r\n      label: `FEV1/FVC Ratio (%): ${tableData[0]?.[\"fev1/fvc_(%)\"] || \"N/A\"}`,\r\n      color: tableData[0].result.status,\r\n    },\r\n  ];\r\n\r\n  return {\r\n    id: 12,\r\n    icon: Assets.LFT,\r\n    name: \"Lung Function Test (LFT)\",\r\n    date: `Recently Added ${tableData[0].date\r\n      .split(\" \")[0]\r\n      .split(\"-\")\r\n      .reverse()\r\n      .join(\"-\")}`,\r\n    category: \"Primary Vitals\",\r\n    badge,\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"FVC (L)\" },\r\n      { id: 4, label: \"FEV1 (L)\" },\r\n      { id: 5, label: \"PEF (L/s)\" },\r\n      { id: 6, label: \"FEV1/FVC (%)\" },\r\n      { id: 7, label: \"DATE\" },\r\n      { id: 8, label: \"ACTION\" },\r\n    ],\r\n    tableData,\r\n    chartLabel1: \"FVC (%)\",\r\n    chartLabel2: \"FEV1 (%)\",\r\n    chartLabel4: \"FEV1/FVC Ratio (%)\",\r\n    chartLabel3: \"PEF (%)\",\r\n    total: pagination?.total,\r\n  };\r\n};\r\n\r\nexport const transformHeartRateData = (originalData, pagination) => {\r\n  if (!Array.isArray(originalData) || originalData.length === 0) {\r\n    return {\r\n      id: 5,\r\n      icon: Assets.VitalHBeat,\r\n      name: \"Heart\",\r\n      date: \"-\",\r\n      category: \"Primary Vitals\",\r\n      badge: [],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"HR (bpm)\" },\r\n        { id: 4, label: \"Type\" },\r\n        { id: 5, label: \"Result File\" },\r\n        { id: 6, label: \"Interpretation\" },\r\n        { id: 7, label: \"DATE\" },\r\n        { id: 8, label: \"ACTION\" },\r\n      ],\r\n      tableData: [],\r\n      chartLabel1: \"Heart Rate (bpm)\",\r\n    };\r\n  }\r\n\r\n  // Map through original data to create tableData\r\n  const tableData = originalData.map((item, index) => ({\r\n    \"no.\": index + 1,\r\n    result: {\r\n      status: item?.details?.heartRateFlagColor || \"unknown\",\r\n      name: item?.details?.heartRateFlag || \"Unknown\",\r\n    },\r\n    unit: item?.details?.unit || \"N/A\",\r\n    \"hr_(bpm)\": item?.details?.heart || \"N/A\",\r\n    date: `${item.details.date} ${item.details.time || \"\"}`,\r\n    action:\r\n      item.freeze === 1\r\n        ? [{ type: \"warning\" }]\r\n        : [{ type: \"edit\" }, { type: \"delete\" }],\r\n    name: \"Heart\",\r\n    type: item?.details?.type || \"Unknown\",\r\n    interpretation: item?.details?.interpretation || \"-\",\r\n    result_file: item?.details?.result_file || \"-\",\r\n    id: item.id,\r\n    user_id: item.user_id,\r\n    slug: \"heart-rate\",\r\n  }));\r\n\r\n  // Create badge and other static information\r\n  const badge =\r\n    tableData.length > 0\r\n      ? [\r\n          {\r\n            label: `${tableData[0]?.[\"hr_(bpm)\"] || \"N/A\"} bpm`,\r\n            color: tableData[0].result.status,\r\n          },\r\n        ]\r\n      : [];\r\n\r\n  return {\r\n    id: 5,\r\n    icon: Assets.VitalHBeat,\r\n    name: \"Heart\",\r\n    date: `Recently Added ${\r\n      tableData[0]?.date?.split(\" \")[0]?.split(\"-\")?.reverse()?.join(\"-\") || \"-\"\r\n    }`,\r\n    category: \"Primary Vitals\",\r\n    badge,\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"HR (bpm)\" },\r\n      { id: 4, label: \"Type\" },\r\n      { id: 5, label: \"Result File\" },\r\n      { id: 6, label: \"Interpretation\" },\r\n      { id: 7, label: \"DATE\" },\r\n      { id: 8, label: \"ACTION\" },\r\n    ],\r\n    tableData,\r\n    chartLabel1: \"Heart Rate (bpm)\",\r\n    total: pagination?.total,\r\n  };\r\n};\r\n\r\nexport const transformBloodSugarData = (originalData, pagination) => {\r\n  if (!Array.isArray(originalData) || originalData.length === 0) {\r\n    return {\r\n      id: 2,\r\n      icon: Assets.VitalBs,\r\n      name: \"Blood Sugar\",\r\n      date: \"-\",\r\n      category: \"Metabolic And Biochemical Profile\",\r\n      badge: [],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Blood Sugar\" },\r\n        { id: 4, label: \"Type\" },\r\n        { id: 5, label: \"DATE\" },\r\n        { id: 6, label: \"ACTION\" },\r\n      ],\r\n      tableData: [],\r\n      chartLabel1: \"Blood Sugar (mg/dL)\",\r\n      chartLabel2: \"Type\",\r\n    };\r\n  }\r\n\r\n  // Map through original data to create tableData\r\n  const tableData = originalData.map((item, index) => ({\r\n    \"no.\": index + 1,\r\n    result: {\r\n      status: item?.details?.bsFlagColor,\r\n      name: item?.details?.bsFlag || \"Unknown\",\r\n    },\r\n    blood_sugar: item?.details?.blood_sugar || \"N/A\",\r\n    blood_sugar_value: item?.details?.blood_sugar || \"N/A\",\r\n    type: item?.details?.type || \"N/A\",\r\n    date: `${item.details.date} ${item.details.time || \"\"}`,\r\n    action:\r\n      item.freeze === 1\r\n        ? [{ type: \"warning\" }]\r\n        : [{ type: \"edit\" }, { type: \"delete\" }],\r\n    name: \"Blood Sugar\",\r\n    id: item.id,\r\n    user_id: item.user_id,\r\n    slug: \"blood-sugar\",\r\n  }));\r\n\r\n  // Create badge and other static information\r\n  const badge =\r\n    tableData.length > 0\r\n      ? [\r\n          {\r\n            label: `${tableData[0][\"blood_sugar\"]} mg/dL`,\r\n            color: tableData[0].result.status,\r\n          },\r\n        ]\r\n      : [];\r\n\r\n  return {\r\n    id: 2,\r\n    icon: Assets.VitalBs,\r\n    name: \"Blood Sugar\",\r\n    date: `Recently Added ${tableData[0].date\r\n      .split(\" \")[0]\r\n      .split(\"-\")\r\n      .reverse()\r\n      .join(\"-\")}`,\r\n    category: \"Metabolic And Biochemical Profile\",\r\n    badge,\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Blood Sugar\" },\r\n      { id: 4, label: \"Type\" },\r\n      { id: 5, label: \"DATE\" },\r\n      { id: 6, label: \"ACTION\" },\r\n    ],\r\n    tableData,\r\n    chartLabel1: \"Blood Sugar (mg/dL)\",\r\n    chartLabel2: \"Type\",\r\n    total: pagination?.total,\r\n  };\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport VitalsTab from \"../../../VitalsTab/VitalsTab\";\r\nimport { CCard, CCardBody, CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport Modal from \"../../../../../Modal/Modal\";\r\nimport ObjectiveDetailPage from \"../DetailPage/ObjectiveDetailPage\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { ObjectiveDatas } from \"../../../../../Consultant/TableColumnsJson/ObjectiveJson\";\r\nimport CardChart from \"../../../../../Charts/CardChart\";\r\nimport Badge from \"../../../../../Badge/Badge\";\r\nimport {\r\n  transformBloodSugarData,\r\n  transformBMIData,\r\n  transformBPData,\r\n  transformHeartRateData,\r\n  transformLFTData,\r\n  transformRespirationRateData,\r\n  transformSpO2Data,\r\n  transformTemperatureData,\r\n} from \"./FormattedDatas\";\r\n\r\nconst VitalSign = ({ setVitalView, onClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Primary Vitals\" },\r\n    { id: 2, title: \"Metabolic And Biochemical Profile\" },\r\n    { id: 3, title: \"Hematologic Profile\" },\r\n    { id: 4, title: \"Renal and Metabolic Markers\" },\r\n  ];\r\n  const PatientSubMenu3 = localStorage.getItem(\"PatientSubMenu-3\");\r\n  const ParsedPatientSubMenu = PatientSubMenu3\r\n    ? JSON.parse(PatientSubMenu3)\r\n    : 1;\r\n  function findTabById(id) {\r\n    const titleObject = tabs?.find((title) => title.id === id);\r\n    return titleObject\r\n      ? titleObject\r\n      : {\r\n          id: 1,\r\n          title: \"Primary Vitals\",\r\n        }; // Return the title or a message if not found\r\n  }\r\n  function findTitleById(id) {\r\n    const titleObject = tabs?.find((title) => title.id === id);\r\n    return titleObject ? titleObject?.title : currentTab?.title; // Return the title or a message if not found\r\n  }\r\n  const [currentTab, setCurrentTab] = useState(\r\n    findTabById(ParsedPatientSubMenu)\r\n  );\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n  const GoTOConsultPage = localStorage.getItem(\"PatientConsultTab\");\r\n  const parsedConsult = GoTOConsultPage ? JSON.parse(GoTOConsultPage) : false;\r\n\r\n  const getData = localStorage.getItem(\"PatientSubMenu-4\");\r\n  const parsedData = getData ? JSON.parse(getData) : null;\r\n\r\n  const findByIdforSelectedData = () => {\r\n    const selectedObject = ObjectiveDatas?.find(\r\n      (title) => title.id === parsedData + 1\r\n    );\r\n    openModal(selectedObject);\r\n  };\r\n\r\n  const currentTabtitle = findTitleById(currentTab);\r\n  const [isModalOpen, setIsModalOpen] = useState(parsedConsult);\r\n  const [cardSelectedData, setSelectedCardData] = useState();\r\n  const [entities, setEntities] = useState(false);\r\n  const [cards, setCards] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filters, setFilters] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const { loading, error, get } = useApi();\r\n\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const getFilterValues = (startDate, endDate, searchValue) => {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    setSearchValue(searchValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchCardData = async () => {\r\n      try {\r\n        // Create an array of promises to fetch data for each card\r\n        const fetchPromises = ObjectiveDatas.map(async (card) => {\r\n          if (card.slug !== null) {\r\n            try {\r\n              const response = await get(\r\n                `resource/vitals?limit=10&page=1&from=&to=&order_by=details-%3Edate&dir=2&user_id=10&slug=${card?.slug}`\r\n              );\r\n              const tableData = response?.data?.vitals;\r\n\r\n              const cardbadge =\r\n                tableData.length > 0\r\n                  ? card?.slug === \"blood-pressure\"\r\n                    ? [\r\n                        {\r\n                          label: `${tableData[0].details?.systolic}/${tableData[0]?.details?.diastolic} mm Hg`,\r\n                          color: tableData[0].details?.bpFlagColor,\r\n                        },\r\n                        {\r\n                          label: `${tableData[0].details?.pulse} Pulse (bpm)`,\r\n                          color: tableData[0].details?.bpFlagColor,\r\n                        },\r\n                      ]\r\n                    : card?.slug === \"bmi\"\r\n                    ? [\r\n                        {\r\n                          label: `${tableData[0].details?.bmi} kg/m²`,\r\n                          color: tableData[0].details?.bmiFlagColor,\r\n                        },\r\n                      ]\r\n                    : card?.slug === \"respiration\"\r\n                    ? [\r\n                        {\r\n                          label: `${tableData[0].details?.respiration} bpm`,\r\n                          color: tableData[0].details?.respirationFlagColor,\r\n                        },\r\n                      ]\r\n                    : card?.slug === \"spO2\"\r\n                    ? [\r\n                        {\r\n                          label: `${tableData[0].details?.spo2} %`,\r\n                          color: tableData[0].details?.spo2FlagColor,\r\n                        },\r\n                      ]\r\n                    : card?.slug === \"temperature\"\r\n                    ? [\r\n                        {\r\n                          label: `${tableData[0]?.details?.temperature} ${\r\n                            tableData[0].details?.unit === \"Fahrenheit\"\r\n                              ? \"°F\"\r\n                              : \"°C\"\r\n                          }`,\r\n                          color: tableData[0].details?.temperatureFlagColor,\r\n                        },\r\n                      ]\r\n                    : card?.slug === \"spirometer\"\r\n                    ? [\r\n                      {\r\n                        label: `FVC (%):  ${tableData[0].details?.fvc}L`,\r\n                        color: `${tableData[0].details?.spirometerFlagColor}`,\r\n                      },\r\n                      {\r\n                        label: `FEV1 (%): ${tableData[0].details?.fev1}L`,\r\n                        color: `${tableData[0].details?.spirometerFlagColor}`,\r\n                      },\r\n                      {\r\n                        label: `PEF (%):  ${tableData[0].details?.pef}L/min`,\r\n                        color: `${tableData[0].details?.spirometerFlagColor}`,\r\n                      },\r\n                      {\r\n                        label: `FEV1/FVC Ratio (%):  ${tableData[0].details?.fev1_fvc}`,\r\n                        color: `${tableData[0].details?.spirometerFlagColor}`,\r\n                      },\r\n                    ]\r\n                    : card?.slug === \"heart-rate\"\r\n                    ? [\r\n                        {\r\n                          label: `${tableData[0]?.details?.heart || \"N/A\"} bpm`,\r\n                          color: tableData[0].details?.heartRateFlagColor,\r\n                        },\r\n                      ]\r\n                    : card?.slug === \"blood-sugar\"\r\n                    ? [\r\n                        {\r\n                          label: `${\r\n                            tableData[0]?.details?.blood_sugar || \"N/A\"\r\n                          } mg/dL`,\r\n                          color: tableData[0].details?.bsFlagColor,\r\n                        },\r\n                      ]\r\n                    : []\r\n                  : [];\r\n\r\n              const formattedData =\r\n                card?.slug === \"blood-pressure\"\r\n                  ? transformBPData(\r\n                      response?.data?.vitals,\r\n                      response?.data?.pagination\r\n                    )\r\n                  : card?.slug === \"bmi\"\r\n                  ? transformBMIData(\r\n                      response?.data?.vitals,\r\n                      response?.data?.pagination\r\n                    )\r\n                  : card?.slug === \"respiration\"\r\n                  ? transformRespirationRateData(\r\n                      response?.data?.vitals,\r\n                      response?.data?.pagination\r\n                    )\r\n                  : card?.slug === \"spO2\"\r\n                  ? transformSpO2Data(\r\n                      response?.data?.vitals,\r\n                      response?.data?.pagination\r\n                    )\r\n                  : card?.slug === \"temperature\"\r\n                  ? transformTemperatureData(\r\n                      response?.data?.vitals,\r\n                      response?.data?.pagination\r\n                    )\r\n                  : card?.slug === \"spirometer\"\r\n                  ? transformLFTData(\r\n                      response?.data?.vitals,\r\n                      response?.data?.pagination\r\n                    )\r\n                  : card?.slug === \"heart-rate\"\r\n                  ? transformHeartRateData(\r\n                      response?.data?.vitals,\r\n                      response?.data?.pagination\r\n                    )\r\n                  : card?.slug === \"blood-sugar\"\r\n                  ? transformBloodSugarData(\r\n                      response?.data?.vitals,\r\n                      response?.data?.pagination\r\n                    )\r\n                  : null;\r\n\r\n              return {\r\n                ...card,\r\n                created: response?.data?.vitals[0]?.details?.date,\r\n                cardbadge,\r\n                ...formattedData,\r\n              };\r\n            } catch (error) {\r\n              console.error(`Error fetching data for card ${card.id}:`, error);\r\n              return {\r\n                ...card,\r\n                cardbadge: card.badge,\r\n                created: \"N/A\",\r\n              };\r\n            }\r\n          }\r\n        });\r\n\r\n        // Wait for all fetches to complete\r\n        const updatedCards = await Promise.all(fetchPromises);\r\n        setCards(updatedCards);\r\n        getFilter();\r\n      } catch (error) {\r\n        console.error(\"Error fetching card data:\", error);\r\n      }\r\n    };\r\n    if (filters === true) {\r\n      fetchCardData();\r\n    }\r\n  }, [entities, cardSelectedData]);\r\n  // entities, cardSelectedData\r\n\r\n  const fetchSingleCardData = async (card) => {\r\n    try {\r\n      const response = await get(\r\n        `resource/vitals?limit=10&page=${currentPage ?? \"\"}&searchkey=${\r\n          searchValue ?? \"\"\r\n        }&from=${startDate ?? \"\"}&to=${\r\n          endDate ?? \"\"\r\n        }&order_by=details-%3Edate&dir=2&user_id=10&slug=${\r\n          cardSelectedData?.slug\r\n        }`\r\n      );\r\n      const tableData = response?.data?.vitals;\r\n\r\n      const cardbadge =\r\n        tableData.length > 0\r\n          ? cardSelectedData?.slug === \"blood-pressure\"\r\n            ? [\r\n                {\r\n                  label: `${tableData[0].details?.systolic}/${tableData[0]?.details?.diastolic} mm Hg`,\r\n                  color: tableData[0].details?.bpFlagColor,\r\n                },\r\n              ]\r\n            : cardSelectedData?.slug === \"bmi\"\r\n            ? [\r\n                {\r\n                  label: `${tableData[0].details?.bmi} kg/m²`,\r\n                  color: tableData[0].details?.bmiFlagColor,\r\n                },\r\n              ]\r\n            : card?.slug === \"respiration\"\r\n            ? [\r\n                {\r\n                  label: `${tableData[0].details?.respiration} bpm`,\r\n                  color: tableData[0].details?.respirationFlagColor,\r\n                },\r\n              ]\r\n            : card?.slug === \"spO2\"\r\n            ? [\r\n                {\r\n                  label: `${tableData[0].details?.spo2} %`,\r\n                  color: tableData[0].details?.spo2FlagColor,\r\n                },\r\n              ]\r\n            : card?.slug === \"temperature\"\r\n            ? [\r\n                {\r\n                  label: `${tableData[0]?.details?.temperature} ${\r\n                    tableData[0]?.details?.unit === \"Fahrenheit\" ? \"°F\" : \"°C\"\r\n                  }`,\r\n                  color: tableData[0]?.details?.temperatureFlagColor,\r\n                },\r\n              ]\r\n            : card?.slug === \"spirometer\"\r\n            ? [\r\n                {\r\n                  label: `FVC (%):  ${tableData[0].details?.fvc}L`,\r\n                  color: `${tableData[0].details?.spirometerFlagColor}`,\r\n                },\r\n                {\r\n                  label: `FEV1 (%): ${tableData[0].details?.fev1}L`,\r\n                  color: `${tableData[0].details?.spirometerFlagColor}`,\r\n                },\r\n                {\r\n                  label: `PEF (%):  ${tableData[0].details?.pef}L/min`,\r\n                  color: `${tableData[0].details?.spirometerFlagColor}`,\r\n                },\r\n                {\r\n                  label: `FEV1/FVC Ratio (%):  ${tableData[0].details?.fev1_fvc}`,\r\n                  color: `${tableData[0].details?.spirometerFlagColor}`,\r\n                },\r\n              ]\r\n            : card?.slug === \"heart-rate\"\r\n            ? [\r\n                {\r\n                  label: `${tableData[0]?.details?.heart || \"N/A\"} bpm`,\r\n                  color: tableData[0].details?.heartRateFlagColor,\r\n                },\r\n              ]\r\n            : card?.slug === \"blood-sugar\"\r\n            ? [\r\n                {\r\n                  label: `${tableData[0]?.details?.blood_sugar || \"N/A\"} mg/dL`,\r\n                  color: tableData[0].details?.bsFlagColor,\r\n                },\r\n              ]\r\n            : []\r\n          : [];\r\n\r\n      const formattedData =\r\n        card?.slug === \"blood-pressure\"\r\n          ? transformBPData(response?.data?.vitals, response?.data?.pagination)\r\n          : card?.slug === \"bmi\"\r\n          ? transformBMIData(response?.data?.vitals, response?.data?.pagination)\r\n          : card?.slug === \"respiration\"\r\n          ? transformRespirationRateData(\r\n              response?.data?.vitals,\r\n              response?.data?.pagination\r\n            )\r\n          : card?.slug === \"spO2\"\r\n          ? transformSpO2Data(\r\n              response?.data?.vitals,\r\n              response?.data?.pagination\r\n            )\r\n          : card?.slug === \"temperature\"\r\n          ? transformTemperatureData(\r\n              response?.data?.vitals,\r\n              response?.data?.pagination\r\n            )\r\n          : card?.slug === \"spirometer\"\r\n          ? transformLFTData(response?.data?.vitals, response?.data?.pagination)\r\n          : card?.slug === \"heart-rate\"\r\n          ? transformHeartRateData(\r\n              response?.data?.vitals,\r\n              response?.data?.pagination\r\n            )\r\n          : card?.slug === \"blood-sugar\"\r\n          ? transformBloodSugarData(\r\n              response?.data?.vitals,\r\n              response?.data?.pagination\r\n            )\r\n          : null;\r\n\r\n      const updatedCard = {\r\n        ...card,\r\n        created: response?.data?.vitals[0]?.details?.date,\r\n        cardbadge,\r\n        ...formattedData,\r\n      };\r\n      setSelectedCardData(updatedCard);\r\n    } catch (error) {\r\n      console.error(\r\n        `Error fetching data for card ${cardSelectedData?.id}:`,\r\n        error\r\n      );\r\n      return {\r\n        ...card,\r\n        cardbadge: card.badge,\r\n        created: \"N/A\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const openModal = (data) => {\r\n    setSelectedCardData(data);\r\n    // TableDatas(data);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (parsedData !== null) {\r\n      findByIdforSelectedData();\r\n    }\r\n  }, [parsedData]);\r\n\r\n  const getFilter = () => {\r\n    const filteredProducts = cards?.filter(\r\n      (product) => product?.category === currentTabtitle\r\n    );\r\n    setFiltered(filteredProducts);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFilter();\r\n  }, [currentTabtitle, cards]);\r\n\r\n  const renderImage = (contentUrl) => {\r\n    return (\r\n      <img\r\n        src={contentUrl}\r\n        alt=\"mage1\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  // // Function to render PDF content\r\n  const renderPdf = (contentUrl) => {\r\n    return (\r\n      <iframe\r\n        title=\"PDF Viewer\"\r\n        src={contentUrl}\r\n        style={{ width: \"100%\", height: \"140px\", border: \"none\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSingleCardData(cardSelectedData);\r\n  }, [startDate, endDate, searchValue, currentPage]);\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Vital Signs\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Vital Signs\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={currentTab?.id - 1}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {/* <CCol md={12}>\r\n          <VitalsTab category={currentTabtitle} openModal={openModal} />\r\n        </CCol> */}\r\n        {filtered?.map((item, index) => (\r\n          <CCol md={6} xl={4} key={index} className=\"mb-3\">\r\n            <CCard\r\n              className={`vital-cards`}\r\n              onClick={() => {\r\n                openModal(item);\r\n              }}\r\n            >\r\n              <CCardBody>\r\n                <div className=\"vital-icon-and-title\">\r\n                  <div>\r\n                    <img alt=\"bp\" src={item?.icon} />\r\n                  </div>\r\n                  <div className=\"vital-card-title\">\r\n                    <span className=\"vital-card-text-bold\">{item?.name}</span>\r\n                    <span className=\"vital-card-text\">\r\n                      Recently Added{\" \"}\r\n                      {item?.created\r\n                        ?.split(\" \")[0]\r\n                        .split(\"-\")\r\n                        .reverse()\r\n                        .join(\"-\")}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"vital-badge\">\r\n                  <div className=\"vital-badge-list\">\r\n                    {item?.cardbadge?.map((dt, i) => (\r\n                      <div key={i} style={{ height: \"24px\" }}>\r\n                        <Badge label={dt?.label} color={dt?.color} />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                <div className=\"vital-line-container\">\r\n                  {/* <img alt=\"line\" src={Assets.Vitalline} /> */}\r\n                  {/* {item?.name === \"Heart\" ? (\r\n                    <div className=\"chart-item\">\r\n                      <div className=\"rectangle\">\r\n                            <img src={Assets.ecgSample} alt=\"ecg\" />\r\n                          </div>\r\n                      {renderImage(Assets.ecgSample)}\r\n                      {renderPdf(\"https://www.orimi.com/pdf-test.pdf\")}\r\n                    </div>\r\n                  ) : (\r\n                    <CardChart datas={item} />\r\n                  )} */}\r\n                  <CardChart datas={item} />\r\n                </div>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        ))}\r\n      </CRow>\r\n\r\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n        <CContainer className=\"p-0\">\r\n          <CRow>\r\n            <CCol className=\"mb-3\">\r\n              <ObjectiveDetailPage\r\n                data={cardSelectedData}\r\n                getTableDatas={(data) =>\r\n                  fetchSingleCardData(data || cardSelectedData)\r\n                }\r\n                getFilterValues={(data1, data2, data3) => {\r\n                  getFilterValues(data1, data2, data3);\r\n                  setFilters(false);\r\n                }}\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n              />\r\n              {/* <ObjectiveDetailPage\r\n                data={entities}\r\n                getTableDatas={(data) => TableDatas(data)}\r\n              /> */}\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VitalSign;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport LabTable from \"../../../../../Tables/LabTable\";\r\nimport LabForm from \"./LabForm\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst Lab = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"LAB TEST DATE\" },\r\n    { id: 3, label: \"LAB TEST NAME\" },\r\n    { id: 4, label: \"FILE\" },\r\n    { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Lab</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Lab\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <SearchBar />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <LabTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <LabForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lab;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ImagingForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Scan Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Upload Results / Image (pdf, jpg, jpeg, png)\r\n              </label>\r\n              <div class=\"input-file-container\">\r\n                <input class=\"input-file\" id=\"my-file\" type=\"file\" />\r\n                <label\r\n                  tabindex=\"0\"\r\n                  for=\"my-file\"\r\n                  className=\"input-file-trigger\"\r\n                >\r\n                  <img alt=\"upload\" src={Assets.Export} />\r\n                  <span>Choose File</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol className=\"d-flex align-items-center\">\r\n          <span className=\"fs-18 fw-400\">No Files Chosen</span>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImagingTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <Badge label={dt?.file} color={\"primary\"} />\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.notes}</CTableDataCell>\r\n              <CTableDataCell>{dt?.link}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport LabTable from \"../../../../../Tables/LabTable\";\r\nimport ImagingForm from \"./ImagingForm\";\r\nimport ImagingTable from \"../../../../../Tables/ImagingTable\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst Imaging = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"SCAN DATE\" },\r\n    { id: 3, label: \"SCAN TYPE\" },\r\n    { id: 4, label: \"FILE\" },\r\n    { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-05-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"JPG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"JPG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Imaging</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Imaging\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <SearchBar />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <ImagingTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ImagingForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Imaging;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Breadcrumb from \"../../../../Breadcrumb/Breadcrumb\";\r\nimport \"./Objective.css\";\r\nimport MedicalTab from \"../MedicalTab\";\r\nimport VitalsTab from \"../../VitalsTab/VitalsTab\";\r\nimport Modal from \"../../../../Modal/Modal\";\r\nimport ObjectiveDetailPage from \"./DetailPage/ObjectiveDetailPage\";\r\nimport VitalSign from \"./VitalSign/VitalSign\";\r\nimport PhysicalExam from \"./PhysicalExam/PhysicalExam\";\r\nimport Lab from \"./Lab/Lab\";\r\nimport Imaging from \"./Imaging/Imaging\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Objective = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Vital Signs\", image: Assets.VitalSig },\r\n    { id: 2, name: \"Physical Exam\", image: Assets.PhyExam },\r\n    // { id: 3, name: \"Lab\", image: Assets.Lab },\r\n    // { id: 4, name: \"Imaging\", image: Assets.Imaging },\r\n  ];\r\n  const navigate = useNavigate();\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-2\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 0;\r\n  const GoTOConsultPage = localStorage.getItem(\"PatientConsultTab\");\r\n  const parsedConsult = GoTOConsultPage ? JSON.parse(GoTOConsultPage) : false;\r\n\r\n  // const [selectedData, setSelectedData] = useState();\r\n  const [vitalView, setVitalView] = useState(\r\n    ParsedPatientSubMenu === 1 ? true : false\r\n  );\r\n  const [phyView, setPhyView] = useState(\r\n    ParsedPatientSubMenu === 2 ? true : false\r\n  );\r\n  const [labView, setLabView] = useState(false);\r\n  const [imagingView, setImagingView] = useState(false);\r\n\r\n  const getSelectedData = (data) => {\r\n    console.log(\"first data\", data);\r\n    // setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setVitalView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setPhyView(true);\r\n    }\r\n    if (data?.id === 3) {\r\n      setLabView(true);\r\n    }\r\n    if (data?.id === 4) {\r\n      setImagingView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        {!vitalView && !phyView && !labView && !imagingView ? (\r\n          <CRow>\r\n            {cardData.map((dt, i) => (\r\n              <CCol md={4} xl={3} className=\"mb-3\">\r\n                <Card data={dt} getSelectedData={getSelectedData} />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        ) : vitalView ? (\r\n          <VitalSign\r\n            setVitalView={() => setVitalView(false)}\r\n            onClose={() => {\r\n              if (parsedConsult) {\r\n                navigate(-1);\r\n                setVitalView(false);\r\n                localStorage.setItem(\r\n                  \"PatientConsultTab\",\r\n                  JSON.stringify(false)\r\n                );\r\n              } else {\r\n                setVitalView(false);\r\n              }\r\n            }}\r\n          />\r\n        ) : phyView ? (\r\n          <PhysicalExam\r\n            onClose={() => {\r\n              if (parsedConsult) {\r\n                navigate(-1);\r\n                setPhyView(false);\r\n                localStorage.setItem(\r\n                  \"PatientConsultTab\",\r\n                  JSON.stringify(false)\r\n                );\r\n              } else {\r\n                setPhyView(false);\r\n              }\r\n            }}\r\n          />\r\n        ) : labView ? (\r\n          <Lab onClose={() => setLabView(false)} />\r\n        ) : imagingView ? (\r\n          <Imaging onClose={() => setImagingView(false)} />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Objective;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport Psychiatric from \"./Psychiatric/Psychiatric\";\r\nimport Neurological from \"./Neurological/Neurological\";\r\nimport Peadiatric from \"./Peadiatric/Peadiatric\";\r\nimport Ophthalmic from \"./Ophthalmic/Ophthalmic\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AssessmentTool = ({ onClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"psychiatric\" },\r\n    { id: 2, title: \"Neurological\" },\r\n    { id: 3, title: \"Pediatric\" },\r\n    { id: 4, title: \"Ophthalmic\" },\r\n  ];\r\n  const navigate = useNavigate();\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-3\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 1;\r\n  const GoTOConsultPage = localStorage.getItem(\"PatientConsultTab\");\r\n  const parsedConsult = GoTOConsultPage ? JSON.parse(GoTOConsultPage) : false;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Assessment Tools\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                {\r\n                  label: \"Assessment Tools\",\r\n                  to: \"/patients/history\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={ParsedPatientSubMenu - 1}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <Psychiatric />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <Neurological />\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n          <>\r\n            <Peadiatric />\r\n          </>\r\n        )}\r\n        {currentTab === 4 && (\r\n          <>\r\n            <Ophthalmic />\r\n          </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssessmentTool;\r\n","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Diagnosis from \"./Diagnosis/Diagnosis\";\r\nimport Immunization from \"./Immunization/Immunization\";\r\nimport AssessmentTool from \"./AssessmentTool/AssessmentTool\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Assesment = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Diagnosis (Including ICD)\", image: Assets.Diagnosis },\r\n    { id: 2, name: \"Immunization Status\", image: Assets.Immunizaion },\r\n    { id: 3, name: \"Assessment Tool\", image: Assets.AssesmentTool },\r\n  ];\r\n  const navigate = useNavigate();\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-2\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 0;\r\n  const GoTOConsultPage = localStorage.getItem(\"PatientConsultTab\");\r\n  const parsedConsult = GoTOConsultPage ? JSON.parse(GoTOConsultPage) : false;\r\n\r\n  const [diagnosisView, setDiagnosisView] = useState(\r\n    ParsedPatientSubMenu === 1 ? true : false\r\n  );\r\n  const [immunizationView, setImmunizationView] = useState(\r\n    ParsedPatientSubMenu === 2 ? true : false\r\n  );\r\n  const [assessmentView, setAssessmentView] = useState(\r\n    ParsedPatientSubMenu === 3 ? true : false\r\n  );\r\n\r\n  const getSelectedData = (data) => {\r\n    console.log(\"first data\", data);\r\n    // setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setDiagnosisView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setImmunizationView(true);\r\n    }\r\n    if (data?.id === 3) {\r\n      setAssessmentView(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {!diagnosisView && !immunizationView && !assessmentView ? (\r\n        <CRow>\r\n          {cardData.map((dt, i) => (\r\n            <CCol md={4} xl={3} className=\"mb-3\">\r\n              <Card data={dt} getSelectedData={getSelectedData} />\r\n            </CCol>\r\n          ))}\r\n        </CRow>\r\n      ) : diagnosisView ? (\r\n        <Diagnosis\r\n          onClose={() => {\r\n            if (parsedConsult) {\r\n              navigate(-1);\r\n              setDiagnosisView(false);\r\n              localStorage.setItem(\"PatientConsultTab\", JSON.stringify(false));\r\n            } else {\r\n              setDiagnosisView(false);\r\n            }\r\n          }}\r\n        />\r\n      ) : immunizationView ? (\r\n        <Immunization\r\n          onClose={() => {\r\n            if (parsedConsult) {\r\n              navigate(-1);\r\n              setImmunizationView(false);\r\n              localStorage.setItem(\"PatientConsultTab\", JSON.stringify(false));\r\n            } else {\r\n              setImmunizationView(false);\r\n            }\r\n          }}\r\n        />\r\n      ) : assessmentView ? (\r\n        <AssessmentTool\r\n          onClose={() => {\r\n            if (parsedConsult) {\r\n              navigate(-1);\r\n              setAssessmentView(false);\r\n              localStorage.setItem(\"PatientConsultTab\", JSON.stringify(false));\r\n            } else {\r\n              setAssessmentView(false);\r\n            }\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assesment;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport LabOrder from \"./Lab Order/LabOrder\";\r\nimport ImagingOrder from \"./Imaging Order/ImagingOrder\";\r\nimport MedicationOrder from \"./Medication Order/MedicationOrder\";\r\n\r\nconst Orders = ({ onClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Medication Order\" },\r\n    { id: 2, title: \"Lab Order\" },\r\n    { id: 3, title: \"Imaging Order\" },\r\n  ];\r\n  const PatientSubMenu3 = localStorage.getItem(\"PatientSubMenu-3\");\r\n  const ParsedPatientSubMenu = PatientSubMenu3\r\n    ? JSON.parse(PatientSubMenu3)\r\n    : 1;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Orders</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Orders\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={ParsedPatientSubMenu - 1}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <MedicationOrder />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <LabOrder />\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n          <>\r\n            <ImagingOrder />\r\n          </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Orders from \"./Orders/Orders\";\r\nimport Cpt from \"./Procedure CPT/Cpt\";\r\nimport Therapies from \"./Therapies/Therapies\";\r\nimport PatientEducation from \"./PatientEducation/PatientEducation\";\r\nimport NextAppointment from \"./NextAppointment/NextAppointment\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Plan = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Orders\", image: Assets.Orders },\r\n    { id: 2, name: \"Therapies\", image: Assets.Therapies },\r\n    // { id: 3, name: \"Vaccinations\", image: Assets.Vaccine },\r\n    { id: 4, name: \"Procedure (CPT Code)\", image: Assets.CPT },\r\n    { id: 5, name: \"Patient Education\", image: Assets.PatEdu },\r\n    { id: 6, name: \"Next Appointment\", image: Assets.History },\r\n  ];\r\n  const navigate = useNavigate();\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-2\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 0;\r\n  const GoTOConsultPage = localStorage.getItem(\"PatientConsultTab\");\r\n  const parsedConsult = GoTOConsultPage ? JSON.parse(GoTOConsultPage) : false;\r\n  const [ordersView, setOrdersView] = useState(\r\n    ParsedPatientSubMenu === 1 ? true : false\r\n  );\r\n  const [cptView, setCptView] = useState(\r\n    ParsedPatientSubMenu === 1 ? true : false\r\n  );\r\n  const [therapiesView, setTherapiesView] = useState(\r\n    ParsedPatientSubMenu === 2 ? true : false\r\n  );\r\n  const [patientView, setPatientView] = useState(\r\n    ParsedPatientSubMenu === 4 ? true : false\r\n  );\r\n  const [appointView, setAppointmentView] = useState(\r\n    ParsedPatientSubMenu === 5 ? true : false\r\n  );\r\n\r\n  const getSelectedData = (data) => {\r\n    // setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setOrdersView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setTherapiesView(true);\r\n    }\r\n    if (data?.id === 4) {\r\n      setCptView(true);\r\n    }\r\n    if (data?.id === 5) {\r\n      setPatientView(true);\r\n    }\r\n    if (data?.id === 6) {\r\n      setAppointmentView(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {!ordersView &&\r\n      !cptView &&\r\n      !therapiesView &&\r\n      !patientView &&\r\n      !appointView ? (\r\n        <CRow>\r\n          {cardData.map((dt, i) => (\r\n            <CCol md={4} xl={3} className=\"mb-3\">\r\n              <Card data={dt} getSelectedData={getSelectedData} />\r\n            </CCol>\r\n          ))}\r\n        </CRow>\r\n      ) : ordersView ? (\r\n        <Orders\r\n          onClose={() => {\r\n            if (parsedConsult) {\r\n              navigate(-1);\r\n              setOrdersView(false);\r\n              localStorage.setItem(\"PatientConsultTab\", JSON.stringify(false));\r\n            } else {\r\n              setOrdersView(false);\r\n            }\r\n          }}\r\n        />\r\n      ) : therapiesView ? (\r\n        <Therapies\r\n          onClose={() => {\r\n            if (parsedConsult) {\r\n              navigate(-1);\r\n              setTherapiesView(false);\r\n              localStorage.setItem(\"PatientConsultTab\", JSON.stringify(false));\r\n            } else {\r\n              setTherapiesView(false);\r\n            }\r\n          }}\r\n        />\r\n      ) : cptView ? (\r\n        <Cpt\r\n          onClose={() => {\r\n            if (parsedConsult) {\r\n              navigate(-1);\r\n              setCptView(false);\r\n              localStorage.setItem(\"PatientConsultTab\", JSON.stringify(false));\r\n            } else {\r\n              setCptView(false);\r\n            }\r\n          }}\r\n        />\r\n      ) : patientView ? (\r\n        <PatientEducation\r\n          onClose={() => {\r\n            if (parsedConsult) {\r\n              navigate(-1);\r\n              setPatientView(false);\r\n              localStorage.setItem(\"PatientConsultTab\", JSON.stringify(false));\r\n            } else {\r\n              setPatientView(false);\r\n            }\r\n          }}\r\n        />\r\n      ) : appointView ? (\r\n        <NextAppointment\r\n          onClose={() => {\r\n            if (parsedConsult) {\r\n              navigate(-1);\r\n              setAppointmentView(false);\r\n              localStorage.setItem(\"PatientConsultTab\", JSON.stringify(false));\r\n            } else {\r\n              setAppointmentView(false);\r\n            }\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plan;\r\n","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../Badge/Badge\";\r\n  import { Assets } from \"../../../assets/Assets\";\r\n\r\nconst AllergiesTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n       <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100 flex-column\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.onset_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.allergy}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.reaction}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.severity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.status}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllergiesTable","import { CCol, CFormCheck, CFormSelect, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst AllergiesForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [selectedAllergy, setSelectedAllergy] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    const defaultDateString = defaultValues?.date;\r\n    const defaultDate = defaultValues?.date ? parseDateString(defaultDateString) : new Date();\r\n    setDate(defaultDate);\r\n\r\n    if (defaultValues?.allergy) {\r\n      setSelectedAllergy(defaultValues.allergy);\r\n      setCategory(defaultValues.allergy); // Assuming the default category is the same as the allergy name.\r\n    }\r\n  }, [defaultValues]);\r\n\r\n  const options = [\"One\", \"Two\", \"Three\"];\r\n  const options1 = [\"Mild\", \"Moderate\", \"Severe\"];\r\n  const options2 = [\"Active\", \"Inactive\"];\r\n\r\n  const getSelectedValue = (data) => {\r\n    setSelectedAllergy(data);\r\n    setCategory(data); // Autofill category based on selected allergy.\r\n  };\r\n\r\n  const getSelectedValue1 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div className=\"position-relative\">\r\n            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n              Onset Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker showIcon selected={date} \r\n              onChange={(date) => setDate(date)}\r\n              dateFormat={DATE_FORMAT}\r\n               />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Allergy Name *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown options={options} getSelectedValue={getSelectedValue} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Category *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"\"\r\n                disabled\r\n                value={category} // Autofilled value\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {/* Additional form rows below */}\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Reaction *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown options={options} getSelectedValue={getSelectedValue} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Other Reactions\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                className=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.reaction}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Severity *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown options={options1} getSelectedValue={getSelectedValue1} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Provider *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown options={options} getSelectedValue={getSelectedValue} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                className=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.severity}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"position-relative\">\r\n              <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                Status *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown options={options2} getSelectedValue={getSelectedValue2} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllergiesForm;\r\n","import {\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFormCheck,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n  } from \"@coreui/react\";\r\n  import React, { useState } from \"react\";\r\n  import Pagination from \"../../../../../../Pagination/Pagination\";\r\n  import PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\n  import { Assets } from \"../../../../../../../assets/Assets\";\r\n  import DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\n  import BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\n  import SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n  import MedicationForm from \"../Medication/MedicationForm\";\r\n  import AllergiesTable from \"../../../../../../Tables/Subjective/AllergiesTable\";\r\nimport AllergiesForm from \"./AllergiesForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Allergies = () => {\r\n\r\n    const columnData = [\r\n        { id: 1, label: \"No.\" },\r\n        { id: 2, label: \"Onset Date\" },\r\n        { id: 6, label: \"Allergy\" },\r\n        { id: 7, label: \"Reaction\" },\r\n        { id: 8, label: \"Severity\" },\r\n        { id: 9, label: \" Status\" },\r\n        { id: 11, label: \"ACTIONS\" },\r\n      ];\r\n      const rowData = [\r\n        {\r\n          id: 1,\r\n          onset_date: \"06-07-2024\",\r\n          allergy: \"Knee (category 1)\",\r\n          reaction: \"-\",\r\n          severity: \"-\",\r\n          status: \"-\",\r\n        },\r\n        {\r\n          id: 2,\r\n          onset_date: \"06-07-2024\",\r\n          allergy: \"Knee (category 1)\",\r\n          reaction: \"-\",\r\n          severity: \"-\",\r\n          status: \"-\",\r\n        \r\n        },\r\n       \r\n      ];\r\n      const [addFormView, setAddFormView] = useState(false);\r\n      const [detailView, setDetailView] = useState(false);\r\n    \r\n      const [currentPage, setCurrentPage] = useState(1);\r\n      const [selectedData, setSelectedData] = useState({});\r\n    \r\n      const itemsPerPage = 5; // Number of items to display per page\r\n    \r\n      // Function to handle page change\r\n      const onPageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n      };\r\n    \r\n      // Function to get items for the current page\r\n      const getCurrentPageItems = () => {\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return rowData?.slice(startIndex, endIndex);\r\n      };\r\n    \r\n      const addFormPage = () => {\r\n        setAddFormView(true);\r\n      };\r\n    \r\n      const detailPage = () => {\r\n        setDetailView(true);\r\n      };\r\n    \r\n      const getselectedData = (data, type) => {\r\n        console.log(type, \"first\", data);\r\n        setSelectedData(data);\r\n        if (type === \"edit\") {\r\n          addFormPage();\r\n        }\r\n        if (type === \"delete\") {\r\n          detailPage();\r\n        }\r\n      };\r\n    \r\n     \r\n  return (\r\n      <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={10} className=\"\">\r\n              <DateSearch />\r\n            </CCol>\r\n            <CCol\r\n              lg={2}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <AllergiesTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <AllergiesForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Allergies","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport SignsSymptoms from \"./Signs And Symptoms/SignsSymptoms\";\r\nimport Medication from \"./Medication/Medication\";\r\nimport Allergies from \"./Allergies/Allergies\";\r\n\r\nconst PresentIllness = ({ OnClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Symptoms\" },\r\n    { id: 2, title: \"Medication\" },\r\n    { id: 3, title: \"Allergies\" },\r\n  ];\r\n  const PatientSubMenu3 = localStorage.getItem(\"PatientSubMenu-3\");\r\n  const ParsedPatientSubMenu = PatientSubMenu3\r\n    ? JSON.parse(PatientSubMenu3)\r\n    : 1;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  console.log(\"first\", currentTab);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={OnClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              History of Present Illness (HPI)\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                {\r\n                  label: \"History of Present Illness (HPI)\",\r\n                  to: \"/patients/history\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={currentTab - 1}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <SignsSymptoms />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <Medication />\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n        <> \r\n        <Allergies />\r\n        </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PresentIllness;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport MedicalHistory from \"./Medical History/MedicalHistory\";\r\nimport SurgicalHistory from \"./Surgical History/SurgicalHistory\";\r\nimport OGHistory from \"./OG History/OGHistory\";\r\nimport SocialHistory from \"./Social History/SocialHistory\";\r\nimport FamilyHistory from \"./Family History/FamilyHistory\";\r\n\r\nconst History = ({ OnClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Medical History\" },\r\n    { id: 2, title: \"O/G History\" },\r\n    { id: 3, title: \"Surgical History\" },\r\n    { id: 4, title: \"Family History\" },\r\n    { id: 5, title: \"Social History\" },\r\n  ];\r\n  const PatientSubMenu3 = localStorage.getItem(\"PatientSubMenu-3\");\r\n  const ParsedPatientSubMenu = PatientSubMenu3\r\n    ? JSON.parse(PatientSubMenu3)\r\n    : 1;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={OnClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">History</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                {\r\n                  label: \"History\",\r\n                  to: \"/patients/history\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={ParsedPatientSubMenu - 1}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <MedicalHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <OGHistory from={\"\"} back={OnClose}/>\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n          <>\r\n            <SurgicalHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 4 && (\r\n          <>\r\n            <FamilyHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 5 && (\r\n          <>\r\n            <SocialHistory back={OnClose}/>\r\n          </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport ExcerciseHabit from \"./ExerciseHabit/ExerciseHabit\";\r\nimport Mood from \"./Mood/Mood\";\r\nimport Nutrition from \"./Nutrition/Nutrition\";\r\nimport SexualStatus from \"./SexualStatus/SexualStatus\";\r\nimport Sleep from \"./Sleep/Sleep\";\r\n\r\nconst WellnessProfile = ({ OnClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Exercise Habit\" },\r\n    { id: 2, title: \"Nutrition\" },\r\n    { id: 3, title: \"Sleep\" },\r\n    { id: 4, title: \"Mood\" },\r\n    { id: 5, title: \"Sexual Status\" },\r\n  ];\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-3\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 1;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={OnClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Wellness</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                {\r\n                  label: \"Wellness\",\r\n                  to: \"/patients/history\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={ParsedPatientSubMenu - 1}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <ExcerciseHabit />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <Nutrition />\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n          <>\r\n            <Sleep />\r\n          </>\r\n        )}\r\n        {currentTab === 4 && (\r\n          <>\r\n            <Mood />\r\n          </>\r\n        )}\r\n        {currentTab === 5 && (\r\n          <>\r\n            <SexualStatus back={OnClose}/>\r\n          </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WellnessProfile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DateCards from \"../../../../../DateCards/DateCards\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst Ros = ({ onClose }) => {\r\n  const dateCards = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Fever\", \"Sweating\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Hay fever\"],\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    { id: 9, date: \"06-07-2024\" },\r\n    { id: 10, date: \"06-07-2024\" },\r\n    { id: 11, date: \"06-07-2024\" },\r\n    { id: 12, date: \"06-07-2024\" },\r\n    { id: 13, date: \"06-07-2024\" },\r\n    { id: 14, date: \"06-07-2024\" },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(true);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [skinselectedOptions, setSkinSelectedOptions] = useState([]);\r\n  const [skinselectedOptions1, setSkinSelectedOptions1] = useState([]);\r\n  const [headselectedOptions, setHeadSelectedOptions] = useState([]);\r\n\r\n  const [labelName1, setLabelname1] = useState(\"\");\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const [labelName, setLabelname] = useState(selectedData?.ga?.status || \"\");\r\n  const [labelNameSkin, setLabelNameSkin] = useState(\r\n    selectedData?.ga?.status || \"\"\r\n  );\r\n  const [labelNameHead, setLabelNameHead] = useState(\r\n    selectedData?.ga?.status || \"\"\r\n  );\r\n  const [generalOpen, setGeneralOpen] = useState(false);\r\n  const [heentOpen, setHeentOpen] = useState(false);\r\n  const [skinOpen, setSkinOpen] = useState(false);\r\n  const [headOpen, setHeadOpen] = useState(false);\r\n\r\n  const [editView, setEditView] = useState(false);\r\n\r\n  const options = [\r\n    \"Weight Loss\",\r\n    \"Fever\",\r\n    \"Fatigue\",\r\n    \"Sweating\",\r\n    \"Appetite Changes\",\r\n    \"Night Sweats\",\r\n    \"Weakness\",\r\n    \"Chills\",\r\n  ];\r\n\r\n  const allergyoptions = [\r\n    \"Hives\",\r\n    \"Swelling of lips or tongue\",\r\n    \"Hay fever\",\r\n    \"Asthma\",\r\n    \"Eczema/Sensitive\",\r\n    \"AutoImmune Disorder\",\r\n    \"Sensitivity to drugs,food,pollens,or dander\",\r\n  ];\r\n\r\n  const skinyoptions = [\r\n    \"Rashes\",\r\n    \"Itching\",\r\n    \"Change in hair or nails\",\r\n    \"Skin Lesions\",\r\n  ];\r\n\r\n  const headoptions = [\"Headaches\", \"Head injury\"];\r\n\r\n  const itemsPerPage = 9; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return dateCards?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const handleSelect = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    } else {\r\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const handleSelectSkin = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSkinSelectedOptions([...skinselectedOptions, option]);\r\n    } else {\r\n      setSkinSelectedOptions(\r\n        skinselectedOptions.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSelectSkin1 = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSkinSelectedOptions1([...skinselectedOptions1, option]);\r\n    } else {\r\n      setSkinSelectedOptions1(\r\n        skinselectedOptions1.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSelectHead = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setHeadSelectedOptions([...headselectedOptions, option]);\r\n    } else {\r\n      setHeadSelectedOptions(\r\n        headselectedOptions.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const getselected = (data, method) => {\r\n    setSelectedData(data);\r\n    if (method === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (method === \"edit\") {\r\n      addFormPage();\r\n      setEditView(true);\r\n    }\r\n  };\r\n\r\n  const toggleSelected1 = (label) => {\r\n    setLabelname1(label);\r\n  };\r\n\r\n  const toggleSelectedSkin = (label) => {\r\n    setLabelNameSkin(label);\r\n  };\r\n\r\n  const HeadtoggleSelectedSkin = (label) => {\r\n    setLabelNameHead(label);\r\n  };\r\n\r\n  const toggleSelected = (label) => {\r\n    setIsSelected(!isSelected);\r\n    setLabelname(label);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editView) {\r\n      setLabelname(selectedData?.ga?.status);\r\n      setLabelname1(selectedData?.skin?.status);\r\n      setSelectedOptions(selectedData?.ga?.select);\r\n      setSkinSelectedOptions(selectedData?.skin?.select);\r\n      if (selectedData?.ga?.status === \"Yes\") {\r\n        setGeneralOpen(true);\r\n      }\r\n      if (selectedData?.skin?.status === \"Yes\") {\r\n        setHeentOpen(true);\r\n      }\r\n    } else {\r\n      setLabelname(\"\");\r\n      setLabelname1(\"\");\r\n      setGeneralOpen(false);\r\n      setHeentOpen(false);\r\n      setSelectedOptions([]);\r\n    }\r\n  }, [editView]);\r\n\r\n  const [eyesOpen, setEyesOpen] = useState(false);\r\n  const [eyesLabel, setEyesLabel] = useState(selectedData?.ga?.status || \"\");\r\n  const [eyeselection, setEyeselection] = useState([]);\r\n  const eyeOptions = [\r\n    \"Glasses or contacts\",\r\n    \"Change in vision\",\r\n    \"Eye pain\",\r\n    \"Double vision\",\r\n    \"Flashing lights\",\r\n    \"Glaucoma/Cataracts\",\r\n  ];\r\n  const toggleEyes = (label) => {\r\n    setEyesLabel(label);\r\n  };\r\n  const handleSelectEyes = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setEyeselection([...eyeselection, option]);\r\n    } else {\r\n      setEyeselection(eyeselection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const Ears = [\r\n    \"Change in hearing\",\r\n    \"Ear pain\",\r\n    \"Ear discharge\",\r\n    \"Ringing\",\r\n    \"Dizziness\",\r\n  ];\r\n  const [earsOpen, setEarsOpen] = useState(false);\r\n  const [earsLabel, setEarsLabel] = useState(selectedData?.ga?.status || \"\");\r\n  const [earSelection, setEarSelection] = useState([]);\r\n  const toggleEars = (label) => {\r\n    setEarsLabel(label);\r\n  };\r\n  const handleSelectEars = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setEarSelection([...earSelection, option]);\r\n    } else {\r\n      setEarSelection(earSelection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const Nose = [\"Nose bleeds\", \"Nasal stuffiness\", \"Frequent colds\"];\r\n  const [noseOpen, setNoseOpen] = useState(false);\r\n  const [noseLabel, setNoseLabel] = useState(\"\");\r\n  const [noseSelection, setNoseSelection] = useState([]);\r\n  const toggleNose = (label) => {\r\n    setNoseLabel(label);\r\n  };\r\n  const handleSelectNose = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setNoseSelection([...noseSelection, option]);\r\n    } else {\r\n      setNoseSelection(noseSelection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const MouthThroat = [\r\n    \"Bleeding gums\",\r\n    \"Sore tongue\",\r\n    \"Sore throat\",\r\n    \"Hoarseness\",\r\n  ];\r\n\r\n  const [mouthThroatOpen, setMouthThroatOpen] = useState(false);\r\n  const [mouthThroatLabel, setMouthThroatLabel] = useState(\"\");\r\n  const [mouthThroatSelection, setMouthThroatSelection] = useState([]);\r\n  const toggleMouth = (label) => {\r\n    setMouthThroatLabel(label);\r\n  };\r\n  const handleSelectMouth = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setMouthThroatSelection([...mouthThroatSelection, option]);\r\n    } else {\r\n      setMouthThroatSelection(\r\n        mouthThroatSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n  const Neck = [\"Lumps\", \"Goiter\", \"Swollen glands\", \"Stiffness\"];\r\n  const [neckOpen, setNeckOpen] = useState(false);\r\n  const [neckLabel, setNeckLabel] = useState(\"\");\r\n  const [neckSelection, setNeckSelection] = useState([]);\r\n  const toggleNeck = (label) => {\r\n    setNeckLabel(label);\r\n  };\r\n  const handleSelectNeck = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setNeckSelection([...neckSelection, option]);\r\n    } else {\r\n      setNeckSelection(neckSelection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const Breast = [\r\n    \"Lumps\",\r\n    \"Nipple discharge\",\r\n    \"Pain\",\r\n    \"BSE (Breast Self-Examination)\",\r\n  ];\r\n  const [breastOpen, setBreastOpen] = useState(false);\r\n  const [breastLabel, setBreastLabel] = useState(\"\");\r\n  const [breastSelection, setBreastSelection] = useState([]);\r\n  const toggleBreast = (label) => {\r\n    setBreastLabel(label);\r\n  };\r\n  const handleSelectBreast = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setBreastSelection([...breastSelection, option]);\r\n    } else {\r\n      setBreastSelection(breastSelection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const Respiratory = [\r\n    \"Shortness of breath\",\r\n    \"Cough\",\r\n    \"Production of phlegm, color\",\r\n    \"Wheezing\",\r\n    \"Dyspnea (Difficulty Breathing)\",\r\n    \"Coughing up blood\",\r\n    \"Chest pain\",\r\n  ];\r\n  const [respiratoryOpen, setRespiratoryOpen] = useState(false);\r\n  const [respiratoryLabel, setRespiratoryLabel] = useState(\"\");\r\n  const [respiratorySelection, setRespiratorySelection] = useState([]);\r\n  const toggleRespi = (label) => {\r\n    setRespiratoryLabel(label);\r\n  };\r\n  const handleSelectRespi = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setRespiratorySelection([...respiratorySelection, option]);\r\n    } else {\r\n      setRespiratorySelection(\r\n        respiratorySelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Cardiovascular = [\r\n    \"Chest Pain\",\r\n    \"Palpitations\",\r\n    \"Heart murmur\",\r\n    \"Blue fingers/toes\",\r\n    \"Swelling in hands/feet\",\r\n    \"HX of heart medication\",\r\n    \"High blood pressure\",\r\n    \"Skipping heart beats\",\r\n  ];\r\n  const [cardiovascularOpen, setCardiovascularOpen] = useState(false);\r\n  const [cardiovascularLabel, setCardiovascularLabel] = useState(\"\");\r\n  const [cardiovascularSelection, setCardiovascularSelection] = useState([]);\r\n  const toggleCardio = (label) => {\r\n    setCardiovascularLabel(label);\r\n  };\r\n  const handleSelectCardio = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setCardiovascularSelection([...cardiovascularSelection, option]);\r\n    } else {\r\n      setCardiovascularSelection(\r\n        cardiovascularSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Gastrointestinal = [\r\n    \"Difficulty in urination\",\r\n    \"Frequent urination at night\",\r\n    \"Pain or burning on urination\",\r\n    \"Urgent need to urinate\",\r\n    \"Dribbling\",\r\n    \"Incontinence of urine\",\r\n    \"Decreased urine stream\",\r\n    \"Blood in urine\",\r\n    \"UTI/stones/prostate\",\r\n    \"Infection\",\r\n  ];\r\n  const [gastrointestinalOpen, setGastrointestinalOpen] = useState(false);\r\n  const [gastrointestinalLabel, setGastrointestinalLabel] = useState(\"\");\r\n  const [gastrointestinalSelection, setGastrointestinalSelection] = useState(\r\n    []\r\n  );\r\n  const toggleGastro = (label) => {\r\n    setGastrointestinalLabel(label);\r\n  };\r\n  const handleSelectGastro = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setGastrointestinalSelection([...gastrointestinalSelection, option]);\r\n    } else {\r\n      setGastrointestinalSelection(\r\n        gastrointestinalSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const PeripheralVascularDisease = [\r\n    \"Leg cramps\",\r\n    \"Varicose veins\",\r\n    \"Clots in veins\",\r\n  ];\r\n  const [peripheralVascularDiseaseOpen, setPeripheralVascularDiseaseOpen] =\r\n    useState(false);\r\n  const [peripheralVascularDiseaseLabel, setPeripheralVascularDiseaseLabel] =\r\n    useState(\"\");\r\n  const [\r\n    peripheralVascularDiseaseSelection,\r\n    setPeripheralVascularDiseaseSelection,\r\n  ] = useState([]);\r\n  const togglePeripheral = (label) => {\r\n    setPeripheralVascularDiseaseLabel(label);\r\n  };\r\n  const handleSelectPeripheral = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setPeripheralVascularDiseaseSelection([\r\n        ...peripheralVascularDiseaseSelection,\r\n        option,\r\n      ]);\r\n    } else {\r\n      setPeripheralVascularDiseaseSelection(\r\n        peripheralVascularDiseaseSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n  const Musculoskeletal = [\r\n    \"Pain\",\r\n    \"Swelling\",\r\n    \"Stiffness\",\r\n    \"Decreased joint motion\",\r\n    \"Broken bone\",\r\n    \"Serious sprains\",\r\n    \"Arthritis\",\r\n    \"Gout\",\r\n  ];\r\n  const [musculoskeletalOpen, setMusculoskeletalOpen] = useState(false);\r\n  const [musculoskeletalLabel, setMusculoskeletalLabel] = useState(\"\");\r\n  const [musculoskeletalSelection, setMusculoskeletalSelection] = useState([]);\r\n  const toggleMusculo = (label) => {\r\n    setMusculoskeletalLabel(label);\r\n  };\r\n  const handleSelectMusculo = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setMusculoskeletalSelection([...musculoskeletalSelection, option]);\r\n    } else {\r\n      setMusculoskeletalSelection(\r\n        musculoskeletalSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Neurological = [\r\n    \"Headaches\",\r\n    \"Seizures\",\r\n    \"Syncope (Fainting)\",\r\n    \"Paralysis\",\r\n    \"Loss of muscle size\",\r\n    \"Muscle spasm\",\r\n    \"Weakness\",\r\n    \"Tremor\",\r\n    \"Incoordination\",\r\n    \"Numbness\",\r\n    \"Feeling of “pins and needles/tingles”\",\r\n    \"Involuntary movement\",\r\n  ];\r\n  const [neurologicalOpen, setNeurologicalOpen] = useState(false);\r\n  const [neurologicalLabel, setNeurologicalLabel] = useState(\"\");\r\n  const [neurologicalSelection, setNeurologicalSelection] = useState([]);\r\n  const toggleNeuro = (label) => {\r\n    setNeurologicalLabel(label);\r\n  };\r\n  const handleSelectNeuro = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setNeurologicalSelection([...neurologicalSelection, option]);\r\n    } else {\r\n      setNeurologicalSelection(\r\n        neurologicalSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Hematology = [\"Anemia\", \"Easy bruising/bleeding\", \"Past Transfusions\"];\r\n  const [hematologyOpen, setHematologyOpen] = useState(false);\r\n  const [hematologyLabel, setHematologyLabel] = useState(\"\");\r\n  const [hematologySelection, setHematologySelection] = useState([]);\r\n  const toggleHemato = (label) => {\r\n    setHematologyLabel(label);\r\n  };\r\n  const handleSelectHemato = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setHematologySelection([...hematologySelection, option]);\r\n    } else {\r\n      setHematologySelection(\r\n        hematologySelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Endocrine = [\r\n    \"Abnormal growth\",\r\n    \"Increased appetite\",\r\n    \"Increased thirst\",\r\n    \"Thyroid trouble\",\r\n    \"Diabetes\",\r\n    \"Heat/cold intolerance\",\r\n  ];\r\n  const [endocrineOpen, setEndocrineOpen] = useState(false);\r\n  const [endocrineLabel, setEndocrineLabel] = useState(\"\");\r\n  const [endocrineSelection, setEndocrineSelection] = useState([]);\r\n  const toggleEndo = (label) => {\r\n    setEndocrineLabel(label);\r\n  };\r\n  const handleSelectEndo = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setEndocrineSelection([...endocrineSelection, option]);\r\n    } else {\r\n      setEndocrineSelection(\r\n        endocrineSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n  const Psychiatric = [\r\n    \"Tension/Anxiety\",\r\n    \"Depression/suicide ideation\",\r\n    \"Memory problems\",\r\n    \"Unusual problems\",\r\n    \"Excessive sweating\",\r\n  ];\r\n  const [psychiatricOpen, setPsychiatricOpen] = useState(false);\r\n  const [psychiatricLabel, setPsychiatricLabel] = useState(\"\");\r\n  const [psychiatricSelection, setPsychiatricSelection] = useState([]);\r\n  const togglePsych = (label) => {\r\n    setPsychiatricLabel(label);\r\n  };\r\n  const handleSelectPsych = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setPsychiatricSelection([...psychiatricSelection, option]);\r\n    } else {\r\n      setPsychiatricSelection(\r\n        psychiatricSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={5} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Review of Systems (ROS)\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={7} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Review of Systems (ROS)\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center\"\r\n            >\r\n              <div>\r\n                <PrimaryButton\r\n                  onClick={() => {\r\n                    addFormPage();\r\n                    setSelectedData({});\r\n                  }}\r\n                >\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              {getCurrentPageItems()?.map((item, i) => (\r\n                <CCol lg={4} className=\"mb-3\" key={i}>\r\n                  <DateCards data={item} onClick={getselected} />\r\n                </CCol>\r\n              ))}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={dateCards?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <CRow className=\"mb-2\">\r\n              <CCol className=\"d-flex align-items-center gap-2\">\r\n                <span>Date</span>\r\n                <SingleDatePicker defaultDate={selectedData?.date} />\r\n              </CCol>\r\n              <CCol className=\"d-flex justify-content-end\">\r\n                <div style={{ width: \"120px\" }}>\r\n                  <ActiveButton\r\n                    onClick={() => {\r\n                      setAddFormView(false);\r\n                      setEditView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                  >\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets?.listview} alt=\"close\" />\r\n                      <span>List View</span>\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">General</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelName === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelected(\"Yes\");\r\n                      setGeneralOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelName === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelected(\"No\");\r\n                      setGeneralOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {generalOpen && (\r\n                <>\r\n                  {labelName === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {options?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelect}\r\n                            selected={selectedOptions.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={heentTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={heentTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Allergy</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelName1 === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelected1(\"Yes\");\r\n                      setHeentOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelName1 === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelected1(\"No\");\r\n                      setHeentOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {heentOpen && (\r\n                <>\r\n                  {labelName1 === \"Yes\" && (\r\n                    <>\r\n                      <CRow>\r\n                        {allergyoptions?.map((option, index) => (\r\n                          <CCol lg={\"auto\"}>\r\n                            <OptionItem\r\n                              key={index}\r\n                              label={option}\r\n                              onSelect={handleSelectSkin}\r\n                              selected={skinselectedOptions?.includes(option)}\r\n                              disabled={editView}\r\n                            />\r\n                          </CCol>\r\n                        ))}\r\n                      </CRow>\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            disabled={editView}\r\n                            defaultValue={selectedData?.skin?.notes}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!skinOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {skinOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Skin</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelNameSkin === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelectedSkin(\"Yes\");\r\n                      setSkinOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelNameSkin === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelectedSkin(\"No\");\r\n                      setSkinOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {skinOpen && (\r\n                <>\r\n                  {labelNameSkin === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {skinyoptions?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectSkin1}\r\n                            selected={skinselectedOptions1.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!headOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {headOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Head</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelNameHead === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      HeadtoggleSelectedSkin(\"Yes\");\r\n                      setHeadOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelNameHead === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      HeadtoggleSelectedSkin(\"No\");\r\n                      setHeadOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {headOpen && (\r\n                <>\r\n                  {labelNameHead === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {headoptions?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectHead}\r\n                            selected={headselectedOptions.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!eyesOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {eyesOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Eyes</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      eyesLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEyes(\"Yes\");\r\n                      setEyesOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      eyesLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEyes(\"No\");\r\n                      setEyesOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {eyesOpen && (\r\n                <>\r\n                  {eyesLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {eyeOptions?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectEyes}\r\n                            selected={eyeselection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!earsOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {earsOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Ears</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      earsLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEars(\"Yes\");\r\n                      setEarsOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      earsLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEars(\"No\");\r\n                      setEarsOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {earsOpen && (\r\n                <>\r\n                  {earsLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Ears?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectEars}\r\n                            selected={earSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!noseOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {noseOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Nose</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      noseLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNose(\"Yes\");\r\n                      setNoseOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      noseLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNose(\"No\");\r\n                      setNoseOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {noseOpen && (\r\n                <>\r\n                  {noseLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Nose?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectNose}\r\n                            selected={noseSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!mouthThroatOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {mouthThroatOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Mouth/Throat</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      mouthThroatLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleMouth(\"Yes\");\r\n                      setMouthThroatOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      mouthThroatLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleMouth(\"No\");\r\n                      setMouthThroatOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {mouthThroatOpen && (\r\n                <>\r\n                  {mouthThroatLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {MouthThroat?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectMouth}\r\n                            selected={mouthThroatSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!neckOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {neckOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Neck</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      neckLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNeck(\"Yes\");\r\n                      setNeckOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      neckLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNeck(\"No\");\r\n                      setNeckOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {neckOpen && (\r\n                <>\r\n                  {neckLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Neck?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectNeck}\r\n                            selected={neckSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!breastOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {breastOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Breast</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      breastLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleBreast(\"Yes\");\r\n                      setBreastOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      breastLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleBreast(\"No\");\r\n                      setBreastOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {breastOpen && (\r\n                <>\r\n                  {breastLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Breast?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectBreast}\r\n                            selected={breastSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!respiratoryOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {respiratoryOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Respiratory</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      respiratoryLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleRespi(\"Yes\");\r\n                      setRespiratoryOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      respiratoryLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleRespi(\"No\");\r\n                      setRespiratoryOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {respiratoryOpen && (\r\n                <>\r\n                  {respiratoryLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Respiratory?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectRespi}\r\n                            selected={respiratorySelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!cardiovascularOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {cardiovascularOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Cardiovascular</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      cardiovascularLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleCardio(\"Yes\");\r\n                      setCardiovascularOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      cardiovascularLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleCardio(\"No\");\r\n                      setCardiovascularOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {cardiovascularOpen && (\r\n                <>\r\n                  {cardiovascularLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Cardiovascular?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectCardio}\r\n                            selected={cardiovascularSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!gastrointestinalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {gastrointestinalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Gastrointestinal</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      gastrointestinalLabel === \"Yes\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleGastro(\"Yes\");\r\n                      setGastrointestinalOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      gastrointestinalLabel === \"No\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleGastro(\"No\");\r\n                      setGastrointestinalOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {gastrointestinalOpen && (\r\n                <>\r\n                  {gastrointestinalLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Gastrointestinal?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectGastro}\r\n                            selected={gastrointestinalSelection.includes(\r\n                              option\r\n                            )}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!peripheralVascularDiseaseOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {peripheralVascularDiseaseOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">\r\n                  Peripheral Vascular Disease\r\n                </span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      peripheralVascularDiseaseLabel === \"Yes\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      togglePeripheral(\"Yes\");\r\n                      setPeripheralVascularDiseaseOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      peripheralVascularDiseaseLabel === \"No\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      togglePeripheral(\"No\");\r\n                      setPeripheralVascularDiseaseOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {peripheralVascularDiseaseOpen && (\r\n                <>\r\n                  {peripheralVascularDiseaseLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {PeripheralVascularDisease?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectPeripheral}\r\n                            selected={peripheralVascularDiseaseSelection.includes(\r\n                              option\r\n                            )}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!musculoskeletalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {musculoskeletalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Musculoskeletal</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      musculoskeletalLabel === \"Yes\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleMusculo(\"Yes\");\r\n                      setMusculoskeletalOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      musculoskeletalLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleMusculo(\"No\");\r\n                      setMusculoskeletalOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {musculoskeletalOpen && (\r\n                <>\r\n                  {musculoskeletalLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Musculoskeletal?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectMusculo}\r\n                            selected={musculoskeletalSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!neurologicalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {neurologicalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Neurological</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      neurologicalLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNeuro(\"Yes\");\r\n                      setNeurologicalOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      neurologicalLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNeuro(\"No\");\r\n                      setNeurologicalOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {neurologicalOpen && (\r\n                <>\r\n                  {neurologicalLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Neurological?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectNeuro}\r\n                            selected={neurologicalSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!hematologyOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {hematologyOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Hematology</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      hematologyLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleHemato(\"Yes\");\r\n                      setHematologyOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      hematologyLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleHemato(\"No\");\r\n                      setHematologyOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {hematologyOpen && (\r\n                <>\r\n                  {hematologyLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Hematology?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectHemato}\r\n                            selected={hematologySelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!endocrineOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {endocrineOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Endocrine</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      endocrineLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEndo(\"Yes\");\r\n                      setEndocrineOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      endocrineLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEndo(\"No\");\r\n                      setEndocrineOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {endocrineOpen && (\r\n                <>\r\n                  {endocrineLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Endocrine?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectEndo}\r\n                            selected={endocrineSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!psychiatricOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {psychiatricOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Psychiatric</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      psychiatricLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      togglePsych(\"Yes\");\r\n                      setPsychiatricOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      psychiatricLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      togglePsych(\"No\");\r\n                      setPsychiatricOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {psychiatricOpen && (\r\n                <>\r\n                  {psychiatricLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Psychiatric?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectPsych}\r\n                            selected={psychiatricSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            {!editView && (\r\n              <>\r\n                <div className=\"vertical-line mt-2 mb-3\"></div>\r\n                <CRow className=\"mb-1\">\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton\r\n                      onClick={() => {\r\n                        setAddFormView(false);\r\n                        setEditView(false);\r\n                      }}\r\n                    >\r\n                      CANCEL\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </CRow>\r\n              </>\r\n            )}\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ros;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Breadcrumb from \"../../../../Breadcrumb/Breadcrumb\";\r\nimport \"../Objective/Objective.css\";\r\nimport Table from \"../../../../Tables/Table\";\r\nimport ChiefComplaints from \"./Chief Complaints/ChiefComplaints\";\r\nimport PresentIllness from \"./Present Illness/PresentIllness\";\r\nimport History from \"./History/History\";\r\nimport WellnessProfile from \"./WellnessProfile/WellnessProfile\";\r\nimport Ros from \"./Ros/Ros\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Subjective = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Chief Complaints\", image: Assets.VitalSig },\r\n    { id: 2, name: \"History of Present Illness (HPI)\", image: Assets.PhyExam },\r\n    { id: 3, name: \"History\", image: Assets.History },\r\n    { id: 4, name: \"Wellness Profile\", image: Assets.WellnessProfile },\r\n    { id: 5, name: \"Review of Systems (ROS)\", image: Assets.ReviewSytm },\r\n  ];\r\n  const navigate = useNavigate();\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-2\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 0;\r\n  const GoTOConsultPage = localStorage.getItem(\"PatientConsultTab\");\r\n  const parsedConsult = GoTOConsultPage ? JSON.parse(GoTOConsultPage) : false;\r\n \r\n  const [selectedData, setSelectedData] = useState();\r\n  const [cardView, setCardView] = useState(\r\n    ParsedPatientSubMenu === 1 ? true : false\r\n  );\r\n  const [presentIll, setPresentIll] = useState(\r\n    ParsedPatientSubMenu === 2 ? true : false\r\n  );\r\n  const [historyView, setHistoryView] = useState(\r\n    ParsedPatientSubMenu === 3 ? true : false\r\n  );\r\n  const [wellnessView, setWellnessView] = useState(\r\n    ParsedPatientSubMenu === 4 ? true : false\r\n  );\r\n  const [rosView, setRosView] = useState(\r\n    ParsedPatientSubMenu === 5 ? true : false\r\n  );\r\n\r\n  const getSelectedData = (data) => {\r\n    setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setCardView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setPresentIll(true);\r\n    }\r\n    if (data?.id === 3) {\r\n      setHistoryView(true);\r\n    }\r\n    if (data?.id === 4) {\r\n      setWellnessView(true);\r\n    }\r\n    if (data?.id === 5) {\r\n      setRosView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        {!cardView &&\r\n        !presentIll &&\r\n        !historyView &&\r\n        !wellnessView &&\r\n        !rosView ? (\r\n          <CRow>\r\n            {cardData.map((dt, i) => (\r\n              <CCol md={4} xl={3} className=\"mb-3\">\r\n                <Card\r\n                  className=\"min-height-200\"\r\n                  data={dt}\r\n                  getSelectedData={getSelectedData}\r\n                />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        ) : cardView ? (\r\n          <>\r\n            <ChiefComplaints\r\n              OnClose={() => {\r\n                if (parsedConsult) {\r\n                  navigate(-1);\r\n                  setCardView(false);\r\n                  localStorage.setItem(\r\n                    \"PatientConsultTab\",\r\n                    JSON.stringify(false)\r\n                  );\r\n                } else {\r\n                  setCardView(false);\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        ) : presentIll ? (\r\n          <>\r\n            <PresentIllness\r\n              OnClose={() => {\r\n                if (parsedConsult) {\r\n                  navigate(-1);\r\n                  setPresentIll(false);\r\n                  localStorage.setItem(\r\n                    \"PatientConsultTab\",\r\n                    JSON.stringify(false)\r\n                  );\r\n                } else {\r\n                  setPresentIll(false);\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        ) : historyView ? (\r\n          <>\r\n            <History\r\n              OnClose={() => {\r\n                if (parsedConsult) {\r\n                  navigate(-1);\r\n                  setHistoryView(false);\r\n                  localStorage.setItem(\r\n                    \"PatientConsultTab\",\r\n                    JSON.stringify(false)\r\n                  );\r\n                } else {\r\n                  setHistoryView(false);\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        ) : wellnessView ? (\r\n          <>\r\n            <WellnessProfile\r\n              OnClose={() => {\r\n                if (parsedConsult) {\r\n                  navigate(-1);\r\n                  setWellnessView(false);\r\n                  localStorage.setItem(\r\n                    \"PatientConsultTab\",\r\n                    JSON.stringify(false)\r\n                  );\r\n                } else {\r\n                  setWellnessView(false);\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        ) : rosView ? (\r\n          <>\r\n            <Ros\r\n              onClose={() => {\r\n                if (parsedConsult) {\r\n                  navigate(-1);\r\n                  setRosView(false);\r\n                  localStorage.setItem(\r\n                    \"PatientConsultTab\",\r\n                    JSON.stringify(false)\r\n                  );\r\n                } else {\r\n                  setRosView(false);\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Subjective;\r\n","import React, { useState } from \"react\";\r\nimport MedicalTab from \"./MedicalTab\";\r\nimport Objective from \"./Objective/Objective\";\r\nimport Assesment from \"./Assesment/Assesment\";\r\nimport Plan from \"./Plan/Plan\";\r\nimport Subjective from \"./Subjective/Subjective\";\r\n\r\nconst MedicalProfile = () => {\r\n  const tabs = [\r\n    { id: 1, title: \"Subjective\" },\r\n    { id: 2, title: \"Objective\" },\r\n    { id: 3, title: \"Assesment\" },\r\n    { id: 4, title: \"Plan\" },\r\n  ];\r\n  const PatientSubMenu = localStorage.getItem(\"PatientSubMenu-1\");\r\n  const ParsedPatientSubMenu = PatientSubMenu ? JSON.parse(PatientSubMenu) : 1;\r\n\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <MedicalTab tabs={tabs} getCurrentTab={getCurrentTab} defaultTab={currentTab - 1} />\r\n        {currentTab === 1 && <Subjective />}\r\n        {currentTab === 2 && <Objective />}\r\n        {currentTab === 3 && <Assesment />}\r\n        {currentTab === 4 && <Plan />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalProfile;\r\n","import { CCard, CCardBody, CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst PairTab = () => {\r\n  return (\r\n    <CContainer>\r\n      <CRow>\r\n        <CCol md={12} className=\"p-0\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <div className=\"d-flex justify-content-center align-items-center gap-3\">\r\n                <div>\r\n                  <img alt=\"qrCode\" src={Assets.QrCode} />\r\n                </div>\r\n                <div className=\"d-flex flex-column mb-3\">\r\n                  <span className=\"fs-16 fw-600 text-secondary\">\r\n                    User Name : <strong style={{ color: \"black\" }}>10</strong>\r\n                  </span>\r\n                  <span className=\"fs-16 fw-600 text-secondary\">\r\n                    Password : <strong style={{ color: \"black\" }}>98786</strong>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default PairTab;\r\n","import React, { useState } from 'react'\r\nimport { CModal, CModalBody, CModalHeader, CModalTitle, CButton, CModalFooter, CFormSelect, CRow, CCol } from '@coreui/react'\r\n// import { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst Filter = ({ visible, setVisible }) => {\r\n\r\n  const today = new Date();\r\n\r\n  const [startDate, setStartDate] = useState(today);\r\n  const [endDate, setEndDate] = useState(today);\r\n\r\n  function ClearFunction() {\r\n      setStartDate();\r\n      setEndDate();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       <CModal\r\n            visible={visible}\r\n            onClose={() => setVisible(false)}\r\n            aria-labelledby=\"LiveDemoExampleLabel\"\r\n            className='modal-cutomize'\r\n            backdrop=\"static\"\r\n        >\r\n            <CModalHeader>\r\n                <CModalTitle id=\"LiveDemoExampleLabel\">FILTER</CModalTitle>\r\n            </CModalHeader>\r\n            <CModalBody>\r\n                <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    options={[\r\n                        'Filter with Doctor',\r\n                        { label: 'Doctor One', value: '1' },\r\n                        { label: 'Doctor Two', value: '2' },\r\n                        { label: 'Dcotor Three', value: '3' }\r\n                    ]}\r\n                />\r\n                <CRow className='mb-4'>\r\n                    <CCol lg={6} sm={12}>\r\n                        <p className='date-sec'>From Date</p>\r\n                        <DatePicker\r\n                            showIcon\r\n                            selected={startDate}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            isClearable\r\n                            className=\"date-range-picker picker-sec\"\r\n                            dateFormat=\"MM/dd/yyyy\"\r\n                        />\r\n                    </CCol>\r\n                    <CCol lg={6} sm={12}>\r\n                        <p className='date-sec'>End Date</p>\r\n                        <DatePicker\r\n                            showIcon\r\n                            selected={endDate}\r\n                            onChange={(date) => setEndDate(date)}\r\n                            isClearable\r\n                            className=\"date-range-picker picker-sec\"\r\n                        />\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow className=''>\r\n                  <CCol lg={6} md={6} sm={12}>\r\n                  <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    label={\"Specialty\"}\r\n                    options={[\r\n                        'MD',\r\n                        { label: 'Doctor One', value: '1' },\r\n                        { label: 'Doctor Two', value: '2' },\r\n                        { label: 'Dcotor Three', value: '3' }\r\n                    ]}\r\n                />\r\n                  </CCol>\r\n                  <CCol lg={6} md={6} sm={12}>\r\n                  <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    label={\"Roaster Availability\"}\r\n                    options={[\r\n                        'Available',\r\n                        { label: 'Doctor One', value: '1' },\r\n                        { label: 'Doctor Two', value: '2' },\r\n                        { label: 'Dcotor Three', value: '3' }\r\n                    ]}\r\n                />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=''>\r\n                  <CCol lg={6} md={6} sm={12}>\r\n                  <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    label={\"Gender\"}\r\n                    options={[\r\n                        'All',\r\n                        { label: 'Male', value: '1' },\r\n                        { label: 'Female', value: '2' },\r\n                        { label: 'Others', value: '3' }\r\n                    ]}\r\n                />\r\n                  </CCol>\r\n                  </CRow>\r\n            </CModalBody>\r\n            <CModalFooter>\r\n                <CButton color=\"secondary\" onClick={() => ClearFunction()} className='clear-filter-btn'>\r\n                    Clear Filter\r\n                </CButton>\r\n                <CButton color=\"primary\" className='apply-filter-sec' onClick={() => setVisible(false)}>Apply Filter</CButton>\r\n            </CModalFooter>\r\n        </CModal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { formatDateTime } from \"../../Utils/dateUtils\";\r\n\r\nconst RegisteredDoctorCards = ({ DoctorDetail }) => {\r\n\r\n\r\n  return (\r\n    <div className=\"card-sec\">\r\n    <div className=\"row align-items-center\">\r\n      <div className=\"profile col-4\">\r\n        <img\r\n          src={DoctorDetail?.profile || Assets.NoImg}\r\n          alt=\"Patient-image\"\r\n        />\r\n      </div>\r\n      <div className=\"patient-details col-8 p-2\">\r\n        <h5>\r\n          Dr.{\" \"}\r\n          {DoctorDetail?.name}\r\n        </h5>\r\n        <p className=\"gap-sec d-flex flex-wrap\">\r\n          <small className=\"fs-10 fw-500\">\r\n            {DoctorDetail?.email}\r\n          </small>\r\n          <small className=\"fs-10 fw-500\">|</small>\r\n          <small className=\"fs-10 fw-500\">\r\n            {DoctorDetail?.mobile}\r\n          </small>\r\n        </p>\r\n        <p className=\"flex-sec-wrap gap-sec\">\r\n          <small className=\"fs-10 fw-600\">{DoctorDetail?.type}</small>\r\n          <small className=\"fs-10 fw-600\">|</small> \r\n          <small className=\"fs-10 fw-600\">{DoctorDetail?.date}</small>\r\n          <small className=\"fs-10 fw-600\">{DoctorDetail?.time}</small>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <img src={Assets.videoCall_icon} className=\"edit-icon\" alt=\"edit-icon\" />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default RegisteredDoctorCards","import { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\nimport DoctorCards from \"../../../../Components/DoctorCards/DoctorCards\";\r\nimport { CModal, CModalBody, CModalHeader, CModalTitle, CForm, CFormInput, CButton, CModalFooter, CFormSelect, CRow, CCol } from '@coreui/react'\r\nimport './Call.css';\r\nimport Filter from \"./Filter/Filter\";\r\nimport RegisteredDoctorCards from \"../../../DoctorCards/RegisteredDoctorCards\";\r\n\r\n\r\n\r\nconst CallTab = () => {\r\n\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const [showMobileInput, setShowMobileInput] = useState(false);\r\n  const [showEmailInput, setShowEmailInput] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const DoctorDetail = [\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      type: \"Oncology\",\r\n      date: \"02-04-2024\",\r\n      time: \"12:15PM\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      type: \"Oncology\",\r\n      date: \"02-04-2024\",\r\n      time: \"12:15PM\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      type: \"Oncology\",\r\n      date: \"02-04-2024\",\r\n      time: \"12:15PM\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      type: \"Oncology\",\r\n      date: \"02-04-2024\",\r\n      time: \"12:15PM\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      type: \"Oncology\",\r\n      date: \"02-04-2024\",\r\n      time: \"12:15PM\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      type: \"Oncology\",\r\n      date: \"02-04-2024\",\r\n      time: \"12:15PM\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      type: \"Oncology\",\r\n      date: \"02-04-2024\",\r\n      time:\"12:15PM\",\r\n      time: \"12:15PM\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      type: \"Oncology\",\r\n      date: \"02-04-2024\",\r\n      time: \"12:15PM\",\r\n      profile: Assets.Patient,\r\n    },\r\n  ];\r\n\r\n  const DetailSec = () => {\r\n    navigate(\"/patients/summary\");\r\n  };\r\n  const handleMobileClick = () => {\r\n    setShowMobileInput(!showMobileInput);\r\n    setShowEmailInput(false);\r\n  };\r\n\r\n  const handleEmailClick = () => {\r\n    setShowEmailInput(!showEmailInput);\r\n    setShowMobileInput(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <section className=\"call-tab-sec mt-3\">\r\n      <div className=\"flex-sec top-sec\">\r\n        <div className=\"bread-crumbs\">\r\n          <p className=\"mb-0\">\r\n            <Link to=\"/patients\">Patient</Link> /{\" \"}\r\n            <Link to=\"/patients\" className=\"active\">\r\n              Registered Doctor\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"search-filter-sec\">\r\n          <div className=\"search-bar\">\r\n            <input type=\"text\" placeholder=\"Search Doctor\" />\r\n            <button type=\"submit\">\r\n              <i className=\"fas fa-search\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"patient-adding\">\r\n            <button onClick={() => setVisible(!visible)}>\r\n              <img src={Assets.filter} alt=\"filter-sec\" className=\"filter-icon\" />{\" \"}\r\n              Filter\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"invite-doc-sec\">\r\n        <div className=\"invite-doc-sec-inside\">\r\n          <h3>Invite a Doctor</h3>\r\n          <div className=\"mobi-mail-btn-sec\">\r\n            <div className={showMobileInput ? \"cliked-icon\" : \"mobile-icon\"}>\r\n              <button type=\"button\" onClick={handleMobileClick}>\r\n                <i className=\"fas fa-mobile\"></i> &nbsp; Mobile\r\n              </button>\r\n            </div>\r\n            <div className={showEmailInput ? \"cliked-icon\" : \"mobile-icon\"}>\r\n              <button type=\"button\" onClick={handleEmailClick}>\r\n                <i className=\"fas fa-envelope\"></i> &nbsp;\r\n                Email\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {showMobileInput && (\r\n          <>\r\n\r\n            <hr />\r\n            <CForm>\r\n              <div className=\"mobile-input-section\">\r\n                <div>\r\n                  <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    label={\"ISD Code\"}\r\n                    options={[\r\n                      '+91 India',\r\n                      { label: ' One', value: '1' },\r\n                      { label: ' Two', value: '2' },\r\n                      { label: ' Three', value: '3' }\r\n                    ]}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"exampleFormControlInput1\"\r\n                    label=\"Mobile Number\"\r\n                    placeholder=\"Enter\"\r\n                    aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <CButton color=\"primary\" className=\"start-btn\">Start</CButton>\r\n                </div>\r\n              </div>\r\n            </CForm>\r\n\r\n\r\n          </>\r\n        )}\r\n        {showEmailInput && (\r\n          <>\r\n            <hr />\r\n            <CForm>\r\n              <div className=\"mobile-input-section\">\r\n                <div>\r\n                  <CFormInput\r\n                    type=\"email\"\r\n                    id=\"exampleFormControlInput1\"\r\n                    label=\"Email Address\"\r\n                    placeholder=\"Enter\"\r\n                    aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <CButton color=\"primary\" className=\"start-btn\">Start</CButton>\r\n                </div>\r\n              </div>\r\n            </CForm>\r\n\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"doctor-card-sec\">\r\n        <div className=\"row\">\r\n         <h4 className=\"doc-head\">Registered Doctors</h4>\r\n          {DoctorDetail?.map((data, i) => (\r\n            <div className=\"col-4\" onClick={() => DetailSec()} >\r\n              <Link className=\"card-link\">\r\n                <RegisteredDoctorCards DoctorDetail={data} />\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className='modal-sec'>\r\n        <Filter visible={visible} setVisible={setVisible} />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CallTab","import React, { useState } from \"react\";\r\nimport \"./PatientDetailsView.css\";\r\nimport PatentProfile from \"../../../Components/Dashboard/PatentProfile/PatentProfile\";\r\nimport { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport PatientTabs from \"../../../Components/Dashboard/PatientTabs/PatientTabs\";\r\nimport Breadcrumb from \"../../../Components/Breadcrumb/Breadcrumb\";\r\nimport VitalsTab from \"../../../Components/Dashboard/PatientTabs/VitalsTab/VitalsTab\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport MedicalProfile from \"../../../Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalProfile\";\r\nimport PairTab from \"../../../Components/Dashboard/PatientTabs/PairTab/PairTab\";\r\nimport CallHistoryView from \"../../CallHistory/CallHistoryView\";\r\nimport CallTab from \"../../../Components/Dashboard/PatientTabs/CallTab/CallTab\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst PatientDetailsView = () => {\r\n  const [currentTab, setCurrentTab] = useState(() => {\r\n    // Initial state setup using localStorage\r\n    const storedCount = localStorage.getItem(\"patiendDetailTab\");\r\n    const storedFrom = localStorage.getItem(\"PatientMenu\");\r\n    const parsedData = storedCount && JSON.parse(storedCount);\r\n    return storedCount ? parsedData?.id : storedFrom ? Number(storedFrom) : null;\r\n  });\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {/* <CContainer> */}\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={12} xl={5} className=\"mb-2\">\r\n          <PatentProfile />\r\n        </CCol>\r\n        <CCol md={12} xl={7}>\r\n          {/* tabs={tabs} */}\r\n          <PatientTabs getCurrentTab={getCurrentTab} />\r\n        </CCol>\r\n      </CRow>\r\n      {!currentTab && <CallHistoryView />}\r\n\r\n      {currentTab === 2 && (\r\n        <CRow>\r\n          <CCol md={12}>\r\n            <MedicalProfile />\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {currentTab === 4 && (\r\n        <CRow>\r\n          <CCol md={12}>\r\n            <PairTab />\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {currentTab === 1 && (\r\n        <CRow>\r\n          <CCol md={12}>\r\n            <CallTab />\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {/* </CContainer> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientDetailsView;\r\n"],"names":["PatentProfile","_location$state","_data$user","_data$user2","_data$user$email","_data$user3","_data$user4","_data$user$mobile","_data$user5","_data$additional_info","_data$additional_info2","_data$additional_info3","_data$additional_info4","_data$user6","data","useLocation","state","PatientDetail","_jsx","_Fragment","children","CCard","className","_jsxs","CCardBody","src","Assets","patient1","alt","user","first_name","last_name","email","isd_code","mobile","additional_info","mrn_number","age","gender","_ref","getCurrentTab","tabs","id","title","image","Call","Notes","Camera","Qr","currentTab","setCurrentTab","useState","storedCount","localStorage","getItem","storedFrom","findObjectById","find","option","Number","console","log","JSON","parse","map","index","concat","onClick","removeItem","setItem","stringify","switchTab","_DoctorDetail$partici","_DoctorDetail$partici2","_DoctorDetail$partici3","_DoctorDetail$partici4","_DoctorDetail$partici5","_DoctorDetail$partici6","_DoctorDetail$partici7","_DoctorDetail$partici8","_DoctorDetail$partici9","DoctorDetail","profile","NoImg","participants","participant_info","name","phone","consult_speciality","scheduled_at","formatDateTime","notes","Loader","class","height","width","viewBox","points","visible","setVisible","RegDoctors","getFilter","today","Date","startDate","setStartDate","endDate","setEndDate","selectedDoctor","setSelectedDoctor","errors","setErrors","doctor","ApplyFilter","validate","isValid","newErrors","toLocaleDateString","CModal","onClose","backdrop","CModalHeader","CModalTitle","CModalBody","CFormSelect","onChange","event","selectedValue","target","value","prev","_doctor$user","_doctor$user2","_doctor$user3","_doctor$user4","CRow","CCol","lg","sm","DatePicker","showIcon","selected","date","isClearable","dateFormat","maxDate","CModalFooter","CButton","color","navigate","useNavigate","setRegDoctors","setDoctorDetail","totalItems","setTotalItems","filter","setFilter","loading","error","get","post","useApi","currentPage","setCurrentPage","DetailSec","useEffect","async","response","_response$data","_response$data2","_response$data2$pagin","code","consults","pagination","total","err","getDoctors","getRegisteredDoctors","useCallback","_response$data3","providers","Link","to","style","maxHeight","length","i","DoctorCards","Pagination","onPageChange","pageNumber","itemsPerPage","FilterModal","_datas$tableData","datas","formattedData","tableData","item","_item$date","split","reverse","join","data1","parseInt","str","replace","unit","CustomTooltip","_ref2","active","payload","label","_payload$","_payload$2","tooltipContent","slug","dataKey","_payload$0$payload","temperature","chartLabel3","chartLabel1","backgroundColor","border","padding","borderRadius","LineChart","margin","top","right","left","bottom","Tooltip","content","Line","type","stroke","strokeWidth","getSelectedData","isOpen","alignment","size","CloseBtn","parseFloat","data2","data3","data4","data5","data6","minValue","Math","min","maxValue","max","isNaN","Infinity","XAxis","axisLine","tickLine","YAxis","yMax","domain","formatter","tooltipFormatter","props","d","chartLabel2","chartLabel4","chartLabel5","chartLabel6","Legend","CartesianGrid","horizontal","vertical","removePercent","Set","BarChart","Bar","fill","overflow","LineChartDetails","ColumnChartDetails","getFilterValues","searchValue","setSearchValue","md","DATE_FORMAT","placeholder","e","PrimaryButton","onSearch","formattedStart","formatDate","formattedEnd","search","_data$badge","getTableDatas","chartView","setChartView","addView","setAddView","filterView","setFilterView","addBack","filterBack","CContainer","icon","badge","dt","Badge","xs","Add","ActiveButton","CloseX","Filter","Chart","xl","ChartTab","DateRangePicker","DynamicTable","columnsData","BlurBackground","BPForm","HeartRate","LFTForm","LipidProfileForm","Temperature","Spo2","RespirationRateForm","BMI","BSugar","Hemogloin","HCT","BUricAcid","BKetone","Urea","Creatinine","GFR","Urinalysis","transformBPData","originalData","Array","isArray","VitalBP","category","result","status","details","bpFlagColor","bpFlag","systolic","diastolic","pulse","time","action","freeze","user_id","transformBMIData","VitalBMI","_item$details","_item$details2","_item$details3","_item$details4","_item$details5","_item$details6","_item$details7","bmiFlagColor","bmiFlag","bmi","weight","height_unit","weight_unit","transformRespirationRateData","VitalRespi","respirationFlagColor","respirationFlag","respiration","transformSpO2Data","SpO2","_item$details8","_item$details9","_item$details10","_item$details11","spo2FlagColor","spo2Flag","spo2","transformTemperatureData","_tableData$","_tableData$2","_tableData$2$result","_tableData$3","_tableData$3$date$spl","_tableData$3$date$spl2","_tableData$3$date$spl3","Temp","_item$details12","_item$details13","_item$details14","_item$details15","_item$details16","_item$details17","_item$details18","_item$details19","temperatureFlagColor","temperatureFlag","method","transformLFTData","_tableData$4","_tableData$5","_tableData$6","_tableData$7","LFT","_item$details20","_item$details21","_item$details22","_item$details23","_item$details24","_item$details25","_item$details26","_item$details27","_item$details28","_item$details29","_item$details30","_item$details31","_item$details32","_item$details33","_item$details34","_item$details35","_item$details36","_item$details37","spirometerFlagColor","spirometerFlag","fvc","fev1","fev1_fvc","pef","fvcPercent","fev1Percent","pefPercent","fef25","fef25Percent","fef50","fef50Percent","fef75","fef75Percent","fef2575","fef2575Percent","transformHeartRateData","_tableData$8","_tableData$9","_tableData$9$date","_tableData$9$date$spl","_tableData$9$date$spl2","_tableData$9$date$spl3","VitalHBeat","_item$details38","_item$details39","_item$details40","_item$details41","_item$details42","_item$details43","_item$details44","heartRateFlagColor","heartRateFlag","heart","interpretation","result_file","transformBloodSugarData","VitalBs","_item$details45","_item$details46","_item$details47","_item$details48","_item$details49","bsFlagColor","bsFlag","blood_sugar","blood_sugar_value","setVitalView","PatientSubMenu3","ParsedPatientSubMenu","titleObject","findTabById","GoTOConsultPage","parsedConsult","getData","parsedData","currentTabtitle","findTitleById","isModalOpen","setIsModalOpen","cardSelectedData","setSelectedCardData","entities","setEntities","cards","setCards","filtered","setFiltered","filters","setFilters","fetchPromises","ObjectiveDatas","card","_tableData$0$details","_tableData$$details","_tableData$0$details2","_tableData$0$details3","_tableData$0$details4","_tableData$0$details5","_tableData$0$details6","_tableData$0$details7","_tableData$0$details8","_tableData$0$details9","_tableData$0$details10","_tableData$2$details","_tableData$0$details11","_tableData$0$details12","_tableData$0$details13","_tableData$0$details14","_tableData$0$details15","_tableData$0$details16","_tableData$0$details17","_tableData$0$details18","_tableData$0$details19","_tableData$0$details20","_tableData$3$details","_tableData$0$details21","_tableData$4$details","_tableData$0$details22","_response$data4","_response$data5","_response$data6","_response$data7","_response$data8","_response$data9","_response$data10","_response$data11","_response$data12","_response$data13","_response$data14","_response$data15","_response$data16","_response$data17","_response$data18","_response$data18$vita","_response$data18$vita2","vitals","cardbadge","created","updatedCards","Promise","all","fetchCardData","fetchSingleCardData","_response$data19","_tableData$0$details23","_tableData$5$details","_tableData$0$details24","_tableData$0$details25","_tableData$0$details26","_tableData$0$details27","_tableData$0$details28","_tableData$0$details29","_tableData$0$details30","_tableData$6$details","_tableData$7$details","_tableData$8$details","_tableData$0$details31","_tableData$0$details32","_tableData$0$details33","_tableData$0$details34","_tableData$0$details35","_tableData$0$details36","_tableData$0$details37","_tableData$0$details38","_tableData$9$details","_tableData$0$details39","_tableData$10","_tableData$10$details","_tableData$0$details40","_response$data20","_response$data21","_response$data22","_response$data23","_response$data24","_response$data25","_response$data26","_response$data27","_response$data28","_response$data29","_response$data30","_response$data31","_response$data32","_response$data33","_response$data34","_response$data35","_response$data36","_response$data36$vita","_response$data36$vita2","updatedCard","openModal","findByIdforSelectedData","selectedObject","filteredProducts","product","BackBtn","Breadcrumb","paths","MedicalTab","defaultTab","_item$created","_item$cardbadge","CardChart","Modal","closeModal","ObjectiveDetailPage","rowData","file","link","addFormView","setAddFormView","deleteView","setDeleteView","selectedData","setSelectedData","addFormPage","SearchBar","OptionsIcon","LabTable","getCurrentPageItems","startIndex","endIndex","slice","columns","getselectedData","LabForm","back","defaultValues","SecondaryButton","setDate","defaultDateString","defaultDate","dateString","_datePart$split","datePart","month","day","year","parseDateString","for","defaultValue","tabindex","Export","CTable","CTableHead","CTableRow","CTableHeaderCell","CTableBody","CTableDataCell","TableEdit","TableDelete","ImagingTable","ImagingForm","Objective","cardData","VitalSig","PhyExam","PatientSubMenu2","vitalView","phyView","setPhyView","labView","setLabView","imagingView","setImagingView","VitalSign","PhysicalExam","Lab","Imaging","Card","Psychiatric","Neurological","Peadiatric","Ophthalmic","Assesment","Diagnosis","Immunizaion","AssesmentTool","diagnosisView","setDiagnosisView","immunizationView","setImmunizationView","assessmentView","setAssessmentView","Immunization","AssessmentTool","MedicationOrder","LabOrder","ImagingOrder","Plan","Orders","Therapies","CPT","PatEdu","History","ordersView","setOrdersView","cptView","setCptView","therapiesView","setTherapiesView","patientView","setPatientView","appointView","setAppointmentView","Cpt","PatientEducation","NextAppointment","onset_date","allergy","reaction","severity","EditPencil","display","justifyContent","Delete","selectedAllergy","setSelectedAllergy","setCategory","_timePart$split","parts","timePart","hours","minutes","options","getSelectedValue","htmlFor","Dropdown","disabled","CFormTextarea","Allergies","detailView","setDetailView","DateSearch","AllergiesTable","AllergiesForm","OnClose","SignsSymptoms","Medication","MedicalHistory","OGHistory","from","SurgicalHistory","FamilyHistory","SocialHistory","ExcerciseHabit","Nutrition","Sleep","Mood","SexualStatus","_selectedData$ga","_selectedData$ga2","_selectedData$ga3","_selectedData$ga7","_selectedData$ga8","_getCurrentPageItems","_selectedData$ga9","_selectedData$skin4","_selectedData$ga10","_selectedData$ga11","_selectedData$ga12","_selectedData$ga13","_selectedData$ga14","_selectedData$ga15","_selectedData$ga16","_selectedData$ga17","_selectedData$ga18","_selectedData$ga19","_selectedData$ga20","_selectedData$ga21","_selectedData$ga22","_selectedData$ga23","_selectedData$ga24","_selectedData$ga25","_selectedData$ga26","dateCards","ga","select","skin","selectedOptions","setSelectedOptions","skinselectedOptions","setSkinSelectedOptions","skinselectedOptions1","setSkinSelectedOptions1","headselectedOptions","setHeadSelectedOptions","labelName1","setLabelname1","isSelected","setIsSelected","labelName","setLabelname","labelNameSkin","setLabelNameSkin","labelNameHead","setLabelNameHead","generalOpen","setGeneralOpen","heentOpen","setHeentOpen","skinOpen","setSkinOpen","headOpen","setHeadOpen","editView","setEditView","allergyoptions","skinyoptions","headoptions","handleSelect","handleSelectSkin","handleSelectSkin1","handleSelectHead","getselected","toggleSelected1","toggleSelectedSkin","HeadtoggleSelectedSkin","toggleSelected","_selectedData$ga4","_selectedData$skin","_selectedData$ga5","_selectedData$skin2","_selectedData$ga6","_selectedData$skin3","eyesOpen","setEyesOpen","eyesLabel","setEyesLabel","eyeselection","setEyeselection","eyeOptions","toggleEyes","handleSelectEyes","Ears","earsOpen","setEarsOpen","earsLabel","setEarsLabel","earSelection","setEarSelection","toggleEars","handleSelectEars","Nose","noseOpen","setNoseOpen","noseLabel","setNoseLabel","noseSelection","setNoseSelection","toggleNose","handleSelectNose","MouthThroat","mouthThroatOpen","setMouthThroatOpen","mouthThroatLabel","setMouthThroatLabel","mouthThroatSelection","setMouthThroatSelection","toggleMouth","handleSelectMouth","Neck","neckOpen","setNeckOpen","neckLabel","setNeckLabel","neckSelection","setNeckSelection","toggleNeck","handleSelectNeck","Breast","breastOpen","setBreastOpen","breastLabel","setBreastLabel","breastSelection","setBreastSelection","toggleBreast","handleSelectBreast","Respiratory","respiratoryOpen","setRespiratoryOpen","respiratoryLabel","setRespiratoryLabel","respiratorySelection","setRespiratorySelection","toggleRespi","handleSelectRespi","Cardiovascular","cardiovascularOpen","setCardiovascularOpen","cardiovascularLabel","setCardiovascularLabel","cardiovascularSelection","setCardiovascularSelection","toggleCardio","handleSelectCardio","Gastrointestinal","gastrointestinalOpen","setGastrointestinalOpen","gastrointestinalLabel","setGastrointestinalLabel","gastrointestinalSelection","setGastrointestinalSelection","toggleGastro","handleSelectGastro","PeripheralVascularDisease","peripheralVascularDiseaseOpen","setPeripheralVascularDiseaseOpen","peripheralVascularDiseaseLabel","setPeripheralVascularDiseaseLabel","peripheralVascularDiseaseSelection","setPeripheralVascularDiseaseSelection","togglePeripheral","handleSelectPeripheral","Musculoskeletal","musculoskeletalOpen","setMusculoskeletalOpen","musculoskeletalLabel","setMusculoskeletalLabel","musculoskeletalSelection","setMusculoskeletalSelection","toggleMusculo","handleSelectMusculo","neurologicalOpen","setNeurologicalOpen","neurologicalLabel","setNeurologicalLabel","neurologicalSelection","setNeurologicalSelection","toggleNeuro","handleSelectNeuro","Hematology","hematologyOpen","setHematologyOpen","hematologyLabel","setHematologyLabel","hematologySelection","setHematologySelection","toggleHemato","handleSelectHemato","Endocrine","endocrineOpen","setEndocrineOpen","endocrineLabel","setEndocrineLabel","endocrineSelection","setEndocrineSelection","toggleEndo","handleSelectEndo","psychiatricOpen","setPsychiatricOpen","psychiatricLabel","setPsychiatricLabel","psychiatricSelection","setPsychiatricSelection","togglePsych","handleSelectPsych","DateSelector","DateCards","SingleDatePicker","listview","PlusIcon","MinusIcon","marginBottom","OptionItem","onSelect","includes","Subjective","WellnessProfile","ReviewSytm","cardView","setCardView","presentIll","setPresentIll","historyView","setHistoryView","wellnessView","setWellnessView","rosView","setRosView","ChiefComplaints","PresentIllness","Ros","MedicalProfile","PatientSubMenu","PairTab","QrCode","videoCall_icon","CallTab","showMobileInput","setShowMobileInput","showEmailInput","setShowEmailInput","Patient","handleMobileClick","handleEmailClick","CForm","CFormInput","RegisteredDoctorCards","PatientDetailsView","PatientTabs","CallHistoryView"],"sourceRoot":""}