{"version":3,"file":"static/js/615.533b64a4.chunk.js","mappings":"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EAAAA,EAAAA,KAAA,OACEuG,IAAI,OACJC,IAAW,OAAN7E,EAAAA,QAAM,IAANA,EAAAA,OAAM,EAANA,EAAAA,EAAQmb,UACb7c,UAAU,SACVoG,QAASA,IAAMwK,EAAapK,EAAI,WAElCzG,EAAAA,EAAAA,KAAA,OACEuG,IAAI,SACJC,IAAW,OAAN7E,EAAAA,QAAM,IAANA,EAAAA,OAAM,EAANA,EAAAA,EAAQob,YACb9c,UAAU,SACVoG,QAASA,IAAMwK,EAAapK,EAAI,mBA3BxBC,WAmCrB,EC2MP,GAtPgBtI,IAAkB,IAAjB,QAAEuJ,GAASvJ,EAC1B,MASMwd,EAAU,CACd,CACEna,GAAI,EACJzC,KAAM,aACND,KAAM,MACN8c,KAAM,MACN5D,MAAO,IACPhV,KAAM,KAER,CACExB,GAAI,EACJzC,KAAM,aACND,KAAM,MACN8c,KAAM,MACN5D,MAAO,IACPhV,KAAM,KAER,CACExB,GAAI,EACJzC,KAAM,aACND,KAAM,MACN8c,KAAM,MACN5D,MAAO,IACPhV,KAAM,KAER,CACExB,GAAI,EACJzC,KAAM,aACND,KAAM,MACN8c,KAAM,MACN5D,MAAO,IACPhV,KAAM,KAER,CACExB,GAAI,EACJzC,KAAM,aACND,KAAM,MACN8c,KAAM,MACN5D,MAAO,IACPhV,KAAM,KAER,CACExB,GAAI,EACJzC,KAAM,aACND,KAAM,MACN8c,KAAM,MACN5D,MAAO,IACPhV,KAAM,KAER,CACExB,GAAI,EACJzC,KAAM,aACND,KAAM,MACN8c,KAAM,MACN5D,MAAO,IACPhV,KAAM,KAER,CACExB,GAAI,EACJzC,KAAM,aACND,KAAM,MACN8c,KAAM,MACN5D,MAAO,IACPhV,KAAM,KAER,CACExB,GAAI,EACJzC,KAAM,aACND,KAAM,MACN8c,KAAM,MACN5D,MAAO,IACPhV,KAAM,KAER,CACExB,GAAI,GACJzC,KAAM,aACND,KAAM,MACN8c,KAAM,MACN5D,MAAO,IACPhV,KAAM,OAGHmV,EAAaC,IAAkBhR,EAAAA,EAAAA,UAAS,IACxCiR,EAAaC,IAAkBlR,EAAAA,EAAAA,WAAS,IACx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","sources":["Components/Charts/CardChart.jsx","Components/Dashboard/PatientTabs/VitalsTab/VitalsTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalTab.jsx","Components/Cards/Card.jsx","Components/Modal/Modal.jsx","Components/Tables/Table.jsx","Components/Buttons/ActiveButton/ActiveButton.jsx","Components/Charts/LineChart.jsx","Components/Charts/ColumnChartDetails.jsx","Components/Charts/ChartTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm.jsx","Components/Tables/DynamicTable.jsx","Components/DateRangePicker/DateRangePicker.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/ECG Chart/ECGChart.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/DetailPage/ObjectiveDetailPage.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/VitalSign/VitalSign.jsx","Components/DateCards/DateCards.jsx","Components/DateRangePicker/SingleDatePicker.jsx","Components/OptionItems/OptionItem.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/PhysicalExam/PhysicalExam.jsx","Components/SearchBar/SearchBar.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Lab/Lab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Imaging/ImagingForm.jsx","Components/Tables/ImagingTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Imaging/Imaging.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Objective.jsx","Components/Tables/DiagnosisTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Diagnosis/DiagnosisForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Diagnosis/Diagnosis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Immunization/ImmunizationForm.jsx","Components/Tables/ImmunizationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Immunization/Immunization.jsx","Components/Tables/AssessmentTools/PsychiatricTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Psychiatric/PsychiatricForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Psychiatric/Psychiatric.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Neurological/Neurological.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Peadiatric/Peadiatric.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Ophthalmic/Ophthalmic.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/AssessmentTool.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Assesment.jsx","Components/Buttons/DropDownButton/DropDownButton.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrderForm.jsx","Components/Tables/ImagingOrderTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/DetailsTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationCompleted.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Orders.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureForm.jsx","Components/Tables/ProcedurerTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/Cpt.jsx","Components/Tables/TherapiesTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/TherapiesTab/TherapiesForm.jsx","Components/DateRangePicker/DateSearch.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/TherapiesTab/TherapiesTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/Therapies.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Plan.jsx","Components/Tables/Subjective/AllergiesTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Allergies/AllergiesForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Allergies/Allergies.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/PresentIllness.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/ObstericHistoryForm.jsx","Components/Tables/Subjective/ObstetricHistoryTable.jsx","Components/Tables/Subjective/GynaecHistoryTable.jsx","Components/Tables/Subjective/ScreeningHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/MensturalHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/ScreeningHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/OGHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Social History/MedHistoryForm.jsx","Components/Tables/Subjective/SocialHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Social History/SocialHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/History.jsx","Components/Tables/Subjective/WellnessProfileTable/ExerciseHabitTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/ExerciseHabit/ExcerciseHabitForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/ExerciseHabit/ExerciseHabit.jsx","Components/Tables/Subjective/WellnessProfileTable/MoodTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Mood/MoodForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Mood/Mood.jsx","Components/Tables/Subjective/WellnessProfileTable/NutritionDietTable.jsx","Components/Tables/Subjective/WellnessProfileTable/NutritionFluidTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/DietForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/FluidIntakeForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/Nutrition.jsx","Components/Tables/Subjective/WellnessProfileTable/SexualStatusTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/SexualStatus/SexualStatusForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/SexualStatus/SexualStatus.jsx","Components/Tables/Subjective/WellnessProfileTable/SleepTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Sleep/SleepForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Sleep/Sleep.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/WellnessProfile.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Ros/Ros.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Subjective.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalProfile.jsx","Components/Dashboard/PatientTabs/PairTab/PairTab.jsx","Components/Dashboard/PatientTabs/CallTab/Filter/Filter.jsx","Components/Dashboard/PatientTabs/CallTab/CallTab.jsx","Views/Dashboard/PatientDetails/PatientDetailsView.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Line, LineChart, ResponsiveContainer, Tooltip, XAxis } from \"recharts\";\r\n\r\nconst CardChart = ({ datas }) => {\r\n  function removePercent(str) {\r\n    // Remove trailing percent sign (%) using String.replace() method\r\n    // Replace '%' with an empty string ''\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n\r\n  // Transform tableData to the desired format\r\n  const formattedData = datas?.tableData?.map((item) => {\r\n    const datePart = item?.date?.split(\" \")[0]; // Extract date part only\r\n\r\n    return {\r\n      name: datePart,\r\n      data1: parseInt(\r\n        item?.[\"blood_ketone_value\"] ||\r\n          item?.[\"hemoglobinValue\"] ||\r\n          item?.[\"bmi\"] ||\r\n          item?.[\"blood_sugar_value\"] ||\r\n          item?.[\"pulse_(in_bpm)\"] ||\r\n          item?.[\"heart_rate_(bpm)\"] ||\r\n          item?.[\"respiration_rate_(bpm)\"] ||\r\n          removePercent(item?.[\"spo2\"]) ||\r\n          removePercent(item?.[\"hct_rate\"]) ||\r\n          item?.[\"fvc_(l)\"] ||\r\n          item?.[\"totalOnly\"] ||\r\n          item?.[\"chartValue\"] ||\r\n          item?.[\"temperature_value\"] ||\r\n          item?.[\"blood_uric_acid_value\"] ||\r\n          item?.[\"urea_value\"] ||\r\n          item?.[\"creatinine_value\"] ||\r\n          item?.[\"gfr_value\"]\r\n      ),\r\n    };\r\n  });\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#fff\",\r\n            border: \"1px solid #ccc\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          <h5>{payload[0].payload.name}</h5>\r\n          <p className=\"label\">{`${datas?.chartLabel1} : ${payload[0].value}`}</p>\r\n          {/* <p className=\"intro\">{getIntroOfPage(label)}</p> */}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n  return (\r\n    <>\r\n      <LineChart\r\n        width={250}\r\n        height={90}\r\n        data={formattedData}\r\n        margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\r\n      >\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"data1\"\r\n          stroke=\"#0084CF\"\r\n          strokeWidth={2}\r\n        />\r\n      </LineChart>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardChart;\r\n","import { CBadge, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./VitalsTab.css\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport CardChart from \"../../../Charts/CardChart\";\r\n\r\nconst VitalsTab = ({ category, openModal }) => {\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      icon: Assets.VitalBP,\r\n      name: \"Blood Pressure\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      category: \"Primary Vitals\",\r\n      badge: [\r\n        { label: \"120/80 mm Hg\", color: \"success\" },\r\n        // { label: \"DIA : 71\", color: \"success\" },\r\n        // { label: \"Pulse : 89\", color: \"success\" },\r\n      ],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"SYSTOLIC\" },\r\n        { id: 4, label: \"DIASTOLIC\" },\r\n        { id: 5, label: \"PULSE (IN BPM)\" },\r\n        { id: 6, label: \"DATE\" },\r\n        { id: 7, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          systolic: \"112\",\r\n          diastolic: \"25\",\r\n          \"pulse_(in_bpm)\": \"89\",\r\n          chartLabel1: \"PULSE (IN BPM)\",\r\n          date: \"02-04-2024 12:13\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Pressure\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"error\",\r\n            name: \"High Blood Pressure (Hypertension) Stage 1\",\r\n          },\r\n          systolic: \"112\",\r\n          diastolic: \"25\",\r\n          \"pulse_(in_bpm)\": \"125\",\r\n          date: \"05-04-2024 13:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Pressure\",\r\n        },\r\n      ],\r\n      chartLabel1: \"PULSE (IN BPM)\",\r\n    },\r\n    {\r\n      id: 2,\r\n      icon: Assets.VitalBs,\r\n      name: \"Blood Sugar\",\r\n      category: \"Metabolic And Biochemical Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"110 mg/DL\", color: \"success\" }],\r\n      chartLabel1: \"Blood Sugar (mg/DL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Blood Sugar\" },\r\n        { id: 4, label: \"Type\" },\r\n        { id: 5, label: \"DATE\" },\r\n        { id: 6, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          blood_sugar: \"110 mg/dL\",\r\n          blood_sugar_value: \"110\",\r\n          type: \"Random\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Sugar\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          blood_sugar: \"110 mg/dL\",\r\n          blood_sugar_value: \"110\",\r\n          type: \"Random\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Blood Sugar\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      icon: Assets.VitalBMI,\r\n      name: \"BMI\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"24.5 kg/m²\", color: \"success\" }],\r\n      chartLabel1: \"BMI (kg/m²)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"BMI\" },\r\n        { id: 4, label: \"Height\" },\r\n        { id: 5, label: \"Weight\" },\r\n        { id: 6, label: \"DATE\" },\r\n        { id: 7, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          bmi: \"24.13\",\r\n          height: \"159cm\",\r\n          weight: \"61kg\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"BMI\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"error\",\r\n            name: \"Overweight\",\r\n          },\r\n          bmi: \"27.01\",\r\n          height: \"180cm\",\r\n          weight: \"87.5kg\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"BMI\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      icon: Assets.VitalHCT,\r\n      name: \"HCT\",\r\n      category: \"Hematologic Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"23%\", color: \"error\" }],\r\n      chartLabel1: \"HCT Rate (in %)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"HCT Rate\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          hct_rate: \"42%\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"HCT\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          hct_rate: \"45%\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"HCT\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      icon: Assets.VitalHBeat,\r\n      name: \"ECG\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"1 Bpm\", color: \"success\" }],\r\n      chartLabel1: \"Heart Rate (BPM)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"INTERPRETATION\" },\r\n        { id: 3, label: \"ECG\" },\r\n        { id: 4, label: \"ECG TYPE\" },\r\n        { id: 5, label: \"DATE\" },\r\n        { id: 6, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          ecg_result: { status: \"error\", name: \"Abnormal Heart Rate\" },\r\n          ecg: {\r\n            contentType: \"image\",\r\n            link: Assets.ecgSample,\r\n          },\r\n          \"heart_rate_(bpm)\": \"120\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Heart Rate\",\r\n          interpretation: \"ECG Interpretation\",\r\n          ecg_type: \"3 Lead\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          ecg_result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          ecg: {\r\n            contentType: \"pdf\",\r\n            link: \"https://www.orimi.com/pdf-test.pdf\",\r\n          },\r\n          \"heart_rate_(bpm)\": \"70\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Heart Rate\",\r\n          interpretation: \"ECG Interpretation\",\r\n          ecg_type: \"3 Lead\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      icon: Assets.VitalHae,\r\n      name: \"Hemoglobin\",\r\n      category: \"Hematologic Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"14 g/dL\", color: \"error\" }],\r\n      chartLabel1: \"Hemoglobin (g/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Hemoglobin\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          hemoglobin: \"15 g/dL\",\r\n          hemoglobinValue: \"15\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Hemoglobin\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          hemoglobin: \"15 g/dL\",\r\n          hemoglobinValue: \"15\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Hemoglobin\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      icon: Assets.BKetone,\r\n      name: \"Blood Ketone\",\r\n      category: \"Hematologic Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"0.5 mmol/L\", color: \"error\" }],\r\n      chartLabel1: \"Blood Ketone (mmol/L)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"BLOOD KETONE\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          blood_ketone: \"0.33 mmol/L\",\r\n          blood_ketone_value: \"0.33\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Ketone\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          blood_ketone: \"0.33 mmol/L\",\r\n          blood_ketone_value: \"0.33\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Blood Ketone\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      icon: Assets.VitalLipid,\r\n      name: \"Lipid Profile\",\r\n      category: \"Metabolic And Biochemical Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [\r\n        { label: \"Total Cholesterol: 180 mg/dL \", color: \"success\" },\r\n        { label: \"LDL: 100 mg/dL\", color: \"error\" },\r\n        { label: \"HDL: 50 mg/dL \", color: \"error\" },\r\n        // { label: \"TG: Optimal\", color: \"error\" },\r\n        { label: \"Triglycerides: 150 mg/dL\", color: \"success\" },\r\n      ],\r\n      chartLabel1: \"Lipid Profile (mg/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Total Cholesterol\" },\r\n        { id: 4, label: \"Triglycerides\" },\r\n        { id: 5, label: \"HDL\" },\r\n        { id: 6, label: \"LDL\" },\r\n        { id: 7, label: \"LDL/HDL\" },\r\n        { id: 8, label: \"VLDL\" },\r\n        { id: 9, label: \"DATE\" },\r\n        { id: 10, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          total_cholesterol: \"180 mg/dL\",\r\n          totalOnly: \"180\",\r\n          triglycerides: \"140 mg/dL\",\r\n          hdl: \"60 mg/dL\",\r\n          ldl: \"60 mg/dL\",\r\n          \"ldl/hdl\": \"1\",\r\n          vldl: \"5 mg/dL\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Lipid Profile\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          total_cholesterol: \"180 mg/dL\",\r\n          totalOnly: \"190\",\r\n          triglycerides: \"140 mg/dL\",\r\n          hdl: \"60 mg/dL\",\r\n          ldl: \"60 mg/dL\",\r\n          \"ldl/hdl\": \"1\",\r\n          vldl: \"5 mg/dL\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Lipid Profile\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      icon: Assets.VitalRespi,\r\n      name: \"Respiration Rate\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"16 bpm\", color: \"error\" }],\r\n      chartLabel1: \"Respiration Rate (BPM)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Respiration Rate (BPM)\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"error\", name: \"High\" },\r\n          \"respiration_rate_(bpm)\": \"44\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Respiration Rate\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          \"respiration_rate_(bpm)\": \"18\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Respiration Rate\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      icon: Assets.SpO2,\r\n      name: \"SpO2\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"92%\", color: \"success\" }],\r\n      chartLabel1: \"SpO2 (%)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        // { id: 3, label: \"Pulse Rate (BPM)\" },\r\n        { id: 3, label: \"SpO2\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"error\", name: \"Abnormal\" },\r\n          \"pulse_rate_(bpm)\": \"120\",\r\n          spo2: \"99%\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"SpO2\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          spo2: \"90%\",\r\n          \"pulse_rate_(bpm)\": \"70\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"SpO2\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 11,\r\n      icon: Assets.Temp,\r\n      name: \"Temperature\",\r\n      category: \"Primary Vitals\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"36.6*C\", color: \"success\" }],\r\n      chartLabel1: \"Temperature (°F)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"Temperature\" },\r\n        { id: 4, label: \"Type\" },\r\n        { id: 5, label: \"DATE\" },\r\n        { id: 6, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          temperature: \"96.80 ° F, 36 ° C\",\r\n          temperature_value: \"96.8\",\r\n          type: \"Oral\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Temperature\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"success\",\r\n            name: \"Normal\",\r\n          },\r\n          temperature: \"97.88 ° F, 36.6 ° C\",\r\n          temperature_value: \"97.8\",\r\n          type: \"Oral\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Temperature\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 12,\r\n      icon: Assets.LFT,\r\n      name: \"Lung Function Test (LFT)\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      category: \"Primary Vitals\",\r\n      chartLabel1: \"FVC (L)\",\r\n      badge: [\r\n        { label: \"FEV1: 1L\", color: \"error\" },\r\n        { label: \"FVC: 1L\", color: \"error\" },\r\n        { label: \"FEV1/FVC: 40\", color: \"error\" },\r\n        { label: \"PEF: 1L/min\", color: \"error\" },\r\n      ],\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"FVC (L)\" },\r\n        { id: 3, label: \"FEV1 (L)\" },\r\n        { id: 4, label: \"FEV1/FVC\" },\r\n        { id: 5, label: \"PEF (L/MIN)\" },\r\n        { id: 6, label: \"SVC (L)\" },\r\n        { id: 7, label: \"DATE\" },\r\n        { id: 8, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          \"fvc_(l)\": \"5.94\",\r\n          \"fev1_(l)\": \"2.45\",\r\n          \"fev1/fvc\": \"41\",\r\n          \"pef_(l/min)\": \"2.62\",\r\n          \"svc_(l)\": \"3.51\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Lung Function Test (LFT)\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          \"fvc_(l)\": \"6.94\",\r\n          \"fev1_(l)\": \"2.45\",\r\n          \"fev1/fvc\": \"41\",\r\n          \"pef_(l/min)\": \"2.62\",\r\n          \"svc_(l)\": \"3.51\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Lung Function Test (LFT)\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 13,\r\n      icon: Assets.BUAcid,\r\n      name: \"Blood Uric Acid\",\r\n      category: \"Hematologic Profile\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"6 mg/dL\", color: \"error\" }],\r\n      chartLabel1: \"Blood Uric Acid (mg/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"BLOOD URIC ACID\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          blood_uric_acid: \"5 mg/dL\",\r\n          blood_uric_acid_value: \"5\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Blood Uric Acid\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          blood_uric_acid: \"5 mg/dL\",\r\n          blood_uric_acid_value: \"5\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Blood Uric Acid\",\r\n        },\r\n      ],\r\n    },\r\n    // {\r\n    //   id: 14,\r\n    //   icon: Assets.Urinalysis,\r\n    //   name: \"Urinalysis\",\r\n    //   category: \"Renal and Metabolic Markers\",\r\n    //   date: \"Recently Added 27-03-2024\",\r\n    //   badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n    //   chartLabel1: \"Urine (μmol/kg/d)\",\r\n    //   chartLabel2: \"ph\",\r\n    //   columnsData: [\r\n    //     { id: 1, label: \"NO.\" },\r\n    //     { id: 2, label: \"RESULT\" },\r\n    //     { id: 3, label: \"URINE\" },\r\n    //     { id: 4, label: \"PH\" },\r\n    //     { id: 5, label: \"SUGAR\" },\r\n    //     { id: 6, label: \"PROTEIN\" },\r\n    //     { id: 7, label: \"LEUKOCYTES\" },\r\n    //     { id: 8, label: \"RBC\" },\r\n    //     { id: 9, label: \"DATE\" },\r\n    //     { id: 10, label: \"ACTION\" },\r\n    //   ],\r\n    //   tableData: [\r\n    //     {\r\n    //       \"no.\": 1,\r\n    //       result: { status: \"success\", name: \"Normal\" },\r\n    //       urine: \"100 μmol/kg/d\",\r\n    //       chartValue: \"100\",\r\n    //       ph: \"17.5\",\r\n    //       sugar: \"0.8 mmol/L\",\r\n    //       protein: \"None\",\r\n    //       leukocytes: \"None\",\r\n    //       rbc: \"None\",\r\n    //       date: \"06-24-2024 10:15\",\r\n    //       action: [{ type: \"warning\" }],\r\n    //       name: \"Urinalysis\",\r\n    //     },\r\n    //     {\r\n    //       \"no.\": 2,\r\n    //       result: {\r\n    //         status: \"success\",\r\n    //         name: \"Normal\",\r\n    //       },\r\n    //       urine: \"110 μmol/kg/d\",\r\n    //       chartValue: \"110\",\r\n    //       ph: \"6.5\",\r\n    //       sugar: \"0.8 mmol/L\",\r\n    //       protein: \"None\",\r\n    //       leukocytes: \"None\",\r\n    //       rbc: \"None\",\r\n    //       date: \"05-24-2024 10:15\",\r\n    //       action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n    //       name: \"Urinalysis\",\r\n    //     },\r\n    //   ],\r\n    // },\r\n    {\r\n      id: 14,\r\n      icon: Assets.Urinalysis,\r\n      name: \"Urinalysis\",\r\n      category: \"Renal and Metabolic Markers\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      // badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n      badge: [\r\n        { label: \"Color: Straw \", color: \"success\" },\r\n        { label: \"Clarity: Clear\", color: \"success\" },\r\n        { label: \"Specific Gravity: 1.008 \", color: \"success\" },\r\n        { label: \"PH: Normal (6-7)\", color: \"success\" },\r\n        { label: \"Protein: Trace\", color: \"success\" },\r\n        { label: \"Glucose: Negative\", color: \"success\" },\r\n      ],\r\n      chartLabel1: \"Specific gravity\",\r\n      chartLabel2: \"ph\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"Color\" },\r\n        { id: 3, label: \"Clarity\" },\r\n        { id: 4, label: \"Specific Gravity\" },\r\n        { id: 5, label: \"PH\" },\r\n        { id: 6, label: \"Protein\" },\r\n        { id: 7, label: \"Glucose\" },\r\n        { id: 8, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          color: \"Straw\",\r\n          chartValue: \"1.008\",\r\n          specific_gravity: \"1.008\",\r\n          ph: \"Normal (6-7)\",\r\n          clarity: \"Clear\",\r\n          protein: \"Trace\",\r\n          glucose: \"Negative\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Urinalysis\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          color: \"Straw\",\r\n          chartValue: \"1.308\",\r\n          specific_gravity: \"1.308\",\r\n          ph: \"Normal (6-7)\",\r\n          clarity: \"Clear\",\r\n          protein: \"Trace\",\r\n          glucose: \"Negative\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Urinalysis\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 15,\r\n      icon: Assets.Urea,\r\n      name: \"Urea\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      category: \"Renal and Metabolic Markers\",\r\n      badge: [{ label: \"32mg/dl\", color: \"error\" }],\r\n      chartLabel1: \"Urea (mg/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"UREA\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          urea: \"20 mg/dL\",\r\n          urea_value: \"20\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Urea\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          urea: \"20 mg/dL\",\r\n          urea_value: \"20\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Urea\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 16,\r\n      icon: Assets.Creatinine,\r\n      name: \"Creatinine\",\r\n      category: \"Renal and Metabolic Markers\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"1.7 mg/dL\", color: \"error\" }],\r\n      chartLabel1: \"Creatinine (mg/dL)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"CREATININE\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          creatinine: \"1.2 mg/dL\",\r\n          creatinine_value: \"1.2\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"Creatinine\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          creatinine: \"1.2 mg/dL\",\r\n          creatinine_value: \"1.2\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"Creatinine\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 17,\r\n      icon: Assets.GFR,\r\n      name: \"GFR\",\r\n      category: \"Renal and Metabolic Markers\",\r\n      date: \"Recently Added 27-03-2024\",\r\n      badge: [{ label: \"55 mL/min/1.73m²\", color: \"error\" }],\r\n      chartLabel1: \"GFR (mL/min/1.73m²)\",\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"GFR\" },\r\n        { id: 4, label: \"DATE\" },\r\n        { id: 5, label: \"ACTION\" },\r\n      ],\r\n      tableData: [\r\n        {\r\n          \"no.\": 1,\r\n          result: { status: \"success\", name: \"Normal\" },\r\n          gfr: \"92 mL/min/1.73m²\",\r\n          gfr_value: \"92\",\r\n          date: \"06-24-2024 10:15\",\r\n          action: [{ type: \"warning\" }],\r\n          name: \"GFR\",\r\n        },\r\n        {\r\n          \"no.\": 2,\r\n          result: {\r\n            status: \"warning\",\r\n            name: \"Normal\",\r\n          },\r\n          gfr: \"90 mL/min/1.73m²\",\r\n          gfr_value: \"90\",\r\n          date: \"05-24-2024 10:15\",\r\n          action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n          name: \"GFR\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const filteredProducts = data.filter(\r\n    (product) => product.category === category\r\n  );\r\n\r\n  const renderImage = (contentUrl) => {\r\n    return (\r\n      <img\r\n        src={contentUrl}\r\n        alt=\"mage1\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  // // Function to render PDF content\r\n  const renderPdf = (contentUrl) => {\r\n    return (\r\n      <iframe\r\n        title=\"PDF Viewer\"\r\n        src={contentUrl}\r\n        style={{ width: \"100%\", height: \"140px\", border: \"none\" }}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-1\">\r\n        <CCol md={12}>\r\n          <CRow className=\"mt-3 \">\r\n            {filteredProducts?.map((item, index) => (\r\n              <CCol md={6} xl={4} key={index} className=\"mb-3\">\r\n                <CCard\r\n                  className={`vital-cards`}\r\n                  onClick={() => {\r\n                    openModal(item);\r\n                  }}\r\n                >\r\n                  <CCardBody>\r\n                    <div className=\"vital-icon-and-title\">\r\n                      <div>\r\n                        <img alt=\"bp\" src={item.icon} />\r\n                      </div>\r\n                      <div className=\"vital-card-title\">\r\n                        <span className=\"vital-card-text-bold\">\r\n                          {item.name}\r\n                        </span>\r\n                        <span className=\"vital-card-text\">{item.date}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"vital-badge\">\r\n                      <div className=\"vital-badge-list\">\r\n                        {item.badge.map((dt, i) => (\r\n                          <div key={i} style={{ height: \"24px\" }}>\r\n                            <Badge label={dt?.label} color={dt?.color} />\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"vital-line-container\">\r\n                      {/* <img alt=\"line\" src={Assets.Vitalline} /> */}\r\n                      {item?.name === \"ECG\" ? (\r\n                        <div className=\"chart-item\">\r\n                          {/* <div className=\"rectangle\">\r\n                            <img src={Assets.ecgSample} alt=\"ecg\" />\r\n                          </div> */}\r\n                          {renderImage(Assets.ecgSample)}\r\n                          {/* {renderPdf(\"https://www.orimi.com/pdf-test.pdf\")} */}\r\n                        </div>\r\n                      ) : (\r\n                        <CardChart datas={item} />\r\n                      )}\r\n                    </div>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VitalsTab;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./MedicalProfile.css\";\r\n\r\nconst MedicalTab = ({ tabs, getCurrentTab, defaultTab }) => {\r\n  const [currentTab, setCurrentTab] = useState(tabs[defaultTab]);\r\n\r\n  const switchTab = (data) => {\r\n    setCurrentTab(data);\r\n    getCurrentTab(data.id);\r\n  };\r\n  return (\r\n    <CCard className=\"medical-tabs\">\r\n      <CCardBody className=\"medical-tabs-container\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`medical-tab-items ${\r\n              data.id === currentTab?.id ? \"medical-tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <span\r\n              className={\r\n                data.id === currentTab?.id\r\n                  ? \"medical-tab-title-active\"\r\n                  : \"medical-tab-title\"\r\n              }\r\n            >\r\n              {data.title}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default MedicalTab;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./Cards.css\";\r\n\r\nconst Card = ({ data, getSelectedData, className }) => {\r\n  return (\r\n    <>\r\n      <CCard\r\n        className={`card ${\r\n          className ? className : \"minheight-188 max-height-100\"\r\n        }`}\r\n        onClick={() => getSelectedData(data)}\r\n      >\r\n        <CCardBody\r\n          key={data.id}\r\n          className=\"d-flex flex-column justify-content-center align-items-center\"\r\n        >\r\n          <img alt=\"images\" src={data?.image} />\r\n          <span className=\"mt-2 card-text-title text-align-center\">\r\n            {data?.name}\r\n          </span>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Modal.css\"; // Import your CSS file for styling modal (optional)\r\nimport { CModal, CModalBody } from \"@coreui/react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst Modal = ({ isOpen, onClose, children }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <CModal\r\n      visible={isOpen}\r\n      onClose={onClose}\r\n      aria-labelledby=\"LiveDemoExampleLabel\"\r\n      alignment=\"center\"\r\n      size=\"lg\"\r\n    >\r\n      <CModalBody className=\"p-0\">\r\n        <div className=\"close-modal\" onClick={onClose}>\r\n          <img\r\n            src={Assets.CloseBtn}\r\n            alt=\"close-btn\"\r\n            style={{ width: \"100%\" }}\r\n          />{\" \"}\r\n        </div>\r\n        <div>{children}</div>\r\n      </CModalBody>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst Table = ({ columns, rowData, data }) => {\r\n  const formattedColumns = data?.columnsData.map((column) => ({\r\n    ...column,\r\n    accessor: column.label.toLowerCase().replace(/\\s/g, \"_\"), // Create accessor for dynamic data access\r\n  }));\r\n\r\n  // Handle potential missing rows\r\n  const formattedData = data?.tableData.map((row) => {\r\n    return formattedColumns.reduce((acc, column) => {\r\n      const value = row[column.label.toLowerCase().replace(/\\s/g, \"_\")]; // Access data based on accessor\r\n      acc[column.accessor === \"ecg_result\" ? \"result\" : column.accessor] =\r\n        value || \"-\"; // Set default value if data is missing\r\n      return acc;\r\n    }, {});\r\n  });\r\n\r\n  console.log(data, formattedColumns, \"first formattedData\", formattedData);\r\n\r\n  return (\r\n    // <>\r\n    //   <CTable className=\"responsive-table\">\r\n    //     <CTableHead color=\"dark\">\r\n    //       <CTableRow>\r\n    //         {columns?.map((data, i) => (\r\n    //           <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n    //         ))}\r\n    //       </CTableRow>\r\n    //     </CTableHead>\r\n    //     <CTableBody>\r\n    //       {rowData?.map((dt, i) => (\r\n    //         <CTableRow key={i}>\r\n    //           <CTableHeaderCell>{dt?.id}</CTableHeaderCell>\r\n    //           <CTableDataCell>\r\n    //             <Badge label={dt?.result?.name} color={dt?.result?.status} />\r\n    //           </CTableDataCell>\r\n    //           <CTableDataCell>{dt?.systolic}</CTableDataCell>\r\n    //           <CTableDataCell>{dt?.diastolic}</CTableDataCell>\r\n    //           <CTableDataCell>{dt?.pluse}</CTableDataCell>\r\n    //           <CTableDataCell>{dt?.date}</CTableDataCell>\r\n    //           <CTableDataCell>{dt?.diastolic}</CTableDataCell>\r\n    //         </CTableRow>\r\n    //       ))}\r\n    //     </CTableBody>\r\n    //   </CTable>\r\n    // </>\r\n    <>\r\n      <div className=\"responsive-table-container\">\r\n        <table class=\"responsive-table\">\r\n          <thead>\r\n            <tr>\r\n              {formattedColumns?.map((data, i) => (\r\n                <th key={i}>{data?.label}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {formattedData?.map((dt, i) => (\r\n              <tr key={i}>\r\n                <td>{dt?.id}</td>\r\n                <td>\r\n                  <div style={{ width: \"180px\" }}>\r\n                    <Badge\r\n                      label={dt?.result?.name}\r\n                      color={dt?.result?.status}\r\n                    />\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <span className=\"fs-16 fw-500\">{dt?.systolic}</span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"fs-16 fw-500\">{dt?.diastolic}</span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"fs-16 fw-500\">{dt?.pluse}</span>\r\n                </td>\r\n                <td>\r\n                  <div style={{ width: \"100px\" }}>\r\n                    <div className=\"table-content fs-16 fw-500\">{dt?.date}</div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div className=\"d-flex gap-2\">\r\n                    {dt?.action?.map((data, i) => (\r\n                      <div className=\"d-flex\">\r\n                        {data.type === \"warning\" && (\r\n                          <img\r\n                            src={Assets.Warning}\r\n                            alt=\"warn\"\r\n                            className=\"cursor\"\r\n                          />\r\n                        )}\r\n                        {data.type === \"edit\" && (\r\n                          <img\r\n                            src={Assets.EditPencil}\r\n                            alt=\"warn\"\r\n                            className=\"cursor\"\r\n                          />\r\n                        )}\r\n                        {data.type === \"delete\" && (\r\n                          <img\r\n                            src={Assets.Delete}\r\n                            alt=\"warn\"\r\n                            className=\"cursor\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n            \r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport \"./ActiveButton.css\";\r\n\r\nconst ActiveButton = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"act-button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ActiveButton;\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nconst LineChartDetails = ({ datas }) => {\r\n  function removePercent(str) {\r\n    // Remove trailing percent sign (%) using String.replace() method\r\n    // Replace '%' with an empty string ''\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n\r\n  // Transform tableData to the desired format\r\n  const formattedData = datas?.tableData?.map((item) => ({\r\n    name: item?.date?.split(\" \")[0], // Extract date part only\r\n    data1: parseFloat(\r\n      item?.[\"blood_ketone_value\"] ||\r\n        item?.[\"hemoglobinValue\"] ||\r\n        item?.[\"bmi\"] ||\r\n        item?.[\"blood_sugar_value\"] ||\r\n        item?.[\"pulse_(in_bpm)\"] ||\r\n        item?.[\"heart_rate_(bpm)\"] ||\r\n        item?.[\"respiration_rate_(bpm)\"] ||\r\n        removePercent(item?.[\"spo2\"]) ||\r\n        removePercent(item?.[\"hct_rate\"]) ||\r\n        item?.[\"fvc_(l)\"] ||\r\n        item?.[\"totalOnly\"] ||\r\n        item?.[\"chartValue\"] ||\r\n        item?.[\"temperature_value\"] ||\r\n        item?.[\"blood_uric_acid_value\"] ||\r\n        item?.[\"urea_value\"] ||\r\n        item?.[\"creatinine_value\"] ||\r\n        item?.[\"gfr_value\"]\r\n    ), // Convert pluse to integer if needed\r\n    data2: parseInt(item?.[\"ph\"] ? item?.[\"ph\"] : \"\"),\r\n  }));\r\n\r\n  const data = [\r\n    {\r\n      name: \"21-03-2024\",\r\n      amt: 70,\r\n    },\r\n    {\r\n      name: \"22-03-2024\",\r\n      amt: 70,\r\n    },\r\n    {\r\n      name: \"23-03-2024\",\r\n      amt: 100,\r\n    },\r\n    {\r\n      name: \"24-03-2024\",\r\n      amt: 95,\r\n    },\r\n    {\r\n      name: \"25-03-2024\",\r\n      amt: 70,\r\n    },\r\n    {\r\n      name: \"26-03-2024\",\r\n      amt: 77,\r\n    },\r\n    {\r\n      name: \"27-03-2024\",\r\n      amt: 100,\r\n    },\r\n  ];\r\n\r\n  const minValue = Math?.min(...formattedData?.map((item) => item.data1));\r\n  const maxValue = Math?.max(\r\n    ...formattedData?.map((item) =>\r\n      !isNaN(item?.data1) ? item?.data1 : -Infinity\r\n    )\r\n  );\r\n  // Custom tooltip formatter function\r\n  const tooltipFormatter = (value, name, props) => {\r\n    if (name === \"data1\") {\r\n      return [value, datas?.chartLabel1];\r\n    }\r\n    if (name === \"data2\") {\r\n      return [value, datas?.chartLabel2];\r\n    }\r\n    return [name, value];\r\n  };\r\n\r\n  return (\r\n    <LineChart\r\n      width={750}\r\n      height={300}\r\n      data={formattedData}\r\n      margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\r\n    >\r\n      <XAxis\r\n        dataKey=\"name\"\r\n        padding={{ left: 30, right: 30, bottom: 20 }}\r\n        axisLine={false}\r\n        tickLine={false}\r\n      />\r\n      <YAxis\r\n        yMax={Math.min(...formattedData?.map((item) => item?.data1))}\r\n        domain={[minValue, maxValue + 10]}\r\n        axisLine={false}\r\n        tickLine={false}\r\n      />\r\n      <Tooltip formatter={tooltipFormatter} />\r\n      {!formattedData[0].data2 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n          ]}\r\n        />\r\n      ) : (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#0194CF\" },\r\n          ]}\r\n        />\r\n      )}\r\n      <CartesianGrid horizontal={true} vertical={false} strokeWidth={1} />\r\n      <Line type=\"linear\" dataKey=\"data1\" stroke=\"#0084CF\" />\r\n      {formattedData[0].data2 && (\r\n        <Line type=\"linear\" dataKey=\"data2\" stroke=\"#0194CF\" />\r\n      )}\r\n    </LineChart>\r\n  );\r\n};\r\n\r\nexport default LineChartDetails;\r\n","import React from \"react\";\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\n\r\nconst ColumnChartDetails = ({ datas }) => {\r\n  function removePercent(str) {\r\n    // Remove trailing percent sign (%) using String.replace() method\r\n    // Replace '%' with an empty string ''\r\n    return str?.replace(\"%\", \"\");\r\n  }\r\n  // Transform tableData to the desired format\r\n  const formattedData = datas?.tableData?.map((item) => ({\r\n    name: item?.date?.split(\" \")[0],\r\n    data1: parseFloat(\r\n      item?.[\"blood_ketone_value\"] ||\r\n        item?.[\"hemoglobinValue\"] ||\r\n        item?.[\"bmi\"] ||\r\n        item?.[\"blood_sugar_value\"] ||\r\n        item?.[\"pulse_(in_bpm)\"] ||\r\n        item?.[\"heart_rate_(bpm)\"] ||\r\n        item?.[\"respiration_rate_(bpm)\"] ||\r\n        removePercent(item?.[\"spo2\"]) ||\r\n        removePercent(item?.[\"hct_rate\"]) ||\r\n        item?.[\"fvc_(l)\"] ||\r\n        item?.[\"totalOnly\"] ||\r\n        item?.[\"chartValue\"] ||\r\n        item?.[\"temperature_value\"] ||\r\n        item?.[\"blood_uric_acid_value\"] ||\r\n        item?.[\"urea_value\"] ||\r\n        item?.[\"creatinine_value\"] ||\r\n        item?.[\"gfr_value\"]\r\n    ),\r\n    data2: parseInt(item?.[\"ph\"] ? item?.[\"ph\"] : \"\"),\r\n  }));\r\n  const data = [\r\n    {\r\n      name: \"21-03-2024\",\r\n      bloodPressure: 70,\r\n    },\r\n    {\r\n      name: \"22-03-2024\",\r\n      bloodPressure: 70,\r\n    },\r\n    {\r\n      name: \"23-03-2024\",\r\n      bloodPressure: 100,\r\n    },\r\n    {\r\n      name: \"24-03-2024\",\r\n      bloodPressure: 95,\r\n    },\r\n    {\r\n      name: \"25-03-2024\",\r\n      bloodPressure: 70,\r\n    },\r\n    {\r\n      name: \"26-03-2024\",\r\n      bloodPressure: 77,\r\n    },\r\n    {\r\n      name: \"27-03-2024\",\r\n      bloodPressure: 100,\r\n    },\r\n  ];\r\n  const minValue = Math?.min(...formattedData?.map((item) => item.data1));\r\n  const maxValue = Math?.max(\r\n    ...formattedData?.map((item) =>\r\n      !isNaN(item?.data1) ? item?.data1 : -Infinity\r\n    )\r\n  );\r\n  const bloodPressureValues = new Set(\r\n    formattedData?.map((item) => datas?.name)\r\n  ); // Create a Set with \"Blood Pressure\"\r\n\r\n  const tooltipFormatter = (value, name, props) => {\r\n    if (name === \"data1\") {\r\n      return [value, datas?.chartLabel1];\r\n    }\r\n    if (name === \"data2\") {\r\n      return [value, datas?.chartLabel2];\r\n    }\r\n    return [name, value];\r\n  };\r\n  return (\r\n    <BarChart\r\n      width={720}\r\n      height={300}\r\n      data={formattedData}\r\n      margin={{ top: 20, right: 5, left: 10, bottom: 5 }}\r\n    >\r\n      <XAxis dataKey=\"name\" padding={{ left: 30, right: 30 }} />\r\n      <YAxis domain={[0, maxValue + 10]} axisLine={false} tickLine={false} />\r\n      {/* {datas.name === \"SpO2\" ? (\r\n        <Tooltip formatter={(value) => `${value}%`} />\r\n      ) : ( */}\r\n      <Tooltip formatter={tooltipFormatter} />\r\n      {/* )} */}\r\n      {/* <Legend\r\n        payload={[...bloodPressureValues]?.map((value) => ({\r\n          id: value, // Set id (optional)\r\n          value: value, // Legend label\r\n          color: \"#0084CF\",\r\n        }))}\r\n      /> */}\r\n\r\n      {/* {!formattedData[0].data2 ? (\r\n        <Legend\r\n          payload={[{ value: datas?.name, type: \"square\", color: \"#0084CF\" }]}\r\n        />\r\n      ) : (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"square\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"square\", color: \"#0194CF\" },\r\n          ]}\r\n        />\r\n      )} */}\r\n            {!formattedData[0].data2 ? (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n          ]}\r\n        />\r\n      ) : (\r\n        <Legend\r\n          payload={[\r\n            { value: datas?.chartLabel1, type: \"line\", color: \"#0084CF\" },\r\n            { value: datas?.chartLabel2, type: \"line\", color: \"#0194CF\" },\r\n          ]}\r\n        />\r\n      )}\r\n      <Bar dataKey=\"data1\" fill=\"#0084CF\" />\r\n      {formattedData[0].data2 && <Bar dataKey=\"data2\" fill=\"#0094CF\" />}\r\n    </BarChart>\r\n  );\r\n};\r\n\r\nexport default ColumnChartDetails;\r\n","import React, { useState } from \"react\";\r\nimport LineChartDetails from \"./LineChart\";\r\nimport ColumnChartDetails from \"./ColumnChartDetails\";\r\n\r\nconst ChartTab = ({ data }) => {\r\n  console.log(data, \"data d\");\r\n  const tabs = [\r\n    {\r\n      id: 1,\r\n      title: \"LINE\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"COLUMN\",\r\n    },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(tabs[0]);\r\n\r\n  const switchTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"chart-tabs-container mb-3\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chart-tab-items ${\r\n              data.id === currentTab?.id ? \"chart-tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <span\r\n              className={`chart-tab-title ${\r\n                data.id === currentTab?.id ? \"chart-tab-title-active\" : \"\"\r\n              }`}\r\n            >\r\n              {data.title}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        {currentTab?.id === 1 && <LineChartDetails datas={data} />}\r\n        {currentTab?.id === 2 && <ColumnChartDetails datas={data}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartTab;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst RespirationRateForm = ({ addBack, defaultData }) => {\r\n  // const [selectedDate, setSelectedDate] = useState(new Date());\r\n  // const [selectedTime, setSelectedTime] = useState(new Date());\r\n\r\n  // const handleDateChange = (date) => {\r\n  //   setSelectedDate(date);\r\n  // };\r\n\r\n  // const handleTimeChange = (date) => {\r\n  //   setSelectedTime(date);\r\n  // };\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Respiration Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"respiration_rate_(bpm)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RespirationRateForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Spo2 = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"pulse_rate_(bpm)\"]}\r\n              />\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                SpO2 (%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.spo2)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spo2;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Temperature = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.type}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'F'}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Temperature *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.temperature_value}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst LFTForm = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FVC (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"fvc_(l)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1 (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"fev1_(l)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1/FVC Ratio *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"fev1/fvc\"]}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                PEF (L/Min) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"pef_(l/min)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                SVC (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"svc_(l)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={8}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LFTForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\n\r\nconst HeartRate = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [type, setType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const options = [\"Single Lead\", \"3 Lead\", \"12 Lead\"];\r\n  const findIndex = defaultData?.ecg_type\r\n    ? options?.indexOf(defaultData?.ecg_type)\r\n    : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      setType(data);\r\n    };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[findIndex]}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"heart_rate_(bpm)\"]}\r\n              /> */}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG *\r\n              </label>\r\n              <input type=\"file\" id=\"file\" />\r\n              <label for=\"file\">Choose file</label>\r\n\r\n              <div class=\"d-flex flex-column gap-1 justify-content-center h-100\">\r\n                {defaultData?.ecg ? (\r\n                  <span className=\"\">\r\n                    ECG{\"(\"}\r\n                    {defaultData?.ecg?.contentType}\r\n                    {\")\"}\r\n                  </span>\r\n                ) : (\r\n                  <span className=\"\">No File Chosen</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1 justify-content-center h-100\">\r\n              {defaultData?.ecg ? (\r\n                <span className=\"mt-2\">{defaultData?.ecg}</span>\r\n              ) : (\r\n                <span className=\"mt-2\">No File Chosen</span>\r\n              )}\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={8}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Interpretation *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.interpretation}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeartRate;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BSugar = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.type}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'mg/dL'}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Sugar *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.blood_sugar_value}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BSugar;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst LipidProfileForm = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Result *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultData?.result?.name}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Total) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Total Cholesterol*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.totalOnly}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Triglycerides) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Triglycerides *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.triglycerides)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (HDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hdl)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (LDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.ldl)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL/HDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"ldl/hdl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (VLDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                VLDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"vldl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LipidProfileForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst HCT = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HCT(%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hct_rate)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HCT;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Hemogloin = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Hemogloin(g/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hemoglobin)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hemogloin;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BKetone = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Ketone(mmol/L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.blood_ketone)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BKetone;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BUricAcid = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Uric Acid(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.blood_uric_acid)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BUricAcid;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst GFR = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                GFR(mL/min/1.73m²) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.gfr)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GFR;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Creatinine = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Creatinine(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.creatinine)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Creatinine;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Urea = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urea(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.urea)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urea;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Urinalysis = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [cell, setCell] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     return new Date(year, month - 1, day, hours, minutes);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultData?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultData\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setSelectedDate(defaultDate);\r\n  //   setSelectedTime(defaultDate);\r\n  // }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        {/* <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (μmol/kg/d)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.urine)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (pH)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Sugar (mg/dL)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.sugar}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.protein}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocytes*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.leukocytes}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                RBC*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.rbc}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow> */}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Color *\r\n              </label>\r\n              <select class=\"form-select\" aria-label=\"Disabled select example\">\r\n                <option>Select</option>\r\n                <option value=\"straw\">Straw</option>\r\n                <option value=\"yellow\">Yellow</option>\r\n                <option value=\"amber\">Amber</option>\r\n                <option value=\"red\">Red</option>\r\n                <option value=\"brown\">Brown</option>\r\n                <option value=\"green\">Green</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Clarity *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"clear\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"clear\">Clear</option>\r\n                <option value=\"slightly cloudy\">Slightly Cloudy</option>\r\n                <option value=\"cloudy\">Cloudy</option>\r\n                <option value=\"turbid\">Turbid</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Specific Gravity *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                pH *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Normal\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Normal (6-7)\">Normal (6-7)</option>\r\n                <option value=\"Acidic(<6)\">Acidic ({\"<\"}6)</option>\r\n                <option value=\"Alkaline(>7)\">Alkaline ({\">\"}7)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Trace\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"1+ (30 mg/dL)\">1+ (30 mg/dL)</option>\r\n                <option value=\"2+ (100 mg/dL)\">2+ (100 mg/dL)</option>\r\n                <option value=\"3+ (300 mg/dL)\">3+ (300 mg/dL)</option>\r\n                <option value=\"4+ (>2000 mg/dL)\">4+ ({\">\"}2000 mg/dL)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Glucose *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"1+ (100 mg/dL)\">1+ (100 mg/dL)</option>\r\n                <option value=\"2+ (250 mg/dL)\">2+ (250 mg/dL)</option>\r\n                <option value=\"3+ (500 mg/dL)\">3+ (500 mg/dL)</option>\r\n                <option value=\"4+ (1000 mg/dL)\">4+ (1000 mg/dL)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Ketones *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+)\">Small (1+)</option>\r\n                <option value=\"Moderate (2+)\">Moderate (2+)</option>\r\n                <option value=\"Large (3+)\">Large (3+)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood in Urine *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+)\">Small (1+)</option>\r\n                <option value=\"Moderate (2+)\">Moderate (2+)</option>\r\n                <option value=\"Large (3+)\">Large (3+)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocyte Esterase *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+)\">Small (1+)</option>\r\n                <option value=\"Moderate (2+)\">Moderate (2+)</option>\r\n                <option value=\"Large (3+)\">Large (3+)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Nitrites *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Positive\">Positive</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urobilinogen *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Bilirubin *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Positive\">Positive</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"vertical-line mb-3\"></div>\r\n        <CRow>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cells *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Red Blood Cell\"}\r\n                onChange={(e) => setCell(e.target.value)}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Red Blood Cell\">Red Blood Cell</option>\r\n                <option value=\"White Blood Cell\">White Blood Cell</option>\r\n                <option value=\"Epithelial Cell\">Epithelial Cell</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Crystals *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Uric Acid Crystals\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Uric Acid Crystals\">Uric Acid Crystals</option>\r\n                <option value=\"Calcium Oxalate Crystals\">\r\n                  Calcium Oxalate Crystals\r\n                </option>\r\n                <option value=\"Struvite Crystals\">Struvite Crystals</option>\r\n                <option value=\"Cystine Crystals \">Cystine Crystals </option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Microorganisms *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Bacteria\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Bacteria\">Bacteria</option>\r\n                <option value=\"Yeast\">Yeast</option>\r\n                <option value=\"Parasites\">Parasites</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          {cell === \"Epithelial Cell\" && (\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Epithelial Cells *\r\n                </label>\r\n                <select\r\n                  class=\"form-select\"\r\n                  aria-label=\"Disabled select example\"\r\n                  // defaultValue={\"Squamous Epithelial Cells\"}\r\n                >\r\n                  <option>Select</option>\r\n\r\n                  <option value=\"Squamous Epithelial Cells\">\r\n                    Squamous Epithelial Cells\r\n                  </option>\r\n                  <option value=\"Transitional Epithelial Cells\">\r\n                    Transitional Epithelial Cells\r\n                  </option>\r\n                  <option value=\"Renal Tubular Epithelial Cells\">\r\n                    Renal Tubular Epithelial Cells\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </CCol>\r\n          )}\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urinalysis;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BMI = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Height)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={\"cm\"}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Height *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.height)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Weight)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={\"kg\"}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Weight *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.weight)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                BMI *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.bmi}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BMI;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\n\r\nconst BPForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [systolic, setSystolic] = useState(\r\n    (defaultData?.systolic || \"\").toString()\r\n  );\r\n  const [diastolic, setDiastolic] = useState(\r\n    (defaultData?.diastolic || \"\").toString()\r\n  );\r\n  const [pulse, setPulse] = useState(\r\n    (defaultData?.[\"pulse_(in_bpm)\"] || \"\").toString()\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const convertISOToTime = (isoString) => {\r\n    // Parse the ISO string into a Date object\r\n    const date = new Date(isoString);\r\n\r\n    // Ensure the Date object is valid\r\n    if (isNaN(date.getTime())) {\r\n      throw new Error(\"Invalid ISO string\");\r\n    }\r\n\r\n    // Extract hours and minutes\r\n    const hours = String(date.getUTCHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getUTCMinutes()).padStart(2, \"0\");\r\n\r\n    // Return the formatted time\r\n    return `${hours}:${minutes}`;\r\n  };\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const year = date.getFullYear();\r\n  \r\n    return `${day}-${month}-${year}`;\r\n  };\r\n  \r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n  \r\n  console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n  const defaultDateTime = defaultData?.date || '';\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(' ')[0] || '';\r\n  const defaultTime = defaultDateTime.split(' ')[1] || '00:00';\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, 'yyyy-MM-dd', new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(':').map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     return new Date(year, month - 1, day, hours, minutes);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultData?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultData\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString1 = defaultData?.time;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate1 = defaultData ? defaultDateString1 : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setSelectedDate(defaultDate);\r\n  //   // setSelectedTime(defaultDate1);\r\n  // }, [defaultData]);\r\n\r\n\r\n\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!systolic?.trim()) {\r\n      newErrors.systolic = \"Systolic is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(systolic)) {\r\n      newErrors.systolic = \"Systolic must be a number.\";\r\n      isValid = false;\r\n    }\r\n    if (!diastolic?.trim()) {\r\n      newErrors.diastolic = \"Diastolic is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(diastolic)) {\r\n      newErrors.diastolic = \"Diastolic must be a number.\";\r\n      isValid = false;\r\n    }\r\n    if (!pulse?.trim()) {\r\n      newErrors.pulse = \"Pulse is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(pulse)) {\r\n      newErrors.pulse = \"Pulse must be a number.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          systolic: systolic,\r\n          diastolic: diastolic,\r\n          pulse: pulse,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"blood-pressure\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          systolic: systolic,\r\n          diastolic: diastolic,\r\n          pulse: pulse,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"blood-pressure\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Systolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"systolic\"\r\n                value={systolic}\r\n                onChange={(e) => setSystolic(e.target.value)}\r\n              />\r\n              {errors.systolic && (\r\n                <div className=\"error-text\">{errors.systolic}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Diastolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"diastolic\"\r\n                value={diastolic}\r\n                onChange={(e) => setDiastolic(e.target.value)}\r\n              />\r\n              {errors.diastolic && (\r\n                <div className=\"error-text\">{errors.diastolic}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse (in BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"pulse\"\r\n                value={pulse}\r\n                onChange={(e) => setPulse(e.target.value)}\r\n              />\r\n              {errors.pulse && <div className=\"error-text\">{errors.pulse}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BPForm;\r\n","import React, { useState } from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { CModal, CModalBody, CModalHeader } from \"@coreui/react\";\r\nimport BlurBackground from \"../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../Buttons/SecondaryButton/SecondaryButton\";\r\nimport RespirationRateForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm\";\r\nimport Spo2 from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2\";\r\nimport Temperature from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature\";\r\nimport LFTForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm\";\r\nimport HeartRate from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate\";\r\nimport BSugar from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar\";\r\nimport LipidProfileForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm\";\r\nimport HCT from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT\";\r\nimport Hemogloin from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin\";\r\nimport BKetone from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone\";\r\nimport BUricAcid from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid\";\r\nimport GFR from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR\";\r\nimport Creatinine from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine\";\r\nimport Urea from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea\";\r\nimport Urinalysis from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis\";\r\nimport BMI from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI\";\r\nimport BPForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm\";\r\nimport useApi from \"../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\n\r\nconst DynamicTable = ({ columnsData, tableData, getTableDatas }) => {\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [selectedData, setSelectedData] = useState(\"\");\r\n  const { loading, del, clearCache } = useApi();\r\n\r\n  const deleteData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setDeleteModal(true);\r\n    }\r\n  };\r\n\r\n  const editData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setEditModal(true);\r\n    }\r\n  };\r\n\r\n  const onDelete = async () => {\r\n    try {\r\n      const url = `resource/vitals/${selectedData?.id}`; // Replace with your API endpoint\r\n      await del(url);\r\n      await getTableDatas(selectedData);\r\n      toast.success(\"Deleted successfully\");\r\n      setDeleteModal(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"responsive-table-container\">\r\n        <table class=\"responsive-table\">\r\n          <thead>\r\n            <tr>\r\n              {columnsData?.map((column) => (\r\n                <th key={column.id}>{column.label}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableData?.map((row, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {columnsData.map((column) => (\r\n                  <td key={`${rowIndex}-${column?.id}`}>\r\n                    {renderCell(row, column)}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Delete Modal */}\r\n      {deleteModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteModal}\r\n            onClose={() => setDeleteModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => onDelete()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteModal(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {/* Edit Modal */}\r\n      {editModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={editModal}\r\n            onClose={() => setEditModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalHeader>\r\n              <h4 className=\"fw-600\">Edit {selectedData?.name}</h4>\r\n            </CModalHeader>\r\n            <CModalBody className=\"p-3\">\r\n              {selectedData?.name === \"BMI\" && (\r\n                <BMI\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Pressure\" && (\r\n                <BPForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={getTableDatas}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Respiration Rate\" && (\r\n                <RespirationRateForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"SpO2\" && (\r\n                <Spo2\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Temperature\" && (\r\n                <Temperature\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Lung Function Test (LFT)\" && (\r\n                <LFTForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Heart Rate\" && (\r\n                <HeartRate\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Sugar\" && (\r\n                <BSugar\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Lipid Profile\" && (\r\n                <LipidProfileForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"HCT\" && (\r\n                <HCT\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Hemoglobin\" && (\r\n                <Hemogloin\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Ketone\" && (\r\n                <BKetone\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Uric Acid\" && (\r\n                <BUricAcid\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"GFR\" && (\r\n                <GFR\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Creatinine\" && (\r\n                <Creatinine\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urea\" && (\r\n                <Urea\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urinalysis\" && (\r\n                <Urinalysis\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const renderImage = (contentUrl) => {\r\n    return (\r\n      <img\r\n        src={contentUrl}\r\n        alt=\"Image\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  function renderCell(row, column) {\r\n    const columnKey = getColumnKey(column?.label);\r\n    const value = row[columnKey];\r\n    // console.log(\"first\", value);\r\n\r\n    if (columnKey === \"ecg\") {\r\n      // Function to render PDF content\r\n      const renderPdf = (contentUrl) => {\r\n        window.open(contentUrl, \"_blank\");\r\n      };\r\n      return (\r\n        <div style={{ width: \"80px\" }} onClick={() => renderPdf(value.link)}>\r\n          <span className=\"hyperlink\">ECG</span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"result\") {\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          <Badge label={value?.name} color={value?.status} />\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"date\") {\r\n      // Function to format date-time string\r\n      const formatDateTime = (dateTimeString) => {\r\n        if (!dateTimeString) {\r\n          return \"Invalid date-time\"; // Handle empty or invalid input\r\n        }\r\n\r\n        // Parse the date and time string\r\n        const parsedDate = parse(\r\n          dateTimeString,\r\n          \"yyyy-MM-dd HH:mm\",\r\n          new Date()\r\n        );\r\n\r\n        // Check if the parsed date is valid\r\n        if (!isValid(parsedDate)) {\r\n          return \"Invalid date-time\"; // Handle invalid date\r\n        }\r\n\r\n        // Format the date and time into 'dd-MM-yyyy HH:mm'\r\n        return format(parsedDate, \"dd-MM-yyyy HH:mm\");\r\n      };\r\n\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          <span>{formatDateTime(value)} </span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"action\") {\r\n      return (\r\n        <div className=\"d-flex gap-2\">\r\n          {value.map((data, i) => (\r\n            <div key={i} className=\"d-flex\">\r\n              {renderActionButton(data, row)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      // Default rendering for regular data\r\n      return <span className=\"fs-16 fw-500\">{value}</span>;\r\n    }\r\n  }\r\n\r\n  function renderActionButton(data, row) {\r\n    switch (data.type) {\r\n      case \"warning\":\r\n        return <img src={Assets.Warning} alt=\"warn\" className=\"cursor\" />;\r\n      case \"edit\":\r\n        return (\r\n          <img\r\n            src={Assets.EditPencil}\r\n            alt=\"edit\"\r\n            className=\"cursor\"\r\n            onClick={() => editData(row)}\r\n          />\r\n        );\r\n      case \"delete\":\r\n        return (\r\n          <img\r\n            src={Assets.Delete}\r\n            alt=\"delete\"\r\n            className=\"cursor\"\r\n            onClick={() => deleteData(row)}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function getColumnKey(columnLabel) {\r\n    // Convert label to a key format used in your data object\r\n    // Example: \"Heart Rate (BPM)\" -> \"heart_rate_(bpm)\"\r\n    return columnLabel.toLowerCase().replace(/\\s+/g, \"_\");\r\n  }\r\n};\r\n\r\nexport default DynamicTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport ActiveButton from \"../Buttons/ActiveButton/ActiveButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst DateRangePicker = ({ onClose }) => {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2 p-3\">\r\n        <CCol md={4} className=\"d-flex flex-column gap-1\">\r\n          <span>From Date *</span>\r\n          <DatePicker\r\n            showIcon\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n            isClearable\r\n            className=\"date-range-picker\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </CCol>\r\n        <CCol md={4} className=\"d-flex flex-column gap-1\">\r\n          <span>To Date *</span>\r\n          <DatePicker\r\n            showIcon\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            isClearable\r\n            className=\"date-range-picker\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </CCol>\r\n        <CCol\r\n          md={4}\r\n          className=\"d-flex flex-column gap-1 justify-content-center\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <ActiveButton onClick={onClose}>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.CloseX} alt=\"close\" />\r\n            </div>\r\n          </ActiveButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateRangePicker;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./ECGChart.css\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\n\r\nconst ECGChart = ({ data }) => {\r\n  console.log(\"data\", data.tableData);\r\n  const dateOnly = (data) => {\r\n    // Create a new Date object with the specified date and time\r\n    const date = new Date(data);\r\n\r\n    // Get individual date and time components\r\n    const day = (\"0\" + date.getDate()).slice(-2); // Get day with leading zero if necessary\r\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // Get month with leading zero if necessary\r\n    const year = date.getFullYear();\r\n    // const hours = (\"0\" + date.getHours()).slice(-2); // Get hours with leading zero if necessary\r\n    // const minutes = (\"0\" + date.getMinutes()).slice(-2); // Get minutes with leading zero if necessary\r\n\r\n    // Format the date in DD-MM-YYYY HH:mm format\r\n    const formattedDate = `${day}-${month}-${year}`;\r\n\r\n    return formattedDate; // Output: 24-06-2024 10:15\r\n  };\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [filter, setFilter] = useState(\"Single Lead\"); // Initial filter set to 'A'\r\n\r\n  // Function to handle filtering based on category\r\n  const handleFilter = (category) => {\r\n    setFilter(category);\r\n  };\r\n\r\n  // Effect to filter items based on the current filter\r\n  useEffect(() => {\r\n    const filteredItems = data?.tableData?.filter(\r\n      (item) => item.ecg_type === filter\r\n    );\r\n    setItems(filteredItems);\r\n  }, [filter]);\r\n\r\n  // Initialize items on component mount\r\n  useEffect(() => {\r\n    handleFilter(\"Single Lead\"); // Default to 'A' category initially\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"carousel-container\">\r\n        {items.length === 0 ? (\r\n          <span className=\"fs-18 fw-600\">No Data</span>\r\n        ) : (\r\n          <div className=\"carousel\">\r\n            {items?.map((item, i) => (\r\n              <>\r\n                <div key={i} className=\"chart-item\">\r\n                  <div className=\"rectangle\">\r\n                    <img src={Assets.ecgSample} alt=\"ecg\" />\r\n                  </div>\r\n                  <div className=\"captions\">\r\n                    <span>{dateOnly(item?.date)}</span>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"ecg_btngrp\">\r\n        <button\r\n          onClick={() => handleFilter(\"Single Lead\")}\r\n          style={{\r\n            backgroundColor: filter === \"Single Lead\" ? \"#0084CF\" : \"initial\",\r\n            color: filter === \"Single Lead\" ? \"white\" : \"black\",\r\n          }}\r\n          className=\"ecg_button\"\r\n        >\r\n          Single Lead\r\n        </button>\r\n        <button\r\n          onClick={() => handleFilter(\"3 Lead\")}\r\n          style={{\r\n            backgroundColor: filter === \"3 Lead\" ? \"#0084CF\" : \"initial\",\r\n            color: filter === \"3 Lead\" ? \"white\" : \"black\",\r\n          }}\r\n          className=\"ecg_button\"\r\n        >\r\n          3 Lead\r\n        </button>\r\n        <button\r\n          onClick={() => handleFilter(\"12 Lead\")}\r\n          style={{\r\n            backgroundColor: filter === \"12 Lead\" ? \"#0084CF\" : \"initial\",\r\n            color: filter === \"12 Lead\" ? \"white\" : \"black\",\r\n          }}\r\n          className=\"ecg_button\"\r\n        >\r\n          12 Lead\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ECGChart;\r\n","import {\r\n  CBadge,\r\n  CCol,\r\n  CContainer,\r\n  CFormInput,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport Table from \"../../../../../Tables/Table\";\r\nimport Badge from \"../../../../../Badge/Badge\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport ChartTab from \"../../../../../Charts/ChartTab\";\r\nimport DynamicTable from \"../../../../../Tables/DynamicTable\";\r\n\r\nimport BPForm from \"../Forms/BPForm\";\r\nimport HeartRate from \"../Forms/HeartRate\";\r\nimport LFTForm from \"../Forms/LFTForm\";\r\nimport LipidProfileForm from \"../Forms/LipidProfileForm\";\r\nimport Temperature from \"../Forms/Temperature\";\r\nimport Spo2 from \"../Forms/Spo2\";\r\nimport RespirationRateForm from \"../Forms/RespirationRateForm\";\r\nimport BMI from \"../Forms/BMI\";\r\nimport BSugar from \"../Forms/BSugar\";\r\nimport Hemogloin from \"../Forms/Hemogloin\";\r\nimport HCT from \"../Forms/HCT\";\r\nimport BUricAcid from \"../Forms/BUricAcid\";\r\nimport BKetone from \"../Forms/BKetone\";\r\nimport Urea from \"../Forms/Urea\";\r\nimport Creatinine from \"../Forms/Creatinine\";\r\nimport GFR from \"../Forms/GFR\";\r\nimport Urinalysis from \"../Forms/Urinalysis\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DateRangePicker from \"../../../../../DateRangePicker/DateRangePicker\";\r\nimport ECGChart from \"../ECG Chart/ECGChart\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\n\r\nconst ObjectiveDetailPage = ({ data, getTableDatas }) => {\r\n\r\n  const [chartView, setChartView] = useState(false);\r\n  const [addView, setAddView] = useState(false);\r\n  const [filterView, setFilterView] = useState(false);\r\n\r\n  const chartPage = () => {\r\n    setChartView(true);\r\n  };\r\n  const tablePage = () => {\r\n    setChartView(false);\r\n  };\r\n  const addPage = () => {\r\n    setAddView(true);\r\n  };\r\n  const addBack = () => {\r\n    setAddView(false);\r\n  };\r\n\r\n  const filterPage = () => {\r\n    setFilterView(true);\r\n  };\r\n  const filterBack = () => {\r\n    setFilterView(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CContainer className=\"p-0\">\r\n        <CContainer className=\"mt-2 mb-3\">\r\n          <CRow>\r\n            <CCol lg={7}>\r\n              <div className=\"d-flex flex-row gap-3\">\r\n                <img src={data?.icon} alt=\"icon\" />\r\n                <div className=\"d-flex flex-column gap-2\">\r\n                  <span className=\"fs-20 fw-600\">{data?.name}</span>\r\n                  <div className=\"d-flex flex-row gap-2 flex-wrap\">\r\n                    {data?.badge?.map((dt, i) => (\r\n                      <Badge label={dt?.label} color={dt?.color} />\r\n                    ))}\r\n                  </div>\r\n                  <span className=\"fs-14 fw-500\">{data?.date}</span>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={5} className=\"d-flex align-items-center mt-2\">\r\n              <CRow className=\"w-100 d-flex justify-content-around\">\r\n                <CCol xs={4} md={4} lg={4}>\r\n                  {!addView && (\r\n                    <PrimaryButton onClick={() => addPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  )}\r\n                  {addView && (\r\n                    <ActiveButton onClick={() => addBack()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.CloseX} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </ActiveButton>\r\n                  )}\r\n                </CCol>\r\n                <CCol xs={4} md={4} lg={4}>\r\n                  {filterView && (\r\n                    <ActiveButton onClick={() => filterBack()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.CloseX} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Filter</span>\r\n                      </div>\r\n                    </ActiveButton>\r\n                  )}\r\n                  {!filterView && (\r\n                    <PrimaryButton>\r\n                      <div\r\n                        className=\"d-flex align-items-center gap-2\"\r\n                        onClick={() => filterPage()}\r\n                      >\r\n                        <img src={Assets.Filter} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Filter</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  )}\r\n                </CCol>\r\n                {/* {data.id !== 14 && ( */}\r\n                <>\r\n                  {!chartView && (\r\n                    <CCol xs={4} md={4} lg={4}>\r\n                      <PrimaryButton onClick={() => chartPage()}>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.Chart} alt=\"add\" />\r\n                          <span className=\"fs-16 fw-600\">Chart</span>\r\n                        </div>\r\n                      </PrimaryButton>\r\n                    </CCol>\r\n                  )}\r\n                  {chartView && (\r\n                    <CCol xs={4} md={4} lg={4}>\r\n                      <ActiveButton onClick={() => tablePage()}>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.CloseX} alt=\"add\" />\r\n                          <span className=\"fs-16 fw-600\">Chart</span>\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </CCol>\r\n                  )}\r\n                </>\r\n                {/* )} */}\r\n              </CRow>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n        <CRow>\r\n          <CCol xl={12}>\r\n            {chartView ? (\r\n              data?.name === \"ECG\" ? (\r\n                <ECGChart data={data} />\r\n              ) : (\r\n                <ChartTab data={data} />\r\n              )\r\n            ) : (\r\n              <>\r\n                {filterView && <DateRangePicker onClose={filterBack} />}\r\n                <DynamicTable\r\n                  columnsData={data?.columnsData}\r\n                  tableData={data?.tableData}\r\n                  getTableDatas={getTableDatas}\r\n                />\r\n              </>\r\n            )}\r\n          </CCol>\r\n        </CRow>\r\n\r\n        {/* Modal for add  */}\r\n        {addView && (\r\n          <BlurBackground>\r\n            <CModal\r\n              alignment=\"center\"\r\n              visible={addView}\r\n              onClose={addBack}\r\n              aria-labelledby=\"VerticallyCenteredExample\"\r\n              size=\"lg\"\r\n            >\r\n              <CModalHeader>\r\n                <h4 className=\"fw-600\">Add {data?.name}</h4>\r\n              </CModalHeader>\r\n              <CModalBody className=\"p-4\">\r\n                {data?.name === \"Blood Pressure\" && (\r\n                  <BPForm addBack={addBack}  getTableDatas={getTableDatas}/>\r\n                )}\r\n                {data?.name === \"ECG\" && <HeartRate addBack={addBack} />}\r\n                {data?.name === \"Lung Function Test (LFT)\" && (\r\n                  <LFTForm addBack={addBack} />\r\n                )}\r\n                {data?.name === \"Lipid Profile\" && (\r\n                  <LipidProfileForm addBack={addBack} />\r\n                )}\r\n                {data?.name === \"Temperature\" && (\r\n                  <Temperature addBack={addBack} />\r\n                )}\r\n                {data?.name === \"SpO2\" && <Spo2 addBack={addBack} />}\r\n                {data?.name === \"Respiration Rate\" && (\r\n                  <RespirationRateForm addBack={addBack} />\r\n                )}\r\n                {data?.name === \"BMI\" && <BMI addBack={addBack} />}\r\n                {data?.name === \"Blood Sugar\" && <BSugar addBack={addBack} />}\r\n                {data?.name === \"Hemoglobin\" && <Hemogloin addBack={addBack} />}\r\n                {data?.name === \"HCT\" && <HCT addBack={addBack} />}\r\n                {data?.name === \"Blood Uric Acid\" && (\r\n                  <BUricAcid addBack={addBack} />\r\n                )}\r\n                {data?.name === \"Blood Ketone\" && <BKetone addBack={addBack} />}\r\n                {data?.name === \"Urea\" && <Urea addBack={addBack} />}\r\n                {data?.name === \"Creatinine\" && (\r\n                  <Creatinine addBack={addBack} />\r\n                )}\r\n                {data?.name === \"GFR\" && <GFR addBack={addBack} />}\r\n                {data?.name === \"Urinalysis\" && (\r\n                  <Urinalysis addBack={addBack} />\r\n                )}\r\n              </CModalBody>\r\n            </CModal>\r\n          </BlurBackground>\r\n        )}\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObjectiveDetailPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport VitalsTab from \"../../../VitalsTab/VitalsTab\";\r\nimport { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport Modal from \"../../../../../Modal/Modal\";\r\nimport ObjectiveDetailPage from \"../DetailPage/ObjectiveDetailPage\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\n\r\nconst VitalSign = ({ setVitalView }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Primary Vitals\" },\r\n    { id: 2, title: \"Metabolic And Biochemical Profile\" },\r\n    { id: 3, title: \"Hematologic Profile\" },\r\n    { id: 4, title: \"Renal and Metabolic Markers\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState({\r\n    id: 1,\r\n    title: \"Primary Vitals\",\r\n  });\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  function findTitleById(id) {\r\n    const titleObject = tabs?.find((title) => title.id === id);\r\n    return titleObject ? titleObject?.title : \"Primary Vitals\"; // Return the title or a message if not found\r\n  }\r\n\r\n  const currentTabtitle = findTitleById(currentTab);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [cardSelectedData, setSelectedCardData] = useState();\r\n  const [entities, setEntities] = useState([]);\r\n\r\n  const { loading, error, get } = useApi();\r\n\r\n  const transformData = (originalData) => {\r\n    if (!Array.isArray(originalData) || originalData.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    // Map through original data to create tableData\r\n    const tableData = originalData.map((item, index) => ({\r\n      \"no.\": index + 1,\r\n      result: {\r\n        status: item.details.bpFlagColor === \"success\" ? \"success\" : \"error\",\r\n        name: item.details.bpFlag || \"Unknown\",\r\n      },\r\n      systolic: item.details.systolic || \"N/A\",\r\n      diastolic: item.details.diastolic || \"N/A\",\r\n      \"pulse_(in_bpm)\": item.details.pulse || \"N/A\",\r\n      date: `${item.details.date} ${item.details.time || \"\"}`,\r\n      action:\r\n        item.freeze === 1\r\n          ? [{ type: \"warning\" }]\r\n          : [{ type: \"edit\" }, { type: \"delete\" }],\r\n      name: \"Blood Pressure\",\r\n      id: item.id,\r\n      user_id: item.user_id,\r\n    }));\r\n\r\n    // Create badge and other static information\r\n    const badge =\r\n      tableData.length > 0\r\n        ? [\r\n            {\r\n              label: `${tableData[0].systolic}/${tableData[0].diastolic} mm Hg`,\r\n              color: tableData[0].result.status,\r\n            },\r\n          ]\r\n        : [];\r\n\r\n    return {\r\n      id: 1,\r\n      icon: Assets.VitalBP,\r\n      name: \"Blood Pressure\",\r\n      date: `Recently Added ${tableData[0].date\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .reverse()\r\n        .join(\"-\")}`,\r\n      category: \"Primary Vitals\",\r\n      badge,\r\n      columnsData: [\r\n        { id: 1, label: \"NO.\" },\r\n        { id: 2, label: \"RESULT\" },\r\n        { id: 3, label: \"SYSTOLIC\" },\r\n        { id: 4, label: \"DIASTOLIC\" },\r\n        { id: 5, label: \"PULSE (IN BPM)\" },\r\n        { id: 6, label: \"DATE\" },\r\n        { id: 7, label: \"ACTION\" },\r\n      ],\r\n      tableData,\r\n      chartLabel1: \"PULSE (IN BPM)\",\r\n    };\r\n  };\r\n\r\n  const TableDatas = async (data) => {\r\n    try {\r\n      const response = await get(\r\n        `resource/vitals?limit=10&page=1&from=&to=&order_by=details-%3Edate&dir=2&user_id=10&slug=blood-pressure`\r\n      );\r\n      setIsModalOpen(true);\r\n      if (response.code === 200) {\r\n        const formattedData = transformData(response?.data?.vitals);\r\n        setEntities(formattedData);\r\n      } else {\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching data:\", err);\r\n    }\r\n  };\r\n\r\n  const openModal = (data) => {\r\n    setSelectedCardData(data);\r\n    TableDatas(data);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={setVitalView}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Vital Signs\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Vital Signs\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={0}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <VitalsTab category={currentTabtitle} openModal={openModal} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n        <CContainer className=\"p-0\">\r\n          <CRow>\r\n            <CCol className=\"mb-3\">\r\n              {/* <ObjectiveDetailPage data={cardSelectedData} /> */}\r\n              <ObjectiveDetailPage\r\n                data={entities}\r\n                getTableDatas={(data) => TableDatas(data)}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VitalSign;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst DateCards = ({ data, onClick }) => {\r\n  return (\r\n    <>\r\n      <CCard className=\"date-card cursor-default\">\r\n        <CCardBody>\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <div onClick={() => onClick(data, \"edit\")} className=\"cursor\">\r\n              <span className=\"fs-20 fw-600\">\r\n                {format(data?.date, \"dd/MM/yyyy\")}\r\n              </span>\r\n            </div>\r\n            <div onClick={() => onClick(data, \"delete\")}>\r\n              <img src={Assets.deleteorg} alt=\"Del\" className=\"cursor\" />\r\n            </div>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateCards;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst SingleDatePicker = ({ defaultDate }) => {\r\n  const [startDate, setStartDate] = useState(\r\n    defaultDate ? new Date(defaultDate) : new Date()\r\n  );\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={12} className=\"d-flex flex-column gap-1\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleDatePicker;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst OptionItem = ({ label, onSelect, selected, disabled }) => {\r\n  const [isSelected, setIsSelected] = useState(selected);\r\n  useEffect(() => {\r\n    setIsSelected(selected);\r\n  }, [selected]);\r\n  const toggleSelected = () => {\r\n    setIsSelected(!isSelected);\r\n    onSelect(label, !isSelected); // Notify parent component of selection change\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`option-item ${isSelected ? \"selected\" : \"\"} ${\r\n        disabled ? \"disabled\" : \"\"\r\n      }`}\r\n      onClick={toggleSelected}\r\n    >\r\n      {label}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DateCards from \"../../../../../DateCards/DateCards\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst PhysicalExam = ({ onClose }) => {\r\n  const dateCards = [\r\n    {\r\n      id: 1,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    { id: 9, date: \"06/07/2024\" },\r\n    { id: 10, date: \"06/07/2024\" },\r\n    { id: 11, date: \"06/07/2024\" },\r\n    { id: 12, date: \"06/07/2024\" },\r\n    { id: 13, date: \"06/07/2024\" },\r\n    { id: 14, date: \"06/07/2024\" },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(true);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [skinselectedOptions, setSkinSelectedOptions] = useState([]);\r\n\r\n  const [labelName1, setLabelname1] = useState(\"\");\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const [labelName, setLabelname] = useState(selectedData?.ga?.status || \"\");\r\n  const [editView, setEditView] = useState(false);\r\n\r\n  const options = [\r\n    \"Appearance (well, ill, distressed, etc.)\",\r\n    \"Level of Consciousness (alert, drowsy, unresponsive, etc.)\",\r\n    \"Posture and Gait\",\r\n  ];\r\n\r\n  const skinoptions = [\r\n    \"Appearance (well, ill, distressed, etc.)\",\r\n    \"Level of Consciousness (alert, drowsy, unresponsive, etc.)\",\r\n    \"Posture and Gait\",\r\n  ];\r\n\r\n  const itemsPerPage = 9; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return dateCards?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const handleSelect = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    } else {\r\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const handleSelectSkin = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSkinSelectedOptions([...skinselectedOptions, option]);\r\n    } else {\r\n      setSkinSelectedOptions(\r\n        skinselectedOptions.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const [nutritionOpen, setNutritionOpen] = useState(false);\r\n  const [constiOpen, setConstiOpen] = useState(false);\r\n  const [generalOpen, setGeneralOpen] = useState(false);\r\n  const [heentOpen, setHeentOpen] = useState(false);\r\n\r\n  const nutritionTabOpen = () => {\r\n    setNutritionOpen(true);\r\n  };\r\n\r\n  const nutritionTabClose = () => {\r\n    setNutritionOpen(false);\r\n  };\r\n\r\n  const constiTabOpen = () => {\r\n    setConstiOpen(true);\r\n  };\r\n\r\n  const constiTabClose = () => {\r\n    setConstiOpen(false);\r\n  };\r\n\r\n  const generalTabOpen = () => {\r\n    setGeneralOpen(true);\r\n  };\r\n\r\n  const generalTabClose = () => {\r\n    setGeneralOpen(false);\r\n  };\r\n\r\n  const heentTabOpen = () => {\r\n    setHeentOpen(true);\r\n  };\r\n\r\n  const heentTabClose = () => {\r\n    setHeentOpen(false);\r\n  };\r\n\r\n  const toggleSelected = (label) => {\r\n    setIsSelected(!isSelected);\r\n    setLabelname(label);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editView) {\r\n      setLabelname(selectedData?.ga?.status);\r\n      setLabelname1(selectedData?.skin?.status);\r\n      setSelectedOptions(selectedData?.ga?.select);\r\n      setSkinSelectedOptions(selectedData?.skin?.select);\r\n      if (selectedData?.ga?.status === \"Abnormal\") {\r\n        setGeneralOpen(true);\r\n      }\r\n      if (selectedData?.skin?.status === \"Abnormal\") {\r\n        setHeentOpen(true);\r\n      }\r\n    } else {\r\n      setLabelname(\"\");\r\n      setLabelname1(\"\");\r\n      setGeneralOpen(false);\r\n      setHeentOpen(false);\r\n      setSelectedOptions([]);\r\n    }\r\n  }, [editView]);\r\n\r\n  const getselected = (data, method) => {\r\n    setSelectedData(data);\r\n    if (method === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (method === \"edit\") {\r\n      addFormPage();\r\n      setEditView(true);\r\n    }\r\n  };\r\n\r\n  const toggleSelected1 = (label) => {\r\n    setLabelname1(label);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Physical Exam\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Physical Exam\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center\"\r\n            >\r\n              <div>\r\n                <PrimaryButton\r\n                  onClick={() => {\r\n                    addFormPage();\r\n                    setSelectedData({});\r\n                  }}\r\n                >\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              {getCurrentPageItems()?.map((item, i) => (\r\n                <CCol lg={4} className=\"mb-3\" key={i}>\r\n                  <DateCards data={item} onClick={getselected} />\r\n                </CCol>\r\n              ))}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={dateCards?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <CRow className=\"mb-2\">\r\n              <CCol className=\"d-flex align-items-center gap-2\">\r\n                <span>Date</span>\r\n                <SingleDatePicker defaultDate={selectedData?.date} />\r\n              </CCol>\r\n              <CCol className=\"d-flex justify-content-end\">\r\n                <div style={{ width: \"120px\" }}>\r\n                  <ActiveButton\r\n                    onClick={() => {\r\n                      setAddFormView(false);\r\n                      setEditView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                  >\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets?.listview} alt=\"close\" />\r\n                      <span>List View</span>\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            {/* <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!nutritionOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={nutritionTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {nutritionOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={nutritionTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Nutritional</span>\r\n              </CCol>\r\n              {nutritionOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!constiOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={constiTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {constiOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={constiTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Constitutional</span>\r\n              </CCol>\r\n              {constiOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div> */}\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">General Appearance</span>\r\n              </CCol>\r\n              <CRow>\r\n                <CCol>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <label class=\"form-label\">Status:</label>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected(\"Normal\");\r\n                        setGeneralOpen(false);\r\n                      }}\r\n                    >\r\n                      {\"Normal\"}\r\n                    </div>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName === \"Abnormal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected(\"Abnormal\");\r\n                        setGeneralOpen(true);\r\n                      }}\r\n                    >\r\n                      {\"Abnormal\"}\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              {generalOpen && (\r\n                <>\r\n                  {labelName === \"Abnormal\" && (\r\n                    <CRow>\r\n                      {options?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelect}\r\n                            selected={selectedOptions.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={heentTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={heentTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Skin</span>\r\n              </CCol>\r\n              <CRow>\r\n                <CCol>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <label class=\"form-label\">Status:</label>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected1(\"Normal\");\r\n                        setHeentOpen(false);\r\n                      }}\r\n                    >\r\n                      {\"Normal\"}\r\n                    </div>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName1 === \"Abnormal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected1(\"Abnormal\");\r\n                        setHeentOpen(true);\r\n                      }}\r\n                    >\r\n                      {\"Abnormal\"}\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              {heentOpen && (\r\n                <>\r\n                  {/* <CRow>\r\n                    <CCol>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <label class=\"form-label\">Status:</label>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                          }`}\r\n                          onClick={() => toggleSelected1(\"Normal\")}\r\n                        >\r\n                          {\"Normal\"}\r\n                        </div>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Abnormal\"\r\n                              ? \"selected primary-bg\"\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => toggleSelected1(\"Abnormal\")}\r\n                        >\r\n                          {\"Abnormal\"}\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow> */}\r\n                  {labelName1 === \"Abnormal\" && (\r\n                    <>\r\n                      <CRow>\r\n                        {skinoptions?.map((option, index) => (\r\n                          <CCol lg={\"auto\"}>\r\n                            <OptionItem\r\n                              key={index}\r\n                              label={option}\r\n                              onSelect={handleSelectSkin}\r\n                              selected={skinselectedOptions?.includes(option)}\r\n                              disabled={editView}\r\n                            />\r\n                          </CCol>\r\n                        ))}\r\n                      </CRow>\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            disabled={editView}\r\n                            defaultValue={selectedData?.skin?.notes}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            {!editView && (\r\n              <>\r\n                <div className=\"vertical-line mt-2 mb-3\"></div>\r\n                <CRow className=\"mb-1\">\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton\r\n                      onClick={() => {\r\n                        setAddFormView(false);\r\n                        setEditView(false);\r\n                      }}\r\n                    >\r\n                      CANCEL\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </CRow>\r\n              </>\r\n            )}\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhysicalExam;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst SearchBar = () => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={6} className=\"d-flex flex-column gap-1\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Search\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport LabTable from \"../../../../../Tables/LabTable\";\r\nimport LabForm from \"./LabForm\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst Lab = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"LAB TEST DATE\" },\r\n    { id: 3, label: \"LAB TEST NAME\" },\r\n    { id: 4, label: \"FILE\" },\r\n    { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Lab</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Lab\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <SearchBar />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <LabTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <LabForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lab;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ImagingForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Scan Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Upload Results / Image (pdf, jpg, jpeg, png)\r\n              </label>\r\n              <div class=\"input-file-container\">\r\n                <input class=\"input-file\" id=\"my-file\" type=\"file\" />\r\n                <label\r\n                  tabindex=\"0\"\r\n                  for=\"my-file\"\r\n                  className=\"input-file-trigger\"\r\n                >\r\n                  <img alt=\"upload\" src={Assets.Export} />\r\n                  <span>Choose File</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol className=\"d-flex align-items-center\">\r\n          <span className=\"fs-18 fw-400\">No Files Chosen</span>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImagingTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <Badge label={dt?.file} color={\"primary\"} />\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.notes}</CTableDataCell>\r\n              <CTableDataCell>{dt?.link}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport LabTable from \"../../../../../Tables/LabTable\";\r\nimport ImagingForm from \"./ImagingForm\";\r\nimport ImagingTable from \"../../../../../Tables/ImagingTable\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst Imaging = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"SCAN DATE\" },\r\n    { id: 3, label: \"SCAN TYPE\" },\r\n    { id: 4, label: \"FILE\" },\r\n    { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-05-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"JPG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"ECG\",\r\n      file: \"JPG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={6} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Imaging</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Imaging\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <SearchBar />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <ImagingTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ImagingForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Imaging;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Breadcrumb from \"../../../../Breadcrumb/Breadcrumb\";\r\nimport \"./Objective.css\";\r\nimport MedicalTab from \"../MedicalTab\";\r\nimport VitalsTab from \"../../VitalsTab/VitalsTab\";\r\nimport Modal from \"../../../../Modal/Modal\";\r\nimport ObjectiveDetailPage from \"./DetailPage/ObjectiveDetailPage\";\r\nimport VitalSign from \"./VitalSign/VitalSign\";\r\nimport PhysicalExam from \"./PhysicalExam/PhysicalExam\";\r\nimport Lab from \"./Lab/Lab\";\r\nimport Imaging from \"./Imaging/Imaging\";\r\n\r\nconst Objective = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Vital Signs\", image: Assets.VitalSig },\r\n    { id: 2, name: \"Physical Exam\", image: Assets.PhyExam },\r\n    // { id: 3, name: \"Lab\", image: Assets.Lab },\r\n    // { id: 4, name: \"Imaging\", image: Assets.Imaging },\r\n  ];\r\n\r\n  // const [selectedData, setSelectedData] = useState();\r\n  const [vitalView, setVitalView] = useState(false);\r\n  const [phyView, setPhyView] = useState(false);\r\n  const [labView, setLabView] = useState(false);\r\n  const [imagingView, setImagingView] = useState(false);\r\n\r\n  const getSelectedData = (data) => {\r\n    console.log(\"first data\", data);\r\n    // setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setVitalView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setPhyView(true);\r\n    }\r\n    if (data?.id === 3) {\r\n      setLabView(true);\r\n    }\r\n    if (data?.id === 4) {\r\n      setImagingView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        {!vitalView && !phyView && !labView && !imagingView ? (\r\n          <CRow>\r\n            {cardData.map((dt, i) => (\r\n              <CCol md={4} xl={3} className=\"mb-3\">\r\n                <Card data={dt} getSelectedData={getSelectedData} />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        ) : vitalView ? (\r\n          <VitalSign setVitalView={() => setVitalView(false)} />\r\n        ) : phyView ? (\r\n          <PhysicalExam onClose={() => setPhyView(false)} />\r\n        ) : labView ? (\r\n          <Lab onClose={() => setLabView(false)} />\r\n        ) : imagingView ? (\r\n          <Imaging onClose={() => setImagingView(false)} />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Objective;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst DiagnosisTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.condition}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.treatment}</CTableDataCell>\r\n              {/* <CTableDataCell>{dt?.remark}</CTableDataCell> */}\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\n\r\nconst DiagnosisForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const [disableText, setDisableText] = useState(false);\r\n  const gravidaoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n  const findgravidaIndex =\r\n    defaultValues?.condition &&\r\n    gravidaoptions?.indexOf(defaultValues?.condition);\r\n  const getSelectedGravida = (data) => {\r\n    console.log(data);\r\n    setDisableText(true);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.condition}\r\n              /> */}\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.condition}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Description\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                // placeholder=\"Enter\"\r\n                disabled\r\n                defaultValue={defaultValues?.treatment}\r\n                value={\r\n                  disableText\r\n                    ? \"Type 2 diabetes mellitus without complications\"\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisForm;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DiagnosisTable from \"../../../../../Tables/DiagnosisTable\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DiagnosisForm from \"./DiagnosisForm\";\r\n\r\nconst Diagnosis = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"ICD CODE\" },\r\n    { id: 4, label: \"Description\" },\r\n    { id: 5, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024\",\r\n      condition: \"E11.8\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"07-06-2024\",\r\n      condition: \"E12.1\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"08-07-2024\",\r\n      condition: \"E12.0\",\r\n      treatment: \"Type 4 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-09-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Diagnosis (Including ICD)\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Diagnosis (Including ICD)\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <DiagnosisTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <DiagnosisForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Diagnosis;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ImmunizationForm = ({ back, defaultValues }) => {\r\n  console.log(\"first\", defaultValues);\r\n  const [date, setDate] = useState(null);\r\n  const [takendate, setTakenDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.dosage_date;\r\n    const defaultDateString1 = defaultValues?.taken_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.dosage_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n    const defaultDate1 = defaultValues?.taken_date\r\n      ? parseDateString(defaultDateString1)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setTakenDate(defaultDate1);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Vaccine *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.vaccine}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Period *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.period}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Status *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.status}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Dosage Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Taken Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={takendate}\r\n                onChange={(date) => setTakenDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImmunizationForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImmunizationTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.vaccine}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.period}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  {!dt.taken_date ? (\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.vaccined}\r\n                      className=\"cursor\"\r\n                      style={{ width: \"40px\" }}\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      alt=\"delete\"\r\n                      style={{ width: \"40px\" }}\r\n                      src={Assets?.colorVaccined}\r\n                      className=\"cursor\"\r\n                      // onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.dosage_date}</CTableDataCell>\r\n              <CTableDataCell>{dt?.taken_date}</CTableDataCell>\r\n              {/* <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImmunizationTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport ImmunizationForm from \"./ImmunizationForm\";\r\nimport ImmunizationTable from \"../../../../../Tables/ImmunizationTable\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\n\r\nconst Immunization = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"VACCINE\" },\r\n    { id: 3, label: \"PERIOD\" },\r\n    { id: 4, label: \"STATUS\" },\r\n    { id: 5, label: \"DOSAGE DATE\" },\r\n    { id: 6, label: \"TAKEN DATE\" },\r\n    // { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 2,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 3,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"\",\r\n    },\r\n    {\r\n      id: 5,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 6,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 7,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 8,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 9,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"\",\r\n    },\r\n    {\r\n      id: 10,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [tkDate, setTkDate] = useState(new Date());\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n  const options = [\"Severity\", \"Option 2\", \"Option 3\"]; // Example options\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Immunization Status\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Immunization Status\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n                    <span className=\"fs-18 fw-400\">Start Date *</span>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <DatePicker\r\n                        showIcon\r\n                        selected={startDate}\r\n                        onChange={(date) => setStartDate(date)}\r\n                        className=\"date-range-selector\"\r\n                        maxDate={today}\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n                    <span className=\"fs-18 fw-400\">End Date *</span>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <DatePicker\r\n                        showIcon\r\n                        selected={endDate}\r\n                        onChange={(date) => setEndDate(date)}\r\n                        className=\"date-range-selector\"\r\n                        maxDate={today}\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  {/* <CCol\r\n                    md={3}\r\n                    className=\"d-flex flex-column gap-1 justify-content-end\"\r\n                  >\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <Dropdown options={options} />\r\n                    </div>\r\n                  </CCol> */}\r\n                  <CCol\r\n                    md={3}\r\n                    className=\"d-flex flex-column gap-1 justify-content-end\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    <PrimaryButton>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.search} alt=\"close\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </CCol>\r\n                </CRow>\r\n              </>\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              {/* <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div> */}\r\n              <div>\r\n                {/* onClick={() => addFormPage()} */}\r\n                <PrimaryButton>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <ImmunizationTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ImmunizationForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure taken this Vaccine ?</h5>\r\n\r\n                <div style={{ width: \"100%\" }} className=\"mb-3\">\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Taken Date *\r\n                    </label>\r\n                    <div className=\"date-size\">\r\n                      <DatePicker\r\n                        showIcon\r\n                        selected={tkDate}\r\n                        onChange={(date) => setTkDate(date)}\r\n                        maxDate={today}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Immunization;\r\n","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../Badge/Badge\";\r\n  import { Assets } from \"../../../assets/Assets\";\r\n  \r\nconst PsychiatricTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{dt?.result}</span>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <Badge\r\n                    label={dt?.result}\r\n                    color={\r\n                      dt?.result \r\n                        ? \"error\"\r\n                        : \"\"\r\n                      \r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            \r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    \r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={i === 0 ? Assets?.testSubIcon : Assets?.testUnSubIcon}\r\n                    className=\"cursor\"\r\n                  />\r\n                   {/* {i === 0 && ( */}\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.testViewIcon}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"view\")}\r\n                    />\r\n                  {/* )} */}\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PsychiatricTable","import { CCol, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\n\r\nconst PsychiatricForm = ({ back, defaultValues, questions,formTitle }) => {\r\n    const [formData, setFormData] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(formData);\r\n        // Add your submit logic here\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <h3>{formTitle}</h3>\r\n                <hr />\r\n                {questions?.map((question, index) => (\r\n                    <CRow key={index} className=\"mb-3\">\r\n                        <CCol>\r\n                            <h5>{question?.label}</h5>\r\n                            {question?.options.map((option, cIndex) => (\r\n                                <CFormCheck\r\n                                    key={cIndex}\r\n                                    type=\"radio\"\r\n                                    name={`question${index + 1}`}\r\n                                    id={`question${index + 1}_choice${cIndex + 1}`}\r\n                                    value={option}\r\n                                    label={option}\r\n                                    onChange={handleChange}\r\n                                    checked={formData[`question${index + 1}`] === option}\r\n                                />\r\n                            ))}\r\n                        </CCol>\r\n                    </CRow>\r\n                ))}\r\n            </form>\r\n            <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PsychiatricForm;\r\n","import {\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"./PsychiatricForm\";\r\n\r\nconst Psychiatric = () => {\r\n\r\n    const columnData = [\r\n        { label: \"NO\" },\r\n        { label: \"Name\" },\r\n        { label: \"Taken\" },\r\n        { label: \"result\" },\r\n        { label: \"Actions\" },\r\n    ];\r\n    const rowData = [\r\n        {\r\n            id: 1,\r\n            name: \"Physical Symptoms\",\r\n            date: \"26-07-2024 \",\r\n            result: \"12 Score Medium\",\r\n            questions: [\r\n                {\r\n                    label: \"Stomach pain\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Back pain\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Pain in your arms, legs, or joints (knees, hips, etc.)\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Menstrual cramps or other problems with your periods WOMEN ONLY\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Headaches\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Chest pain\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Dizziness\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Fainting spells\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Feeling your heart pound or race\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Shortness of breath\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Pain or problems during sexual intercourse\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Constipation, loose bowels, or diarrhea\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Nausea, gas, or indigestion\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Feeling tired or having low energy\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n                {\r\n                    label: \"Trouble sleeping\",\r\n                    options: [\"Not bothered at all\", \"Bothered a little\", \"Bothered a lot\"]\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Anger\",\r\n            questions: [\r\n                {\r\n                    label: \"I was irritated more than people knew\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"I felt angry\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"I felt like I was ready to explode\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"I was grouchy\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"I felt annoyed\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n\r\n            ]\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Anxiety\",\r\n            questions: [\r\n                {\r\n                    label: \"I felt fearful\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"I felt anxious\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"I felt worried\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"I found it hard to focus on anything other than my anxiety\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"I felt nervous\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"I felt uneasy\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n                {\r\n                    label: \"I felt tense\",\r\n                    options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"]\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Depression\",\r\n\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Mania\",\r\n\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Autism Spectrum Disorder\",\r\n\r\n        },\r\n        {\r\n            id: 7,\r\n            name: \"Social Communication Disorder\",\r\n\r\n        },\r\n        {\r\n            id: 8,\r\n            name: \"Dimensions Of Psychosis Symptom Severity\",\r\n\r\n        },\r\n        {\r\n            id: 9,\r\n            name: \"Conduct Disorder\",\r\n\r\n        },\r\n        {\r\n            id: 10,\r\n            name: \"Nonsuicidal Self-Injury\",\r\n\r\n        },\r\n        {\r\n            id: 11,\r\n            name: \"Oppositional Defiant Disorder\",\r\n\r\n        },\r\n        {\r\n            id: 12,\r\n            name: \"Somatic Symptom Disorder\",\r\n\r\n        },\r\n\r\n    ];\r\n\r\n    const [addFormView, setAddFormView] = useState(false);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [selectedData, setSelectedData] = useState({});\r\n    const [formTitle, setFormTitle] = useState(\"\"); // State for form title\r\n\r\n    const itemsPerPage = 12; // Number of items to display per page\r\n\r\n    // Function to handle page change\r\n    const onPageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    // Function to get items for the current page\r\n    const getCurrentPageItems = () => {\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return rowData?.slice(startIndex, endIndex);\r\n    };\r\n\r\n    const viewFormPage = () => {\r\n        setAddFormView(true);\r\n    };\r\n\r\n    const getselectedData = (data, type) => {\r\n        console.log(type, \"first\", data);\r\n        setSelectedData(data);\r\n        setFormTitle(data?.name); // Set form title based on selected data\r\n        if (type === \"view\") {\r\n            viewFormPage();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {!addFormView && (\r\n                <>\r\n                    <div className=\"mb-2\">\r\n                        <PsychiatricTable\r\n                            rowData={getCurrentPageItems()}\r\n                            columns={columnData}\r\n                            getselectedData={getselectedData}\r\n                        />\r\n\r\n                        {/* <CRow className=\"mb-3\">\r\n                            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                                <Pagination\r\n                                    currentPage={currentPage}\r\n                                    onPageChange={onPageChange}\r\n                                    totalItems={rowData?.length}\r\n                                    itemsPerPage={itemsPerPage}\r\n                                />\r\n                            </CCol>\r\n                        </CRow> */}\r\n                    </div>\r\n                </>\r\n            )}\r\n            {addFormView && (\r\n                <CCard className=\"p-2 cursor-default mb-5\">\r\n                    <CCardBody className=\"mb-3\">\r\n                        <PsychiatricForm\r\n                            back={() => {\r\n                                setAddFormView(false);\r\n                                setSelectedData({});\r\n                            }}\r\n                            defaultValues={selectedData}\r\n                            questions={selectedData.questions || []}\r\n                            formTitle={formTitle}\r\n                        />\r\n                    </CCardBody>\r\n                </CCard>\r\n            )}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Psychiatric","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../../AssessmentTool/Psychiatric/PsychiatricForm\";\r\n\r\nconst Neurological = () => {\r\n\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"NIH Stroke Scale/Score (NIHSS)\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"Level of consciousness\",\r\n          options: [\"Alert, keenly responsive\", \"Arouses to minor stimulation\", \"Requires repeated stimulation to arouse\", \"Movements to pain\", \"Postures or unresponsive\"]\r\n        },\r\n        {\r\n          label: \"Ask month and age\",\r\n          options: [\"Both questions right\", \"1 question right\", \"0 questions right\", \"Dysarthric/intubated/trauma/language barrier\", \"Aphasic\"]\r\n        },\r\n        {\r\n          label: \"Blink eyes & squeeze hands\",\r\n          options: [\"Performs both tasks\", \"Performs 1 task\", \"Performs 0 tasks\",]\r\n        },\r\n        {\r\n          label: \"Horizontal extraocular movements\",\r\n          options: [\"Normal\", \"Partial gaze palsy: can be overcome\", \"Partial gaze palsy: corrects with oculocephalic reflex\", \"Forced gaze palsy: cannot be overcome\"]\r\n        },\r\n        {\r\n          label: \"Visual fields\",\r\n          options: [\"No visual loss\", \"Partial hemianopia\", \"Complete hemianopia\", \"Patient is bilaterally blind\", \"Bilateral hemianopia\"]\r\n        },\r\n        {\r\n          label: \"Facial palsy\",\r\n          options: [\"Normal symmetry\", \"Minor paralysis (flat nasolabial fold, smile asymmetry)\", \"Partial paralysis (lower face)\", \"Unilateral complete paralysis (upper/lower face)\", \"Bilateral complete paralysis (upper/lower face)\"]\r\n        },\r\n        {\r\n          label: \" Left arm motor drift\",\r\n          options: [\"No drift for 10 seconds\", \"Drift, but doesn't hit bed\", \"Drift, hits bed\", \"Some effort against gravity\", \"No effort against gravity\", \"No movement\", \"Amputation/joint fusion\"]\r\n        },\r\n        {\r\n          label: \"Right arm motor drift\",\r\n          options: [\"No drift for 10 seconds\", \"Drift, but doesn't hit bed\", \"Drift, hits bed\", \"Some effort against gravity\", \"No effort against gravity\", \"No movement\", \"Amputation/joint fusion\"]\r\n        },\r\n        {\r\n          label: \"Left leg motor drift\",\r\n          options: [\"No drift for 10 seconds\", \"Drift, but doesn't hit bed\", \"Drift, hits bed\", \"Some effort against gravity\", \"Some effort against gravity\", \"No movement\", \"Amputation/joint fusion\"]\r\n        },\r\n        {\r\n          label: \"Right leg motor drift\",\r\n          options: [\"No drift for 10 seconds\", \"Drift, but doesn't hit bed\", \"Drift, hits bed\", \"Some effort against gravity\",\"No effort against gravity\",\"No movement\",\"Amputation/joint fusion\",]\r\n        },\r\n        {\r\n          label: \"Limb Ataxia\",\r\n          options: [\"No ataxia\", \"Ataxia in 1 Limb\", \"Ataxia in 2 Limbs\", \"Does not understand\",\"Paralyzed\",\"Amputation/joint fusion\"]\r\n        },\r\n        {\r\n          label: \"Sensation\",\r\n          options: [\"Normal: no sensory loss\", \"Mild-moderate loss: less sharp/more dull\", \"Mild-moderate loss: can sense being touched\", \"Complete loss: cannot sense being touched at all\",\"No response and quadriplegic\",\"Coma/unresponsive\"]\r\n        },\r\n        {\r\n          label: \"Language/aphasia\",\r\n          options: [\"Normal: no aphasia\", \"Mild-moderate aphasia: some obvious changes, without significant limitation\", \"Severe aphasia: fragmentary expression, inference needed, cannot identify materials+\", \"Mute/global aphasia: no usable speech/auditory comprehension\",\"Coma/unresponsive\"]\r\n        },\r\n        {\r\n          label: \"Dysarthria\",\r\n          options: [\"Normal\", \"Mild-moderate dysarthria: slurring but can be understood\", \"Severe dysarthria: unintelligible slurring or out of proportion to dysphasia\", \"Mute/anarthric\",\"Intubated/unable to test\"]\r\n        },\r\n        {\r\n          label: \"Extinction/inattention\",\r\n          options: [\"No abnormality\", \"Visual/tactile/auditory/spatial/personal inattention\", \"Extinction to bilateral simultaneous stimulation\", \"Profound hemi-inattention (ex: does not recognize own hand)\",\"Extinction to >1 modality\"]\r\n      }\r\n      ],\r\n    },\r\n\r\n  ];\r\n\r\n  const formTitle = \"NIH Stroke Scale/Score (NIHSS)\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n\r\n            {/* <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow> */}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Neurological","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../Psychiatric/PsychiatricForm\";\r\n\r\nconst Peadiatric = () => {\r\n\r\n  const columnData = [\r\n    {  label: \"NO\" },\r\n    {  label: \"Name\" },\r\n    {  label: \"Taken\" },\r\n    {  label: \"result\" },\r\n    {  label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"APGAR Score\",\r\n      date: \"26-07-2024 \",\r\n      result:\"12 Score Medium\",\r\n      questions : [\r\n        {\r\n            label: \"Activity (muscle tone)\",\r\n            options: [\"Absent\", \"Flex arms and legs\", \"Active\"]\r\n        },\r\n        {\r\n            label: \"Pulse\",\r\n            options: [\"Absent\", \"Below 100 bpm\", \"Over 100 bpm\"]\r\n        },\r\n        {\r\n            label: \"Grimace (reflex irritability)\",\r\n            options: [\"Floppy\", \"Minimal response to stimulation\", \"Prompt response to stimulation\"]\r\n        },\r\n        {\r\n            label: \"Appearance (skin color)\",\r\n            options: [\"Blue, Pale\", \"Pink body, Blue Extremities\", \"Pink\"]\r\n        },\r\n        {\r\n          label: \"Respiration\",\r\n          options: [\"Absent\", \"Slow and irregular\", \"Vigorous cry\"]\r\n      }\r\n    ],\r\n    },\r\n  ];\r\n\r\n  const formTitle = \"APGAR Score\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n \r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n        viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {!addFormView && (\r\n      <>\r\n        <div className=\"mb-2\">\r\n          <PsychiatricTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n          />\r\n\r\n        </div>\r\n      </>\r\n    )}\r\n    {addFormView && (\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <PsychiatricForm\r\n            back={() => {\r\n              setAddFormView(false);\r\n              setSelectedData({});\r\n            }}\r\n            defaultValues={selectedData}\r\n            questions={selectedData.questions || []} \r\n            formTitle={formTitle}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    )}\r\n\r\n   \r\n  </>\r\n  )\r\n}\r\n\r\nexport default Peadiatric","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../Psychiatric/PsychiatricForm\";\r\n\r\nconst Ophthalmic = () => {\r\n\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"Vision Symptoms\",\r\n      date: \"26-07-2024 \",\r\n      result: \"6 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"As a teacher or parent are you concerned with this student’s vision?\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Tilts head, squints, closes or covers one eye when reading?\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Gaze issues, eyes turn in or out, crossed eyes, eyes wander\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Different size pupils or eyes\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Watery eyes, eyes appear hazy or clouded\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Words float, move, or jump around when reading\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Complains of headaches, dizziness, or nausea when reading\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Complains of itching, burning, or scratchy eyes\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Complains of blurred or double vision, unusual sensitivity to light, or difficulty seeing\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"History of head injury with vision complaints\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Loses place when reading\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Skips over or leaves out small words when reading\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Writes uphill or downhill; difficulty writing in a straight line\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Has difficulty copying from the board\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Avoids near work, such as reading or writing\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Has difficulty lining up numbers when doing math\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Has difficulty finishing assignments on time\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Holds books too close; leans too close to a computer screen\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n        {\r\n          label: \"Clumsy; bumps into things; knocks things over\",\r\n          options: [\"Yes\", \"No\"]\r\n        },\r\n      ],\r\n    },\r\n\r\n  ];\r\n\r\n  const formTitle = \"Vision Symptoms\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ophthalmic","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport Psychiatric from \"./Psychiatric/Psychiatric\";\r\nimport Neurological from \"./Neurological/Neurological\";\r\nimport Peadiatric from \"./Peadiatric/Peadiatric\";\r\nimport Ophthalmic from \"./Ophthalmic/Ophthalmic\";\r\n\r\n\r\nconst AssessmentTool = ({onClose}) => {\r\n\r\n \r\n    const tabs = [\r\n        { id: 1, title: \"psychiatric\" },\r\n        { id: 2, title: \"Neurological\" },\r\n        { id: 3, title: \"Peadiatric\" },\r\n        { id: 4, title: \"Ophthalmic\" },\r\n      ];\r\n      const [currentTab, setCurrentTab] = useState(1);\r\n      const getCurrentTab = (data) => {\r\n        setCurrentTab(data);\r\n      };\r\n\r\n  return (\r\n      <>\r\n    <CRow className=\"mb-0\">\r\n      <CCol md={4} className=\"mb-2\">\r\n        <div className=\"d-flex gap-2\">\r\n          <img\r\n            alt=\"BackBtn\"\r\n            src={Assets.BackBtn}\r\n            style={{ width: \"35px\" }}\r\n            onClick={onClose}\r\n            className=\"cursor\"\r\n          />\r\n          <span className=\"Obj-name d-flex align-items-center\">Assessment Tools</span>\r\n        </div>\r\n      </CCol>\r\n      <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n        <div className=\"d-flex mt-2\">\r\n          <Breadcrumb\r\n            paths={[\r\n              { label: \"Home\", to: \"/patients\" },\r\n              { label: \"Patient List\", to: \"/patients\" },\r\n              { label: \"Medical Profile\", to: \"/patients/history\" },\r\n              {\r\n                label: \"Assessment Tools\",\r\n                to: \"/patients/history\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow>\r\n      <CCol md={12}>\r\n        <MedicalTab\r\n          tabs={tabs}\r\n          getCurrentTab={getCurrentTab}\r\n          defaultTab={0}\r\n        />\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mt-3\">\r\n      {currentTab === 1 && (\r\n        <>\r\n          <Psychiatric />\r\n        </>\r\n      )}\r\n      {currentTab === 2 && (\r\n        <>\r\n          <Neurological />\r\n        </>\r\n      )}\r\n      {currentTab === 3 && (\r\n        <>\r\n          <Peadiatric />\r\n        </>\r\n      )}\r\n      {currentTab === 4 && (\r\n        <>\r\n          <Ophthalmic />\r\n        </>\r\n      )}\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default AssessmentTool","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Diagnosis from \"./Diagnosis/Diagnosis\";\r\nimport Immunization from \"./Immunization/Immunization\";\r\nimport AssessmentTool from \"./AssessmentTool/AssessmentTool\";\r\n\r\nconst Assesment = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Diagnosis (Including ICD)\", image: Assets.Diagnosis },\r\n    { id: 2, name: \"Immunization Status\", image: Assets.Immunizaion },\r\n    { id: 3, name: \"Assessment Tool\", image: Assets.AssesmentTool },\r\n  ];\r\n  const [diagnosisView, setDiagnosisView] = useState(false);\r\n  const [immunizationView, setImmunizationView] = useState(false);\r\n  const [assessmentView, setAssessmentView] = useState(false);\r\n\r\n  const getSelectedData = (data) => {\r\n    console.log(\"first data\", data);\r\n    // setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setDiagnosisView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setImmunizationView(true);\r\n    }\r\n    if (data?.id === 3) {\r\n      setAssessmentView(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {!diagnosisView && !immunizationView && !assessmentView ? (\r\n        <CRow>\r\n          {cardData.map((dt, i) => (\r\n            <CCol md={4} xl={3} className=\"mb-3\">\r\n              <Card data={dt} getSelectedData={getSelectedData} />\r\n            </CCol>\r\n          ))}\r\n        </CRow>\r\n      ) : diagnosisView ? (\r\n        <Diagnosis onClose={() => setDiagnosisView(false)} />\r\n      ) : immunizationView ? (\r\n        <Immunization onClose={() => setImmunizationView(false)} />\r\n      ) : assessmentView ? (\r\n        <AssessmentTool onClose={() => setAssessmentView(false)} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assesment;\r\n","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst DropdownButton = ({ buttonName2, getbtnNames }) => {\r\n  const [buttonText, setButtonText] = useState(\"SAVE\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleItemClick = (text) => {\r\n    setButtonText(text);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button className=\"dropdown-button button\">\r\n        <div className=\"d-flex align-items-center justify-content-between\" onClick={() => getbtnNames(buttonText)}>\r\n          <div className=\"w-100\" >\r\n            <span className=\"fs-16 fw-600\">{buttonText}</span>\r\n          </div>\r\n          <div onClick={toggleDropdown}>\r\n            {!isOpen ? (\r\n              <img src={Assets.cDown} alt=\"down\" />\r\n            ) : (\r\n              <img src={Assets.cUp} alt=\"up\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"dropdown-content\">\r\n          {buttonText === buttonName2 && (\r\n            <span\r\n              onClick={() => handleItemClick(\"SAVE\")}\r\n              className=\"fs-14 fw-600\"\r\n            >\r\n              SAVE\r\n            </span>\r\n          )}\r\n          {buttonText === \"SAVE\" && (\r\n            <span\r\n              onClick={() => handleItemClick(buttonName2)}\r\n              className=\"fs-14 fw-600\"\r\n            >\r\n              {buttonName2}\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownButton;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\n\r\nconst LabOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Raj Scan 1\", \"Raj Scan 2\", \"Raj Scan 3\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getbtnNames = () => {\r\n    console.log(\"getbtnNames\");\r\n  };\r\n  const eoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd_code}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={eoptions}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lab Test Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Lab *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"250px\" }}>\r\n          {/* <PrimaryButton>SEND TO LAB</PrimaryButton> */}\r\n          <DropdownButton\r\n            buttonName2={\"SEND TO LAB\"}\r\n            getbtnNames={getbtnNames}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrderForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport LabOrderForm from \"./LabOrderForm\";\r\n\r\nconst LabOrder = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"NAME\" },\r\n    { id: 4, label: \"FILE\" },\r\n    // { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"LAB & STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Accepted\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <LabOrderTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <LabOrderForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalBody className=\"p-5\">\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12}>\r\n                  <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.date}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Test Name</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.name}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">ICD Code</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">\r\n                      Lab/Scan Center\r\n                    </span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.lab_name}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                    <div\r\n                      className=\"w-100\"\r\n                      // style={{\r\n                      //   border: \"1px solid #17171D33\",\r\n                      //   borderRadius: \"5px\",\r\n                      // }}\r\n                    >\r\n                      {/* <Dropdown\r\n                        options={options}\r\n                        getSelectedValue={getSelectedValue}\r\n                      /> */}\r\n                      <CFormSelect\r\n                        aria-label=\"Default select example\"\r\n                        disabled={\r\n                          selectedData.lab_status === \"Uploaded\" ||\r\n                          selectedData.lab_status === \"Not Uploaded\" && true\r\n                        }\r\n                      >\r\n                        <option>Select</option>\r\n                        <option value=\"Morning\">Morning</option>\r\n                        <option value=\"Afternoon\">Afternoon</option>\r\n                        <option value=\"Evening\">Evening</option>\r\n                        <option value=\"Night\">Night</option>\r\n                      </CFormSelect>\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Test Type</span>\r\n                    <div>\r\n                      <CFormCheck\r\n                        inline\r\n                        type=\"radio\"\r\n                        name=\"inlineRadioOptions\"\r\n                        id=\"inlineCheckbox1\"\r\n                        value=\"Lab Test\"\r\n                        label=\"Lab Test\"\r\n                        defaultChecked\r\n                        disabled={\r\n                          selectedData.lab_status === \"Uploaded\" ||\r\n                          selectedData.lab_status === \"Not Uploaded\" && true\r\n                        }\r\n                      />\r\n                      <CFormCheck\r\n                        inline\r\n                        type=\"radio\"\r\n                        name=\"inlineRadioOptions\"\r\n                        id=\"inlineCheckbox2\"\r\n                        value=\"Home Test\"\r\n                        label=\"Home Test\"\r\n                        disabled={\r\n                          selectedData.lab_status === \"Uploaded\" ||\r\n                          selectedData.lab_status === \"Not Uploaded\" && true\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <div style={{ width: \"128px\" }}>\r\n                  <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                  <SecondaryButton onClick={() => setDetailView(false)}>\r\n                    CANCEL\r\n                  </SecondaryButton>\r\n                </div>\r\n              </CRow>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrder;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\n\r\nconst ImagingOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Raj Scan 1\", \"Raj Scan 2\", \"Raj Scan 3\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getbtnNames = () => {\r\n    console.log(\"getbtnNames\");\r\n  };\r\n  const eoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd_code}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={eoptions}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Imaging Order Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Scan Center *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"250px\" }}>\r\n          {/* <PrimaryButton>SEND TO LAB</PrimaryButton> */}\r\n          <DropdownButton\r\n            buttonName2={\"SEND TO SCAN CENTER\"}\r\n            getbtnNames={getbtnNames}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImagingOrderTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                {dt?.file !== \"-\" ? (\r\n                    <Badge label={dt?.file} color={\"primary\"} />\r\n                  ) : (\r\n                    \"-\"\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.notes}\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.link}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.icd_code}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.scan_name}</span>\r\n                  <Badge\r\n                    label={dt?.scan_status}\r\n                    color={\r\n                      dt?.scan_status === \"Accepted\"\r\n                        ? \"yellow\"\r\n                        : dt?.scan_status === \"Uploaded\"\r\n                        ? \"success\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                    }}\r\n                    className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                  >\r\n                    {dt?.scan_status === \"Accepted\" ? (\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.Approve}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                      />\r\n                    ) : dt?.scan_status === \"Uploaded\" ? (\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.visibleEye}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                      />\r\n                    ) : dt?.scan_status === \"Not Uploaded\" ? (\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.visibleEye}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                      />\r\n                    ) : (\r\n                      <>\r\n                        <img\r\n                          alt=\"delete\"\r\n                          src={Assets?.EditPencil}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"edit\")}\r\n                        />\r\n                        <img\r\n                          alt=\"delete\"\r\n                          src={Assets?.TableDelete}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"delete\")}\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                    }}\r\n                    className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                  >\r\n                    {dt?.scan_status === \"Accepted\" && (\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.Accept}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                      />\r\n                    )}\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ImagingOrderForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\n\r\nconst ImagingOrder = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"NAME\" },\r\n    { id: 4, label: \"FILES\" },\r\n    // { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"SCAN CENTER & STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"01-01-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Accepted\",\r\n      scan_name: \"Raj Scan 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Prescribed\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <ImagingOrderTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ImagingOrderForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalBody className=\"p-5\">\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12}>\r\n                  <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.date}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Scan Name</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.name}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">ICD Code</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={3} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">\r\n                      Scan Center\r\n                    </span>\r\n                    <span className=\"fs-18 fw-400 dark-label\">\r\n                      {selectedData?.scan_name}\r\n                    </span>\r\n                  </div>\r\n                </CCol>\r\n                <CCol lg={4} className=\"mb-3\">\r\n                  <div className=\"d-flex flex-column gap-2\">\r\n                    <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                    <div\r\n                      className=\"w-100\"\r\n                      // style={{\r\n                      //   border: \"1px solid #17171D33\",\r\n                      //   borderRadius: \"5px\",\r\n                      // }}\r\n                    >\r\n                      {/* <Dropdown\r\n                        options={options}\r\n                        getSelectedValue={getSelectedValue}\r\n                      /> */}\r\n                      <CFormSelect\r\n                        aria-label=\"Default select example\"\r\n                        disabled={\r\n                          selectedData.scan_status === \"Uploaded\" ||\r\n                          selectedData.scan_status === \"Not Uploaded\" && true\r\n                        }\r\n                      >\r\n                        <option>Select</option>\r\n                        <option value=\"Morning\">Morning</option>\r\n                        <option value=\"Afternoon\">Afternoon</option>\r\n                        <option value=\"Evening\">Evening</option>\r\n                        <option value=\"Night\">Night</option>\r\n                      </CFormSelect>\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <div style={{ width: \"128px\" }}>\r\n                  <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                  <SecondaryButton onClick={() => setDetailView(false)}>\r\n                    CANCEL\r\n                  </SecondaryButton>\r\n                </div>\r\n              </CRow>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrder;\r\n","import {\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst MedicationOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState(\r\n    defaultValues.medicines\r\n      ? defaultValues.medicines\r\n      : [\r\n          {\r\n            id: 1,\r\n            type: \"\",\r\n            name: \"\",\r\n            strength: \"\",\r\n            strengthMeasurement: \"\",\r\n            days: \"\",\r\n            totalQty: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            instruction: \"\",\r\n            reason: \"\",\r\n            status: \"\",\r\n            m: 0,\r\n            a: 0,\r\n            e: 0,\r\n            n: 0,\r\n            food: \"bf\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, value, fieldName) => {\r\n    console.log(fieldName, value);\r\n    const newValue = value?.replace(/[^0-9]/g, \"\");\r\n    const processedValue =\r\n      fieldName === \"startDate\" || fieldName === \"endDate\"\r\n        ? value\r\n          ? value.toISOString()\r\n          : \"\" // Convert date to ISO string\r\n        : fieldName === \"strength\"\r\n        ? newValue\r\n        : fieldName === \"totalQty\"\r\n        ? newValue\r\n        : fieldName === \"days\"\r\n        ? newValue\r\n        : value;\r\n\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [fieldName]: processedValue };\r\n      }\r\n      return medicine;\r\n    });\r\n\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  console.log(\"first\", medicines);\r\n  const [btnValue, setBtnValue] = useState();\r\n  const [btnView, setBtnView] = useState(false);\r\n\r\n  const getbtnNames = (data) => {\r\n    setBtnValue(data);\r\n    if (data === \"SEND TO PHARMACY\") {\r\n      setBtnView(true);\r\n    }\r\n  };\r\n  console.log(btnValue, \"SEND TO PHARMACY\");\r\n\r\n  const [strength, setStrength] = useState(defaultValues?.strength || \"\");\r\n  const [qty, setQty] = useState(defaultValues?.strength || \"\");\r\n  const [timeTaken, setTimeTaken] = useState(defaultValues?.strength || \"\");\r\n\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newValue = input.replace(/[^0-9]/g, \"\");\r\n    if (name === \"strength\") {\r\n      setStrength(newValue);\r\n    }\r\n    if (name === \"totalQty\") {\r\n      setQty(newValue);\r\n    }\r\n    if (name === \"days\") {\r\n      setTimeTaken(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">\r\n              {defaultValues?.medicines?.length >= 1 ? \"Edit \" : \"Add \"} New\r\n              Medicine\r\n            </span>\r\n          </CCol>\r\n\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3 h-100 d-flex align-items-center justify-content-between\">\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              <CCol\r\n                lg={8}\r\n                className=\"mt-4 d-flex justify-content-between\"\r\n                style={{ width: \"42%\" }}\r\n              >\r\n                <CRow className=\"mb-3\">\r\n                  <div style={{ width: \"250px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                    {/* <DropdownButton /> */}\r\n                  </div>\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                  </div>\r\n                </CRow>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ) : null}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine, index) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\" key={index}>\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"type\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"Brand\">Brand</option>\r\n                          <option value=\"Generic\">Generic</option>\r\n                        </CFormSelect>\r\n                        {/* <input\r\n                          name=\"type\"\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"name\"\r\n                          defaultValue={medicine?.name}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"strength\"\r\n                          value={medicine?.strength}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Route of administration\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strengthMeasurement\"\r\n                          defaultValue={medicine?.strengthMeasurement}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"days\"\r\n                          value={medicine?.days}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"totalQty\"\r\n                          value={medicine?.totalQty}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"startDate\"\r\n                          defaultValue={medicine?.startDate}\r\n                          onChange={(e) => handleMedicineInputChange(medicine?.id, e.target.value, e.target.name)}\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : defaultValues?.medicines?.length >= 1\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            name=\"startDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.startDate\r\n                                ? new Date(medicine?.startDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"startDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"endDate\"\r\n                          defaultValue={medicine?.endDate}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : defaultValues?.medicines?.length >= 1\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            name=\"endDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.endDate\r\n                                ? new Date(medicine?.endDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"endDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"m\"\r\n                          defaultValue={medicine?.m}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"a\"\r\n                          defaultValue={medicine?.a}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"e\"\r\n                          defaultValue={medicine?.e}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"n\"\r\n                          defaultValue={medicine?.n}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          key={index}\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"bf\"\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"bf\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"af\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"af\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"instruction\"\r\n                          defaultValue={medicine?.instruction}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"reason\"\r\n                          defaultValue={medicine?.reason}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              {defaultValues?.medicines?.length >= 1 ? (\r\n                defaultValues?.lab_status === \"Prescribed\" &&\r\n                (medicine?.id === 1 ? null : (\r\n                  <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => handleRemoveMedicine(medicine.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                ))\r\n              ) : medicine.id === 1 ? null : (\r\n                <CCol lg={1}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton\r\n                      onClick={() => handleRemoveMedicine(medicine.id)}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteDel} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              )}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          defaultValues?.lab_status === \"Prescribed\" && (\r\n            <>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton onClick={handleAddMedicine}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteAdd} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div className=\"vertical-line\"></div>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddMedicine}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? null : (\r\n          <>\r\n            <CRow>\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"250px\" }}>\r\n                {/* <PrimaryButton>SEND TO PHARMACY</PrimaryButton> */}\r\n                <DropdownButton\r\n                  buttonName2={\"SEND TO PHARMACY\"}\r\n                  getbtnNames={getbtnNames}\r\n                />\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {btnView && (\r\n          <BlurBackground>\r\n            <CModal\r\n              alignment=\"center\"\r\n              visible={btnView}\r\n              onClose={() => setBtnView(false)}\r\n              aria-labelledby=\"VerticallyCenteredExample\"\r\n              size=\"md\"\r\n            >\r\n              <CModalBody className=\"p-3\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Select a Pharmacy\r\n                </label>\r\n                <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                  <CFormSelect\r\n                    size=\"lg\"\r\n                    className=\"mb-3\"\r\n                    aria-label=\"Large select example\"\r\n                    name=\"strength\"\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"1\">One</option>\r\n                    <option value=\"2\">Two</option>\r\n                    <option value=\"3\">Three</option>\r\n                  </CFormSelect>\r\n                  <div className=\"d-flex gap-2 mt-2\">\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <PrimaryButton onClick={() => setBtnView(false)}>\r\n                        Save\r\n                      </PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <SecondaryButton onClick={() => setBtnView(false)}>\r\n                        Cancel\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CModalBody>\r\n            </CModal>\r\n          </BlurBackground>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrderForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport Badge from \"../../../../../../Badge/Badge\";\r\n\r\nconst DetailsTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"detailsTable\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.rx}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.frequency[0]}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.qty}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {i === 0 && (\r\n                <CTableDataCell\r\n                  style={{ height: \"10px\" }}\r\n                  rowSpan={rowData.length}\r\n                >\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.TickCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.PlusCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                        style={{transform:'rotate(45deg)'}}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsTable;\r\n","import { CCol, CFormCheck, CFormSelect, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\n\r\nconst MedicationCompleted = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState(\r\n    defaultValues.medicines\r\n      ? defaultValues.medicines\r\n      : [\r\n          {\r\n            id: 1,\r\n            type: \"\",\r\n            name: \"\",\r\n            strength: \"\",\r\n            strengthMeasurement: \"\",\r\n            days: \"\",\r\n            totalQty: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            instruction: \"\",\r\n            reason: \"\",\r\n            status: \"\",\r\n            m: 0,\r\n            a: 0,\r\n            e: 0,\r\n            n: 0,\r\n            food: \"bf\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, value, fieldName) => {\r\n    // Handle date values differently\r\n    const processedValue =\r\n      fieldName === \"startDate\" || fieldName === \"endDate\"\r\n        ? value\r\n          ? value.toISOString()\r\n          : \"\" // Convert date to ISO string\r\n        : value; // For non-date fields, just use the value directly\r\n\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [fieldName]: processedValue };\r\n      }\r\n      return medicine;\r\n    });\r\n\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  console.log(\"first\", medicines);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">View Medicine</span>\r\n          </CCol>\r\n\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine, index) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\" key={index}>\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <input\r\n                          name=\"type\"\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"name\"\r\n                          defaultValue={medicine?.name}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Route of administration\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strengthMeasurement\"\r\n                          defaultValue={medicine?.strengthMeasurement}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"days\"\r\n                          defaultValue={medicine?.days}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"totalQty\"\r\n                          defaultValue={medicine?.totalQty}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"startDate\"\r\n                          defaultValue={medicine?.startDate}\r\n                          onChange={(e) => handleMedicineInputChange(medicine?.id, e.target.value, e.target.name)}\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                            name=\"startDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.startDate\r\n                                ? new Date(medicine?.startDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"startDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"endDate\"\r\n                          defaultValue={medicine?.endDate}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                            name=\"endDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.endDate\r\n                                ? new Date(medicine?.endDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"endDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"m\"\r\n                          defaultValue={medicine?.m}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"a\"\r\n                          defaultValue={medicine?.a}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"e\"\r\n                          defaultValue={medicine?.e}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"n\"\r\n                          defaultValue={medicine?.n}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          key={index}\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"bf\"\r\n                          disabled={true}\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"bf\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"af\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                          disabled={true}\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"af\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"instruction\"\r\n                          defaultValue={medicine?.instruction}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"reason\"\r\n                          defaultValue={medicine?.reason}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              {defaultValues?.medicines?.length >= 1 ? (\r\n                defaultValues?.lab_status === \"Prescribed\" && (\r\n                  <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => handleRemoveMedicine(medicine.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                )\r\n              ) : (\r\n                <CCol lg={1}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton\r\n                      onClick={() => handleRemoveMedicine(medicine.id)}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteDel} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              )}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          defaultValues?.lab_status === \"Prescribed\" && (\r\n            <>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton onClick={handleAddMedicine}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteAdd} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div className=\"vertical-line\"></div>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddMedicine}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? null : (\r\n          <>\r\n            <CRow>\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"250px\" }}>\r\n                {/* <PrimaryButton>SEND TO PHARMACY</PrimaryButton> */}\r\n                <DropdownButton />\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationCompleted;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicationOrderForm from \"./MedicationOrderForm\";\r\nimport MedicationOrderTable from \"../../../../../../Tables/MedicationOrderTable\";\r\nimport DetailsTable from \"./DetailsTable\";\r\nimport MedicationCompleted from \"./MedicationCompleted\";\r\n\r\nconst MedicationOrder = () => {\r\n  const detailsData = [\r\n    { id: 1, label: \"\" },\r\n    { id: 2, label: \"RX\" },\r\n    { id: 3, label: \"FREQUENCY\" },\r\n    { id: 4, label: \"DURATION\" },\r\n    { id: 5, label: \"QTY/TAKEN\" },\r\n    { id: 6, label: \"ACTIONS​\" },\r\n  ];\r\n\r\n  const detailsValue = [\r\n    {\r\n      id: 1,\r\n      name: \"Prescribed\",\r\n      rx: \"Medicine 1\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Alternative\",\r\n      rx: \"Medicine 2\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n  ];\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"MEDICATION DATE\" },\r\n    { id: 3, label: \"MEDICATION NAME\" },\r\n    { id: 4, label: \"Strength & Dosage\" },\r\n    { id: 5, label: \"M | A | E | N\" },\r\n    { id: 6, label: \"BF/AF\" },\r\n    { id: 7, label: \"Pharmacy & STATUS\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Received\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine A\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine C\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Waiting For Approval\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine D\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine A\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine AB\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine J\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1,\r\n          n: 1,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [completedView, setCompletedView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (type === \"completed\") {\r\n      setCompletedView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={8} className=\"\">\r\n            <DateSelector />\r\n          </CCol>\r\n          <CCol\r\n            lg={4}\r\n            className=\"d-flex justify-content-end align-items-center gap-2\"\r\n          >\r\n            <div>\r\n              <PrimaryButton onClick={() => addFormPage()}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.Add} alt=\"add\" />\r\n                  <span className=\"fs-16 fw-600\">Add</span>\r\n                </div>\r\n              </PrimaryButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"mb-2\">\r\n          <CRow>\r\n            <MedicationOrderTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n                totalItems={rowData?.length}\r\n                itemsPerPage={itemsPerPage}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </>\r\n      {addFormView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={addFormView}\r\n            onClose={() => setAddFormView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"xl\"\r\n          >\r\n            <CModalBody className=\"p-0\">\r\n              <div\r\n                className=\"close-modal\"\r\n                onClick={() => {\r\n                  setAddFormView(false);\r\n                }}\r\n              >\r\n                <img\r\n                  src={Assets.CloseBtn}\r\n                  alt=\"close-btn\"\r\n                  style={{ width: \"100%\" }}\r\n                />{\" \"}\r\n              </div>\r\n              <MedicationOrderForm\r\n                back={() => {\r\n                  setAddFormView(false);\r\n                  setSelectedData({});\r\n                }}\r\n                defaultValues={selectedData}\r\n              />\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {completedView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={completedView}\r\n            onClose={() => setCompletedView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"xl\"\r\n          >\r\n            <CModalBody className=\"p-0\">\r\n              <div\r\n                className=\"close-modal\"\r\n                onClick={() => {\r\n                  setCompletedView(false);\r\n                }}\r\n              >\r\n                <img\r\n                  src={Assets.CloseBtn}\r\n                  alt=\"close-btn\"\r\n                  style={{ width: \"100%\" }}\r\n                />{\" \"}\r\n              </div>\r\n              <MedicationCompleted\r\n                back={() => {\r\n                  setCompletedView(false);\r\n                  setSelectedData({});\r\n                }}\r\n                defaultValues={selectedData}\r\n              />\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalBody className=\"p-0\">\r\n              <div className=\"close-modal\" onClick={() => setDetailView(false)}>\r\n                <img\r\n                  src={Assets.CloseBtn}\r\n                  alt=\"close-btn\"\r\n                  style={{ width: \"100%\" }}\r\n                />{\" \"}\r\n              </div>\r\n              <DetailsTable\r\n                rowData={detailsValue}\r\n                columns={detailsData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrder;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport LabOrder from \"./Lab Order/LabOrder\";\r\nimport ImagingOrder from \"./Imaging Order/ImagingOrder\";\r\nimport MedicationOrder from \"./Medication Order/MedicationOrder\";\r\n\r\nconst Orders = ({ onClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Medication Order\" },\r\n    { id: 2, title: \"Lab Order\" },\r\n    { id: 3, title: \"Imaging Order\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  console.log(\"first\", currentTab);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">Orders</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Orders\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={0}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <MedicationOrder />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <LabOrder />\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n          <>\r\n            <ImagingOrder />\r\n          </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst ProcedureForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [disableText, setDisableText] = useState(false);\r\n  const gravidaoptions = [\"93000\", \"93009\", \"93001\", \"93002\", \"93003\"];\r\n  const findgravidaIndex =\r\n    defaultValues?.id &&\r\n    gravidaoptions?.indexOf(defaultValues?.id);\r\n  const getSelectedGravida = (data) => {\r\n    console.log(data);\r\n    setDisableText(true);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                CPT Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.treatment}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Description *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                // defaultValue={defaultValues?.remark}\r\n                disabled\r\n                defaultValue={defaultValues?.description}\r\n                value={\r\n                  disableText\r\n                    ? \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\"\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ProcedurerTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.no}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.description}</CTableDataCell>\r\n              {/* <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.visibleEye}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"details\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedurerTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport ProcedureForm from \"./ProcedureForm\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport DiagnosisTable from \"../../../../../../Tables/DiagnosisTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ProcedurerTable from \"../../../../../../Tables/ProcedurerTable\";\r\n\r\nconst ProcedureTab = ({ onClose }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"CPT Code\" },\r\n    { id: 4, label: \"DESCRIPTION\" },\r\n    { id: 5, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      no: 1,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 2,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 3,\r\n      date: \"06-07-2024\",\r\n      id: \"93008\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 4,\r\n      date: \"06-07-2024\",\r\n      id: \"93006\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 5,\r\n      date: \"06-07-2024\",\r\n      id: \"93005\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 6,\r\n      date: \"06-07-2024\",\r\n      id: \"93002\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 7,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 8,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 9,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 10,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description: \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    // {\r\n    //   no: 11,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12321\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n    // {\r\n    //   no: 12,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12322\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n    // {\r\n    //   no: 13,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12323\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              \r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <ProcedurerTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ProcedureForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport ProcedureTab from \"./ProcedureTab/ProcedureTab\";\r\n\r\nconst Cpt = ({ onClose }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Procedure (CPT Code)\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Procedure (CPT Code)\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol>\r\n          <ProcedureTab />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cpt;\r\n","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../Badge/Badge\";\r\n  import { Assets } from \"../../assets/Assets\";\r\n\r\nconst TherapiesTable = ({ columns, rowData, getselectedData }) => {\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n      <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date_time}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{dt?.therapy_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{dt?.therapist_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{dt?.duration}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TherapiesTable","import { CCol, CFormCheck, CFormSelect, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst TherapiesForm = ({ back, defaultValues }) => {\r\n\r\n    const options = [\"Physical\", \"Occupational\", \"Speech\",\"Psychotherapy\",\"Others\"];\r\n\r\n    const getSelectedValue = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    const options1 = [\"one\", \"Two\", \"Three\",];\r\n\r\n    const getSelectedValue1 = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div class=\"position-relative\">\r\n                            <label for=\"validationTooltip01\" class=\"form-label\">\r\n                                Type *\r\n                            </label>\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{\r\n                                    border: \"1px solid #17171D33\",\r\n                                    borderRadius: \"5px\",\r\n                                }}\r\n                            >\r\n                                <Dropdown\r\n                                    options={options}\r\n                                    getSelectedValue={getSelectedValue}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div class=\"position-relative\">\r\n                            <label for=\"validationTooltip01\" class=\"form-label\">\r\n                                Therapy Name *\r\n                            </label>\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{\r\n                                    border: \"1px solid #17171D33\",\r\n                                    borderRadius: \"5px\",\r\n                                }}\r\n                            >\r\n                                <Dropdown\r\n                                    options={options1}\r\n                                    getSelectedValue={getSelectedValue1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                        <div class=\"position-relative\">\r\n                            <label for=\"validationTooltip01\" class=\"form-label\">\r\n                                Therapy Name *\r\n                            </label>\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{\r\n                                    border: \"1px solid #17171D33\",\r\n                                    borderRadius: \"5px\",\r\n                                }}\r\n                            >\r\n                                <Dropdown\r\n                                    options={options1}\r\n                                    getSelectedValue={getSelectedValue1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                                Duration (in days)\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"00\"\r\n                                defaultValue={defaultValues?.duration}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                               Notes\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                defaultValue={defaultValues?.notes}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n\r\n\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TherapiesForm","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst DateSearch = () => {\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n  \r\n    // Get today's date\r\n    const today = new Date();\r\n\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-2\">\r\n      <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n        <span className=\"fs-18 fw-400 label-color\">Start Date *</span>\r\n        <div style={{ width: \"100%\" }}>\r\n          <DatePicker\r\n            showIcon\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n            className=\"date-range-selector\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n        <span className=\"fs-18 fw-400 label-color\">End Date *</span>\r\n        <div style={{ width: \"100%\" }}>\r\n          <DatePicker\r\n            showIcon\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            className=\"date-range-selector\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol\r\n       md={3}\r\n        className=\"d-flex flex-column gap-1 justify-content-end\"\r\n      >\r\n      <div className=\"search-bar\"  style={{ width: \"100%\",borderRadius: \"10px\" }}>\r\n            <input type=\"text\" placeholder=\"Search\" style={{ padding: \"7px\" }} />\r\n          </div>\r\n      </CCol>\r\n      <CCol\r\n        md={3}\r\n        className=\"d-flex flex-column gap-1 justify-content-end\"\r\n        style={{ width: \"60px\" }}\r\n      >\r\n        <PrimaryButton>\r\n          <div className=\"d-flex align-items-center gap-2\">\r\n            <img src={Assets.search} alt=\"close\" />\r\n          </div>\r\n        </PrimaryButton>\r\n      </CCol>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default DateSearch","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport TherapiesTable from \"../../../../../../Tables/TherapiesTable\";\r\nimport TherapiesForm from \"./TherapiesForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst TherapiesTab = () => {\r\n\r\n    const columnData = [\r\n        { id: 1, label: \"No.\" },\r\n        { id: 2, label: \"Date & Time\" },\r\n        { id: 3, label: \"Type\" },\r\n        { id: 4, label: \"Therapy Name\" },\r\n        { id: 5, label: \"Therapist Name\" },\r\n        { id: 6, label: \"Duration (in days)\" },\r\n        { id: 7, label: \"ACTIONS\" },\r\n      ];\r\n      const rowData = [\r\n        {\r\n            id: 1,\r\n            date_time: \"06-07-2024\",\r\n            type: \"Physical\",\r\n            therapy_name: \"Lorem ipsum\",\r\n            therapist_name: \"Lorem ipsum\",\r\n            duration: \"5\",\r\n          },\r\n        {\r\n          id: 2,\r\n          date_time: \"06-07-2024\",\r\n          type:\"Occupational\",\r\n          therapy_name: \"Lorem ipsum\",\r\n          therapist_name: \"Lorem ipsum\",\r\n          duration: \"5\",\r\n         \r\n        },\r\n      ];\r\n      const [currentPage, setCurrentPage] = useState(1);\r\n      const [addFormView, setAddFormView] = useState(false);\r\n      const [deleteView, setDeleteView] = useState(false);\r\n    \r\n      const [selectedData, setSelectedData] = useState({});\r\n    \r\n      const itemsPerPage = 5; // Number of items to display per page\r\n    \r\n      // Function to handle page change\r\n      const onPageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n      };\r\n    \r\n      // Function to get items for the current page\r\n      const getCurrentPageItems = () => {\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return rowData?.slice(startIndex, endIndex);\r\n      };\r\n    \r\n      const addFormPage = () => {\r\n        setAddFormView(true);\r\n      };\r\n    \r\n      const getselectedData = (data, type) => {\r\n        console.log(type, \"first\", data);\r\n        setSelectedData(data);\r\n        if (type === \"edit\") {\r\n          addFormPage();\r\n        }\r\n        if (type === \"delete\") {\r\n          setDeleteView(true);\r\n        }\r\n      };\r\n\r\n      \r\n  return (\r\n    <>\r\n    {!addFormView && (\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={8} className=\"\">\r\n            <DateSearch />\r\n          </CCol>\r\n          <CCol\r\n            lg={4}\r\n            className=\"d-flex justify-content-end align-items-center gap-2\"\r\n          >\r\n            <div>\r\n              <PrimaryButton onClick={() => addFormPage()}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.Add} alt=\"add\" />\r\n                  <span className=\"fs-16 fw-600\">Add</span>\r\n                </div>\r\n              </PrimaryButton>\r\n            </div>\r\n            \r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"mb-2\">\r\n          <CRow>\r\n            <TherapiesTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n                totalItems={rowData?.length}\r\n                itemsPerPage={itemsPerPage}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </>\r\n    )}\r\n    {addFormView && (\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <TherapiesForm\r\n            back={() => {\r\n              setAddFormView(false);\r\n              setSelectedData({});\r\n            }}\r\n            defaultValues={selectedData}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    )}\r\n\r\n    {deleteView && (\r\n      <BlurBackground>\r\n        <CModal\r\n          alignment=\"center\"\r\n          visible={deleteView}\r\n          onClose={() => setDeleteView(false)}\r\n          aria-labelledby=\"VerticallyCenteredExample\"\r\n        >\r\n          <CModalBody className=\"p-3\">\r\n            <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n              <h5>Are you sure want to delete ?</h5>\r\n              <div className=\"d-flex gap-2 mt-2\">\r\n                <div style={{ width: \"80px\" }}>\r\n                  <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                    Yes\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"80px\" }}>\r\n                  <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                    No\r\n                  </SecondaryButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </BlurBackground>\r\n    )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default TherapiesTab","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport TherapiesTab from \"./TherapiesTab/TherapiesTab\";\r\n\r\nconst Therapies = ({ onClose }) => {\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-0\">\r\n      <CCol md={4} className=\"mb-2\">\r\n        <div className=\"d-flex gap-2\">\r\n          <img\r\n            alt=\"BackBtn\"\r\n            src={Assets.BackBtn}\r\n            style={{ width: \"35px\" }}\r\n            onClick={onClose}\r\n            className=\"cursor\"\r\n          />\r\n          <span className=\"Obj-name d-flex align-items-center\">\r\n          Therapies\r\n          </span>\r\n        </div>\r\n      </CCol>\r\n      <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n        <div className=\"d-flex mt-2\">\r\n          <Breadcrumb\r\n            paths={[\r\n              { label: \"Home\", to: \"/patients\" },\r\n              { label: \"Patient List\", to: \"/patients\" },\r\n              { label: \"Medical Profile\", to: \"/patients/history\" },\r\n              { label: \"Therapies\", to: \"/patients/history\" },\r\n            ]}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol>\r\n        <TherapiesTab />\r\n      </CCol>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Therapies","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Orders from \"./Orders/Orders\";\r\nimport Cpt from \"./Procedure CPT/Cpt\";\r\nimport Therapies from \"./Therapies/Therapies\";\r\n\r\nconst Plan = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Orders\", image: Assets.Orders },\r\n    { id: 2, name: \"Therapies\", image: Assets.Therapies },\r\n    { id: 3, name: \"Vaccinations\", image: Assets.Vaccine },\r\n    { id: 4, name: \"Procedure (CPT Code)\", image: Assets.CPT },\r\n    { id: 5, name: \"Patient Education\", image: Assets.PatEdu },\r\n  ];\r\n  const [ordersView, setOrdersView] = useState(false);\r\n  const [cptView, setCptView] = useState(false);\r\n  const [therapiesView, setTherapiesView] = useState(false);\r\n\r\n  const getSelectedData = (data) => {\r\n    // setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setOrdersView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setTherapiesView(true);\r\n    }\r\n    if (data?.id === 4) {\r\n      setCptView(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {!ordersView && !cptView && !therapiesView ? (\r\n        <CRow>\r\n          {cardData.map((dt, i) => (\r\n            <CCol md={4} xl={3} className=\"mb-3\">\r\n              <Card data={dt} getSelectedData={getSelectedData} />\r\n            </CCol>\r\n          ))}\r\n        </CRow>\r\n      ) : ordersView ? (\r\n        <Orders onClose={() => setOrdersView(false)} />\r\n      )  : therapiesView ? (\r\n        <Therapies onClose={() => setTherapiesView(false)} />\r\n     ) : cptView ? (\r\n        <Cpt onClose={() => setCptView(false)} />\r\n      ) : null}\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plan;\r\n","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../Badge/Badge\";\r\n  import { Assets } from \"../../../assets/Assets\";\r\n\r\nconst AllergiesTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n       <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100 flex-column\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.onset_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.allergy}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.reaction}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.severity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.status}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllergiesTable","import { CCol, CFormCheck, CFormSelect, CRow,CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\n\r\n\r\nconst AllergiesForm = ({ back, defaultValues }) => {\r\n\r\n    const [date, setDate] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n      const parseDateString = (dateString) => {\r\n        const parts = dateString?.split(\" \");\r\n        const datePart = parts[0];\r\n        const timePart = parts[1];\r\n        const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n        const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n        const date = new Date(year, month - 1, day, hours, minutes);\r\n        return date;\r\n      };\r\n  \r\n      // Example default date string\r\n      const defaultDateString = defaultValues?.date;\r\n  \r\n      // Parse default date string to Date object\r\n      const defaultDate = defaultValues?.date\r\n        ? parseDateString(defaultDateString)\r\n        : new Date();\r\n  \r\n      // Set default date in state\r\n      setDate(defaultDate);\r\n    }, [defaultValues]);\r\n    \r\n      const options = [\"One\", \"Two\",\"Three\",];\r\n  \r\n      const getSelectedValue = (data) => {\r\n        console.log(data);\r\n      };\r\n\r\n      const options1 = [\"Mild\", \"Moderate\",\"Severe\",];\r\n      \r\n      const getSelectedValue1 = (data) => {\r\n        console.log(data);\r\n      };\r\n\r\n      const options2 = [\"Active\", \"In Active\"];\r\n      \r\n      const getSelectedValue2 = (data) => {\r\n        console.log(data);\r\n      };\r\n\r\n  return (\r\n     <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Onset Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Allergy Name *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Category *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"\"\r\n              defaultValue={defaultValues?.allergy}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n    <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Reaction *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Other Reactions\r\n            </label>\r\n            <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.reaction}\r\n              />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Severity *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options1}\r\n                getSelectedValue={getSelectedValue1}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n    <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Provider *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Notes\r\n            </label>\r\n            <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.severity}\r\n              />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Status *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options2}\r\n                getSelectedValue={getSelectedValue2}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n\r\n   \r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default AllergiesForm","import {\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFormCheck,\r\n    CModal,\r\n    CModalBody,\r\n    CRow,\r\n  } from \"@coreui/react\";\r\n  import React, { useState } from \"react\";\r\n  import Pagination from \"../../../../../../Pagination/Pagination\";\r\n  import PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\n  import { Assets } from \"../../../../../../../assets/Assets\";\r\n  import DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\n  import BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\n  import SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n  import MedicationForm from \"../Medication/MedicationForm\";\r\n  import AllergiesTable from \"../../../../../../Tables/Subjective/AllergiesTable\";\r\nimport AllergiesForm from \"./AllergiesForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Allergies = () => {\r\n\r\n    const columnData = [\r\n        { id: 1, label: \"No.\" },\r\n        { id: 2, label: \"Onset Date\" },\r\n        { id: 6, label: \"Allergy\" },\r\n        { id: 7, label: \"Reaction\" },\r\n        { id: 8, label: \"Severity\" },\r\n        { id: 9, label: \" Status\" },\r\n        { id: 11, label: \"ACTIONS\" },\r\n      ];\r\n      const rowData = [\r\n        {\r\n          id: 1,\r\n          onset_date: \"06-07-2024\",\r\n          allergy: \"Knee (category 1)\",\r\n          reaction: \"-\",\r\n          severity: \"-\",\r\n          status: \"-\",\r\n        },\r\n        {\r\n          id: 2,\r\n          onset_date: \"06-07-2024\",\r\n          allergy: \"Knee (category 1)\",\r\n          reaction: \"-\",\r\n          severity: \"-\",\r\n          status: \"-\",\r\n        \r\n        },\r\n       \r\n      ];\r\n      const [addFormView, setAddFormView] = useState(false);\r\n      const [detailView, setDetailView] = useState(false);\r\n    \r\n      const [currentPage, setCurrentPage] = useState(1);\r\n      const [selectedData, setSelectedData] = useState({});\r\n    \r\n      const itemsPerPage = 5; // Number of items to display per page\r\n    \r\n      // Function to handle page change\r\n      const onPageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n      };\r\n    \r\n      // Function to get items for the current page\r\n      const getCurrentPageItems = () => {\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return rowData?.slice(startIndex, endIndex);\r\n      };\r\n    \r\n      const addFormPage = () => {\r\n        setAddFormView(true);\r\n      };\r\n    \r\n      const detailPage = () => {\r\n        setDetailView(true);\r\n      };\r\n    \r\n      const getselectedData = (data, type) => {\r\n        console.log(type, \"first\", data);\r\n        setSelectedData(data);\r\n        if (type === \"edit\") {\r\n          addFormPage();\r\n        }\r\n        if (type === \"delete\") {\r\n          detailPage();\r\n        }\r\n      };\r\n    \r\n     \r\n  return (\r\n      <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={10} className=\"\">\r\n              <DateSearch />\r\n            </CCol>\r\n            <CCol\r\n              lg={2}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <AllergiesTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <AllergiesForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Allergies","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport SignsSymptoms from \"./Signs And Symptoms/SignsSymptoms\";\r\nimport Medication from \"./Medication/Medication\";\r\nimport Allergies from \"./Allergies/Allergies\";\r\n\r\nconst PresentIllness = ({ OnClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Symptoms\" },\r\n    { id: 2, title: \"Medication\" },\r\n    { id: 3, title: \"Allergies\" },\r\n  ];\r\n  const PatientSubMenu3 = localStorage.getItem(\"PatientSubMenu-3\");\r\n  const ParsedPatientSubMenu = PatientSubMenu3\r\n    ? JSON.parse(PatientSubMenu3)\r\n    : 1;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  console.log(\"first\", currentTab);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={OnClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              History of Present Illness (HPI)\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                {\r\n                  label: \"History of Present Illness (HPI)\",\r\n                  to: \"/patients/history\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={currentTab - 1}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <SignsSymptoms />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <Medication />\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n        <> \r\n        <Allergies />\r\n        </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PresentIllness;\r\n","import { CCol, CFormCheck, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst ObstericHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  const [fert_treatment, setFert_treatment] = useState(\r\n    defaultValues?.fert_treatment || \"No\"\r\n  );\r\n  const [para, setPara] = useState(\"\");\r\n  const [lacating, setLacating] = useState(\"\");\r\n  const [gravida, setGravida] = useState(\"\");\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedTrimster = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getSelectedGravida = (data) => {\r\n    setGravida(data);\r\n  };\r\n  const getSelectedLacating = (data) => {\r\n    setLacating(data);\r\n  };\r\n  const getSelectedPara = (data) => {\r\n    setPara(data);\r\n  };\r\n  const getSelectedFertValue = (data) => {\r\n    setFert_treatment(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.lmp_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.lmp_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.ed_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.ed_date\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n  }, [defaultValues]);\r\n  const options = [\"First\", \"Second\", \"Third\"];\r\n  const findIndex = defaultValues?.trimster\r\n    ? options?.indexOf(defaultValues?.trimster)\r\n    : 0;\r\n\r\n  const lacatingoptions = [\"Yes\", \"No\"];\r\n  const findlacatingIndex = defaultValues?.lacating\r\n    ? lacatingoptions?.indexOf(defaultValues?.lacating)\r\n    : 1;\r\n  const findtreatmentIndex = defaultValues?.fert_treatment\r\n    ? lacatingoptions?.indexOf(defaultValues?.fert_treatment)\r\n    : 1;\r\n  const gravidaoptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n  const findgravidaIndex = defaultValues?.gravida\r\n    ? gravidaoptions?.indexOf(defaultValues?.gravida)\r\n    : 0;\r\n  const findparaIndex = defaultValues?.para\r\n    ? gravidaoptions?.indexOf(defaultValues?.para)\r\n    : 0;\r\n  const findingIndex5 = defaultValues?.lacating\r\n    ? lacatingoptions?.indexOf(defaultValues?.lacating)\r\n    : 1;\r\n  const getSelectedValue5 = (data) => {\r\n    console.log(data);\r\n  };\r\n  const [bad, setBad] = useState(\"No\");\r\n  const findingIndex6 = defaultValues?.bad\r\n    ? lacatingoptions?.indexOf(defaultValues?.bad)\r\n    : 1;\r\n  const getSelectedValue6 = (data) => {\r\n    setBad(data);\r\n  };\r\n\r\n  const [preg, setPreg] = useState(defaultValues?.pregnant || \"No\");\r\n  const [fertTreat, setFertTreat] = useState(\r\n    defaultValues?.fert_treatment || \"No\"\r\n  );\r\n  const [lact, setLact] = useState(defaultValues?.lacating || \"No\");\r\n  const [cesarean, setCesarean] = useState(defaultValues?.cesarean || \"No\");\r\n  const [obstetric, setObsteric] = useState(defaultValues?.obstetric || \"No\");\r\n\r\n  const handleChangeObste = (e) => {\r\n    setObsteric(e.target.value);\r\n  };\r\n\r\n  const handleChangeCesa = (e) => {\r\n    setCesarean(e.target.value);\r\n  };\r\n  const handleChangeLact = (e) => {\r\n    setLact(e.target.value);\r\n  };\r\n  const handleChangeFert = (e) => {\r\n    setFertTreat(e.target.value);\r\n  };\r\n  const findingIndex7 = defaultValues?.bad\r\n    ? lacatingoptions?.indexOf(defaultValues?.bad)\r\n    : 1;\r\n  const getSelectedValue7 = (data) => {\r\n    setPreg(data);\r\n  };\r\n  const handleChange = (e) => {\r\n    setPreg(e.target.value);\r\n  };\r\n  const [gravidaValue, setGravidaValue] = useState(\r\n    defaultValues?.gravida || \"\"\r\n  );\r\n  const [paraValue, setParaValue] = useState(defaultValues?.para || \"\");\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newstrValue = input.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (name === \"gravida\") {\r\n      setGravidaValue(newstrValue);\r\n    }\r\n    if (name === \"para\") {\r\n      setParaValue(newstrValue);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pregnant *\r\n              </label>\r\n\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"exampleRadios\"\r\n                id=\"exampleRadios1\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={preg === \"Yes\"}\r\n                onChange={handleChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={preg === \"No\"}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {preg === \"Yes\" && (\r\n          <>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  LMP Date *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date}\r\n                    onChange={(date) => setDate(date)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  ED Date\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date2}\r\n                    onChange={(date) => setDate2(date)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Trimester *\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.trimster}\r\n              /> */}\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={options}\r\n                      defaultValue={options[findIndex]}\r\n                      getSelectedValue={getSelectedTrimster}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Gravida *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    name=\"gravida\"\r\n                    placeholder=\"00\"\r\n                    defaultValue={defaultValues?.gravida}\r\n                    value={gravidaValue}\r\n                    onChange={numCheck}\r\n                  />\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedGravida}\r\n                      options={gravidaoptions}\r\n                      defaultValue={gravidaoptions[findgravidaIndex]}\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Para *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"00\"\r\n                    defaultValue={defaultValues?.para}\r\n                    name=\"para\"\r\n                    value={paraValue}\r\n                    onChange={numCheck}\r\n                  />\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedPara}\r\n                      options={gravidaoptions}\r\n                      defaultValue={gravidaoptions[findparaIndex]}\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Fertility Treament\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.fert_treatment}\r\n              /> */}\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={lacatingoptions}\r\n                      defaultValue={lacatingoptions[findtreatmentIndex]}\r\n                      getSelectedValue={getSelectedFertValue}\r\n                    />\r\n                  </div> */}\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"Yes\"\r\n                    value=\"Yes\"\r\n                    checked={fertTreat === \"Yes\"}\r\n                    onChange={handleChangeFert}\r\n                  />\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"No\"\r\n                    value=\"No\"\r\n                    checked={fertTreat === \"No\"}\r\n                    onChange={handleChangeFert}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            {fertTreat === \"Yes\" && (\r\n              <CCol lg={4} className=\"mb-3\">\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Treament Description*\r\n                    </label>\r\n                    <CFormTextarea\r\n                      type=\"text\"\r\n                      class=\"form-control  pad-10\"\r\n                      id=\"validationTooltip01\"\r\n                      placeholder=\"Enter\"\r\n                      // defaultValue={defaultValues?.fert_treatment}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            )}\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Lacatating\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.lacating}\r\n              /> */}\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedLacating}\r\n                      options={lacatingoptions}\r\n                      defaultValue={lacatingoptions[findlacatingIndex]}\r\n                    />\r\n                  </div> */}\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"Yes\"\r\n                    value=\"Yes\"\r\n                    checked={lact === \"Yes\"}\r\n                    onChange={handleChangeLact}\r\n                  />\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"No\"\r\n                    value=\"No\"\r\n                    checked={lact === \"No\"}\r\n                    onChange={handleChangeLact}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n      </CRow>\r\n      <CRow>\r\n        <CCol lg={6} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Previous Cesarean Sections\r\n              </label>\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={lacatingoptions}\r\n                  defaultValue={lacatingoptions[findingIndex5]}\r\n                  getSelectedValue={getSelectedValue5}\r\n                />\r\n              </div> */}\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={cesarean === \"Yes\"}\r\n                onChange={handleChangeCesa}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={cesarean === \"No\"}\r\n                onChange={handleChangeCesa}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol lg={6} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Bad Obstetric History\r\n              </label>\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={lacatingoptions}\r\n                  defaultValue={lacatingoptions[findingIndex6]}\r\n                  getSelectedValue={getSelectedValue6}\r\n                />\r\n              </div> */}\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={obstetric === \"Yes\"}\r\n                onChange={handleChangeObste}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={obstetric === \"No\"}\r\n                onChange={handleChangeObste}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {obstetric === \"Yes\" && (\r\n          <CCol lg={6} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Bad Obstetric History Description*\r\n                </label>\r\n                <CFormTextarea\r\n                  type=\"text\"\r\n                  class=\"form-control  pad-10\"\r\n                  id=\"validationTooltip01\"\r\n                  placeholder=\"Enter\"\r\n                  // defaultValue={defaultValues?.fert_treatment}\r\n                />\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"130px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObstericHistoryForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst ObstetricHistoryTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.lmp_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.ed_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.trimster}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.gravida}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.para}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.boh}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lacating}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObstetricHistoryTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst GynaecHistoryTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <div className=\"table-container\">\r\n      <CTable className=\"lab-responsive-table-screening\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i} className=\"text-align-center\">\r\n                {data?.label}\r\n              </CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.age}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* \r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.cycle_in_days}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.flow_duration}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.flow_type}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.bleeding}\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.irregularity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.dysmenorrhea}</span>\r\n                </div>\r\n              </CTableDataCell>{\" \"}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lmp}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.menopause}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GynaecHistoryTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst ScreeningHistory = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table-screening\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date_of_last_pap}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.history_of_abnormal}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date_of_last_mamogram}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  {dt?.history_of_mamogram}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  {dt?.date_of_last_breast}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center h-100\">\r\n                  {dt?.history_of_breast}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScreeningHistory;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst MensturalHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.lmp;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.lmp\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.ed_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.ed_date\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n  }, [defaultValues]);\r\n\r\n  const options = [\"Yes\", \"No\"];\r\n  const flow_duration = [\"2-7 days\", \"< 2 Days\", \"> 7 Days\"];\r\n  const flow_type = [\"Less\", \"Moderate\", \"Severe\"];\r\n\r\n  const findIndex = defaultValues?.trimster\r\n    ? options?.indexOf(defaultValues?.trimster)\r\n    : 1;\r\n\r\n  const [menopause, setMenopause] = useState(defaultValues.menopause || \"No\");\r\n  const getSelected = (data) => {\r\n    console.log(data);\r\n    setMenopause(data);\r\n  };\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedBleeding = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedCycle = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedDysmen = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const [value, setValue] = useState(\r\n    defaultValues?.age ? defaultValues?.age : \"\"\r\n  );\r\n  const [value1, setValue1] = useState(\r\n    defaultValues?.age ? defaultValues?.age : \"\"\r\n  );\r\n  const [value2, setValue2] = useState(\r\n    defaultValues?.cycle_per_year ? defaultValues?.cycle_per_year : \"\"\r\n  );\r\n  const [value3, setValue3] = useState(\r\n    defaultValues?.cycle_in_days ? defaultValues?.cycle_in_days : \"\"\r\n  );\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const input = e.target.value;\r\n\r\n    // Remove non-digit characters and limit to two digits\r\n    const newValue = input.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (input.length > 2 && newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      if (e.target.name === \"MenopauseAge\") {\r\n        setValue(newValue);\r\n      } else if (e.target.name === \"MenarcheAge\") {\r\n        setValue1(newValue);\r\n      } else if (e.target.name === \"cycle_per_year\") {\r\n        setValue2(newValue);\r\n      } else if (e.target.name === \"cycle_in_days\") {\r\n        setValue3(newValue);\r\n      }\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const paste = e.clipboardData.getData(\"text\");\r\n    const newValue = paste.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      if (e.target.name === \"MenopauseAge\") {\r\n        setValue(newValue);\r\n      } else if (e.target.name === \"MenarcheAge\") {\r\n        setValue1(newValue);\r\n      } else if (e.target.name === \"cycle_per_year\") {\r\n        setValue2(newValue);\r\n      } else if (e.target.name === \"cycle_in_days\") {\r\n        setValue3(newValue);\r\n      }\r\n      setError(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Menarche Age *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={}\r\n                name=\"MenarcheAge\"\r\n                value={value1}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n              />\r\n            </div>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycles per Year {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={defaultValues?.cycle_per_year}\r\n                name=\"cycle_per_year\"\r\n                value={value2}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycle Length in days {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={defaultValues?.cycle_in_days}\r\n                name=\"cycle_in_days\"\r\n                value={value3}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Flow Duration {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.flow_duration}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={flow_duration}\r\n                  defaultValue={flow_duration[0]}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Flow Type {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.flow_type}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={flow_type}\r\n                  defaultValue={flow_type[1]}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                InterMenstrual Bleeding \r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.bleeding}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[findIndex]}\r\n                  getSelectedValue={getSelectedBleeding}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycle Irregularity \r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.irregularity}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[findIndex]}\r\n                  getSelectedValue={getSelectedCycle}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Dysmenorrhea \r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.dysmenorrhea}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[findIndex]}\r\n                  getSelectedValue={getSelectedDysmen}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              LMP Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Menopause \r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.trimster}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[1]}\r\n                  getSelectedValue={getSelected}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {menopause === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Menopause Age \r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control  pad-10\"\r\n                  id=\"validationTooltip01\"\r\n                  placeholder=\"00\"\r\n                  // defaultValue={defaultValues?.age}\r\n                  name=\"MenopauseAge\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  onPaste={handlePaste}\r\n                />\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n      {/* <CRow className=\"mb-3\"></CRow>\r\n      <CRow className=\"mb-3\"></CRow>\r\n      <CRow className=\"mb-3\"></CRow> */}\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"130px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MensturalHistoryForm;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst ScreeningHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  const [date3, setDate3] = useState(null);\r\n  const [abnormalStatus, setAbnormalStatus] = useState(\r\n    defaultValues?.history_of_abnormal || \"No\"\r\n  );\r\n  const [mamogramStatus, setMamogramStatus] = useState(\r\n    defaultValues?.history_of_mamogram || \"No\"\r\n  );\r\n  const [breastStatus, setBreastStatus] = useState(\r\n    defaultValues?.history_of_breast || \"No\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date_of_last_pap;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date_of_last_pap\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.date_of_last_mamogram;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.date_of_last_mamogram\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString3 = defaultValues?.date_of_last_breast;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate3 = defaultValues?.date_of_last_breast\r\n      ? parseDateString(defaultDateString3)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n    setDate3(defaultDate3);\r\n  }, [defaultValues]);\r\n  const options = [\"Yes\", \"No\"];\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    setAbnormalStatus(data);\r\n  };\r\n\r\n  const findIndex = defaultValues?.history_of_abnormal\r\n    ? options?.indexOf(defaultValues?.history_of_abnormal)\r\n    : 1;\r\n\r\n  const getSelectedValue3 = (data) => {\r\n    setMamogramStatus(data);\r\n  };\r\n\r\n  const getSelectedValue4 = (data) => {\r\n    setBreastStatus(data);\r\n  };\r\n\r\n  const findIndex3 = defaultValues?.history_of_mamogram\r\n    ? options?.indexOf(defaultValues?.history_of_mamogram)\r\n    : 1;\r\n\r\n  const findIndex4 = defaultValues?.history_of_breast\r\n    ? options?.indexOf(defaultValues?.history_of_breast)\r\n    : 1;\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last pap smear \r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                History of abnormal pap smear \r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.history_of_abnormal}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[findIndex]}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {abnormalStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Abnormal pap smear details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last mamogram \r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date2}\r\n                onChange={(date) => setDate2(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                History of mamogram \r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.history_of_mamogram}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[findIndex3]}\r\n                  getSelectedValue={getSelectedValue3}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {mamogramStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Mamogram details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last breast exam \r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date3}\r\n                onChange={(date) => setDate3(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                History of breast exam \r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.history_of_breast}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[findIndex4]}\r\n                  getSelectedValue={getSelectedValue4}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {breastStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Breast exam details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"130px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScreeningHistoryForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ObstericHistoryForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\nimport MedicalTab from \"../../../MedicalTab\";\r\nimport ObstetricHistoryTable from \"../../../../../../Tables/Subjective/ObstetricHistoryTable\";\r\nimport GynaecHistoryTable from \"../../../../../../Tables/Subjective/GynaecHistoryTable\";\r\nimport ScreeningHistory from \"../../../../../../Tables/Subjective/ScreeningHistory\";\r\nimport MensturalHistoryForm from \"./MensturalHistoryForm\";\r\nimport ScreeningHistoryForm from \"./ScreeningHistoryForm\";\r\n\r\nconst OGHistory = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"LMP Date\" },\r\n    { id: 3, label: \"ED Date\" },\r\n    { id: 4, label: \"Trimester\" },\r\n    { id: 5, label: \"Gravida\" },\r\n    { id: 6, label: \"Para\" },\r\n    { id: 7, label: \"Bad Obstetric History\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 3,\r\n      para: 5,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      pregnant: \"Yes\",\r\n      cesarean: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      cesarean: \"Yes\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 3,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"No\",\r\n      lacating: \"Yes\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 4,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"No\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 5,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"No\",\r\n      lacating: \"No\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 6,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 7,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 8,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 9,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 10,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n  ];\r\n\r\n  const MensuralcolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 3, label: \"Menarche Age\" },\r\n    // { id: 3, label: \"Cycles per Year\" },\r\n    // { id: 4, label: \"Cycle Length in days\" },\r\n    // { id: 5, label: \"Flow Duration\" },\r\n    // { id: 6, label: \"Flow Type\" },\r\n    // { id: 7, label: \"InterMenstrual Bleeding\" },\r\n    { id: 3, label: \"cycle irregularity\" },\r\n    { id: 4, label: \"dysmenorrhea\" },\r\n    { id: 5, label: \"LMP\" },\r\n    { id: 2, label: \"Menopause\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const MenstrualrowData = [\r\n    {\r\n      id: 1,\r\n      age: \"18\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"20\",\r\n      cycle_in_days: \"30\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 2,\r\n      age: \"25\",\r\n      menopause: \"No\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 3,\r\n      age: \"25\",\r\n      menopause: \"No\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 4,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 5,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 6,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 7,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 8,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 9,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 10,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n  ];\r\n\r\n  const ScreeningcolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"date of last pap smear\" },\r\n    { id: 3, label: \"History of abnormal pap smear\" },\r\n    { id: 4, label: \"date of last mamogram\" },\r\n    { id: 5, label: \"History of mamogram\" },\r\n    { id: 6, label: \"date of last Breast Exam\" },\r\n    { id: 7, label: \"History of Breast Exam\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const ScreeningrowData = [\r\n    {\r\n      id: 1,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"08-06-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-07-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentMenstrualPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return MenstrualrowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentScreeningItem = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return ScreeningrowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Yes\", \"No\"];\r\n  const tabs = [\r\n    { id: 1, title: \"Obstetric History\" },\r\n    { id: 2, title: \"Gynaec History\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n  const [currentHistoryTab, setCurrentHistoryTab] = useState(1);\r\n\r\n  const GynaecTabs = [\r\n    { id: 1, title: \"Menstrual History\" },\r\n    { id: 2, title: \"Screening and Diagnostic History\" },\r\n  ];\r\n\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n    setAddFormView(false);\r\n  };\r\n\r\n  const getHistoryCurrentTab = (data) => {\r\n    setCurrentHistoryTab(data);\r\n    setAddFormView(false);\r\n  };\r\n\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedValue1 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <>\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={5} className=\"\">\r\n            <MedicalTab\r\n              tabs={tabs}\r\n              getCurrentTab={getCurrentTab}\r\n              defaultTab={0}\r\n            />\r\n          </CCol>\r\n          <CCol lg={7}>\r\n            {currentTab === 1 && (\r\n              // <CRow>\r\n              //   <CCol lg={4}>\r\n              //     <div style={{ width: \"100%\" }}>\r\n              //       <div class=\"position-relative\">\r\n              //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n              //           Pregnant\r\n              //         </label>\r\n              //         <div\r\n              //           className=\"w-100\"\r\n              //           style={{\r\n              //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n              //           }}\r\n              //         >\r\n              //           <Dropdown\r\n              //             options={options}\r\n              //             defaultValue={options[0]}\r\n              //             getSelectedValue={getSelectedValue}\r\n              //           />\r\n              //         </div>\r\n              //       </div>\r\n              //     </div>\r\n              //   </CCol>\r\n              //   <CCol lg={4}>\r\n              //     <div style={{ width: \"100%\" }}>\r\n              //       <div class=\"position-relative\">\r\n              //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n              //           Previous Cesarean Sections\r\n              //         </label>\r\n              //         <div\r\n              //           className=\"w-100\"\r\n              //           style={{\r\n              //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n              //           }}\r\n              //         >\r\n              //           <Dropdown\r\n              //             options={options}\r\n              //             defaultValue={options[1]}\r\n              //             getSelectedValue={getSelectedValue1}\r\n              //           />\r\n              //         </div>\r\n              //       </div>\r\n              //     </div>\r\n              //   </CCol>\r\n              //   <CCol lg={4}>\r\n              //     <div style={{ width: \"100%\" }}>\r\n              //       <div class=\"position-relative\">\r\n              //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n              //           Bad Obstetric History\r\n              //         </label>\r\n              //         <div\r\n              //           className=\"w-100\"\r\n              //           style={{\r\n              //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n              //           }}\r\n              //         >\r\n              //           <Dropdown\r\n              //             options={options}\r\n              //             defaultValue={options[1]}\r\n              //             getSelectedValue={getSelectedValue2}\r\n              //           />\r\n              //         </div>\r\n              //       </div>\r\n              //     </div>\r\n              //   </CCol>\r\n              // </CRow>\r\n              <></>\r\n            )}\r\n            {currentTab === 2 && (\r\n              <MedicalTab\r\n                tabs={GynaecTabs}\r\n                getCurrentTab={getHistoryCurrentTab}\r\n                defaultTab={0}\r\n              />\r\n            )}\r\n          </CCol>\r\n        </CRow>\r\n        {!addFormView && (\r\n          <>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSelector />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"mb-2\">\r\n              {currentTab === 1 && (\r\n                <>\r\n                  <CRow>\r\n                    <ObstetricHistoryTable\r\n                      rowData={getCurrentPageItems()}\r\n                      columns={columnData}\r\n                      getselectedData={getselectedData}\r\n                    />\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                      <Pagination\r\n                        currentPage={currentPage}\r\n                        onPageChange={onPageChange}\r\n                        totalItems={rowData?.length}\r\n                        itemsPerPage={itemsPerPage}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </>\r\n              )}\r\n              {currentTab === 2 && currentHistoryTab === 1 && (\r\n                <>\r\n                  <CRow>\r\n                    <GynaecHistoryTable\r\n                      rowData={getCurrentMenstrualPageItems()}\r\n                      columns={MensuralcolumnData}\r\n                      getselectedData={getselectedData}\r\n                    />\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                      <Pagination\r\n                        currentPage={currentPage}\r\n                        onPageChange={onPageChange}\r\n                        totalItems={rowData?.length}\r\n                        itemsPerPage={itemsPerPage}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </>\r\n              )}\r\n              {currentTab === 2 && currentHistoryTab === 2 && (\r\n                <>\r\n                  <CRow>\r\n                    <ScreeningHistory\r\n                      rowData={getCurrentScreeningItem()}\r\n                      columns={ScreeningcolumnData}\r\n                      getselectedData={getselectedData}\r\n                    />\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                      <Pagination\r\n                        currentPage={currentPage}\r\n                        onPageChange={onPageChange}\r\n                        totalItems={rowData?.length}\r\n                        itemsPerPage={itemsPerPage}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </>\r\n\r\n      {addFormView && (\r\n        <CRow className=\"mb-2\">\r\n          <CCard className=\"p-2 cursor-default mb-5\">\r\n            <CCardBody className=\"mb-3\">\r\n              {currentTab === 1 && (\r\n                <ImagingOrderForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )}\r\n              {currentTab === 2 && currentHistoryTab === 1 && (\r\n                <MensturalHistoryForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )}\r\n              {currentTab === 2 && currentHistoryTab === 2 && (\r\n                <ScreeningHistoryForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )}\r\n            </CCardBody>\r\n          </CCard>\r\n        </CRow>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OGHistory;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst MedHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [smokingStatus, setSmokingStatus] = useState(\r\n    defaultValues?.smoking || \"No\"\r\n  );\r\n\r\n  const [alcoholStatus, setAlcoholStatus] = useState(\r\n    defaultValues?.alcohol || \"No\"\r\n  );\r\n\r\n  const [drugStatus, setDrugStatus] = useState(defaultValues?.drugs || \"No\");\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.onset;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.onset\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Yes\", \"No\"];\r\n\r\n  const getSelectedValue1 = (data) => {\r\n    setSmokingStatus(data);\r\n  };\r\n\r\n  const findIndex = defaultValues?.smoking\r\n    ? options?.indexOf(defaultValues?.smoking)\r\n    : 1;\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    setAlcoholStatus(data);\r\n  };\r\n\r\n  const findIndex2 = defaultValues?.alcohol\r\n    ? options?.indexOf(defaultValues?.alcohol)\r\n    : 1;\r\n\r\n  const getSelectedValue3 = (data) => {\r\n    setDrugStatus(data);\r\n  };\r\n\r\n  const findIndex3 = defaultValues?.drugs\r\n    ? options?.indexOf(defaultValues?.drugs)\r\n    : 1;\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Smoking \r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.smoking}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[findIndex]}\r\n                  getSelectedValue={getSelectedValue1}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {smokingStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Smoking details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Alcohol \r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.alcohol}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[findIndex2]}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {alcoholStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Alcohol details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Drugs \r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.drugs}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[findIndex3]}\r\n                  getSelectedValue={getSelectedValue3}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {drugStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Drugs details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 4-20 words long.\"\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedHistoryForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SocialHistoryTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.smoking}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.alcohol}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.drugs}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialHistoryTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedHistoryForm from \"./MedHistoryForm\";\r\nimport MedicalHistoryTable from \"../../../../../../Tables/Subjective/MedicalHistoryTable\";\r\nimport SocialHistoryTable from \"../../../../../../Tables/Subjective/SocialHistoryTable\";\r\n\r\nconst SocialHistory = () => {\r\n  const columnData = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"Smoking\" },\r\n    { id: 3, label: \"Alcohol\" },\r\n    { id: 4, label: \"Drugs\" },\r\n    { id: 5, label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      smoking: \"Yes\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 2,\r\n      smoking: \"Yes\",\r\n      alcohol: \"Yes\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 3,\r\n      smoking: \"Yes\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 4,\r\n      smoking: \"Yes\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 5,\r\n      smoking: \"Yes\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 6,\r\n      smoking: \"Yes\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 7,\r\n      smoking: \"Yes\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 8,\r\n      smoking: \"Yes\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 9,\r\n      smoking: \"Yes\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n    {\r\n      id: 10,\r\n      smoking: \"Yes\",\r\n      alcohol: \"No\",\r\n      drugs: \"No\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <SocialHistoryTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MedHistoryForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialHistory;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport MedicalHistory from \"./Medical History/MedicalHistory\";\r\nimport SurgicalHistory from \"./Surgical History/SurgicalHistory\";\r\nimport OGHistory from \"./OG History/OGHistory\";\r\nimport SocialHistory from \"./Social History/SocialHistory\";\r\nimport FamilyHistory from \"./Family History/FamilyHistory\";\r\n\r\nconst History = ({ OnClose }) => {\r\n  const tabs = [\r\n    { id: 1, title: \"Medical History\" },\r\n    { id: 2, title: \"O/G History\" },\r\n    { id: 3, title: \"Surgical History\" },\r\n    { id: 4, title: \"Family History\" },\r\n    { id: 5, title: \"Social History\" },\r\n  ];\r\n  const PatientSubMenu3 = localStorage.getItem(\"PatientSubMenu-3\");\r\n  const ParsedPatientSubMenu = PatientSubMenu3\r\n    ? JSON.parse(PatientSubMenu3)\r\n    : 1;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  console.log(\"first\", currentTab);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={4} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={OnClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">History</span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                {\r\n                  label: \"History\",\r\n                  to: \"/patients/history\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md={12}>\r\n          <MedicalTab\r\n            tabs={tabs}\r\n            getCurrentTab={getCurrentTab}\r\n            defaultTab={ParsedPatientSubMenu - 1}\r\n          />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mt-3\">\r\n        {currentTab === 1 && (\r\n          <>\r\n            <MedicalHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 2 && (\r\n          <>\r\n            <OGHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 3 && (\r\n          <>\r\n            <SurgicalHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 4 && (\r\n          <>\r\n            <FamilyHistory />\r\n          </>\r\n        )}\r\n        {currentTab === 5 && (\r\n          <>\r\n            <SocialHistory />\r\n          </>\r\n        )}\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../../Badge/Badge\";\r\n  import { Assets } from \"../../../../assets/Assets\";\r\n\r\nfunction ExerciseHabitTable({ columns, rowData, getselectedData }) {\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n  <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.intensity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExerciseHabitTable","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\n\r\nconst ExcerciseHabitForm = ({ back, defaultValues }) => {\r\n  const [exercises, setExercises] = useState([\r\n    {\r\n      id: 1,\r\n      type: \"\",\r\n      date: null,\r\n      time: \"\",\r\n      duration: \"\",\r\n      intensity: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleAddExercise = () => {\r\n    const newExercises = [\r\n      ...exercises,\r\n      {\r\n        id: exercises.length + 1,\r\n        type: \"\",\r\n        date: null,\r\n        time: \"\",\r\n        duration: \"\",\r\n        intensity: \"\",\r\n      },\r\n    ];\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  const handleRemoveExercise = (id) => {\r\n    const newExercises = exercises.filter((exercise) => exercise.id !== id);\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  const handleChange = (id, updatedData) => {\r\n    const newExercises = exercises.map((ex) =>\r\n      ex.id === id ? { ...ex, ...updatedData } : ex\r\n    );\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {exercises.map((exercise, index) => (\r\n        <div key={index}>\r\n          <CRow className=\"mb-3\">\r\n             <CCol lg={12}>\r\n               <div className=\"vertical-line\"></div>\r\n             </CCol>\r\n           </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={4}>\r\n              <div className=\"position-relative\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Date *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={exercise.date}\r\n                    onChange={(date) => handleChange(exercise.id, { date })}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4}>\r\n              <div className=\"position-relative\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Time *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={exercise.date}\r\n                    onChange={(date) => handleChange(exercise.id, { date })}\r\n                    showTimeSelect\r\n                    showTimeSelectOnly\r\n                    timeIntervals={15}\r\n                    timeCaption=\"Time\"\r\n                    dateFormat=\"h:mm aa\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Type *\r\n                  </label>\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={[\"One\", \"Two\"]}\r\n                      defaultValue={exercise.type}\r\n                      getSelectedValue={(value) =>\r\n                        handleChange(exercise.id, { type: value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Duration (in minutes)\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"000\"\r\n                    value={exercise.duration}\r\n                    onChange={(e) =>\r\n                      handleChange(exercise.id, { duration: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Intensity *\r\n                  </label>\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={[\"One\", \"Two\"]}\r\n                      defaultValue={exercise.intensity}\r\n                      getSelectedValue={(value) =>\r\n                        handleChange(exercise.id, { intensity: value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {index > 0 && (\r\n            <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton hgdf\r\n                        onClick={() => handleRemoveExercise(exercise.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n            </CRow>\r\n           </>\r\n            \r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddExercise}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExcerciseHabitForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExerciseHabitTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/ExerciseHabitTable\";\r\nimport ExcerciseHabitForm from \"./ExcerciseHabitForm\";\r\n\r\n\r\nconst ExerciseHabit = () => {\r\n\r\n  const columnData = [\r\n    {  label: \"NO.\" },\r\n    {  label: \"Date\" },\r\n    {  label: \"Type\" },\r\n    {  label: \"DURATION\" },\r\n    {  label: \"INTENSITY\" },\r\n    {  label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration:\"30\",\r\n      intensity:\"Moderate\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration:\"30\",\r\n      intensity:\"Moderate\",\r\n    },\r\n    {\r\n      id: 3,\r\n     date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration:\"30\",\r\n      intensity:\"Moderate\",\r\n    },\r\n    { \r\n      id: 4,\r\n     date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration:\"30\",\r\n      intensity:\"Moderate\",\r\n    },\r\n    {\r\n      id: 5,\r\n     date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration:\"30\",\r\n      intensity:\"Moderate\",\r\n    },\r\n    {\r\n      id: 6,\r\n     date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration:\"30\",\r\n      intensity:\"Moderate\",\r\n    }\r\n\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n     <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <ExerciseHabitTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ExcerciseHabitForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExerciseHabit","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../../Badge/Badge\";\r\n  import { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst MoodTable = ({ columns, rowData, getselectedData }) => {\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoodTable","import { CCol, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\n\r\nconst MoodForm = ({ back, defaultValues }) => {\r\n\r\n    const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n              //  dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n          </CCol>\r\n                <CCol lg={6}>\r\n                <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n                </CCol>\r\n\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n                <p className=\"radio-label\">Type *</p>\r\n                <CCol lg={12}>\r\n\r\n                    <div className=\"h-100 d-flex align-items-end w-100 \">\r\n\r\n                        <div\r\n                            style={{\r\n                                boxSizing: \"border-box\",\r\n                                borderRadius: \"5px\",\r\n                                border: \"1px solid #17171D33\",\r\n                                padding: \"10px\",\r\n                            }}\r\n                        >\r\n                            <CFormCheck\r\n\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox1\"\r\n                                value=\"bf\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Happy\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox2\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Sad\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox3\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Angry\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox4\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Relaxed\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox5\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Excited\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox6\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Anxious\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox7\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Content\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox8\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Frustrated\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox9\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Surprised\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox10\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Confident\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MoodForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport MoodTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/MoodTable\";\r\nimport MoodForm from \"./MoodForm\";\r\n\r\nconst Mood = () => {\r\n  const columnData = [\r\n    {  label: \"NO.\" },\r\n    {  label: \"Date\" },\r\n    {  label: \"Type\" },\r\n    {  label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    { \r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    }\r\n\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n        <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <MoodTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MoodForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              //  defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mood","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../../Badge/Badge\";\r\n  import { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst NutritionDietTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n     \r\n    \r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type_of_diet}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NutritionDietTable","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../../Badge/Badge\";\r\n  import { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst NutritionFluidTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n      <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.intake}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NutritionFluidTable","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst DietForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  \r\n    const options = [\"Veg\", \"Non-Veg\",\"Others\"];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n              //  dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type of Diet * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Notes\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"Enter\"\r\n              defaultValue={defaultValues?.name}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default DietForm","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst FluidIntakeForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n    const options = [\"Water\", \"Oral Rehydration Solutions\",\"Clear Broth\", \"Milk\",\"Fruit Juices\",\"Herbal Teas\",\"Coffee\",\"Tea\",\"Sports Drinks\",\"Soft Drinks\",\r\n        \"Energy Drinks\",\"Coconut Water\",\"Infused Water\",\"Soup\",\"Electrolyte Solutions\",\"Alcoholic Beverages\",];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n              //  dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Intake (ml)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"0000\"\r\n              defaultValue={defaultValues?.name}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default FluidIntakeForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicalTab from '../../../MedicalTab';\r\nimport ExerciseHabitTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/ExerciseHabitTable\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport NutritionDietTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/NutritionDietTable\";\r\nimport NutritionFluidTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/NutritionFluidTable\";\r\nimport DietForm from \"./DietForm\";\r\nimport FluidIntakeForm from \"./FluidIntakeForm\";\r\n\r\nconst Nutrition = () => {\r\n\r\n\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Type of Diet\" },\r\n    { id: 4, label: \"Notes\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type_of_diet: \"Non-Veg\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type_of_diet: \"Non-Veg\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type_of_diet: \"Non-Veg\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n\r\n  ];\r\n\r\n  const FluidIntakecolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 3, label: \"Date\" },\r\n    { id: 3, label: \"Type\" },\r\n    { id: 4, label: \"INTAKE (ML)\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const FluidIntakerowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Water\",\r\n      intake: \"1500\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Water\",\r\n      intake: \"1500\",\r\n    },\r\n\r\n  ];\r\n\r\n  const tabs = [\r\n    { id: 1, title: \"Diet\" },\r\n    { id: 2, title: \"Fluid Intake\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentFluidPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return FluidIntakerowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={12} className=\"\">\r\n            <MedicalTab\r\n              tabs={tabs}\r\n              getCurrentTab={getCurrentTab}\r\n              defaultTab={0}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n        {!addFormView && (\r\n          <>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSelector />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"mb-2\">\r\n              {currentTab === 1 && (\r\n                <>\r\n                  <CRow>\r\n                    <NutritionDietTable\r\n                      rowData={getCurrentPageItems()}\r\n                      columns={columnData}\r\n                      getselectedData={getselectedData}\r\n                    />\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                      <Pagination\r\n                        currentPage={currentPage}\r\n                        onPageChange={onPageChange}\r\n                        totalItems={rowData?.length}\r\n                        itemsPerPage={itemsPerPage}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </>\r\n              )}\r\n              {currentTab === 2 && (\r\n                <>\r\n                  <CRow>\r\n                    <NutritionFluidTable\r\n                      rowData={getCurrentFluidPageItems()}\r\n                      columns={FluidIntakecolumnData}\r\n                      getselectedData={getselectedData}\r\n                    />\r\n                  </CRow>\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                      <Pagination\r\n                        currentPage={currentPage}\r\n                        onPageChange={onPageChange}\r\n                        totalItems={rowData?.length}\r\n                        itemsPerPage={itemsPerPage}\r\n                      />\r\n                    </CCol>\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </>\r\n\r\n      {addFormView && (\r\n        <CRow className=\"mb-2\">\r\n          <CCard className=\"p-2 cursor-default mb-5\">\r\n            <CCardBody className=\"mb-3\">\r\n              {currentTab === 1 && (\r\n                <DietForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  // defaultValues={selectedData}\r\n                />\r\n              )}\r\n              {currentTab === 2 && (\r\n                <FluidIntakeForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  // defaultValues={selectedData}\r\n                />\r\n              )}\r\n            </CCardBody>\r\n          </CCard>\r\n        </CRow>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Nutrition","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../../Badge/Badge\";\r\n  import { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst SexualStatusTable = ({ columns, rowData, getselectedData }) => {\r\n\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n    <>\r\n    <CTable className=\"lab-responsive-table\">\r\n      <CTableHead color=\"dark\">\r\n        <CTableRow>\r\n          {columns?.map((data, i) => (\r\n            <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n          ))}\r\n        </CTableRow>\r\n      </CTableHead>\r\n      <CTableBody>\r\n        {rowData?.map((dt, i) => (\r\n          <CTableRow key={i}>\r\n            <CTableHeaderCell style={{ height: \"10px\" }}>\r\n              <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </div>\r\n            </CTableHeaderCell>\r\n            <CTableDataCell style={{ height: \"10px\" }}>\r\n              <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.sexual_activity}</span>\r\n              </div>\r\n            </CTableDataCell>\r\n            <CTableDataCell style={{ height: \"10px\" }}>\r\n              <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.history}</span>\r\n              </div>\r\n            </CTableDataCell>\r\n            <CTableDataCell style={{ height: \"10px\" }}>\r\n              <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.screening_date}</span>\r\n              </div>\r\n            </CTableDataCell>\r\n            <CTableDataCell style={{ height: \"10px\" }}>\r\n              <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                <span className=\"fs-16 fw-500\">{dt?.current_status}</span>\r\n              </div>\r\n            </CTableDataCell>\r\n            <CTableDataCell style={{ height: \"10px\" }}>\r\n              <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                <div\r\n                  style={{\r\n                    width: \"50%\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.EditPencil}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    width: \"50%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.Delete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CTableDataCell>\r\n          </CTableRow>\r\n        ))}\r\n      </CTableBody>\r\n    </CTable>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default SexualStatusTable","import { CCol, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\n\r\nconst SexualStatusForm = ({ back, defaultValues }) => {\r\n    const [date, setDate] = useState(null);\r\n    const [historySti, setHistorySti] = useState(false);\r\n    const [currentSti, setCurrentSti] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const parseDateString = (dateString) => {\r\n            const parts = dateString?.split(\" \");\r\n            const datePart = parts[0];\r\n            const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n            return new Date(year, month - 1, day);\r\n        };\r\n\r\n        const defaultDateString = defaultValues?.date;\r\n        const defaultDate = defaultValues?.date ? parseDateString(defaultDateString) : new Date();\r\n        setDate(defaultDate);\r\n    }, [defaultValues]);\r\n\r\n    const handleHistoryStiClick = (event) => {\r\n        setHistorySti(event.target.value === \"yes\");\r\n    };\r\n\r\n    const handleCurrentStiClick = (event) => {\r\n        setCurrentSti(event.target.value === \"positive\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <p className=\"radio-label\">Sexual Activity</p>\r\n                    <div className=\"d-flex align-items-end w-100\">\r\n                        <div\r\n                            style={{\r\n                                boxSizing: \"border-box\",\r\n                                borderRadius: \"5px\",\r\n                                border: \"1px solid #17171D33\",\r\n                                padding: \"10px\",\r\n                            }}\r\n                        >\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"activityYes\"\r\n                                value=\"yes\"\r\n                                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                                name=\"activity\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"activityNo\"\r\n                                value=\"no\"\r\n                                label={<label className=\"form-label mb-0\">No</label>}\r\n                                name=\"activity\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n\r\n                <CCol lg={6}>\r\n                    <p className=\"radio-label\">History of STI</p>\r\n                    <div className=\"d-flex align-items-end w-100\">\r\n                        <div\r\n                            style={{\r\n                                boxSizing: \"border-box\",\r\n                                borderRadius: \"5px\",\r\n                                border: \"1px solid #17171D33\",\r\n                                padding: \"10px\",\r\n                            }}\r\n                        >\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"historyYes\"\r\n                                value=\"yes\"\r\n                                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                                name=\"sti\"\r\n                                checked={historySti === true}\r\n                                onChange={handleHistoryStiClick}\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"historyNo\"\r\n                                value=\"no\"\r\n                                label={<label className=\"form-label mb-0\">No</label>}\r\n                                name=\"sti\"\r\n                                checked={historySti === false}\r\n                                onChange={handleHistoryStiClick}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n            {historySti && (\r\n                <>\r\n                    <CRow className=\"mb-3\">\r\n                        <CCol lg={6}>\r\n                            <div className=\"position-relative\">\r\n                                <label className=\"form-label\">Last STI Screening Date *</label>\r\n                                <div className=\"date-size\">\r\n                                    <DatePicker\r\n                                        showIcon\r\n                                        selected={date}\r\n                                        onChange={(date) => setDate(date)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </CCol>\r\n                        <CCol lg={6}>\r\n                            <div style={{ width: \"100%\" }}>\r\n                                <div className=\"position-relative\">\r\n                                    <label className=\"form-label\">STI History Notes</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control pad-10\"\r\n                                        placeholder=\"Enter\"\r\n                                        defaultValue={defaultValues?.name}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </CCol>\r\n                    </CRow>\r\n                    <CRow className=\"mb-3\">\r\n                        <CCol lg={6}>\r\n                            <p className=\"radio-label\">Current STI Status</p>\r\n                            <div className=\"d-flex align-items-end w-100\">\r\n                                <div\r\n                                    style={{\r\n                                        boxSizing: \"border-box\",\r\n                                        borderRadius: \"5px\",\r\n                                        border: \"1px solid #17171D33\",\r\n                                        padding: \"10px\",\r\n                                    }}\r\n                                >\r\n                                    <CFormCheck\r\n                                        className=\"mb-0\"\r\n                                        inline\r\n                                        type=\"radio\"\r\n                                        id=\"statusPositive\"\r\n                                        value=\"positive\"\r\n                                        label={<label className=\"form-label mb-0\">Positive</label>}\r\n                                        name=\"sti_status\"\r\n                                        checked={currentSti === true}\r\n                                        onChange={handleCurrentStiClick}\r\n                                    />\r\n                                    <CFormCheck\r\n                                        className=\"mb-0\"\r\n                                        inline\r\n                                        type=\"radio\"\r\n                                        id=\"statusNegative\"\r\n                                        value=\"negative\"\r\n                                        label={<label className=\"form-label mb-0\">Negative</label>}\r\n                                        name=\"sti_status\"\r\n                                        checked={currentSti === false}\r\n                                        onChange={handleCurrentStiClick}\r\n                                    />\r\n                                    <CFormCheck\r\n                                        className=\"mb-0\"\r\n                                        inline\r\n                                        type=\"radio\"\r\n                                        id=\"statusUnknown\"\r\n                                        value=\"unknown\"\r\n                                        label={<label className=\"form-label mb-0\">Unknown</label>}\r\n                                        name=\"sti_status\"\r\n                                        checked={currentSti === false}\r\n                                        onChange={handleCurrentStiClick}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </CCol>\r\n                        {currentSti && (\r\n                            <CCol lg={6}>\r\n                                <div style={{ width: \"100%\" }}>\r\n                                    <div className=\"position-relative\">\r\n                                        <label className=\"form-label\">Current STI Notes</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control pad-10\"\r\n                                            placeholder=\"Enter\"\r\n                                            defaultValue={defaultValues?.name}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </CCol>\r\n                        )}\r\n                    </CRow>\r\n                </>\r\n            )}\r\n\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SexualStatusForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport MoodTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/MoodTable\";\r\nimport SexualStatusTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/SexualStatusTable\";\r\nimport SexualStatusForm from \"./SexualStatusForm\";\r\n\r\nconst SexualStatus = () => {\r\n  const columnData = [\r\n    {  label: \"NO.\" },\r\n    {  label: \"Sexual Activity\" },\r\n    {  label: \"History of STI\" },\r\n    {label: \"Last STI Screening Date\"},\r\n    {label: \"Current STI Status\"},\r\n    {  label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      sexual_activity:\"Active\",\r\n      history: \"Yes \",\r\n      screening_date: \"06-06-2024 \",\r\n      current_status: \"Active \",\r\n    },\r\n    {\r\n      id: 2,\r\n      sexual_activity:\"Active\",\r\n      history: \"Yes \",\r\n      screening_date: \"06-06-2024\",\r\n      current_status: \"Active \",\r\n    },\r\n    {\r\n      id: 3,\r\n      sexual_activity:\"Active\",\r\n      history: \"Yes \",\r\n      screening_date: \"06-06-2024\",\r\n      current_status: \"Active \",\r\n    },\r\n    { \r\n      id: 4,\r\n      sexual_activity:\"Active\",\r\n      history: \"Yes \",\r\n      screening_date: \"06-06-2024\",\r\n      current_status: \"Active \",\r\n    },\r\n    {\r\n      id: 5,\r\n      sexual_activity:\"Active\",\r\n      history: \"Yes \",\r\n      screening_date: \"06-06-2024\",\r\n      current_status: \"Active \",\r\n    },\r\n    {\r\n      id: 6,\r\n      sexual_activity:\"Active\",\r\n      history: \"Yes \",\r\n      screening_date: \"06-06-2024\",\r\n      current_status: \"Active \",\r\n    }\r\n\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {!addFormView && (\r\n      <>\r\n        <CRow className=\"mb-2\">\r\n          <CCol lg={8} className=\"\">\r\n            <DateSelector />\r\n          </CCol>\r\n          <CCol\r\n            lg={4}\r\n            className=\"d-flex justify-content-end align-items-center gap-2\"\r\n          >\r\n            <div>\r\n              <PrimaryButton onClick={() => addFormPage()}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.Add} alt=\"add\" />\r\n                  <span className=\"fs-16 fw-600\">Add</span>\r\n                </div>\r\n              </PrimaryButton>\r\n            </div>\r\n            <div>\r\n              <PrimaryButton onClick={() => addFormPage()}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                </div>\r\n              </PrimaryButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"mb-2\">\r\n          <SexualStatusTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n          />\r\n\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={onPageChange}\r\n                totalItems={rowData?.length}\r\n                itemsPerPage={itemsPerPage}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </>\r\n    )}\r\n    {addFormView && (\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <SexualStatusForm\r\n            back={() => {\r\n              setAddFormView(false);\r\n              setSelectedData({});\r\n            }}\r\n            // defaultValues={selectedData}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    )}\r\n\r\n    {detailView && (\r\n      <BlurBackground>\r\n        <CModal\r\n          alignment=\"center\"\r\n          visible={detailView}\r\n          onClose={() => setDetailView(false)}\r\n          aria-labelledby=\"VerticallyCenteredExample\"\r\n        >\r\n          <CModalBody className=\"p-3\">\r\n            <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n              <h5>Are you sure want to delete ?</h5>\r\n              <div className=\"d-flex gap-2 mt-2\">\r\n                <div style={{ width: \"80px\" }}>\r\n                  <PrimaryButton onClick={() => setDetailView(false)}>\r\n                    Yes\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"80px\" }}>\r\n                  <SecondaryButton onClick={() => setDetailView(false)}>\r\n                    No\r\n                  </SecondaryButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </BlurBackground>\r\n    )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default SexualStatus","import {\r\n    CTable,\r\n    CTableBody,\r\n    CTableDataCell,\r\n    CTableHead,\r\n    CTableHeaderCell,\r\n    CTableRow,\r\n  } from \"@coreui/react\";\r\n  import React from \"react\";\r\n  import Badge from \"../../../Badge/Badge\";\r\n  import { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst SleepTable = ({ columns, rowData, getselectedData }) => {\r\n    const selectedData = (data, type) => {\r\n        getselectedData(data, type);\r\n      };\r\n\r\n  return (\r\n   <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SleepTable","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst SleepForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  \r\n    const options = [\"Disturbed\", \"Undisturbed\",\"Excess Dreams\",];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n              //  dateFormat=\"MM-dd-yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n           Duration (mins)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"0000\"\r\n              defaultValue={defaultValues?.name}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default SleepForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport SleepTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/SleepTable\";\r\nimport SleepForm from \"./SleepForm\";\r\n\r\nconst Sleep = () => {\r\n\r\n  const columnData = [\r\n    {  label: \"NO.\" },\r\n    {  label: \"Date\" },\r\n    {  label: \"Type\" },\r\n    {  label: \"DURATION (IN MINS)\" },\r\n    {  label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration:\"360\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration:\"360\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration:\"360\",\r\n    },\r\n    { \r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration:\"360\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration:\"360\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration:\"360\",\r\n    }\r\n\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n        <>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <SleepTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n            />\r\n\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <SleepForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              // defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sleep","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport MedicalTab from \"../../MedicalTab\";\r\nimport ExcerciseHabit from \"./ExerciseHabit/ExerciseHabit\";\r\nimport Mood from \"./Mood/Mood\";\r\nimport Nutrition from \"./Nutrition/Nutrition\";\r\nimport SexualStatus from \"./SexualStatus/SexualStatus\";\r\nimport Sleep from \"./Sleep/Sleep\";\r\n\r\n\r\nconst WellnessProfile = ({OnClose}) => {\r\n\r\n\r\n    const tabs = [\r\n        { id: 1, title: \"Exercise Habit\" },\r\n        { id: 2, title: \"Nutrition\" },\r\n        { id: 3, title: \"Sleep\" },\r\n        { id: 4, title: \"Mood\" },\r\n        { id: 5, title: \"Sexual Status\" },\r\n      ];\r\n      const [currentTab, setCurrentTab] = useState(1);\r\n      const getCurrentTab = (data) => {\r\n        setCurrentTab(data);\r\n      };\r\n\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-0\">\r\n      <CCol md={4} className=\"mb-2\">\r\n        <div className=\"d-flex gap-2\">\r\n          <img\r\n            alt=\"BackBtn\"\r\n            src={Assets.BackBtn}\r\n            style={{ width: \"35px\" }}\r\n            onClick={OnClose}\r\n            className=\"cursor\"\r\n          />\r\n          <span className=\"Obj-name d-flex align-items-center\">Wellness</span>\r\n        </div>\r\n      </CCol>\r\n      <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n        <div className=\"d-flex mt-2\">\r\n          <Breadcrumb\r\n            paths={[\r\n              { label: \"Home\", to: \"/patients\" },\r\n              { label: \"Patient List\", to: \"/patients\" },\r\n              { label: \"Medical Profile\", to: \"/patients/history\" },\r\n              {\r\n                label: \"Wellness\",\r\n                to: \"/patients/history\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow>\r\n      <CCol md={12}>\r\n        <MedicalTab\r\n          tabs={tabs}\r\n          getCurrentTab={getCurrentTab}\r\n          defaultTab={0}\r\n        />\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mt-3\">\r\n      {currentTab === 1 && (\r\n        <>\r\n          <ExcerciseHabit />\r\n        </>\r\n      )}\r\n      {currentTab === 2 && (\r\n        <>\r\n          <Nutrition />\r\n        </>\r\n      )}\r\n      {currentTab === 3 && (\r\n        <>\r\n          <Sleep />\r\n        </>\r\n      )}\r\n      {currentTab === 4 && (\r\n        <>\r\n          <Mood />\r\n        </>\r\n      )}\r\n      {currentTab === 5 && (\r\n        <>\r\n          <SexualStatus />\r\n        </>\r\n      )}\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default WellnessProfile","import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DateCards from \"../../../../../DateCards/DateCards\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst Ros = ({ onClose }) => {\r\n  const dateCards = [\r\n    {\r\n      id: 1,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Fever\", \"Sweating\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Hay fever\"],\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06/07/2024\",\r\n      ga: {\r\n        status: \"Yes\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"No\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    { id: 9, date: \"06/07/2024\" },\r\n    { id: 10, date: \"06/07/2024\" },\r\n    { id: 11, date: \"06/07/2024\" },\r\n    { id: 12, date: \"06/07/2024\" },\r\n    { id: 13, date: \"06/07/2024\" },\r\n    { id: 14, date: \"06/07/2024\" },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(true);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [skinselectedOptions, setSkinSelectedOptions] = useState([]);\r\n  const [skinselectedOptions1, setSkinSelectedOptions1] = useState([]);\r\n  const [headselectedOptions, setHeadSelectedOptions] = useState([]);\r\n\r\n  const [labelName1, setLabelname1] = useState(\"\");\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const [labelName, setLabelname] = useState(selectedData?.ga?.status || \"\");\r\n  const [labelNameSkin, setLabelNameSkin] = useState(\r\n    selectedData?.ga?.status || \"\"\r\n  );\r\n  const [labelNameHead, setLabelNameHead] = useState(\r\n    selectedData?.ga?.status || \"\"\r\n  );\r\n  const [generalOpen, setGeneralOpen] = useState(false);\r\n  const [heentOpen, setHeentOpen] = useState(false);\r\n  const [skinOpen, setSkinOpen] = useState(false);\r\n  const [headOpen, setHeadOpen] = useState(false);\r\n\r\n  const [editView, setEditView] = useState(false);\r\n\r\n  const options = [\r\n    \"Weight Loss\",\r\n    \"Fever\",\r\n    \"Fatigue\",\r\n    \"Sweating\",\r\n    \"Appetite Changes\",\r\n    \"Night Sweats\",\r\n    \"Weakness\",\r\n    \"Chills\",\r\n  ];\r\n\r\n  const allergyoptions = [\r\n    \"Hives\",\r\n    \"Swelling of lips or tongue\",\r\n    \"Hay fever\",\r\n    \"Asthma\",\r\n    \"Eczema/Sensitive\",\r\n    \"AutoImmune Disorder\",\r\n    \"Sensitivity to drugs,food,pollens,or dander\",\r\n  ];\r\n\r\n  const skinyoptions = [\r\n    \"Rashes\",\r\n    \"Itching\",\r\n    \"Change in hair or nails\",\r\n    \"Skin Lesions\",\r\n  ];\r\n\r\n  const headoptions = [\"Headaches\", \"Head injury\"];\r\n\r\n  const itemsPerPage = 9; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return dateCards?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const handleSelect = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    } else {\r\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const handleSelectSkin = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSkinSelectedOptions([...skinselectedOptions, option]);\r\n    } else {\r\n      setSkinSelectedOptions(\r\n        skinselectedOptions.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSelectSkin1 = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSkinSelectedOptions1([...skinselectedOptions1, option]);\r\n    } else {\r\n      setSkinSelectedOptions1(\r\n        skinselectedOptions1.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSelectHead = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setHeadSelectedOptions([...headselectedOptions, option]);\r\n    } else {\r\n      setHeadSelectedOptions(\r\n        headselectedOptions.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const getselected = (data, method) => {\r\n    setSelectedData(data);\r\n    if (method === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (method === \"edit\") {\r\n      addFormPage();\r\n      setEditView(true);\r\n    }\r\n  };\r\n\r\n  const toggleSelected1 = (label) => {\r\n    setLabelname1(label);\r\n  };\r\n\r\n  const toggleSelectedSkin = (label) => {\r\n    setLabelNameSkin(label);\r\n  };\r\n\r\n  const HeadtoggleSelectedSkin = (label) => {\r\n    setLabelNameHead(label);\r\n  };\r\n\r\n  const toggleSelected = (label) => {\r\n    setIsSelected(!isSelected);\r\n    setLabelname(label);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editView) {\r\n      setLabelname(selectedData?.ga?.status);\r\n      setLabelname1(selectedData?.skin?.status);\r\n      setSelectedOptions(selectedData?.ga?.select);\r\n      setSkinSelectedOptions(selectedData?.skin?.select);\r\n      if (selectedData?.ga?.status === \"Yes\") {\r\n        setGeneralOpen(true);\r\n      }\r\n      if (selectedData?.skin?.status === \"Yes\") {\r\n        setHeentOpen(true);\r\n      }\r\n    } else {\r\n      setLabelname(\"\");\r\n      setLabelname1(\"\");\r\n      setGeneralOpen(false);\r\n      setHeentOpen(false);\r\n      setSelectedOptions([]);\r\n    }\r\n  }, [editView]);\r\n\r\n  const [eyesOpen, setEyesOpen] = useState(false);\r\n  const [eyesLabel, setEyesLabel] = useState(selectedData?.ga?.status || \"\");\r\n  const [eyeselection, setEyeselection] = useState([]);\r\n  const eyeOptions = [\r\n    \"Glasses or contacts\",\r\n    \"Change in vision\",\r\n    \"Eye pain\",\r\n    \"Double vision\",\r\n    \"Flashing lights\",\r\n    \"Glaucoma/Cataracts\",\r\n  ];\r\n  const toggleEyes = (label) => {\r\n    setEyesLabel(label);\r\n  };\r\n  const handleSelectEyes = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setEyeselection([...eyeselection, option]);\r\n    } else {\r\n      setEyeselection(eyeselection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const Ears = [\r\n    \"Change in hearing\",\r\n    \"Ear pain\",\r\n    \"Ear discharge\",\r\n    \"Ringing\",\r\n    \"Dizziness\",\r\n  ];\r\n  const [earsOpen, setEarsOpen] = useState(false);\r\n  const [earsLabel, setEarsLabel] = useState(selectedData?.ga?.status || \"\");\r\n  const [earSelection, setEarSelection] = useState([]);\r\n  const toggleEars = (label) => {\r\n    setEarsLabel(label);\r\n  };\r\n  const handleSelectEars = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setEarSelection([...earSelection, option]);\r\n    } else {\r\n      setEarSelection(earSelection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const Nose = [\"Nose bleeds\", \"Nasal stuffiness\", \"Frequent colds\"];\r\n  const [noseOpen, setNoseOpen] = useState(false);\r\n  const [noseLabel, setNoseLabel] = useState(\"\");\r\n  const [noseSelection, setNoseSelection] = useState([]);\r\n  const toggleNose = (label) => {\r\n    setNoseLabel(label);\r\n  };\r\n  const handleSelectNose = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setNoseSelection([...noseSelection, option]);\r\n    } else {\r\n      setNoseSelection(noseSelection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const MouthThroat = [\r\n    \"Bleeding gums\",\r\n    \"Sore tongue\",\r\n    \"Sore throat\",\r\n    \"Hoarseness\",\r\n  ];\r\n\r\n  const [mouthThroatOpen, setMouthThroatOpen] = useState(false);\r\n  const [mouthThroatLabel, setMouthThroatLabel] = useState(\"\");\r\n  const [mouthThroatSelection, setMouthThroatSelection] = useState([]);\r\n  const toggleMouth = (label) => {\r\n    setMouthThroatLabel(label);\r\n  };\r\n  const handleSelectMouth = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setMouthThroatSelection([...mouthThroatSelection, option]);\r\n    } else {\r\n      setMouthThroatSelection(\r\n        mouthThroatSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n  const Neck = [\"Lumps\", \"Goiter\", \"Swollen glands\", \"Stiffness\"];\r\n  const [neckOpen, setNeckOpen] = useState(false);\r\n  const [neckLabel, setNeckLabel] = useState(\"\");\r\n  const [neckSelection, setNeckSelection] = useState([]);\r\n  const toggleNeck = (label) => {\r\n    setNeckLabel(label);\r\n  };\r\n  const handleSelectNeck = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setNeckSelection([...neckSelection, option]);\r\n    } else {\r\n      setNeckSelection(neckSelection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const Breast = [\r\n    \"Lumps\",\r\n    \"Nipple discharge\",\r\n    \"Pain\",\r\n    \"BSE (Breast Self-Examination)\",\r\n  ];\r\n  const [breastOpen, setBreastOpen] = useState(false);\r\n  const [breastLabel, setBreastLabel] = useState(\"\");\r\n  const [breastSelection, setBreastSelection] = useState([]);\r\n  const toggleBreast = (label) => {\r\n    setBreastLabel(label);\r\n  };\r\n  const handleSelectBreast = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setBreastSelection([...breastSelection, option]);\r\n    } else {\r\n      setBreastSelection(breastSelection.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const Respiratory = [\r\n    \"Shortness of breath\",\r\n    \"Cough\",\r\n    \"Production of phlegm, color\",\r\n    \"Wheezing\",\r\n    \"Dyspnea (Difficulty Breathing)\",\r\n    \"Coughing up blood\",\r\n    \"Chest pain\",\r\n  ];\r\n  const [respiratoryOpen, setRespiratoryOpen] = useState(false);\r\n  const [respiratoryLabel, setRespiratoryLabel] = useState(\"\");\r\n  const [respiratorySelection, setRespiratorySelection] = useState([]);\r\n  const toggleRespi = (label) => {\r\n    setRespiratoryLabel(label);\r\n  };\r\n  const handleSelectRespi = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setRespiratorySelection([...respiratorySelection, option]);\r\n    } else {\r\n      setRespiratorySelection(\r\n        respiratorySelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Cardiovascular = [\r\n    \"Chest Pain\",\r\n    \"Palpitations\",\r\n    \"Heart murmur\",\r\n    \"Blue fingers/toes\",\r\n    \"Swelling in hands/feet\",\r\n    \"HX of heart medication\",\r\n    \"High blood pressure\",\r\n    \"Skipping heart beats\",\r\n  ];\r\n  const [cardiovascularOpen, setCardiovascularOpen] = useState(false);\r\n  const [cardiovascularLabel, setCardiovascularLabel] = useState(\"\");\r\n  const [cardiovascularSelection, setCardiovascularSelection] = useState([]);\r\n  const toggleCardio = (label) => {\r\n    setCardiovascularLabel(label);\r\n  };\r\n  const handleSelectCardio = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setCardiovascularSelection([...cardiovascularSelection, option]);\r\n    } else {\r\n      setCardiovascularSelection(\r\n        cardiovascularSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Gastrointestinal = [\r\n    \"Difficulty in urination\",\r\n    \"Frequent urination at night\",\r\n    \"Pain or burning on urination\",\r\n    \"Urgent need to urinate\",\r\n    \"Dribbling\",\r\n    \"Incontinence of urine\",\r\n    \"Decreased urine stream\",\r\n    \"Blood in urine\",\r\n    \"UTI/stones/prostate\",\r\n    \"Infection\",\r\n  ];\r\n  const [gastrointestinalOpen, setGastrointestinalOpen] = useState(false);\r\n  const [gastrointestinalLabel, setGastrointestinalLabel] = useState(\"\");\r\n  const [gastrointestinalSelection, setGastrointestinalSelection] = useState(\r\n    []\r\n  );\r\n  const toggleGastro = (label) => {\r\n    setGastrointestinalLabel(label);\r\n  };\r\n  const handleSelectGastro = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setGastrointestinalSelection([...gastrointestinalSelection, option]);\r\n    } else {\r\n      setGastrointestinalSelection(\r\n        gastrointestinalSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const PeripheralVascularDisease = [\r\n    \"Leg cramps\",\r\n    \"Varicose veins\",\r\n    \"Clots in veins\",\r\n  ];\r\n  const [peripheralVascularDiseaseOpen, setPeripheralVascularDiseaseOpen] =\r\n    useState(false);\r\n  const [peripheralVascularDiseaseLabel, setPeripheralVascularDiseaseLabel] =\r\n    useState(\"\");\r\n  const [\r\n    peripheralVascularDiseaseSelection,\r\n    setPeripheralVascularDiseaseSelection,\r\n  ] = useState([]);\r\n  const togglePeripheral = (label) => {\r\n    setPeripheralVascularDiseaseLabel(label);\r\n  };\r\n  const handleSelectPeripheral = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setPeripheralVascularDiseaseSelection([\r\n        ...peripheralVascularDiseaseSelection,\r\n        option,\r\n      ]);\r\n    } else {\r\n      setPeripheralVascularDiseaseSelection(\r\n        peripheralVascularDiseaseSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n  const Musculoskeletal = [\r\n    \"Pain\",\r\n    \"Swelling\",\r\n    \"Stiffness\",\r\n    \"Decreased joint motion\",\r\n    \"Broken bone\",\r\n    \"Serious sprains\",\r\n    \"Arthritis\",\r\n    \"Gout\",\r\n  ];\r\n  const [musculoskeletalOpen, setMusculoskeletalOpen] = useState(false);\r\n  const [musculoskeletalLabel, setMusculoskeletalLabel] = useState(\"\");\r\n  const [musculoskeletalSelection, setMusculoskeletalSelection] = useState([]);\r\n  const toggleMusculo = (label) => {\r\n    setMusculoskeletalLabel(label);\r\n  };\r\n  const handleSelectMusculo = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setMusculoskeletalSelection([...musculoskeletalSelection, option]);\r\n    } else {\r\n      setMusculoskeletalSelection(\r\n        musculoskeletalSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Neurological = [\r\n    \"Headaches\",\r\n    \"Seizures\",\r\n    \"Syncope (Fainting)\",\r\n    \"Paralysis\",\r\n    \"Loss of muscle size\",\r\n    \"Muscle spasm\",\r\n    \"Weakness\",\r\n    \"Tremor\",\r\n    \"Incoordination\",\r\n    \"Numbness\",\r\n    \"Feeling of “pins and needles/tingles”\",\r\n    \"Involuntary movement\",\r\n  ];\r\n  const [neurologicalOpen, setNeurologicalOpen] = useState(false);\r\n  const [neurologicalLabel, setNeurologicalLabel] = useState(\"\");\r\n  const [neurologicalSelection, setNeurologicalSelection] = useState([]);\r\n  const toggleNeuro = (label) => {\r\n    setNeurologicalLabel(label);\r\n  };\r\n  const handleSelectNeuro = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setNeurologicalSelection([...neurologicalSelection, option]);\r\n    } else {\r\n      setNeurologicalSelection(\r\n        neurologicalSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Hematology = [\"Anemia\", \"Easy bruising/bleeding\", \"Past Transfusions\"];\r\n  const [hematologyOpen, setHematologyOpen] = useState(false);\r\n  const [hematologyLabel, setHematologyLabel] = useState(\"\");\r\n  const [hematologySelection, setHematologySelection] = useState([]);\r\n  const toggleHemato = (label) => {\r\n    setHematologyLabel(label);\r\n  };\r\n  const handleSelectHemato = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setHematologySelection([...hematologySelection, option]);\r\n    } else {\r\n      setHematologySelection(\r\n        hematologySelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const Endocrine = [\r\n    \"Abnormal growth\",\r\n    \"Increased appetite\",\r\n    \"Increased thirst\",\r\n    \"Thyroid trouble\",\r\n    \"Diabetes\",\r\n    \"Heat/cold intolerance\",\r\n  ];\r\n  const [endocrineOpen, setEndocrineOpen] = useState(false);\r\n  const [endocrineLabel, setEndocrineLabel] = useState(\"\");\r\n  const [endocrineSelection, setEndocrineSelection] = useState([]);\r\n  const toggleEndo = (label) => {\r\n    setEndocrineLabel(label);\r\n  };\r\n  const handleSelectEndo = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setEndocrineSelection([...endocrineSelection, option]);\r\n    } else {\r\n      setEndocrineSelection(\r\n        endocrineSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n  const Psychiatric = [\r\n    \"Tension/Anxiety\",\r\n    \"Depression/suicide ideation\",\r\n    \"Memory problems\",\r\n    \"Unusual problems\",\r\n    \"Excessive sweating\",\r\n  ];\r\n  const [psychiatricOpen, setPsychiatricOpen] = useState(false);\r\n  const [psychiatricLabel, setPsychiatricLabel] = useState(\"\");\r\n  const [psychiatricSelection, setPsychiatricSelection] = useState([]);\r\n  const togglePsych = (label) => {\r\n    setPsychiatricLabel(label);\r\n  };\r\n  const handleSelectPsych = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setPsychiatricSelection([...psychiatricSelection, option]);\r\n    } else {\r\n      setPsychiatricSelection(\r\n        psychiatricSelection.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        <CCol md={5} className=\"mb-2\">\r\n          <div className=\"d-flex gap-2\">\r\n            <img\r\n              alt=\"BackBtn\"\r\n              src={Assets.BackBtn}\r\n              style={{ width: \"35px\" }}\r\n              onClick={onClose}\r\n              className=\"cursor\"\r\n            />\r\n            <span className=\"Obj-name d-flex align-items-center\">\r\n              Review of Systems (ROS)\r\n            </span>\r\n          </div>\r\n        </CCol>\r\n        <CCol md={7} className=\"mb-2 d-flex justify-content-end\">\r\n          <div className=\"d-flex mt-2\">\r\n            <Breadcrumb\r\n              paths={[\r\n                { label: \"Home\", to: \"/patients\" },\r\n                { label: \"Patient List\", to: \"/patients\" },\r\n                { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                { label: \"Review of Systems (ROS)\", to: \"/patients/history\" },\r\n              ]}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      {!addFormView && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center\"\r\n            >\r\n              <div>\r\n                <PrimaryButton\r\n                  onClick={() => {\r\n                    addFormPage();\r\n                    setSelectedData({});\r\n                  }}\r\n                >\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              {getCurrentPageItems()?.map((item, i) => (\r\n                <CCol lg={4} className=\"mb-3\" key={i}>\r\n                  <DateCards data={item} onClick={getselected} />\r\n                </CCol>\r\n              ))}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={dateCards?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        </>\r\n      )}\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <CRow className=\"mb-2\">\r\n              <CCol className=\"d-flex align-items-center gap-2\">\r\n                <span>Date</span>\r\n                <SingleDatePicker defaultDate={selectedData?.date} />\r\n              </CCol>\r\n              <CCol className=\"d-flex justify-content-end\">\r\n                <div style={{ width: \"120px\" }}>\r\n                  <ActiveButton\r\n                    onClick={() => {\r\n                      setAddFormView(false);\r\n                      setEditView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                  >\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets?.listview} alt=\"close\" />\r\n                      <span>List View</span>\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">General</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelName === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelected(\"Yes\");\r\n                      setGeneralOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelName === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelected(\"No\");\r\n                      setGeneralOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {generalOpen && (\r\n                <>\r\n                  {labelName === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {options?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelect}\r\n                            selected={selectedOptions.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={heentTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={heentTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Allergy</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelName1 === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelected1(\"Yes\");\r\n                      setHeentOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelName1 === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelected1(\"No\");\r\n                      setHeentOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {heentOpen && (\r\n                <>\r\n                  {labelName1 === \"Yes\" && (\r\n                    <>\r\n                      <CRow>\r\n                        {allergyoptions?.map((option, index) => (\r\n                          <CCol lg={\"auto\"}>\r\n                            <OptionItem\r\n                              key={index}\r\n                              label={option}\r\n                              onSelect={handleSelectSkin}\r\n                              selected={skinselectedOptions?.includes(option)}\r\n                              disabled={editView}\r\n                            />\r\n                          </CCol>\r\n                        ))}\r\n                      </CRow>\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            disabled={editView}\r\n                            defaultValue={selectedData?.skin?.notes}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!skinOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {skinOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Skin</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelNameSkin === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelectedSkin(\"Yes\");\r\n                      setSkinOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelNameSkin === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleSelectedSkin(\"No\");\r\n                      setSkinOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {skinOpen && (\r\n                <>\r\n                  {labelNameSkin === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {skinyoptions?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectSkin1}\r\n                            selected={skinselectedOptions1.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!headOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {headOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Head</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelNameHead === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      HeadtoggleSelectedSkin(\"Yes\");\r\n                      setHeadOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      labelNameHead === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      HeadtoggleSelectedSkin(\"No\");\r\n                      setHeadOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {headOpen && (\r\n                <>\r\n                  {labelNameHead === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {headoptions?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectHead}\r\n                            selected={headselectedOptions.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!eyesOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {eyesOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Eyes</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      eyesLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEyes(\"Yes\");\r\n                      setEyesOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      eyesLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEyes(\"No\");\r\n                      setEyesOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {eyesOpen && (\r\n                <>\r\n                  {eyesLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {eyeOptions?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectEyes}\r\n                            selected={eyeselection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!earsOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {earsOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Ears</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      earsLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEars(\"Yes\");\r\n                      setEarsOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      earsLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEars(\"No\");\r\n                      setEarsOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {earsOpen && (\r\n                <>\r\n                  {earsLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Ears?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectEars}\r\n                            selected={earSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!noseOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {noseOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Nose</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      noseLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNose(\"Yes\");\r\n                      setNoseOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      noseLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNose(\"No\");\r\n                      setNoseOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {noseOpen && (\r\n                <>\r\n                  {noseLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Nose?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectNose}\r\n                            selected={noseSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!mouthThroatOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {mouthThroatOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Mouth/Throat</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      mouthThroatLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleMouth(\"Yes\");\r\n                      setMouthThroatOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      mouthThroatLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleMouth(\"No\");\r\n                      setMouthThroatOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {mouthThroatOpen && (\r\n                <>\r\n                  {mouthThroatLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {MouthThroat?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectMouth}\r\n                            selected={mouthThroatSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!neckOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {neckOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Neck</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      neckLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNeck(\"Yes\");\r\n                      setNeckOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      neckLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNeck(\"No\");\r\n                      setNeckOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {neckOpen && (\r\n                <>\r\n                  {neckLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Neck?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectNeck}\r\n                            selected={neckSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!breastOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {breastOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Breast</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      breastLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleBreast(\"Yes\");\r\n                      setBreastOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      breastLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleBreast(\"No\");\r\n                      setBreastOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {breastOpen && (\r\n                <>\r\n                  {breastLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Breast?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectBreast}\r\n                            selected={breastSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!respiratoryOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {respiratoryOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Respiratory</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      respiratoryLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleRespi(\"Yes\");\r\n                      setRespiratoryOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      respiratoryLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleRespi(\"No\");\r\n                      setRespiratoryOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {respiratoryOpen && (\r\n                <>\r\n                  {respiratoryLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Respiratory?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectRespi}\r\n                            selected={respiratorySelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!cardiovascularOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {cardiovascularOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Cardiovascular</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      cardiovascularLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleCardio(\"Yes\");\r\n                      setCardiovascularOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      cardiovascularLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleCardio(\"No\");\r\n                      setCardiovascularOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {cardiovascularOpen && (\r\n                <>\r\n                  {cardiovascularLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Cardiovascular?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectCardio}\r\n                            selected={cardiovascularSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!gastrointestinalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {gastrointestinalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Gastrointestinal</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      gastrointestinalLabel === \"Yes\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleGastro(\"Yes\");\r\n                      setGastrointestinalOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      gastrointestinalLabel === \"No\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleGastro(\"No\");\r\n                      setGastrointestinalOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {gastrointestinalOpen && (\r\n                <>\r\n                  {gastrointestinalLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Gastrointestinal?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectGastro}\r\n                            selected={gastrointestinalSelection.includes(\r\n                              option\r\n                            )}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!peripheralVascularDiseaseOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {peripheralVascularDiseaseOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">\r\n                  Peripheral Vascular Disease\r\n                </span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      peripheralVascularDiseaseLabel === \"Yes\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      togglePeripheral(\"Yes\");\r\n                      setPeripheralVascularDiseaseOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      peripheralVascularDiseaseLabel === \"No\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      togglePeripheral(\"No\");\r\n                      setPeripheralVascularDiseaseOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {peripheralVascularDiseaseOpen && (\r\n                <>\r\n                  {peripheralVascularDiseaseLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {PeripheralVascularDisease?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectPeripheral}\r\n                            selected={peripheralVascularDiseaseSelection.includes(\r\n                              option\r\n                            )}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!musculoskeletalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {musculoskeletalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Musculoskeletal</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      musculoskeletalLabel === \"Yes\"\r\n                        ? \"selected primary-bg\"\r\n                        : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleMusculo(\"Yes\");\r\n                      setMusculoskeletalOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      musculoskeletalLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleMusculo(\"No\");\r\n                      setMusculoskeletalOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {musculoskeletalOpen && (\r\n                <>\r\n                  {musculoskeletalLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Musculoskeletal?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectMusculo}\r\n                            selected={musculoskeletalSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!neurologicalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {neurologicalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Neurological</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      neurologicalLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNeuro(\"Yes\");\r\n                      setNeurologicalOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      neurologicalLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleNeuro(\"No\");\r\n                      setNeurologicalOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {neurologicalOpen && (\r\n                <>\r\n                  {neurologicalLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Neurological?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectNeuro}\r\n                            selected={neurologicalSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!hematologyOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {hematologyOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Hematology</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      hematologyLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleHemato(\"Yes\");\r\n                      setHematologyOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      hematologyLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleHemato(\"No\");\r\n                      setHematologyOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {hematologyOpen && (\r\n                <>\r\n                  {hematologyLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Hematology?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectHemato}\r\n                            selected={hematologySelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!endocrineOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {endocrineOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Endocrine</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      endocrineLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEndo(\"Yes\");\r\n                      setEndocrineOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      endocrineLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      toggleEndo(\"No\");\r\n                      setEndocrineOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {endocrineOpen && (\r\n                <>\r\n                  {endocrineLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Endocrine?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectEndo}\r\n                            selected={endocrineSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={4} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!psychiatricOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {psychiatricOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Psychiatric</span>\r\n              </CCol>\r\n              <CCol lg={8}>\r\n                <div className=\"d-flex justify-content-start align-items-center gap-2\">\r\n                  <label class=\"form-label\" style={{ marginBottom: 0 }}>\r\n                    Status\r\n                  </label>\r\n                  <div\r\n                    className={`option-item ${\r\n                      psychiatricLabel === \"Yes\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      togglePsych(\"Yes\");\r\n                      setPsychiatricOpen(true);\r\n                    }}\r\n                  >\r\n                    {\"Yes\"}\r\n                  </div>\r\n                  <div\r\n                    className={`option-item ${\r\n                      psychiatricLabel === \"No\" ? \"selected primary-bg\" : \"\"\r\n                    } ${editView ? \"disabled\" : \"\"}`}\r\n                    onClick={() => {\r\n                      togglePsych(\"No\");\r\n                      setPsychiatricOpen(false);\r\n                    }}\r\n                  >\r\n                    {\"No\"}\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              {psychiatricOpen && (\r\n                <>\r\n                  {psychiatricLabel === \"Yes\" && (\r\n                    <CRow className=\"mt-2\">\r\n                      {Psychiatric?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelectPsych}\r\n                            selected={psychiatricSelection.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            {!editView && (\r\n              <>\r\n                <div className=\"vertical-line mt-2 mb-3\"></div>\r\n                <CRow className=\"mb-1\">\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton\r\n                      onClick={() => {\r\n                        setAddFormView(false);\r\n                        setEditView(false);\r\n                      }}\r\n                    >\r\n                      CANCEL\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </CRow>\r\n              </>\r\n            )}\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ros;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { Assets } from \"../../../../../assets/Assets\";\r\nimport Card from \"../../../../Cards/Card\";\r\nimport Breadcrumb from \"../../../../Breadcrumb/Breadcrumb\";\r\nimport \"../Objective/Objective.css\";\r\nimport Table from \"../../../../Tables/Table\";\r\nimport ChiefComplaints from \"./Chief Complaints/ChiefComplaints\";\r\nimport PresentIllness from \"./Present Illness/PresentIllness\";\r\nimport History from \"./History/History\";\r\nimport WellnessProfile from \"./WellnessProfile/WellnessProfile\";\r\nimport Ros from \"./Ros/Ros\";\r\n\r\nconst Subjective = () => {\r\n  const cardData = [\r\n    { id: 1, name: \"Chief Complaints\", image: Assets.VitalSig },\r\n    { id: 2, name: \"History of Present Illness (HPI)\", image: Assets.PhyExam },\r\n    { id: 3, name: \"History\", image: Assets.History },\r\n    { id: 4, name: \"Wellness Profile\", image: Assets.WellnessProfile },\r\n    { id: 5, name: \"Review of Systems (ROS)\", image: Assets.ReviewSytm },\r\n  ];\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-2\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 0;\r\n\r\n  const [selectedData, setSelectedData] = useState();\r\n  const [cardView, setCardView] = useState(\r\n    ParsedPatientSubMenu === 1 ? true : false\r\n  );\r\n  const [presentIll, setPresentIll] = useState(\r\n    ParsedPatientSubMenu === 2 ? true : false\r\n  );\r\n  const [historyView, setHistoryView] = useState(\r\n    ParsedPatientSubMenu === 3 ? true : false\r\n  );\r\n  const [wellnessView, setWellnessView] = useState(\r\n    ParsedPatientSubMenu === 4 ? true : false\r\n  );\r\n  const [rosView, setRosView] = useState(\r\n    ParsedPatientSubMenu === 5 ? true : false\r\n  );\r\n\r\n  const getSelectedData = (data) => {\r\n    setSelectedData(data);\r\n    if (data?.id === 1) {\r\n      setCardView(true);\r\n    }\r\n    if (data?.id === 2) {\r\n      setPresentIll(true);\r\n    }\r\n    if (data?.id === 3) {\r\n      setHistoryView(true);\r\n    }\r\n    if (data?.id === 4) {\r\n      setWellnessView(true);\r\n    }\r\n    if (data?.id === 5) {\r\n      setRosView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-3\">\r\n        {!cardView &&\r\n        !presentIll &&\r\n        !historyView &&\r\n        !wellnessView &&\r\n        !rosView ? (\r\n          <CRow>\r\n            {cardData.map((dt, i) => (\r\n              <CCol md={4} xl={3} className=\"mb-3\">\r\n                <Card\r\n                  className=\"min-height-200\"\r\n                  data={dt}\r\n                  getSelectedData={getSelectedData}\r\n                />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        ) : cardView ? (\r\n          <>\r\n            <ChiefComplaints OnClose={() => setCardView(false)} />\r\n          </>\r\n        ) : presentIll ? (\r\n          <>\r\n            <PresentIllness OnClose={() => setPresentIll(false)} />\r\n          </>\r\n        ) : historyView ? (\r\n          <>\r\n            <History OnClose={() => setHistoryView(false)} />\r\n          </>\r\n        ) : wellnessView ? (\r\n          <>\r\n            <WellnessProfile OnClose={() => setWellnessView(false)} />\r\n          </>\r\n        ) : rosView ? (\r\n          <>\r\n            <Ros onClose={() => setRosView(false)} />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Subjective;\r\n","import React, { useState } from \"react\";\r\nimport MedicalTab from \"./MedicalTab\";\r\nimport Objective from \"./Objective/Objective\";\r\nimport Assesment from \"./Assesment/Assesment\";\r\nimport Plan from \"./Plan/Plan\";\r\nimport Subjective from \"./Subjective/Subjective\";\r\n\r\nconst MedicalProfile = () => {\r\n  const tabs = [\r\n    { id: 1, title: \"Subjective\" },\r\n    { id: 2, title: \"Objective\" },\r\n    { id: 3, title: \"Assesment\" },\r\n    { id: 4, title: \"Plan\" },\r\n  ];\r\n  const PatientSubMenu = localStorage.getItem(\"PatientSubMenu-1\");\r\n  const ParsedPatientSubMenu = PatientSubMenu ? JSON.parse(PatientSubMenu) : 1;\r\n\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <MedicalTab tabs={tabs} getCurrentTab={getCurrentTab} defaultTab={0} />\r\n        {currentTab === 1 && <Subjective />}\r\n        {currentTab === 2 && <Objective />}\r\n        {currentTab === 3 && <Assesment />}\r\n        {currentTab === 4 && <Plan />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalProfile;\r\n","import { CCard, CCardBody, CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst PairTab = () => {\r\n  return (\r\n    <CContainer>\r\n      <CRow>\r\n        <CCol md={12} className=\"p-0\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <div className=\"d-flex justify-content-center align-items-center gap-3\">\r\n                <div>\r\n                  <img alt=\"qrCode\" src={Assets.QrCode} />\r\n                </div>\r\n                <div className=\"d-flex flex-column mb-3\">\r\n                  <span className=\"fs-16 fw-600 text-secondary\">\r\n                    User Name : <strong style={{ color: \"black\" }}>10</strong>\r\n                  </span>\r\n                  <span className=\"fs-16 fw-600 text-secondary\">\r\n                    Password : <strong style={{ color: \"black\" }}>98786</strong>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default PairTab;\r\n","import React, { useState } from 'react'\r\nimport { CModal, CModalBody, CModalHeader, CModalTitle, CButton, CModalFooter, CFormSelect, CRow, CCol } from '@coreui/react'\r\n// import { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst Filter = ({ visible, setVisible }) => {\r\n\r\n  const today = new Date();\r\n\r\n  const [startDate, setStartDate] = useState(today);\r\n  const [endDate, setEndDate] = useState(today);\r\n\r\n  function ClearFunction() {\r\n      setStartDate();\r\n      setEndDate();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       <CModal\r\n            visible={visible}\r\n            onClose={() => setVisible(false)}\r\n            aria-labelledby=\"LiveDemoExampleLabel\"\r\n            className='modal-cutomize'\r\n            backdrop=\"static\"\r\n        >\r\n            <CModalHeader>\r\n                <CModalTitle id=\"LiveDemoExampleLabel\">FILTER</CModalTitle>\r\n            </CModalHeader>\r\n            <CModalBody>\r\n                <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    options={[\r\n                        'Filter with Doctor',\r\n                        { label: 'Doctor One', value: '1' },\r\n                        { label: 'Doctor Two', value: '2' },\r\n                        { label: 'Dcotor Three', value: '3' }\r\n                    ]}\r\n                />\r\n                <CRow className='mb-4'>\r\n                    <CCol lg={6} sm={12}>\r\n                        <p className='date-sec'>From Date</p>\r\n                        <DatePicker\r\n                            showIcon\r\n                            selected={startDate}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            isClearable\r\n                            className=\"date-range-picker picker-sec\"\r\n                            dateFormat=\"MM/dd/yyyy\"\r\n                        />\r\n                    </CCol>\r\n                    <CCol lg={6} sm={12}>\r\n                        <p className='date-sec'>End Date</p>\r\n                        <DatePicker\r\n                            showIcon\r\n                            selected={endDate}\r\n                            onChange={(date) => setEndDate(date)}\r\n                            isClearable\r\n                            className=\"date-range-picker picker-sec\"\r\n                        />\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow className=''>\r\n                  <CCol lg={6} md={6} sm={12}>\r\n                  <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    label={\"Specialty\"}\r\n                    options={[\r\n                        'MD',\r\n                        { label: 'Doctor One', value: '1' },\r\n                        { label: 'Doctor Two', value: '2' },\r\n                        { label: 'Dcotor Three', value: '3' }\r\n                    ]}\r\n                />\r\n                  </CCol>\r\n                  <CCol lg={6} md={6} sm={12}>\r\n                  <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    label={\"Roaster Availability\"}\r\n                    options={[\r\n                        'Available',\r\n                        { label: 'Doctor One', value: '1' },\r\n                        { label: 'Doctor Two', value: '2' },\r\n                        { label: 'Dcotor Three', value: '3' }\r\n                    ]}\r\n                />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=''>\r\n                  <CCol lg={6} md={6} sm={12}>\r\n                  <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    label={\"Gender\"}\r\n                    options={[\r\n                        'All',\r\n                        { label: 'Male', value: '1' },\r\n                        { label: 'Female', value: '2' },\r\n                        { label: 'Others', value: '3' }\r\n                    ]}\r\n                />\r\n                  </CCol>\r\n                  </CRow>\r\n            </CModalBody>\r\n            <CModalFooter>\r\n                <CButton color=\"secondary\" onClick={() => ClearFunction()} className='clear-filter-btn'>\r\n                    Clear Filter\r\n                </CButton>\r\n                <CButton color=\"primary\" className='apply-filter-sec' onClick={() => setVisible(false)}>Apply Filter</CButton>\r\n            </CModalFooter>\r\n        </CModal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\nimport DoctorCards from \"../../../../Components/DoctorCards/DoctorCards\";\r\nimport { CModal, CModalBody, CModalHeader, CModalTitle, CForm, CFormInput, CButton, CModalFooter, CFormSelect, CRow, CCol } from '@coreui/react'\r\nimport './Call.css';\r\nimport Filter from \"./Filter/Filter\";\r\n\r\n\r\n\r\nconst CallTab = () => {\r\n\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const [showMobileInput, setShowMobileInput] = useState(false);\r\n  const [showEmailInput, setShowEmailInput] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const DoctorDetail = [\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n    {\r\n      name: \"Ram Mohan S R\",\r\n      email: \"rammohan@cure.com\",\r\n      mobile: \"+91 98765 43210\",\r\n      mrn: \"MRN 3\",\r\n      age: \"34 yrs (M)\",\r\n      profile: Assets.Patient,\r\n    },\r\n  ];\r\n\r\n  const DetailSec = () => {\r\n    navigate(\"/patients/summary\");\r\n  };\r\n  const handleMobileClick = () => {\r\n    setShowMobileInput(!showMobileInput);\r\n    setShowEmailInput(false);\r\n  };\r\n\r\n  const handleEmailClick = () => {\r\n    setShowEmailInput(!showEmailInput);\r\n    setShowMobileInput(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <section className=\"call-tab-sec mt-3\">\r\n      <div className=\"flex-sec top-sec\">\r\n        <div className=\"bread-crumbs\">\r\n          <p className=\"mb-0\">\r\n            <Link to=\"/patients\">Patient</Link> /{\" \"}\r\n            <Link to=\"/patients\" className=\"active\">\r\n              Registered Doctor\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"search-filter-sec\">\r\n          <div className=\"search-bar\">\r\n            <input type=\"text\" placeholder=\"Search Doctor\" />\r\n            <button type=\"submit\">\r\n              <i className=\"fas fa-search\"></i>\r\n            </button>\r\n          </div>\r\n          <div className=\"patient-adding\">\r\n            <button onClick={() => setVisible(!visible)}>\r\n              <img src={Assets.filter} alt=\"filter-sec\" className=\"filter-icon\" />{\" \"}\r\n              Filter\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"invite-doc-sec\">\r\n        <div className=\"invite-doc-sec-inside\">\r\n          <h3>Invite a Doctor</h3>\r\n          <div className=\"mobi-mail-btn-sec\">\r\n            <div className={showMobileInput ? \"cliked-icon\" : \"mobile-icon\"}>\r\n              <button type=\"button\" onClick={handleMobileClick}>\r\n                <i className=\"fas fa-mobile\"></i> &nbsp; Mobile\r\n              </button>\r\n            </div>\r\n            <div className={showEmailInput ? \"cliked-icon\" : \"mobile-icon\"}>\r\n              <button type=\"button\" onClick={handleEmailClick}>\r\n                <i className=\"fas fa-envelope\"></i> &nbsp;\r\n                Email\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {showMobileInput && (\r\n          <>\r\n\r\n            <hr />\r\n            <CForm>\r\n              <div className=\"mobile-input-section\">\r\n                <div>\r\n                  <CFormSelect\r\n                    aria-label=\"Default select example\"\r\n                    label={\"ISD Code\"}\r\n                    options={[\r\n                      '+91 India',\r\n                      { label: ' One', value: '1' },\r\n                      { label: ' Two', value: '2' },\r\n                      { label: ' Three', value: '3' }\r\n                    ]}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"exampleFormControlInput1\"\r\n                    label=\"Mobile Number\"\r\n                    placeholder=\"Enter\"\r\n                    aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <CButton color=\"primary\" className=\"start-btn\">Start</CButton>\r\n                </div>\r\n              </div>\r\n            </CForm>\r\n\r\n\r\n          </>\r\n        )}\r\n        {showEmailInput && (\r\n          <>\r\n            <hr />\r\n              <CForm>\r\n              <div className=\"mobile-input-section\">\r\n              <div>\r\n              <CFormInput\r\n                  type=\"email\"\r\n                  id=\"exampleFormControlInput1\"\r\n                  label=\"Email Address\"\r\n                  placeholder=\"Enter\"\r\n                  aria-describedby=\"exampleFormControlInputHelpInline\"\r\n                />\r\n                </div>\r\n                <div>\r\n                <CButton color=\"primary\" className=\"start-btn\">Start</CButton>\r\n                </div>\r\n              </div>\r\n              </CForm>\r\n           \r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"doctor-card-sec\">\r\n        <div className=\"row\">\r\n          {DoctorDetail?.map((data, i) => (\r\n            <div className=\"col-4\" onClick={() => DetailSec()} >\r\n              <Link className=\"card-link\">\r\n                <DoctorCards DoctorDetail={data} />\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className='modal-sec'>\r\n        <Filter visible={visible} setVisible={setVisible} />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CallTab","import React, { useState } from \"react\";\r\nimport \"./PatientDetailsView.css\";\r\nimport PatentProfile from \"../../../Components/Dashboard/PatentProfile/PatentProfile\";\r\nimport { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport PatientTabs from \"../../../Components/Dashboard/PatientTabs/PatientTabs\";\r\nimport Breadcrumb from \"../../../Components/Breadcrumb/Breadcrumb\";\r\nimport VitalsTab from \"../../../Components/Dashboard/PatientTabs/VitalsTab/VitalsTab\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport MedicalProfile from \"../../../Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalProfile\";\r\nimport PairTab from \"../../../Components/Dashboard/PatientTabs/PairTab/PairTab\";\r\nimport CallHistoryView from \"../../CallHistory/CallHistoryView\";\r\nimport CallTab from \"../../../Components/Dashboard/PatientTabs/CallTab/CallTab\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst PatientDetailsView = () => {\r\n  const [currentTab, setCurrentTab] = useState(() => {\r\n    // Initial state setup using localStorage\r\n    const storedCount = localStorage.getItem(\"patiendDetailTab\");\r\n    const storedFrom = localStorage.getItem(\"PatientMenu\");\r\n    const parsedData = storedCount && JSON.parse(storedCount);\r\n    return storedCount ? parsedData?.id : storedFrom ? Number(storedFrom) : null;\r\n  });\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {/* <CContainer> */}\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={12} xl={5} className=\"mb-2\">\r\n          <PatentProfile />\r\n        </CCol>\r\n        <CCol md={12} xl={7}>\r\n          {/* tabs={tabs} */}\r\n          <PatientTabs getCurrentTab={getCurrentTab} />\r\n        </CCol>\r\n      </CRow>\r\n      {!currentTab && <CallHistoryView />}\r\n\r\n      {currentTab === 2 && (\r\n        <CRow>\r\n          <CCol md={12}>\r\n            <MedicalProfile />\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {currentTab === 4 && (\r\n        <CRow>\r\n          <CCol md={12}>\r\n            <PairTab />\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {currentTab === 1 && (\r\n        <CRow>\r\n          <CCol md={12}>\r\n            <CallTab />\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {/* </CContainer> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientDetailsView;\r\n"],"names":["_ref","_datas$tableData","datas","removePercent","str","replace","formattedData","tableData","map","item","_item$date","name","date","split","data1","parseInt","CustomTooltip","_ref2","active","payload","label","length","_jsxs","style","backgroundColor","border","padding","children","_jsx","className","concat","chartLabel1","value","_Fragment","LineChart","width","height","data","margin","top","right","left","bottom","Tooltip","content","Line","type","dataKey","stroke","strokeWidth","category","openModal","filteredProducts","id","icon","Assets","VitalBP","badge","color","columnsData","result","status","systolic","diastolic","action","VitalBs","blood_sugar","blood_sugar_value","VitalBMI","bmi","weight","VitalHCT","hct_rate","VitalHBeat","ecg_result","ecg","contentType","link","ecgSample","interpretation","ecg_type","VitalHae","hemoglobin","hemoglobinValue","BKetone","blood_ketone","blood_ketone_value","VitalLipid","total_cholesterol","totalOnly","triglycerides","hdl","ldl","vldl","VitalRespi","SpO2","spo2","Temp","temperature","temperature_value","LFT","BUAcid","blood_uric_acid","blood_uric_acid_value","Urinalysis","chartLabel2","chartValue","specific_gravity","ph","clarity","protein","glucose","Urea","urea","urea_value","Creatinine","creatinine","creatinine_value","GFR","gfr","gfr_value","filter","product","CRow","CCol","md","index","xl","CCard","onClick","CCardBody","alt","src","dt","i","Badge","contentUrl","maxWidth","maxHeight","CardChart","tabs","getCurrentTab","defaultTab","currentTab","setCurrentTab","useState","switchTab","title","getSelectedData","image","isOpen","onClose","CModal","visible","alignment","size","CModalBody","CloseBtn","parseFloat","data2","minValue","Math","min","maxValue","max","isNaN","Infinity","XAxis","axisLine","tickLine","YAxis","yMax","domain","formatter","tooltipFormatter","props","Legend","CartesianGrid","horizontal","vertical","Set","BarChart","Bar","fill","console","log","LineChartDetails","ColumnChartDetails","addBack","defaultData","selectedTime","setSelectedTime","selectedDate","setSelectedDate","useEffect","defaultDateString","defaultDate","dateString","_datePart$split","_timePart$split","parts","datePart","timePart","month","day","year","Number","hours","minutes","Date","parseDateString","CContainer","lg","class","for","DatePicker","showIcon","selected","onChange","isClearable","closeOnScroll","wrapperClassName","showTimeSelect","showTimeSelectOnly","timeIntervals","dateFormat","defaultValue","xs","PrimaryButton","SecondaryButton","match","_defaultData$ecg","setType","options","findIndex","indexOf","borderRadius","Dropdown","getSelectedValue","_defaultData$result","extractNum","placeholder","cell","setCell","e","target","getTableDatas","post","patch","useApi","setSystolic","toString","setDiastolic","pulse","setPulse","errors","setErrors","formattedDate","String","getDate","padStart","getMonth","getFullYear","getFormattedDate","defaultDateTime","defaultTime","parsedDate","parse","isValid","setHours","setMinutes","setSeconds","onSubmit","validate","newErrors","time","trim","onEdit","onAdd","async","url","body","details","format","user_id","slug","toast","success","error","DATE_FORMAT","updatedDateTime","getHours","getMinutes","deleteModal","setDeleteModal","editModal","setEditModal","selectedData","setSelectedData","loading","del","clearCache","deleteData","editData","column","row","rowIndex","renderCell","BlurBackground","onDelete","CModalHeader","BMI","BPForm","RespirationRateForm","Spo2","Temperature","LFTForm","HeartRate","BSugar","LipidProfileForm","HCT","Hemogloin","BUricAcid","columnKey","toLowerCase","renderPdf","window","open","formatDateTime","dateTimeString","renderActionButton","Warning","EditPencil","Delete","startDate","setStartDate","endDate","setEndDate","today","maxDate","ActiveButton","CloseX","dateOnly","slice","items","setItems","setFilter","handleFilter","_data$tableData","filteredItems","_data$badge","chartView","setChartView","addView","setAddView","filterView","setFilterView","filterBack","Add","Filter","Chart","ECGChart","ChartTab","DateRangePicker","DynamicTable","setVitalView","currentTabtitle","titleObject","find","findTitleById","isModalOpen","setIsModalOpen","cardSelectedData","setSelectedCardData","entities","setEntities","get","TableDatas","response","code","_response$data","originalData","Array","isArray","bpFlagColor","bpFlag","freeze","reverse","join","transformData","vitals","err","BackBtn","Breadcrumb","paths","to","MedicalTab","VitalsTab","Modal","closeModal","ObjectiveDetailPage","deleteorg","onSelect","disabled","isSelected","setIsSelected","toggleSelected","_selectedData$ga","_getCurrentPageItems","_selectedData$ga5","_selectedData$skin4","dateCards","ga","notes","select","skin","currentPage","setCurrentPage","addFormView","setAddFormView","selectedOptions","setSelectedOptions","skinselectedOptions","setSkinSelectedOptions","labelName1","setLabelname1","deleteView","setDeleteView","labelName","setLabelname","editView","setEditView","skinoptions","addFormPage","handleSelect","option","handleSelectSkin","nutritionOpen","setNutritionOpen","constiOpen","setConstiOpen","generalOpen","setGeneralOpen","heentOpen","setHeentOpen","_selectedData$ga2","_selectedData$skin","_selectedData$ga3","_selectedData$skin2","_selectedData$ga4","_selectedData$skin3","getselected","method","toggleSelected1","DateSelector","getCurrentPageItems","startIndex","endIndex","DateCards","Pagination","onPageChange","pageNumber","totalItems","itemsPerPage","SingleDatePicker","listview","PlusIcon","MinusIcon","OptionItem","includes","SearchBar","search","rowData","file","OptionsIcon","LabTable","columns","getselectedData","LabForm","back","defaultValues","setDate","tabindex","Export","CTable","CTableHead","CTableRow","CTableHeaderCell","CTableBody","CTableDataCell","TableEdit","TableDelete","ImagingTable","ImagingForm","Objective","cardData","VitalSig","PhyExam","vitalView","phyView","setPhyView","labView","setLabView","imagingView","setImagingView","VitalSign","PhysicalExam","Lab","Imaging","Card","condition","treatment","disableText","setDisableText","gravidaoptions","findgravidaIndex","remark","DiagnosisTable","DiagnosisForm","takendate","setTakenDate","dosage_date","defaultDateString1","taken_date","defaultDate1","vaccine","period","colorVaccined","vaccined","tkDate","setTkDate","ImmunizationTable","ImmunizationForm","testSubIcon","testUnSubIcon","testViewIcon","questions","formTitle","formData","setFormData","handleChange","prevState","preventDefault","question","cIndex","CFormCheck","checked","Psychiatric","setFormTitle","PsychiatricTable","PsychiatricForm","Neurological","Peadiatric","Ophthalmic","Assesment","Diagnosis","Immunizaion","AssesmentTool","diagnosisView","setDiagnosisView","immunizationView","setImmunizationView","assessmentView","setAssessmentView","Immunization","AssessmentTool","buttonName2","getbtnNames","buttonText","setButtonText","setIsOpen","handleItemClick","text","toggleDropdown","cUp","cDown","trimester","setTrimester","DropdownButton","LabOrder","icd_code","lab_status","lab_name","detailView","setDetailView","LabOrderTable","LabOrderForm","CFormSelect","inline","defaultChecked","scan_name","scan_status","Approve","visibleEye","ImagingOrder","ImagingOrderTable","ImagingOrderForm","_defaultValues$medici","_defaultValues$medici2","_defaultValues$medici21","_defaultValues$medici22","medicines","setMedicines","strength","strengthMeasurement","days","totalQty","instruction","reason","m","a","n","food","handleAddMedicine","newMedicines","push","handleRemoveMedicine","medicine","handleMedicineInputChange","fieldName","newValue","processedValue","toISOString","btnValue","setBtnValue","btnView","setBtnView","setStrength","qty","setQty","timeTaken","setTimeTaken","_defaultValues$medici3","_defaultValues$medici4","_defaultValues$medici5","_defaultValues$medici6","_defaultValues$medici7","_defaultValues$medici8","_defaultValues$medici9","_defaultValues$medici10","_defaultValues$medici11","_defaultValues$medici12","_defaultValues$medici13","_defaultValues$medici14","_defaultValues$medici15","_defaultValues$medici16","_defaultValues$medici17","_defaultValues$medici18","_defaultValues$medici19","_defaultValues$medici20","paddingRight","boxSizing","whiteDel","whiteAdd","rx","frequency","duration","rowSpan","TickCircle","display","justifyContent","PlusCircle","transform","MedicationOrder","completedView","setCompletedView","MedicationOrderTable","MedicationOrderForm","MedicationCompleted","DetailsTable","description","no","ProcedurerTable","ProcedureForm","ProcedureTab","date_time","therapy_name","therapist_name","options1","getSelectedValue1","htmlFor","DateSearch","TherapiesTab","TherapiesTable","TherapiesForm","Plan","Orders","Therapies","Vaccine","CPT","PatEdu","ordersView","setOrdersView","cptView","setCptView","therapiesView","setTherapiesView","Cpt","onset_date","allergy","reaction","severity","CFormTextarea","Allergies","AllergiesTable","AllergiesForm","OnClose","PatientSubMenu3","localStorage","getItem","ParsedPatientSubMenu","JSON","SignsSymptoms","Medication","date2","setDate2","fert_treatment","setFert_treatment","para","setPara","lacating","setLacating","gravida","setGravida","lmp_date","defaultDateString2","ed_date","defaultDate2","trimster","lacatingoptions","bad","setBad","preg","setPreg","pregnant","fertTreat","setFertTreat","lact","setLact","cesarean","setCesarean","obstetric","setObsteric","handleChangeObste","handleChangeCesa","handleChangeLact","handleChangeFert","gravidaValue","setGravidaValue","paraValue","setParaValue","numCheck","input","newstrValue","boh","age","irregularity","dysmenorrhea","lmp","menopause","date_of_last_pap","history_of_abnormal","date_of_last_mamogram","history_of_mamogram","date_of_last_breast","history_of_breast","flow_duration","flow_type","setMenopause","getSelectedValue2","setValue","value1","setValue1","value2","setValue2","cycle_per_year","value3","setValue3","cycle_in_days","setError","handlePaste","clipboardData","getData","onPaste","date3","setDate3","abnormalStatus","setAbnormalStatus","mamogramStatus","setMamogramStatus","breastStatus","setBreastStatus","defaultDateString3","defaultDate3","findIndex3","findIndex4","rows","OGHistory","MenstrualrowData","bleeding","ScreeningrowData","currentHistoryTab","setCurrentHistoryTab","ObstetricHistoryTable","GynaecHistoryTable","getCurrentMenstrualPageItems","ScreeningHistory","getCurrentScreeningItem","MensturalHistoryForm","ScreeningHistoryForm","smokingStatus","setSmokingStatus","smoking","alcoholStatus","setAlcoholStatus","alcohol","drugStatus","setDrugStatus","drugs","onset","findIndex2","SocialHistory","SocialHistoryTable","MedHistoryForm","MedicalHistory","SurgicalHistory","FamilyHistory","intensity","exercises","setExercises","updatedData","newExercises","ex","exercise","timeCaption","hgdf","handleRemoveExercise","handleAddExercise","ExerciseHabit","ExerciseHabitTable","ExcerciseHabitForm","Mood","MoodTable","MoodForm","type_of_diet","intake","prev_illness","chronic","Nutrition","FluidIntakerowData","NutritionDietTable","NutritionFluidTable","getCurrentFluidPageItems","DietForm","FluidIntakeForm","sexual_activity","history","screening_date","current_status","historySti","setHistorySti","currentSti","setCurrentSti","handleHistoryStiClick","event","handleCurrentStiClick","SexualStatus","SexualStatusTable","SexualStatusForm","Sleep","SleepTable","SleepForm","ExcerciseHabit","_selectedData$ga7","_selectedData$ga8","_selectedData$ga9","_selectedData$ga10","_selectedData$ga11","_selectedData$ga12","_selectedData$ga13","_selectedData$ga14","_selectedData$ga15","_selectedData$ga16","_selectedData$ga17","_selectedData$ga18","_selectedData$ga19","_selectedData$ga20","_selectedData$ga21","_selectedData$ga22","_selectedData$ga23","_selectedData$ga24","_selectedData$ga25","_selectedData$ga26","skinselectedOptions1","setSkinSelectedOptions1","headselectedOptions","setHeadSelectedOptions","labelNameSkin","setLabelNameSkin","labelNameHead","setLabelNameHead","skinOpen","setSkinOpen","headOpen","setHeadOpen","allergyoptions","skinyoptions","headoptions","handleSelectSkin1","handleSelectHead","toggleSelectedSkin","HeadtoggleSelectedSkin","_selectedData$ga6","eyesOpen","setEyesOpen","eyesLabel","setEyesLabel","eyeselection","setEyeselection","eyeOptions","toggleEyes","handleSelectEyes","Ears","earsOpen","setEarsOpen","earsLabel","setEarsLabel","earSelection","setEarSelection","toggleEars","handleSelectEars","Nose","noseOpen","setNoseOpen","noseLabel","setNoseLabel","noseSelection","setNoseSelection","toggleNose","handleSelectNose","MouthThroat","mouthThroatOpen","setMouthThroatOpen","mouthThroatLabel","setMouthThroatLabel","mouthThroatSelection","setMouthThroatSelection","toggleMouth","handleSelectMouth","Neck","neckOpen","setNeckOpen","neckLabel","setNeckLabel","neckSelection","setNeckSelection","toggleNeck","handleSelectNeck","Breast","breastOpen","setBreastOpen","breastLabel","setBreastLabel","breastSelection","setBreastSelection","toggleBreast","handleSelectBreast","Respiratory","respiratoryOpen","setRespiratoryOpen","respiratoryLabel","setRespiratoryLabel","respiratorySelection","setRespiratorySelection","toggleRespi","handleSelectRespi","Cardiovascular","cardiovascularOpen","setCardiovascularOpen","cardiovascularLabel","setCardiovascularLabel","cardiovascularSelection","setCardiovascularSelection","toggleCardio","handleSelectCardio","Gastrointestinal","gastrointestinalOpen","setGastrointestinalOpen","gastrointestinalLabel","setGastrointestinalLabel","gastrointestinalSelection","setGastrointestinalSelection","toggleGastro","handleSelectGastro","PeripheralVascularDisease","peripheralVascularDiseaseOpen","setPeripheralVascularDiseaseOpen","peripheralVascularDiseaseLabel","setPeripheralVascularDiseaseLabel","peripheralVascularDiseaseSelection","setPeripheralVascularDiseaseSelection","togglePeripheral","handleSelectPeripheral","Musculoskeletal","musculoskeletalOpen","setMusculoskeletalOpen","musculoskeletalLabel","setMusculoskeletalLabel","musculoskeletalSelection","setMusculoskeletalSelection","toggleMusculo","handleSelectMusculo","neurologicalOpen","setNeurologicalOpen","neurologicalLabel","setNeurologicalLabel","neurologicalSelection","setNeurologicalSelection","toggleNeuro","handleSelectNeuro","Hematology","hematologyOpen","setHematologyOpen","hematologyLabel","setHematologyLabel","hematologySelection","setHematologySelection","toggleHemato","handleSelectHemato","Endocrine","endocrineOpen","setEndocrineOpen","endocrineLabel","setEndocrineLabel","endocrineSelection","setEndocrineSelection","toggleEndo","handleSelectEndo","psychiatricOpen","setPsychiatricOpen","psychiatricLabel","setPsychiatricLabel","psychiatricSelection","setPsychiatricSelection","togglePsych","handleSelectPsych","marginBottom","Subjective","History","WellnessProfile","ReviewSytm","PatientSubMenu2","cardView","setCardView","presentIll","setPresentIll","historyView","setHistoryView","wellnessView","setWellnessView","rosView","setRosView","ChiefComplaints","PresentIllness","Ros","MedicalProfile","PatientSubMenu","PairTab","QrCode","setVisible","backdrop","CModalTitle","sm","CModalFooter","CButton","CallTab","showMobileInput","setShowMobileInput","showEmailInput","setShowEmailInput","navigate","useNavigate","DoctorDetail","email","mobile","mrn","profile","Patient","Link","handleMobileClick","handleEmailClick","CForm","CFormInput","DoctorCards","PatientDetailsView","storedCount","storedFrom","parsedData","PatentProfile","PatientTabs","CallHistoryView"],"sourceRoot":""}