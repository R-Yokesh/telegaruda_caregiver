{"version":3,"file":"static/js/755.1dc55d2b.chunk.js","mappings":"4JAEA,MA+HA,EA/HeA,KACb,MAAMC,EAASC,0CACTC,EAASD,oCAERE,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,MAC7BG,GAAQC,EAAAA,EAAAA,QAAO,CAAC,GAEhBC,GAAYC,EAAAA,EAAAA,cAChBC,MAAOC,EAAKC,KAOV,GANAV,GAAW,GAEF,OAALI,QAAK,IAALA,GAAAA,EAAOO,QAAQF,IAAQA,EAAIG,WAAW,qBACxCZ,GAAW,GACXI,EAAMO,QAAU,CAAC,GAEV,OAALP,QAAK,IAALA,GAAAA,EAAOO,QAAQF,GAEjB,OADAT,GAAW,GACJI,EAAMO,QAAQF,GAGvB,IACE,MAAMI,QAAiBC,MAAMlB,EAASa,EAAKC,GAC3C,IAAKG,EAASE,GACZ,MAAM,IAAIC,MAAM,mBAADC,OAAoBR,EAAG,MAAAQ,OAAKJ,EAASK,aAEtD,MAAMC,QAAaN,EAASO,OAG5B,OAFAhB,EAAMO,QAAQF,GAAOU,EACrBnB,GAAW,GACJmB,CACT,CAAE,MAAOjB,GAGP,MAFAF,GAAW,GACXG,EAAS,UAADc,OAAWf,EAAMmB,UACnBnB,CACR,IAEF,CAACN,IAGG0B,GAAMf,EAAAA,EAAAA,cACVC,UACE,MAAME,EAAU,CACda,OAAQ,MACRC,QAAS,CACPC,cAAc,UAADR,OAAYS,eAAeC,QAAQ,UAChD,YAAa7B,IAGjB,aAAaQ,EAAUG,EAAKC,EAAQ,GAEtC,CAACJ,EAAWR,IAGR8B,GAAOrB,EAAAA,EAAAA,cACXC,MAAOC,EAAKoB,KACV,MAAMnB,EAAU,CACda,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADR,OAAYS,eAAeC,QAAQ,UAChD,YAAa7B,GAEf+B,KAAMC,KAAKC,UAAUF,IAEvB,aAAavB,EAAUG,EAAKC,EAAQ,GAEtC,CAACJ,IAGG0B,GAAQzB,EAAAA,EAAAA,cACZC,MAAOC,EAAKoB,KACV,MAAMnB,EAAU,CACda,OAAQ,QACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADR,OAAYS,eAAeC,QAAQ,UAChD,YAAa7B,GAEf+B,KAAMC,KAAKC,UAAUF,IAEvB,aAAavB,EAAUG,EAAKC,EAAQ,GAEtC,CAACJ,IAGG2B,GAAM1B,EAAAA,EAAAA,cACVC,UACE,MAAME,EAAU,CACda,OAAQ,SACRC,QAAS,CACPC,cAAc,UAADR,OAAYS,eAAeC,QAAQ,UAChD,YAAa7B,IAGjBE,GAAW,GACX,IACE,MAAMa,QAAiBC,MAAMlB,EAASa,EAAKC,GAC3C,IAAKG,EAASE,GACZ,MAAM,IAAIC,MAAM,mBAADC,OAAoBR,EAAG,MAAAQ,OAAKJ,EAASK,aAEtD,MAAMC,QAAaN,EAASO,OAE5B,OADApB,GAAW,GACJmB,CACT,CAAE,MAAOjB,GAGP,MAFAF,GAAW,GACXG,EAAS,UAADc,OAAWf,EAAMmB,UACnBnB,CACR,IAEF,CAACJ,EAAQF,IAOX,MAAO,CACLG,UACAG,QACAoB,MACAM,OACAI,QACAC,MACAC,YAViB3B,EAAAA,EAAAA,cAAY,KAC7BH,EAAMO,QAAU,CAAC,CAAC,GACjB,IASF,C,2DC5HH,MAIA,EAJcwB,IAAuB,IAAtB,MAAEC,EAAK,MAAEC,GAAOF,EAC7B,OAAOG,EAAAA,EAAAA,KAAA,OAAKC,UAAS,eAAAtB,OAAiBoB,EAAK,iBAAgBG,SAAEJ,GAAY,C,2DCD3E,MAIA,EAJuBD,IAAmB,IAAlB,SAAEK,GAAUL,EAClC,OAAOG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,SAAEA,GAAe,C,mFCC1D,MAqBA,EArBmBL,IAAgB,IAAf,MAAEM,GAAON,EAC3B,MAAMO,EAAYD,EAAME,OAAS,EAEjC,OACEL,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAJ,UACEF,EAAAA,EAAAA,KAACO,EAAAA,EAAW,CAAAL,SACTC,EAAMK,KAAI,CAAC3B,EAAM4B,KAChBT,EAAAA,EAAAA,KAACU,EAAAA,EAAe,CACdC,KANE,yBAMc,OAAJ9B,QAAI,IAAJA,OAAI,EAAJA,EAAM+B,IAClBX,UAAS,0BAAAtB,OACPyB,IAAcK,GAAS,SACtBP,UAEHF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAkBC,SAAErB,EAAKiB,eAI9C,C,2DClBP,MAQA,EARqBD,IAA4B,IAA3B,SAAEK,EAAQ,QAAEW,GAAShB,EACzC,OACEG,EAAAA,EAAAA,KAAA,UAAQC,UAAU,aAAaY,QAASA,EAAQX,SAC7CA,GACM,C,sECJb,MAqDA,EArDuBL,IAAmC,IAAlC,YAAEiB,EAAW,YAAEC,GAAalB,EAClD,MAAOmB,EAAYC,IAAiBtD,EAAAA,EAAAA,UAAS,SACtCuD,EAAQC,IAAaxD,EAAAA,EAAAA,WAAS,GAM/ByD,EAAmBC,IACvBJ,EAAcI,GACdF,GAAU,EAAM,EAGlB,OACEG,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,yBAAwBC,UACxCoB,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,oDAAoDY,QAASA,IAAME,EAAYC,GAAYd,SAAA,EACxGF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAEc,OAElChB,EAAAA,EAAAA,KAAA,OAAKa,QAhBUU,KACrBJ,GAAWD,EAAO,EAeiBhB,SACzBgB,GAGAlB,EAAAA,EAAAA,KAAA,OAAKwB,IAAKC,EAAAA,EAAOC,IAAKC,IAAI,QAF1B3B,EAAAA,EAAAA,KAAA,OAAKwB,IAAKC,EAAAA,EAAOG,MAAOD,IAAI,gBAOnCT,IACCI,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,mBAAkBC,SAAA,CAC9Bc,IAAeF,IACdd,EAAAA,EAAAA,KAAA,QACEa,QAASA,IAAMO,EAAgB,QAC/BnB,UAAU,eAAcC,SACzB,SAIa,SAAfc,IACChB,EAAAA,EAAAA,KAAA,QACEa,QAASA,IAAMO,EAAgBN,GAC/Bb,UAAU,eAAcC,SAEvBY,SAKL,C,2DCjDV,MAQA,EARsBjB,IAA4B,IAA3B,SAAEK,EAAQ,QAAEW,GAAShB,EAC1C,OACEG,EAAAA,EAAAA,KAAA,UAAQC,UAAU,SAASY,QAASA,EAAQX,SACzCA,GACM,C,+CCLN,MAAM2B,EAAiB,CAC5B,CACEC,GAAI,EACJC,KAAMN,EAAAA,EAAOO,QACbC,KAAM,iBACNC,KAAM,4BACNC,SAAU,iBACVC,MAAO,CACL,CAAEtC,MAAO,eAAgBC,MAAO,YAIlCsC,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,YAChB,CAAEgC,GAAI,EAAGhC,MAAO,aAChB,CAAEgC,GAAI,EAAGhC,MAAO,kBAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,UAAWP,KAAM,UACnCQ,SAAU,MACVC,UAAW,KACX,iBAAkB,KAClBC,YAAa,iBACbT,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,kBAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,QACRP,KAAM,8CAERQ,SAAU,MACVC,UAAW,KACX,iBAAkB,MAClBR,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,mBAGVU,YAAa,kBAEf,CACEb,GAAI,EACJC,KAAMN,EAAAA,EAAOqB,QACbb,KAAM,cACNE,SAAU,oCACVD,KAAM,4BACNE,MAAO,CAAC,CAAEtC,MAAO,YAAaC,MAAO,YACrC4C,YAAa,sBACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,eAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,UAAWP,KAAM,UACnCc,YAAa,YACbC,kBAAmB,MACnBH,KAAM,SACNX,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,eAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,UACRP,KAAM,UAERc,YAAa,YACbC,kBAAmB,MACnBH,KAAM,SACNX,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,iBAIZ,CACEH,GAAI,EACJC,KAAMN,EAAAA,EAAOwB,SACbhB,KAAM,MACNE,SAAU,iBACVD,KAAM,4BACNE,MAAO,CAAC,CAAEtC,MAAO,gBAAcC,MAAO,YACtC4C,YAAa,iBACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,UAAWP,KAAM,UACnCiB,IAAK,QACLC,OAAQ,QACRC,OAAQ,OACRlB,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,OAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,QACRP,KAAM,cAERiB,IAAK,QACLC,OAAQ,QACRC,OAAQ,SACRlB,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,SAIZ,CACEH,GAAI,EACJC,KAAMN,EAAAA,EAAO4B,SACbpB,KAAM,MACNE,SAAU,sBACVD,KAAM,4BACNE,MAAO,CAAC,CAAEtC,MAAO,MAAOC,MAAO,UAC/B4C,YAAa,kBACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,YAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,UAAWP,KAAM,UACnCqB,SAAU,MACVpB,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,OAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,UACRP,KAAM,UAERqB,SAAU,MACVpB,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,SAIZ,CACEH,GAAI,EACJC,KAAMN,EAAAA,EAAO8B,WACbtB,KAAM,MACNE,SAAU,iBACVD,KAAM,4BACNE,MAAO,CAAC,CAAEtC,MAAO,QAASC,MAAO,YACjC4C,YAAa,mBACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,kBAChB,CAAEgC,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,YAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPkB,WAAY,CAAEhB,OAAQ,QAASP,KAAM,uBACrCwB,IAAK,CACHC,YAAa,QACbC,KAAMlC,EAAAA,EAAOmC,WAEf,mBAAoB,MACpB1B,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,aACN4B,eAAgB,qBAChBC,SAAU,UAEZ,CACE,MAAO,EACPN,WAAY,CACVhB,OAAQ,UACRP,KAAM,UAERwB,IAAK,CACHC,YAAa,MACbC,KAAM,sCAER,mBAAoB,KACpBzB,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,aACN4B,eAAgB,qBAChBC,SAAU,YAIhB,CACEhC,GAAI,EACJC,KAAMN,EAAAA,EAAOsC,SACb9B,KAAM,aACNE,SAAU,sBACVD,KAAM,4BACNE,MAAO,CAAC,CAAEtC,MAAO,UAAWC,MAAO,UACnC4C,YAAa,oBACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,cAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,UAAWP,KAAM,UACnC+B,WAAY,UACZC,gBAAiB,KACjB/B,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,cAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,UACRP,KAAM,UAER+B,WAAY,UACZC,gBAAiB,KACjB/B,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,gBAIZ,CACEH,GAAI,EACJC,KAAMN,EAAAA,EAAOyC,QACbjC,KAAM,eACNE,SAAU,sBACVD,KAAM,4BACNE,MAAO,CAAC,CAAEtC,MAAO,aAAcC,MAAO,UACtC4C,YAAa,wBACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,gBAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,UAAWP,KAAM,UACnCkC,aAAc,cACdC,mBAAoB,OACpBlC,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,gBAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,UACRP,KAAM,UAERkC,aAAc,cACdC,mBAAoB,OACpBlC,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,kBAIZ,CACEH,GAAI,EACJC,KAAMN,EAAAA,EAAO4C,WACbpC,KAAM,gBACNE,SAAU,oCACVD,KAAM,4BACNE,MAAO,CACL,CAAEtC,MAAO,mCAAiCC,MAAO,WACjD,CAAED,MAAO,iBAAkBC,MAAO,SAClC,CAAED,MAAO,oBAAkBC,MAAO,SAElC,CAAED,MAAO,2BAA4BC,MAAO,YAE9C4C,YAAa,wBACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,qBAChB,CAAEgC,GAAI,EAAGhC,MAAO,iBAChB,CAAEgC,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,GAAIhC,MAAO,WAEnBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,UAAWP,KAAM,UACnCqC,kBAAmB,YACnBC,UAAW,MACXC,cAAe,YACfC,IAAK,WACLC,IAAK,WACL,UAAW,IACXC,KAAM,UACNzC,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,iBAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,UACRP,KAAM,UAERqC,kBAAmB,YACnBC,UAAW,MACXC,cAAe,YACfC,IAAK,WACLC,IAAK,WACL,UAAW,IACXC,KAAM,UACNzC,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,mBAIZ,CACEH,GAAI,EACJC,KAAMN,EAAAA,EAAOmD,WACb3C,KAAM,mBACNE,SAAU,iBACVD,KAAM,4BACNE,MAAO,CAAC,CAAEtC,MAAO,SAAUC,MAAO,UAClC4C,YAAa,yBACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,0BAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,QAASP,KAAM,QACjC,yBAA0B,KAC1BC,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,oBAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,UACRP,KAAM,UAER,yBAA0B,KAC1BC,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,sBAIZ,CACEH,GAAI,GACJC,KAAMN,EAAAA,EAAOoD,KACb5C,KAAM,OACNE,SAAU,iBACVD,KAAM,4BACNE,MAAO,CAAC,CAAEtC,MAAO,MAAOC,MAAO,YAC/B4C,YAAa,WACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAEhB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,QAASP,KAAM,YACjC,mBAAoB,MACpB6C,KAAM,MACN5C,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,QAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,UACRP,KAAM,UAER6C,KAAM,MACN,mBAAoB,KACpB5C,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,UAIZ,CACEH,GAAI,GACJC,KAAMN,EAAAA,EAAOsD,KACb9C,KAAM,cACNE,SAAU,iBACVD,KAAM,4BACNE,MAAO,CAAC,CAAEtC,MAAO,SAAUC,MAAO,YAClC4C,YAAa,sBACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,eAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,UAAWP,KAAM,UACnC+C,YAAa,0BACbC,kBAAmB,OACnBpC,KAAM,OACNX,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,eAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,UACRP,KAAM,UAER+C,YAAa,4BACbC,kBAAmB,OACnBpC,KAAM,OACNX,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,iBAIZ,CACEH,GAAI,GACJC,KAAMN,EAAAA,EAAOyD,IACbjD,KAAM,2BACNC,KAAM,4BACNC,SAAU,iBACVQ,YAAa,UACbP,MAAO,CACL,CAAEtC,MAAO,WAAYC,MAAO,SAC5B,CAAED,MAAO,UAAWC,MAAO,SAC3B,CAAED,MAAO,eAAgBC,MAAO,SAChC,CAAED,MAAO,cAAeC,MAAO,UAEjCsC,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAChB,CAAEgC,GAAI,EAAGhC,MAAO,YAChB,CAAEgC,GAAI,EAAGhC,MAAO,YAChB,CAAEgC,GAAI,EAAGhC,MAAO,eAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACP,UAAW,OACX,WAAY,OACZ,WAAY,KACZ,cAAe,OACf,UAAW,OACXJ,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,4BAER,CACE,MAAO,EACP,UAAW,OACX,WAAY,OACZ,WAAY,KACZ,cAAe,OACf,UAAW,OACXC,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,8BAIZ,CACEH,GAAI,GACJC,KAAMN,EAAAA,EAAO0D,OACblD,KAAM,kBACNE,SAAU,sBACVD,KAAM,4BACNE,MAAO,CAAC,CAAEtC,MAAO,UAAWC,MAAO,UACnC4C,YAAa,0BACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,mBAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,UAAWP,KAAM,UACnCmD,gBAAiB,UACjBC,sBAAuB,IACvBnD,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,mBAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,UACRP,KAAM,UAERmD,gBAAiB,UACjBC,sBAAuB,IACvBnD,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,qBA2DZ,CACEH,GAAI,GACJC,KAAMN,EAAAA,EAAO6D,WACbrD,KAAM,aACNE,SAAU,8BACVD,KAAM,4BAENE,MAAO,CACL,CAAEtC,MAAO,mBAAiBC,MAAO,WACjC,CAAED,MAAO,iBAAkBC,MAAO,WAClC,CAAED,MAAO,8BAA4BC,MAAO,WAC5C,CAAED,MAAO,mBAAoBC,MAAO,WACpC,CAAED,MAAO,iBAAkBC,MAAO,WAClC,CAAED,MAAO,oBAAqBC,MAAO,YAEvC4C,YAAa,mBACb4C,YAAa,KACblD,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,SAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAChB,CAAEgC,GAAI,EAAGhC,MAAO,oBAChB,CAAEgC,GAAI,EAAGhC,MAAO,MAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPvC,MAAO,QACPyF,WAAY,QACZC,iBAAkB,QAClBC,GAAI,eACJC,QAAS,QACTC,QAAS,QACTC,QAAS,WACTjD,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,cAER,CACE,MAAO,EACPlC,MAAO,QACPyF,WAAY,QACZC,iBAAkB,QAClBC,GAAI,eACJC,QAAS,QACTC,QAAS,QACTC,QAAS,WACTjD,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,gBAIZ,CACEH,GAAI,GACJC,KAAMN,EAAAA,EAAOqE,KACb7D,KAAM,OACNC,KAAM,4BACNC,SAAU,8BACVC,MAAO,CAAC,CAAEtC,MAAO,UAAWC,MAAO,UACnC4C,YAAa,eACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,UAAWP,KAAM,UACnC8D,KAAM,WACNC,WAAY,KACZ9D,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,QAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,UACRP,KAAM,UAER8D,KAAM,WACNC,WAAY,KACZ9D,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,UAIZ,CACEH,GAAI,GACJC,KAAMN,EAAAA,EAAOwE,WACbhE,KAAM,aACNE,SAAU,8BACVD,KAAM,4BACNE,MAAO,CAAC,CAAEtC,MAAO,YAAaC,MAAO,UACrC4C,YAAa,qBACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,cAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,UAAWP,KAAM,UACnCiE,WAAY,YACZC,iBAAkB,MAClBjE,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,cAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,UACRP,KAAM,UAERiE,WAAY,YACZC,iBAAkB,MAClBjE,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,gBAIZ,CACEH,GAAI,GACJC,KAAMN,EAAAA,EAAO2E,IACbnE,KAAM,MACNE,SAAU,8BACVD,KAAM,4BACNE,MAAO,CAAC,CAAEtC,MAAO,sBAAoBC,MAAO,UAC5C4C,YAAa,yBACbN,YAAa,CACX,CAAEP,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,UAChB,CAAEgC,GAAI,EAAGhC,MAAO,OAChB,CAAEgC,GAAI,EAAGhC,MAAO,QAChB,CAAEgC,GAAI,EAAGhC,MAAO,WAElBwC,UAAW,CACT,CACE,MAAO,EACPC,OAAQ,CAAEC,OAAQ,UAAWP,KAAM,UACnCoE,IAAK,sBACLC,UAAW,KACXpE,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,YACjBZ,KAAM,OAER,CACE,MAAO,EACPM,OAAQ,CACNC,OAAQ,UACRP,KAAM,UAERoE,IAAK,sBACLC,UAAW,KACXpE,KAAM,mBACNU,OAAQ,CAAC,CAAEC,KAAM,QAAU,CAAEA,KAAM,WACnCZ,KAAM,S,oHCxwBd,MA6PA,EA7PqBpC,IAAe,IAAd,KAAE0G,GAAM1G,EAC5B,MAOM2G,EAAU,CACd,CACE1E,GAAI,EACJG,KAAM,iCACNC,KAAM,cACNK,OAAQ,kBACRkE,UAAW,CACT,CACE3G,MAAO,4BACP1B,QAAS,CACP,2BACA,+BACA,0CACA,oBACA,6BAGJ,CACE0B,MAAO,uBACP1B,QAAS,CACP,uBACA,mBACA,oBACA,+CACA,YAGJ,CACE0B,MAAO,gCACP1B,QAAS,CACP,sBACA,kBACA,qBAGJ,CACE0B,MAAO,sCACP1B,QAAS,CACP,SACA,sCACA,yDACA,0CAGJ,CACE0B,MAAO,mBACP1B,QAAS,CACP,iBACA,qBACA,sBACA,+BACA,yBAGJ,CACE0B,MAAO,kBACP1B,QAAS,CACP,kBACA,0DACA,iCACA,mDACA,oDAGJ,CACE0B,MAAO,0BACP1B,QAAS,CACP,0BACA,6BACA,kBACA,8BACA,4BACA,cACA,4BAGJ,CACE0B,MAAO,2BACP1B,QAAS,CACP,0BACA,6BACA,kBACA,8BACA,4BACA,cACA,4BAGJ,CACE0B,MAAO,0BACP1B,QAAS,CACP,0BACA,6BACA,kBACA,8BACA,8BACA,cACA,4BAGJ,CACE0B,MAAO,2BACP1B,QAAS,CACP,0BACA,6BACA,kBACA,8BACA,4BACA,cACA,4BAGJ,CACE0B,MAAO,kBACP1B,QAAS,CACP,YACA,mBACA,oBACA,sBACA,YACA,4BAGJ,CACE0B,MAAO,gBACP1B,QAAS,CACP,0BACA,2CACA,8CACA,mDACA,+BACA,sBAGJ,CACE0B,MAAO,uBACP1B,QAAS,CACP,qBACA,8EACA,uFACA,+DACA,sBAGJ,CACE0B,MAAO,iBACP1B,QAAS,CACP,SACA,2DACA,+EACA,iBACA,6BAGJ,CACE0B,MAAO,6BACP1B,QAAS,CACP,iBACA,uDACA,mDACA,8DACA,kCASHsI,EAAaC,IAAkBhJ,EAAAA,EAAAA,WAAS,IAExCiJ,EAAaC,IAAkBlJ,EAAAA,EAAAA,UAAS,IACxCmJ,EAAcC,IAAmBpJ,EAAAA,EAAAA,UAAS,CAAC,GA4BlD,OACE2D,EAAAA,EAAAA,MAAAhB,EAAAA,SAAA,CAAAJ,SAAA,EACIwG,IACA1G,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAJ,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAACgH,EAAAA,EAAgB,CACfR,QAxBgBS,MAC1B,MAAMC,EATa,GASCN,EAAc,GAC5BO,EAAWD,EAVE,EAWnB,OAAc,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASY,MAAMF,EAAYC,EAAS,EAqBxBF,GACTI,QAvNO,CACjB,CAAEvH,MAAO,MACT,CAAEA,MAAO,QACT,CAAEA,MAAO,SACT,CAAEA,MAAO,UACT,CAAEA,MAAO,YAmNCwH,gBAhBYA,CAACzI,EAAMgE,KAC7B0E,QAAQC,IAAI3E,EAAM,QAAShE,GAC3BkI,EAAgBlI,GACH,SAATgE,GANJ8D,GAAe,EAQf,EAYUJ,KAAMA,QAgBbG,IACC1G,EAAAA,EAAAA,KAACyH,EAAAA,EAAK,CAACxH,UAAU,0BAAyBC,UACxCF,EAAAA,EAAAA,KAAC0H,EAAAA,EAAS,CAACzH,UAAU,OAAMC,UACzBF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAe,CACdC,KAAMA,KACJjB,GAAe,GACfI,EAAgB,CAAC,EAAE,EAErBc,cAAef,EACfL,UAAWK,EAAaL,WAAa,GACrCqB,UApEM,yCAyEb,C,oHCzPP,MAuKA,EAvKmBjI,IAAe,IAAd,KAAE0G,GAAM1G,EAC1B,MAOM2G,EAAU,CACd,CACE1E,GAAI,EACJG,KAAM,kBACNC,KAAM,cACNK,OAAQ,iBACRkE,UAAW,CACT,CACE3G,MACE,+EACF1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MACE,iEACF1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MACE,iEACF1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,mCACP1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,8CACP1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,oDACP1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,+DACP1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,qDACP1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MACE,+FACF1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,oDACP1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,+BACP1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,wDACP1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MACE,uEACF1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,4CACP1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,mDACP1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,uDACP1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,mDACP1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MACE,kEACF1B,QAAS,CAAC,MAAO,OAEnB,CACE0B,MAAO,oDACP1B,QAAS,CAAC,MAAO,WAQlBsI,EAAaC,IAAkBhJ,EAAAA,EAAAA,WAAS,IAExCiJ,EAAaC,IAAkBlJ,EAAAA,EAAAA,UAAS,IACxCmJ,EAAcC,IAAmBpJ,EAAAA,EAAAA,UAAS,CAAC,GA4BlD,OACE2D,EAAAA,EAAAA,MAAAhB,EAAAA,SAAA,CAAAJ,SAAA,EACIwG,IACA1G,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAJ,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAACgH,EAAAA,EAAgB,CACfR,QAxBgBS,MAC1B,MAAMC,EATa,GASCN,EAAc,GAC5BO,EAAWD,EAVE,EAWnB,OAAc,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASY,MAAMF,EAAYC,EAAS,EAqBxBF,GACTI,QA5IO,CACjB,CAAEvH,MAAO,MACT,CAAEA,MAAO,QACT,CAAEA,MAAO,SACT,CAAEA,MAAO,UACT,CAAEA,MAAO,YAwICwH,gBAhBYA,CAACzI,EAAMgE,KAC7B0E,QAAQC,IAAI3E,EAAM,QAAShE,GAC3BkI,EAAgBlI,GACH,SAATgE,GANJ8D,GAAe,EAQf,EAYUJ,KAAMA,QAKbG,IACC1G,EAAAA,EAAAA,KAACyH,EAAAA,EAAK,CAACxH,UAAU,0BAAyBC,UACxCF,EAAAA,EAAAA,KAAC0H,EAAAA,EAAS,CAACzH,UAAU,OAAMC,UACzBF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAe,CACdC,KAAMA,KACJjB,GAAe,GACfI,EAAgB,CAAC,EAAE,EAErBc,cAAef,EACfL,UAAWK,EAAaL,WAAa,GACrCqB,UAzDM,0BA8Db,C,oHCnKP,MA6GA,EA7GmBjI,IAAe,IAAd,KAAE0G,GAAM1G,EAC1B,MAOM2G,EAAU,CACd,CACE1E,GAAI,EACJG,KAAM,cACNC,KAAM,cACNK,OAAQ,kBACRkE,UAAW,CACT,CACE3G,MAAO,4BACP1B,QAAS,CAAC,SAAU,qBAAsB,WAE5C,CACE0B,MAAO,WACP1B,QAAS,CAAC,SAAU,gBAAiB,iBAEvC,CACE0B,MAAO,mCACP1B,QAAS,CACP,SACA,kCACA,mCAGJ,CACE0B,MAAO,6BACP1B,QAAS,CAAC,aAAc,8BAA+B,SAEzD,CACE0B,MAAO,iBACP1B,QAAS,CAAC,SAAU,qBAAsB,qBAQ3CsI,EAAaC,IAAkBhJ,EAAAA,EAAAA,WAAS,IAExCiJ,EAAaC,IAAkBlJ,EAAAA,EAAAA,UAAS,IACxCmJ,EAAcC,IAAmBpJ,EAAAA,EAAAA,UAAS,CAAC,GA4BlD,OACE2D,EAAAA,EAAAA,MAAAhB,EAAAA,SAAA,CAAAJ,SAAA,EACIwG,IACA1G,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAJ,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAACgH,EAAAA,EAAgB,CACfR,QAxBgBS,MAC1B,MAAMC,EATa,GASCN,EAAc,GAC5BO,EAAWD,EAVE,EAWnB,OAAc,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASY,MAAMF,EAAYC,EAAS,EAqBxBF,GACTI,QAlFO,CACjB,CAAEvH,MAAO,MACT,CAAEA,MAAO,QACT,CAAEA,MAAO,SACT,CAAEA,MAAO,UACT,CAAEA,MAAO,YA8ECwH,gBAhBYA,CAACzI,EAAMgE,KAC7B0E,QAAQC,IAAI3E,EAAM,QAAShE,GAC3BkI,EAAgBlI,GACH,SAATgE,GANJ8D,GAAe,EAQf,EAYUJ,KAAMA,QAKbG,IACC1G,EAAAA,EAAAA,KAACyH,EAAAA,EAAK,CAACxH,UAAU,0BAAyBC,UACxCF,EAAAA,EAAAA,KAAC0H,EAAAA,EAAS,CAACzH,UAAU,OAAMC,UACzBF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAe,CACdC,KAAMA,KACJjB,GAAe,GACfI,EAAgB,CAAC,EAAE,EAErBc,cAAef,EACfL,UAAWK,EAAaL,WAAa,GACrCqB,UAzDM,sBA8Db,C,oHCzGP,MAmkBA,EAnkBoBjI,IAAe,IAAd,KAAE0G,GAAM1G,EAC3B,MAOM2G,EAAU,CACd,CACE1E,GAAI,EACJG,KAAM,oBACNC,KAAM,cACNK,OAAQ,kBACRkE,UAAW,CACT,CACE3G,MAAO,kBACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,eACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,4DACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MACE,qEACF1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,eACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,gBACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,eACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,qBACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,sCACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,0BACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,iDACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,8CACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,kCACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,yCACP1B,QAAS,CACP,sBACA,oBACA,mBAGJ,CACE0B,MAAO,uBACP1B,QAAS,CACP,sBACA,oBACA,qBAKR,CACE0D,GAAI,EACJG,KAAM,QACNwE,UAAW,CACT,CACE3G,MAAO,2CACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,kBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,wCACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,mBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,oBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,aAIzD,CACE0D,GAAI,EACJG,KAAM,UACNwE,UAAW,CACT,CACE3G,MAAO,oBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,oBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,oBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MACE,gEACF1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,oBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,mBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,kBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,aAIzD,CACE0D,GAAI,EACJG,KAAM,aACNwE,UAAW,CACT,CACE3G,MAAO,sBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,kDACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,qBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,gBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,2BACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,sBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,oBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,WAErD,CACE0B,MAAO,qBACP1B,QAAS,CAAC,QAAS,SAAU,YAAa,QAAS,aAIzD,CACE0D,GAAI,EACJG,KAAM,QACNwE,UAAW,CACT,CACE3G,MAAO,aACP1B,QAAS,CACP,oDACA,0DACA,mDACA,8DACA,+DAGJ,CACE0B,MAAO,aACP1B,QAAS,CACP,+CACA,qDACA,8CACA,mDACA,oDAGJ,CACE0B,MAAO,aACP1B,QAAS,CACP,sCACA,4CACA,qCACA,0CACA,8EAGJ,CACE0B,MAAO,aACP1B,QAAS,CACP,gCACA,sCACA,+BACA,oCACA,gDAGJ,CACE0B,MAAO,aACP1B,QAAS,CACP,+FACA,kDACA,2CACA,gDACA,4DAKR,CACE0D,GAAI,EACJG,KAAM,2BACNwE,UAAW,CACT,CACE3G,MACE,8GACF1B,QAAS,CACP,OACA,0OACA,wUACA,2SAKR,CACE0D,GAAI,EACJG,KAAM,gCACNwE,UAAW,CACT,CACE3G,MACE,mHACF1B,QAAS,CACP,OACA,4UACA,2RACA,0QAKR,CACE0D,GAAI,EACJG,KAAM,2CACNwE,UAAW,CACT,CACE3G,MAAO,oBACP1B,QAAS,CACP,cACA,6EACA,sFACA,+FACA,6FAGJ,CACE0B,MAAO,eACP1B,QAAS,CACP,cACA,6EACA,mGACA,+FACA,6FAGJ,CACE0B,MAAO,yBACP1B,QAAS,CACP,cACA,mFACA,uDACA,0DACA,4DAGJ,CACE0B,MAAO,mCACP1B,QAAS,CACP,cACA,iGACA,iFACA,kFACA,yFAGJ,CACE0B,MACE,sEACF1B,QAAS,CACP,cACA,2FACA,mGACA,sGACA,sGAGJ,CACE0B,MAAO,wBACP1B,QAAS,CACP,cACA,oHACA,oHACA,sHACA,kHAGJ,CACE0B,MAAO,gBACP1B,QAAS,CACP,cACA,8IACA,oLACA,0HACA,uJAGJ,CACE0B,MAAO,WACP1B,QAAS,CACP,cACA,qFACA,0GACA,gHACA,wGAKR,CACE0D,GAAI,EACJG,KAAM,mBACNwE,UAAW,CACT,CACE3G,MACE,6FACF1B,QAAS,CACP,6BACA,yPACA,+LACA,4QAKR,CACE0D,GAAI,GACJG,KAAM,0BACNwE,UAAW,CACT,CACE3G,MACE,6GACF1B,QAAS,CACP,2FACA,uIACA,sHACA,oLACA,2MAKR,CACE0D,GAAI,GACJG,KAAM,gCACNwE,UAAW,CACT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","sources":["ApiServices/useApi.jsx","Components/Badge/Badge.jsx","Components/BlurBackground/BlurBackground.jsx","Components/Breadcrumb/Breadcrumb.jsx","Components/Buttons/ActiveButton/ActiveButton.jsx","Components/Buttons/DropDownButton/DropDownButton.jsx","Components/Buttons/PrimaryButton/PrimaryButton.jsx","Components/Consultant/TableColumnsJson/ObjectiveJson.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Neurological/Neurological.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Ophthalmic/Ophthalmic.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Peadiatric/Peadiatric.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Psychiatric/Psychiatric.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/AssessmentTool/Psychiatric/PsychiatricForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Diagnosis/DiagnosisForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Diagnosis/Diagnosis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Immunization/ImmunizationForm.jsx","Components/Tables/ImmunizationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Assesment/Immunization/Immunization.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/MedicalTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/Lab/LabForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Objective/PhysicalExam/PhysicalExam.jsx","Components/Tables/NextAppointmentTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointmentTab/NextAppointmentForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointmentTab/NextAppointmentTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/NextAppointment/NextAppointment.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Imaging Order/ImagingOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Lab Order/LabOrder.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrderForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/DetailsTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationCompleted.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Orders/Medication Order/MedicationOrder.jsx","Components/Tables/PatientEducationTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducationTab/PatientEducationTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducation.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/PatientEducation/PatientEducationTab/PatientEducationForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureForm.jsx","Components/Tables/ProcedurerTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/ProcedureTab/ProcedureTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Procedure CPT/Cpt.jsx","Components/Tables/TherapiesTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/TherapiesTab/TherapiesForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/TherapiesTab/TherapiesTab.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Plan/Therapies/Therapies.jsx","Components/Tables/Subjective/ChiefComplaintTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Chief Complaints/ChiefComplaintsForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Chief Complaints/ChiefComplaints.jsx","Components/Tables/Subjective/FamilyHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Family History/FamilyHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Medical History/MedHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Medical History/MedicalHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/ObstericHistoryForm.jsx","Components/Tables/Subjective/ObstetricHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/MensturalHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/ScreeningHistoryForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/OG History/OGHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Social History/MedHistoryForm.jsx","Components/Tables/Subjective/SocialHistoryTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Social History/SocialHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Surgical History/SurgicalForm.jsx","Components/Tables/Subjective/SurgicalTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/History/Surgical History/SurgicalHistory.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Medication/Medication.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Medication/MedicationForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Signs And Symptoms/SignsSymptomsForm.jsx","Components/Tables/Subjective/SymtomsTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/Present Illness/Signs And Symptoms/SignsSymptoms.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/ExerciseHabit/ExcerciseHabitForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/ExerciseHabit/ExerciseHabit.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Mood/MoodForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Mood/Mood.jsx","Components/Tables/Subjective/WellnessProfileTable/NutritionDietTable.jsx","Components/Tables/Subjective/WellnessProfileTable/NutritionFluidTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/DietForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/FluidIntakeForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Nutrition/Nutrition.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/SexualStatus/SexualStatusForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/SexualStatus/SexualStatus.jsx","Components/Tables/Subjective/WellnessProfileTable/SleepTable.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Sleep/SleepForm.jsx","Components/Dashboard/PatientTabs/MedicalProfileTab/Subjective/WellnessProfile/Sleep/Sleep.jsx","Components/DateCards/DateCards.jsx","Components/DateRangePicker/DateSearch.jsx","Components/DateRangePicker/DateSelector.jsx","Components/DateRangePicker/SingleDatePicker.jsx","Components/Dropdown/Dropdown.jsx","Components/OptionItems/OptionItem.jsx","Components/Pagination/Pagination.jsx","Components/SearchBar/SearchBar.jsx","Components/Tables/AssessmentTools/PsychiatricTable.jsx","Components/Tables/DiagnosisTable.jsx","Components/Tables/DynamicTable.jsx","Components/Tables/ImagingOrderTable.jsx","Components/Tables/LabOrderTable.jsx","Components/Tables/LabTable.jsx","Components/Tables/MedicationOrderTable.jsx","Components/Tables/Subjective/MedicalHistoryTable.jsx","Components/Tables/Subjective/MedicationTable.jsx","Components/Tables/Subjective/WellnessProfileTable/ExerciseHabitTable.jsx","Components/Tables/Subjective/WellnessProfileTable/MoodTable.jsx","Config/config.jsx","Utils/dateUtils.jsx"],"sourcesContent":["import { useState, useCallback, useRef } from \"react\";\r\n\r\nconst useApi = () => {\r\n  const apiUrl = process.env.REACT_APP_API_URL;\r\n  const apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const cache = useRef({});\r\n\r\n  const fetchData = useCallback(\r\n    async (url, options) => {\r\n      setLoading(true);\r\n\r\n      if (cache?.current[url] && url.startsWith(\"resource/vitals\")) {\r\n        setLoading(true);\r\n        cache.current = {};\r\n      }\r\n      if (cache?.current[url]) {\r\n        setLoading(false);\r\n        return cache.current[url];\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(apiUrl + url, options);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch ${url}: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        cache.current[url] = data;\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(`Error: ${error.message}`);\r\n        throw error;\r\n      }\r\n    },\r\n    [apiUrl]\r\n  );\r\n\r\n  const get = useCallback(\r\n    async (url) => {\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData, apiKey]\r\n  );\r\n\r\n  const post = useCallback(\r\n    async (url, body) => {\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n        body: JSON.stringify(body),\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData]\r\n  );\r\n\r\n  const patch = useCallback(\r\n    async (url, body) => {\r\n      const options = {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n        body: JSON.stringify(body),\r\n      };\r\n      return await fetchData(url, options);\r\n    },\r\n    [fetchData]\r\n  );\r\n\r\n  const del = useCallback(\r\n    async (url) => {\r\n      const options = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n          \"X-API-KEY\": apiKey,\r\n        },\r\n      };\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(apiUrl + url, options);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch ${url}: ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(`Error: ${error.message}`);\r\n        throw error;\r\n      }\r\n    },\r\n    [apiKey, apiUrl]\r\n  );\r\n\r\n  // Function to clear all cache entries\r\n  const clearCache = useCallback(() => {\r\n    cache.current = {}; // Clear all entries from cache\r\n  }, []);\r\n  return {\r\n    loading,\r\n    error,\r\n    get,\r\n    post,\r\n    patch,\r\n    del,\r\n    clearCache,\r\n  };\r\n};\r\n\r\nexport default useApi;\r\n","import React from \"react\";\r\n\r\nconst Badge = ({ label, color }) => {\r\n  return <div className={`badge badge-${color} fs-14 fw-500`}>{label}</div>;\r\n};\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\n\r\nconst BlurBackground = ({ children }) => {\r\n  return <div className=\"blur-background\">{children}</div>;\r\n};\r\n\r\nexport default BlurBackground;\r\n","import { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport \"./Breadcrumb.css\";\r\n\r\nconst Breadcrumb = ({ paths }) => {\r\n  const lastIndex = paths.length - 1;\r\n  const url = \"/telegaruda-caregiver\";\r\n  return (\r\n    <>\r\n      <CBreadcrumb>\r\n        {paths.map((data, index) => (\r\n          <CBreadcrumbItem\r\n            href={url + data?.to}\r\n            className={`breadcrumb-item-custom ${\r\n              lastIndex === index && \"black\"\r\n            }`}\r\n          >\r\n            <span className=\"breadcrumb-label\">{data.label}</span>\r\n          </CBreadcrumbItem>\r\n        ))}\r\n      </CBreadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from \"react\";\r\nimport \"./ActiveButton.css\";\r\n\r\nconst ActiveButton = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"act-button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ActiveButton;\r\n","import React, { useState } from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst DropdownButton = ({ buttonName2, getbtnNames }) => {\r\n  const [buttonText, setButtonText] = useState(\"SAVE\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleItemClick = (text) => {\r\n    setButtonText(text);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button className=\"dropdown-button button\">\r\n        <div className=\"d-flex align-items-center justify-content-between\" onClick={() => getbtnNames(buttonText)}>\r\n          <div className=\"w-100\" >\r\n            <span className=\"fs-16 fw-600\">{buttonText}</span>\r\n          </div>\r\n          <div onClick={toggleDropdown}>\r\n            {!isOpen ? (\r\n              <img src={Assets.cDown} alt=\"down\" />\r\n            ) : (\r\n              <img src={Assets.cUp} alt=\"up\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"dropdown-content\">\r\n          {buttonText === buttonName2 && (\r\n            <span\r\n              onClick={() => handleItemClick(\"SAVE\")}\r\n              className=\"fs-14 fw-600\"\r\n            >\r\n              SAVE\r\n            </span>\r\n          )}\r\n          {buttonText === \"SAVE\" && (\r\n            <span\r\n              onClick={() => handleItemClick(buttonName2)}\r\n              className=\"fs-14 fw-600\"\r\n            >\r\n              {buttonName2}\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownButton;\r\n","import React from \"react\";\r\nimport \"./PrimaryButton.css\";\r\n\r\nconst PrimaryButton = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import { Assets } from \"../../../assets/Assets\";\r\n\r\nexport const ObjectiveDatas = [\r\n  {\r\n    id: 1,\r\n    icon: Assets.VitalBP,\r\n    name: \"Blood Pressure\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    category: \"Primary Vitals\",\r\n    badge: [\r\n      { label: \"120/80 mm Hg\", color: \"success\" },\r\n      // { label: \"DIA : 71\", color: \"success\" },\r\n      // { label: \"Pulse : 89\", color: \"success\" },\r\n    ],\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"SYSTOLIC\" },\r\n      { id: 4, label: \"DIASTOLIC\" },\r\n      { id: 5, label: \"PULSE (IN BPM)\" },\r\n      { id: 6, label: \"DATE\" },\r\n      { id: 7, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        systolic: \"112\",\r\n        diastolic: \"25\",\r\n        \"pulse_(in_bpm)\": \"89\",\r\n        chartLabel1: \"PULSE (IN BPM)\",\r\n        date: \"02-04-2024 12:13\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Pressure\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"error\",\r\n          name: \"High Blood Pressure (Hypertension) Stage 1\",\r\n        },\r\n        systolic: \"112\",\r\n        diastolic: \"25\",\r\n        \"pulse_(in_bpm)\": \"125\",\r\n        date: \"05-04-2024 13:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Pressure\",\r\n      },\r\n    ],\r\n    chartLabel1: \"PULSE (IN BPM)\",\r\n  },\r\n  {\r\n    id: 2,\r\n    icon: Assets.VitalBs,\r\n    name: \"Blood Sugar\",\r\n    category: \"Metabolic And Biochemical Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"110 mg/DL\", color: \"success\" }],\r\n    chartLabel1: \"Blood Sugar (mg/DL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Blood Sugar\" },\r\n      { id: 4, label: \"Type\" },\r\n      { id: 5, label: \"DATE\" },\r\n      { id: 6, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        blood_sugar: \"110 mg/dL\",\r\n        blood_sugar_value: \"110\",\r\n        type: \"Random\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Sugar\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        blood_sugar: \"110 mg/dL\",\r\n        blood_sugar_value: \"110\",\r\n        type: \"Random\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Blood Sugar\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    icon: Assets.VitalBMI,\r\n    name: \"BMI\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"24.5 kg/m²\", color: \"success\" }],\r\n    chartLabel1: \"BMI (kg/m²)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BMI\" },\r\n      { id: 4, label: \"Height\" },\r\n      { id: 5, label: \"Weight\" },\r\n      { id: 6, label: \"DATE\" },\r\n      { id: 7, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        bmi: \"24.13\",\r\n        height: \"159cm\",\r\n        weight: \"61kg\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"BMI\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"error\",\r\n          name: \"Overweight\",\r\n        },\r\n        bmi: \"27.01\",\r\n        height: \"180cm\",\r\n        weight: \"87.5kg\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"BMI\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    icon: Assets.VitalHCT,\r\n    name: \"HCT\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"23%\", color: \"error\" }],\r\n    chartLabel1: \"HCT Rate (in %)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"HCT Rate\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        hct_rate: \"42%\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"HCT\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        hct_rate: \"45%\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"HCT\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    icon: Assets.VitalHBeat,\r\n    name: \"ECG\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"1 Bpm\", color: \"success\" }],\r\n    chartLabel1: \"Heart Rate (BPM)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"INTERPRETATION\" },\r\n      { id: 3, label: \"ECG\" },\r\n      { id: 4, label: \"ECG TYPE\" },\r\n      { id: 5, label: \"DATE\" },\r\n      { id: 6, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        ecg_result: { status: \"error\", name: \"Abnormal Heart Rate\" },\r\n        ecg: {\r\n          contentType: \"image\",\r\n          link: Assets.ecgSample,\r\n        },\r\n        \"heart_rate_(bpm)\": \"120\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Heart Rate\",\r\n        interpretation: \"ECG Interpretation\",\r\n        ecg_type: \"3 Lead\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        ecg_result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        ecg: {\r\n          contentType: \"pdf\",\r\n          link: \"https://www.orimi.com/pdf-test.pdf\",\r\n        },\r\n        \"heart_rate_(bpm)\": \"70\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Heart Rate\",\r\n        interpretation: \"ECG Interpretation\",\r\n        ecg_type: \"3 Lead\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    icon: Assets.VitalHae,\r\n    name: \"Hemoglobin\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"14 g/dL\", color: \"error\" }],\r\n    chartLabel1: \"Hemoglobin (g/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Hemoglobin\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        hemoglobin: \"15 g/dL\",\r\n        hemoglobinValue: \"15\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Hemoglobin\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        hemoglobin: \"15 g/dL\",\r\n        hemoglobinValue: \"15\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Hemoglobin\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    icon: Assets.BKetone,\r\n    name: \"Blood Ketone\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"0.5 mmol/L\", color: \"error\" }],\r\n    chartLabel1: \"Blood Ketone (mmol/L)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BLOOD KETONE\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        blood_ketone: \"0.33 mmol/L\",\r\n        blood_ketone_value: \"0.33\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Ketone\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        blood_ketone: \"0.33 mmol/L\",\r\n        blood_ketone_value: \"0.33\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Blood Ketone\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    icon: Assets.VitalLipid,\r\n    name: \"Lipid Profile\",\r\n    category: \"Metabolic And Biochemical Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [\r\n      { label: \"Total Cholesterol: 180 mg/dL \", color: \"success\" },\r\n      { label: \"LDL: 100 mg/dL\", color: \"error\" },\r\n      { label: \"HDL: 50 mg/dL \", color: \"error\" },\r\n      // { label: \"TG: Optimal\", color: \"error\" },\r\n      { label: \"Triglycerides: 150 mg/dL\", color: \"success\" },\r\n    ],\r\n    chartLabel1: \"Lipid Profile (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Total Cholesterol\" },\r\n      { id: 4, label: \"Triglycerides\" },\r\n      { id: 5, label: \"HDL\" },\r\n      { id: 6, label: \"LDL\" },\r\n      { id: 7, label: \"LDL/HDL\" },\r\n      { id: 8, label: \"VLDL\" },\r\n      { id: 9, label: \"DATE\" },\r\n      { id: 10, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        total_cholesterol: \"180 mg/dL\",\r\n        totalOnly: \"180\",\r\n        triglycerides: \"140 mg/dL\",\r\n        hdl: \"60 mg/dL\",\r\n        ldl: \"60 mg/dL\",\r\n        \"ldl/hdl\": \"1\",\r\n        vldl: \"5 mg/dL\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Lipid Profile\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        total_cholesterol: \"180 mg/dL\",\r\n        totalOnly: \"190\",\r\n        triglycerides: \"140 mg/dL\",\r\n        hdl: \"60 mg/dL\",\r\n        ldl: \"60 mg/dL\",\r\n        \"ldl/hdl\": \"1\",\r\n        vldl: \"5 mg/dL\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Lipid Profile\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    icon: Assets.VitalRespi,\r\n    name: \"Respiration Rate\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"16 bpm\", color: \"error\" }],\r\n    chartLabel1: \"Respiration Rate (BPM)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Respiration Rate (BPM)\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"error\", name: \"High\" },\r\n        \"respiration_rate_(bpm)\": \"44\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Respiration Rate\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        \"respiration_rate_(bpm)\": \"18\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Respiration Rate\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 10,\r\n    icon: Assets.SpO2,\r\n    name: \"SpO2\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"92%\", color: \"success\" }],\r\n    chartLabel1: \"SpO2 (%)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      // { id: 3, label: \"Pulse Rate (BPM)\" },\r\n      { id: 3, label: \"SpO2\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"error\", name: \"Abnormal\" },\r\n        \"pulse_rate_(bpm)\": \"120\",\r\n        spo2: \"99%\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"SpO2\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        spo2: \"90%\",\r\n        \"pulse_rate_(bpm)\": \"70\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"SpO2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 11,\r\n    icon: Assets.Temp,\r\n    name: \"Temperature\",\r\n    category: \"Primary Vitals\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"36.6*C\", color: \"success\" }],\r\n    chartLabel1: \"Temperature (°F)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"Temperature\" },\r\n      { id: 4, label: \"Type\" },\r\n      { id: 5, label: \"DATE\" },\r\n      { id: 6, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        temperature: \"96.80 ° F, 36 ° C\",\r\n        temperature_value: \"96.8\",\r\n        type: \"Oral\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Temperature\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"success\",\r\n          name: \"Normal\",\r\n        },\r\n        temperature: \"97.88 ° F, 36.6 ° C\",\r\n        temperature_value: \"97.8\",\r\n        type: \"Oral\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Temperature\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 12,\r\n    icon: Assets.LFT,\r\n    name: \"Lung Function Test (LFT)\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    category: \"Primary Vitals\",\r\n    chartLabel1: \"FVC (L)\",\r\n    badge: [\r\n      { label: \"FEV1: 1L\", color: \"error\" },\r\n      { label: \"FVC: 1L\", color: \"error\" },\r\n      { label: \"FEV1/FVC: 40\", color: \"error\" },\r\n      { label: \"PEF: 1L/min\", color: \"error\" },\r\n    ],\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"FVC (L)\" },\r\n      { id: 3, label: \"FEV1 (L)\" },\r\n      { id: 4, label: \"FEV1/FVC\" },\r\n      { id: 5, label: \"PEF (L/MIN)\" },\r\n      { id: 6, label: \"SVC (L)\" },\r\n      { id: 7, label: \"DATE\" },\r\n      { id: 8, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        \"fvc_(l)\": \"5.94\",\r\n        \"fev1_(l)\": \"2.45\",\r\n        \"fev1/fvc\": \"41\",\r\n        \"pef_(l/min)\": \"2.62\",\r\n        \"svc_(l)\": \"3.51\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Lung Function Test (LFT)\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        \"fvc_(l)\": \"6.94\",\r\n        \"fev1_(l)\": \"2.45\",\r\n        \"fev1/fvc\": \"41\",\r\n        \"pef_(l/min)\": \"2.62\",\r\n        \"svc_(l)\": \"3.51\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Lung Function Test (LFT)\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 13,\r\n    icon: Assets.BUAcid,\r\n    name: \"Blood Uric Acid\",\r\n    category: \"Hematologic Profile\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"6 mg/dL\", color: \"error\" }],\r\n    chartLabel1: \"Blood Uric Acid (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"BLOOD URIC ACID\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        blood_uric_acid: \"5 mg/dL\",\r\n        blood_uric_acid_value: \"5\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Blood Uric Acid\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        blood_uric_acid: \"5 mg/dL\",\r\n        blood_uric_acid_value: \"5\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Blood Uric Acid\",\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   id: 14,\r\n  //   icon: Assets.Urinalysis,\r\n  //   name: \"Urinalysis\",\r\n  //   category: \"Renal and Metabolic Markers\",\r\n  //   date: \"Recently Added 27-03-2024\",\r\n  //   badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n  //   chartLabel1: \"Urine (μmol/kg/d)\",\r\n  //   chartLabel2: \"ph\",\r\n  //   columnsData: [\r\n  //     { id: 1, label: \"NO.\" },\r\n  //     { id: 2, label: \"RESULT\" },\r\n  //     { id: 3, label: \"URINE\" },\r\n  //     { id: 4, label: \"PH\" },\r\n  //     { id: 5, label: \"SUGAR\" },\r\n  //     { id: 6, label: \"PROTEIN\" },\r\n  //     { id: 7, label: \"LEUKOCYTES\" },\r\n  //     { id: 8, label: \"RBC\" },\r\n  //     { id: 9, label: \"DATE\" },\r\n  //     { id: 10, label: \"ACTION\" },\r\n  //   ],\r\n  //   tableData: [\r\n  //     {\r\n  //       \"no.\": 1,\r\n  //       result: { status: \"success\", name: \"Normal\" },\r\n  //       urine: \"100 μmol/kg/d\",\r\n  //       chartValue: \"100\",\r\n  //       ph: \"17.5\",\r\n  //       sugar: \"0.8 mmol/L\",\r\n  //       protein: \"None\",\r\n  //       leukocytes: \"None\",\r\n  //       rbc: \"None\",\r\n  //       date: \"06-24-2024 10:15\",\r\n  //       action: [{ type: \"warning\" }],\r\n  //       name: \"Urinalysis\",\r\n  //     },\r\n  //     {\r\n  //       \"no.\": 2,\r\n  //       result: {\r\n  //         status: \"success\",\r\n  //         name: \"Normal\",\r\n  //       },\r\n  //       urine: \"110 μmol/kg/d\",\r\n  //       chartValue: \"110\",\r\n  //       ph: \"6.5\",\r\n  //       sugar: \"0.8 mmol/L\",\r\n  //       protein: \"None\",\r\n  //       leukocytes: \"None\",\r\n  //       rbc: \"None\",\r\n  //       date: \"05-24-2024 10:15\",\r\n  //       action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n  //       name: \"Urinalysis\",\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    id: 14,\r\n    icon: Assets.Urinalysis,\r\n    name: \"Urinalysis\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    // badge: [{ label: \"100pmol/d\", color: \"error\" }],\r\n    badge: [\r\n      { label: \"Color: Straw \", color: \"success\" },\r\n      { label: \"Clarity: Clear\", color: \"success\" },\r\n      { label: \"Specific Gravity: 1.008 \", color: \"success\" },\r\n      { label: \"PH: Normal (6-7)\", color: \"success\" },\r\n      { label: \"Protein: Trace\", color: \"success\" },\r\n      { label: \"Glucose: Negative\", color: \"success\" },\r\n    ],\r\n    chartLabel1: \"Specific gravity\",\r\n    chartLabel2: \"ph\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"Color\" },\r\n      { id: 3, label: \"Clarity\" },\r\n      { id: 4, label: \"Specific Gravity\" },\r\n      { id: 5, label: \"PH\" },\r\n      { id: 6, label: \"Protein\" },\r\n      { id: 7, label: \"Glucose\" },\r\n      { id: 8, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        color: \"Straw\",\r\n        chartValue: \"1.008\",\r\n        specific_gravity: \"1.008\",\r\n        ph: \"Normal (6-7)\",\r\n        clarity: \"Clear\",\r\n        protein: \"Trace\",\r\n        glucose: \"Negative\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Urinalysis\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        color: \"Straw\",\r\n        chartValue: \"1.308\",\r\n        specific_gravity: \"1.308\",\r\n        ph: \"Normal (6-7)\",\r\n        clarity: \"Clear\",\r\n        protein: \"Trace\",\r\n        glucose: \"Negative\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Urinalysis\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 15,\r\n    icon: Assets.Urea,\r\n    name: \"Urea\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    badge: [{ label: \"32mg/dl\", color: \"error\" }],\r\n    chartLabel1: \"Urea (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"UREA\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        urea: \"20 mg/dL\",\r\n        urea_value: \"20\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Urea\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        urea: \"20 mg/dL\",\r\n        urea_value: \"20\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Urea\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 16,\r\n    icon: Assets.Creatinine,\r\n    name: \"Creatinine\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"1.7 mg/dL\", color: \"error\" }],\r\n    chartLabel1: \"Creatinine (mg/dL)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"CREATININE\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        creatinine: \"1.2 mg/dL\",\r\n        creatinine_value: \"1.2\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"Creatinine\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        creatinine: \"1.2 mg/dL\",\r\n        creatinine_value: \"1.2\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"Creatinine\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 17,\r\n    icon: Assets.GFR,\r\n    name: \"GFR\",\r\n    category: \"Renal and Metabolic Markers\",\r\n    date: \"Recently Added 27-03-2024\",\r\n    badge: [{ label: \"55 mL/min/1.73m²\", color: \"error\" }],\r\n    chartLabel1: \"GFR (mL/min/1.73m²)\",\r\n    columnsData: [\r\n      { id: 1, label: \"NO.\" },\r\n      { id: 2, label: \"RESULT\" },\r\n      { id: 3, label: \"GFR\" },\r\n      { id: 4, label: \"DATE\" },\r\n      { id: 5, label: \"ACTION\" },\r\n    ],\r\n    tableData: [\r\n      {\r\n        \"no.\": 1,\r\n        result: { status: \"success\", name: \"Normal\" },\r\n        gfr: \"92 mL/min/1.73m²\",\r\n        gfr_value: \"92\",\r\n        date: \"06-24-2024 10:15\",\r\n        action: [{ type: \"warning\" }],\r\n        name: \"GFR\",\r\n      },\r\n      {\r\n        \"no.\": 2,\r\n        result: {\r\n          status: \"warning\",\r\n          name: \"Normal\",\r\n        },\r\n        gfr: \"90 mL/min/1.73m²\",\r\n        gfr_value: \"90\",\r\n        date: \"05-24-2024 10:15\",\r\n        action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n        name: \"GFR\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../../AssessmentTool/Psychiatric/PsychiatricForm\";\r\n\r\nconst Neurological = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"NIH Stroke Scale/Score (NIHSS)\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Level of consciousness\",\r\n          options: [\r\n            \"Alert, keenly responsive\",\r\n            \"Arouses to minor stimulation\",\r\n            \"Requires repeated stimulation to arouse\",\r\n            \"Movements to pain\",\r\n            \"Postures or unresponsive\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"2. Ask month and age\",\r\n          options: [\r\n            \"Both questions right\",\r\n            \"1 question right\",\r\n            \"0 questions right\",\r\n            \"Dysarthric/intubated/trauma/language barrier\",\r\n            \"Aphasic\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"3. Blink eyes & squeeze hands\",\r\n          options: [\r\n            \"Performs both tasks\",\r\n            \"Performs 1 task\",\r\n            \"Performs 0 tasks\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"4. Horizontal extraocular movements\",\r\n          options: [\r\n            \"Normal\",\r\n            \"Partial gaze palsy: can be overcome\",\r\n            \"Partial gaze palsy: corrects with oculocephalic reflex\",\r\n            \"Forced gaze palsy: cannot be overcome\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"5. Visual fields\",\r\n          options: [\r\n            \"No visual loss\",\r\n            \"Partial hemianopia\",\r\n            \"Complete hemianopia\",\r\n            \"Patient is bilaterally blind\",\r\n            \"Bilateral hemianopia\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Facial palsy\",\r\n          options: [\r\n            \"Normal symmetry\",\r\n            \"Minor paralysis (flat nasolabial fold, smile asymmetry)\",\r\n            \"Partial paralysis (lower face)\",\r\n            \"Unilateral complete paralysis (upper/lower face)\",\r\n            \"Bilateral complete paralysis (upper/lower face)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Left arm motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"No effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"7. Right arm motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"No effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"8. Left leg motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"Some effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"9. Right leg motor drift\",\r\n          options: [\r\n            \"No drift for 10 seconds\",\r\n            \"Drift, but doesn't hit bed\",\r\n            \"Drift, hits bed\",\r\n            \"Some effort against gravity\",\r\n            \"No effort against gravity\",\r\n            \"No movement\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"10. Limb Ataxia\",\r\n          options: [\r\n            \"No ataxia\",\r\n            \"Ataxia in 1 Limb\",\r\n            \"Ataxia in 2 Limbs\",\r\n            \"Does not understand\",\r\n            \"Paralyzed\",\r\n            \"Amputation/joint fusion\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"11. Sensation\",\r\n          options: [\r\n            \"Normal: no sensory loss\",\r\n            \"Mild-moderate loss: less sharp/more dull\",\r\n            \"Mild-moderate loss: can sense being touched\",\r\n            \"Complete loss: cannot sense being touched at all\",\r\n            \"No response and quadriplegic\",\r\n            \"Coma/unresponsive\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"12. Language/aphasia\",\r\n          options: [\r\n            \"Normal: no aphasia\",\r\n            \"Mild-moderate aphasia: some obvious changes, without significant limitation\",\r\n            \"Severe aphasia: fragmentary expression, inference needed, cannot identify materials+\",\r\n            \"Mute/global aphasia: no usable speech/auditory comprehension\",\r\n            \"Coma/unresponsive\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"13. Dysarthria\",\r\n          options: [\r\n            \"Normal\",\r\n            \"Mild-moderate dysarthria: slurring but can be understood\",\r\n            \"Severe dysarthria: unintelligible slurring or out of proportion to dysphasia\",\r\n            \"Mute/anarthric\",\r\n            \"Intubated/unable to test\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"14. Extinction/inattention\",\r\n          options: [\r\n            \"No abnormality\",\r\n            \"Visual/tactile/auditory/spatial/personal inattention\",\r\n            \"Extinction to bilateral simultaneous stimulation\",\r\n            \"Profound hemi-inattention (ex: does not recognize own hand)\",\r\n            \"Extinction to >1 modality\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const formTitle = \"NIH Stroke Scale/Score (NIHSS)\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n\r\n            {/* <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow> */}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Neurological;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../Psychiatric/PsychiatricForm\";\r\n\r\nconst Ophthalmic = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"Vision Symptoms\",\r\n      date: \"26-07-2024 \",\r\n      result: \"6 Score Medium\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. As a teacher or parent are you concerned with this student’s vision?\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"2. Tilts head, squints, closes or covers one eye when reading?\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"3. Gaze issues, eyes turn in or out, crossed eyes, eyes wander\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"4. Different size pupils or eyes\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"5. Watery eyes, eyes appear hazy or clouded\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"6. Words float, move, or jump around when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"7. Complains of headaches, dizziness, or nausea when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"8. Complains of itching, burning, or scratchy eyes\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"9. Complains of blurred or double vision, unusual sensitivity to light, or difficulty seeing\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"10. History of head injury with vision complaints\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"11. Loses place when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"12. Skips over or leaves out small words when reading\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"13. Writes uphill or downhill; difficulty writing in a straight line\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"14. Has difficulty copying from the board\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"15. Avoids near work, such as reading or writing\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"16. Has difficulty lining up numbers when doing math\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"17. Has difficulty finishing assignments on time\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label:\r\n            \"18. Holds books too close; leans too close to a computer screen\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n        {\r\n          label: \"19. Clumsy; bumps into things; knocks things over\",\r\n          options: [\"Yes\", \"No\"],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const formTitle = \"Vision Symptoms\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ophthalmic;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"../Psychiatric/PsychiatricForm\";\r\n\r\nconst Peadiatric = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"APGAR Score\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Activity (muscle tone)\",\r\n          options: [\"Absent\", \"Flex arms and legs\", \"Active\"],\r\n        },\r\n        {\r\n          label: \"2. Pulse\",\r\n          options: [\"Absent\", \"Below 100 bpm\", \"Over 100 bpm\"],\r\n        },\r\n        {\r\n          label: \"3. Grimace (reflex irritability)\",\r\n          options: [\r\n            \"Floppy\",\r\n            \"Minimal response to stimulation\",\r\n            \"Prompt response to stimulation\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"4. Appearance (skin color)\",\r\n          options: [\"Blue, Pale\", \"Pink body, Blue Extremities\", \"Pink\"],\r\n        },\r\n        {\r\n          label: \"5. Respiration\",\r\n          options: [\"Absent\", \"Slow and irregular\", \"Vigorous cry\"],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const formTitle = \"APGAR Score\";\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Peadiatric;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PsychiatricTable from \"../../../../../../Tables/AssessmentTools/PsychiatricTable\";\r\nimport PsychiatricForm from \"./PsychiatricForm\";\r\n\r\nconst Psychiatric = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO\" },\r\n    { label: \"Name\" },\r\n    { label: \"Taken\" },\r\n    { label: \"result\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      name: \"Physical Symptoms\",\r\n      date: \"26-07-2024 \",\r\n      result: \"12 Score Medium\",\r\n      questions: [\r\n        {\r\n          label: \"1. Stomach pain\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"2. Back pain\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"3. Pain in your arms, legs, or joints (knees, hips, etc.)\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"4. Menstrual cramps or other problems with your periods WOMEN ONLY\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"5. Headaches\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Chest pain\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"7. Dizziness\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"8. Fainting spells\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"9. Feeling your heart pound or race\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"10. Shortness of breath\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"11. Pain or problems during sexual intercourse\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"12. Constipation, loose bowels, or diarrhea\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"13. Nausea, gas, or indigestion\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"14. Feeling tired or having low energy\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"15. Trouble sleeping\",\r\n          options: [\r\n            \"Not bothered at all\",\r\n            \"Bothered a little\",\r\n            \"Bothered a lot\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Anger\",\r\n      questions: [\r\n        {\r\n          label: \"1. I was irritated more than people knew\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"2. I felt angry\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"3. I felt like I was ready to explode\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"4. I was grouchy\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"5. I felt annoyed\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Anxiety\",\r\n      questions: [\r\n        {\r\n          label: \"1. I felt fearful\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"2. I felt anxious\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"3. I felt worried\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label:\r\n            \"4. I found it hard to focus on anything other than my anxiety\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"5. I felt nervous\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"6. I felt uneasy\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"7. I felt tense\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Depression\",\r\n      questions: [\r\n        {\r\n          label: \"1. I felt worthless\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"2. I felt that I had nothing to look forward to\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"3. I felt helpless\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"4. I felt sad\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"5. I felt like a failure\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"6. I felt depressed\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"7. I felt unhappy\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n        {\r\n          label: \"8. I felt hopeless\",\r\n          options: [\"Never\", \"Rarely\", \"Sometimes\", \"Often\", \"Always\"],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Mania\",\r\n      questions: [\r\n        {\r\n          label: \"Question 1\",\r\n          options: [\r\n            \"I do not feel happier or more cheerful than usual\",\r\n            \"I occasionally feel happier or more cheerful than usual\",\r\n            \"I often feel happier or more cheerful than usual\",\r\n            \"I feel happier or more cheerful than usual most of the time\",\r\n            \"I feel happier of more cheerful than usual all of the time\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 2\",\r\n          options: [\r\n            \"I do not feel more self-confident than usual\",\r\n            \"I occasionally feel more self-confident than usual\",\r\n            \"I often feel more self-confident than usual\",\r\n            \"I frequently feel more self-confident than usual\",\r\n            \"I feel extremely self-confident all of the time\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 3\",\r\n          options: [\r\n            \"I do not need less sleep than usual\",\r\n            \"I occasionally need less sleep than usual\",\r\n            \"I often need less sleep than usual\",\r\n            \"I frequently need less sleep than usual\",\r\n            \"I can go all day and all night without any sleep and still not feel tired\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 4\",\r\n          options: [\r\n            \"I do not talk more than usual\",\r\n            \"I occasionally talk more than usual\",\r\n            \"I often talk more than usual\",\r\n            \"I frequently talk more than usual\",\r\n            \"I talk constantly and cannot be interrupted\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"Question 5\",\r\n          options: [\r\n            \"I have not been more active (either socially, sexually, at work, home, or school) than usual\",\r\n            \"I have occasionally been more active than usual\",\r\n            \"I have often been more active than usual\",\r\n            \"I have frequently been more active than usual\",\r\n            \"I am constantly more active or on the go all the time\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Autism Spectrum Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Autism Spectrum Disorder problems that are present for this individual\",\r\n          options: [\r\n            \"None\",\r\n            \"Mild Requiring support (i.e., Rituals and repetitive behaviors [RRBs] cause significant interference with functioning in one or more contexts. Resists attempts by others to interrupt RRBs or to be redirected from fixated interest.)\",\r\n            \"Moderate Requiring SUBSTANTIAL support (i.e., RRBs and/or preoccupations and/or fixated interests appear frequently enough to be obvious to the casual observer and interfere with functioning in a variety of contexts. Distress or frustration is apparent when RRBs are interrupted; difficult to redirect from fixated interest.)\",\r\n            \"Severe Requiring VERY SUBSTANTIAL support (i.e., Preoccupations, fixed rituals and/or repetitive behaviors markedly interfere with functioning in all spheres. Marked distress when rituals or routines are interrupted; very difficult to redirect from fixated interest or returns to it quickly.)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Social Communication Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Social Communication Disorder problems that are present for this individual\",\r\n          options: [\r\n            \"None\",\r\n            \"Mild Requiring support (i.e., Without supports in place, deficits in social communication cause noticeable impairments. Has difficulty initiating social interactions and demonstrates clear examples of atypical or unsuccessful responses to social overtures of others. May appear to have decreased interest in social interactions.)\",\r\n            \"Moderate Requiring SUBSTANTIAL support (i.e., Marked deficits in verbal and nonverbal social communication skills; social impairments apparent even with supports in place; limited initiation of social interactions and reduced or abnormal response to social overtures from others.)\",\r\n            \"Severe Requiring VERY SUBSTANTIAL support (i.e., Severe deficits in verbal and nonverbal social communication skills cause severe impairments in functioning; very limited initiation of social interactions and minimal response to social overtures from others.)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Dimensions Of Psychosis Symptom Severity\",\r\n      questions: [\r\n        {\r\n          label: \"1. Hallucinations\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered psychosis)\",\r\n            \"Present, but mild (little pressure to act upon voices, not very bothered by voices)\",\r\n            \"Present and moderate (some pressure to respond to voices, or is somewhat bothered by voices)\",\r\n            \"Present and severe (severe pressure to respond to voices, or is very bothered by voices)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"2. Delusions\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered psychosis)\",\r\n            \"Present, but mild (little pressure to act upon delusional beliefs, not very bothered by beliefs)\",\r\n            \"Present and moderate (some pressure to act upon beliefs, or is somewhat bothered by beliefs)\",\r\n            \"Present and severe (severe pressure to act upon beliefs, or is very bothered by beliefs)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"3. Disorganized speech\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered disorganization)\",\r\n            \"Present, but mild (some difficulty following speech)\",\r\n            \"Present and moderate (speech often difficult to follow)\",\r\n            \"Present and severe (speech almost impossible to follow)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"4. Abnormal psychomotor behavior\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (severity or duration not sufficient to be considered abnormal psychomotor behavior)\",\r\n            \"Present, but mild (occasional abnormal or bizarre motor behavior or catatonia)\",\r\n            \"Present and moderate (frequent abnormal or bizarre motor behavior or catatonia)\",\r\n            \"Present and severe (abnormal or bizarre motor behavior or catatonia almost constant)\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"5. Negative symptoms (restricted emotional expression or avolition)\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n            \"Present, but mild decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n            \"Present and moderate decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n            \"Present and severe decrease in facial expressivity, prosody, gestures, or self-initiated behavior\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"6. Impaired cognition\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (cognitive function not clearly outside the range expected for age or SES; i.e., within 0.5 SD of mean)\",\r\n            \"Present, but mild (some reduction in cognitive function; below expected for age and SES, 0.5–1 SD from mean)\",\r\n            \"Present and moderate (clear reduction in cognitive function; below expected for age and SES, 1–2 SD from mean)\",\r\n            \"Present and severe (severe reduction in cognitive function; below expected for age and SES, > 2 SD from mean)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"7. Depression\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (occasionally feels sad, down, depressed, or hopeless; concerned about having failed someone or at something but not preoccupied)\",\r\n            \"Present, but mild (frequent periods of feeling very sad, down, moderately depressed, or hopeless; concerned about having failed someone or at something, with some preoccupation)\",\r\n            \"Present and moderate (frequent periods of deep depression or hopelessness; preoccupation with guilt, having done wrong)\",\r\n            \"Present and severe (deeply depressed or hopeless daily; delusional guilt or unreasonable self-reproach grossly out of proportion to circumstances)\",\r\n          ],\r\n        },\r\n        {\r\n          label: \"8. Mania\",\r\n          options: [\r\n            \"Not present\",\r\n            \"Equivocal (occasional elevated, expansive, or irritable mood or some restlessness)\",\r\n            \"Present, but mild (frequent periods of somewhat elevated, expansive, or irritable mood or restlessness)\",\r\n            \"Present and moderate (frequent periods of extensively elevated, expansive, or irritable mood or restlessness)\",\r\n            \"Present and severe (daily and extensively elevated, expansive, or irritable mood or restlessness)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Conduct Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the conduct problems that are present for this individual\",\r\n          options: [\r\n            \"None (No conduct problems)\",\r\n            \"Mild (Few if any conduct problems in excess of those required to make the diagnosis are present, and conduct problems cause relatively minor harm to others [e.g., lying, truancy, staying out after dark without permission, or other rule breaking])\",\r\n            \"Moderate (The number of conduct problems and the effect on others are intermediate between “mild” and “severe” [e.g., stealing without confronting a victim, vandalism])\",\r\n            \"Severe (Many conduct problems in excess of those required to make the diagnosis are present, or conduct problems cause considerable harm to others [e.g., forced sex, physical cruelty, use of a weapon, stealing while confronting a victim, breaking and entering])\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Nonsuicidal Self-Injury\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Nonsuicidal Self-injury problems that are present for this individual\",\r\n          options: [\r\n            \"None (No NSSI acts or NSSI acts on fewer than 3 days AND no urge to self- injure again.)\",\r\n            \"Subthreshold (NSSI acts on 2-4 days OR has self- injured in the past on 5 or more days and has reported urges to self-injure again.)\",\r\n            \"Mild (NSSI acts on 5–7 days using a single method and not requiring surgical treatment [other than cosmetic].)\",\r\n            \"Moderate (NSSI acts on 8–11 days using a single method and not requiring surgical treatment [other than cosmetic] OR NSSI acts on 5–7 days using more than one method.)\",\r\n            \"Severe (At least 1 NSSI act that required surgical treatment [other than cosmetic] OR NSSI acts on 12 or more days using a single method OR NSSI acts on 8 or more days using more than one method.)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"Oppositional Defiant Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Rate the level or severity of the Oppositional Defiant problems that are present for this individual\",\r\n          options: [\r\n            \"None (No oppositional defiant symptoms)\",\r\n            \"Mild (Symptoms are confined to only one setting [e.g., at home, at school, at work, with peers])\",\r\n            \"Moderate (Some symptoms are present in at least two settings)\",\r\n            \"Severe (Some symptoms are present in three or more settings)\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Somatic Symptom Disorder\",\r\n      questions: [\r\n        {\r\n          label:\r\n            \"1. Does the individual have or show disproportionate and persistent concerns about the medical seriousness of his/her symptoms?\",\r\n          options: [\r\n            \"Not at all\",\r\n            \"A little bit\",\r\n            \"Somewhat\",\r\n            \"Quite a bit\",\r\n            \"Very much\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"2. Does the individual have or show a high level of health-related anxiety?\",\r\n          options: [\r\n            \"Not at all\",\r\n            \"A little bit\",\r\n            \"Somewhat\",\r\n            \"Quite a bit\",\r\n            \"Very much\",\r\n          ],\r\n        },\r\n        {\r\n          label:\r\n            \"3. Does the individual spend excessive time and energy devoted to these symptoms or health concerns?\",\r\n          options: [\r\n            \"Not at all\",\r\n            \"A little bit\",\r\n            \"Somewhat\",\r\n            \"Quite a bit\",\r\n            \"Very much\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n  const [formTitle, setFormTitle] = useState(\"\"); // State for form title\r\n\r\n  const itemsPerPage = 12; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const viewFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    setFormTitle(data?.name); // Set form title based on selected data\r\n    if (type === \"view\") {\r\n      viewFormPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          <div className=\"mb-2\">\r\n            <PsychiatricTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n\r\n            {/* <CRow className=\"mb-3\">\r\n                            <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                                <Pagination\r\n                                    currentPage={currentPage}\r\n                                    onPageChange={onPageChange}\r\n                                    totalItems={rowData?.length}\r\n                                    itemsPerPage={itemsPerPage}\r\n                                />\r\n                            </CCol>\r\n                        </CRow> */}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <PsychiatricForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n              questions={selectedData.questions || []}\r\n              formTitle={formTitle}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Psychiatric;\r\n","import { CCol, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\n\r\nconst PsychiatricForm = ({ back, defaultValues, questions,formTitle }) => {\r\n    const [formData, setFormData] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(formData);\r\n        // Add your submit logic here\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <h3>{formTitle}</h3>\r\n                <hr />\r\n                {questions?.map((question, index) => (\r\n                    <CRow key={index} className=\"mb-3\">\r\n                        <CCol>\r\n                            <h5>{question?.label}</h5>\r\n                            {question?.options.map((option, cIndex) => (\r\n                                <CFormCheck\r\n                                    key={cIndex}\r\n                                    type=\"radio\"\r\n                                    name={`question${index + 1}`}\r\n                                    id={`question${index + 1}_choice${cIndex + 1}`}\r\n                                    value={option}\r\n                                    label={option}\r\n                                    onChange={handleChange}\r\n                                    checked={formData[`question${index + 1}`] === option}\r\n                                />\r\n                            ))}\r\n                        </CCol>\r\n                    </CRow>\r\n                ))}\r\n            </form>\r\n            <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PsychiatricForm;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\n\r\nconst DiagnosisForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const [disableText, setDisableText] = useState(false);\r\n  const gravidaoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n  const findgravidaIndex =\r\n    defaultValues?.condition &&\r\n    gravidaoptions?.indexOf(defaultValues?.condition);\r\n  const getSelectedGravida = (data) => {\r\n    console.log(data);\r\n    setDisableText(true);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.condition}\r\n              /> */}\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                  dateFormat={DATE_FORMAT}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.condition}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Description\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                // placeholder=\"Enter\"\r\n                disabled\r\n                defaultValue={defaultValues?.treatment}\r\n                value={\r\n                  disableText\r\n                    ? \"Type 2 diabetes mellitus without complications\"\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisForm;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SearchBar from \"../../../../../SearchBar/SearchBar\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DiagnosisTable from \"../../../../../Tables/DiagnosisTable\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DiagnosisForm from \"./DiagnosisForm\";\r\n\r\nconst Diagnosis = ({ onClose, from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"ICD CODE\" },\r\n    { id: 4, label: \"Description\" },\r\n    { id: 5, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024\",\r\n      condition: \"E11.8\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"07-06-2024\",\r\n      condition: \"E12.1\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"08-07-2024\",\r\n      condition: \"E12.0\",\r\n      treatment: \"Type 4 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-09-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      condition: \"E11.9\",\r\n      treatment: \"Type 2 diabetes mellitus without complications\",\r\n      remark: \"Lorem Ipsum\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from !== \"Consult\" && (\r\n        <CRow className=\"mb-0\">\r\n          <CCol md={4} className=\"mb-2\">\r\n            <div className=\"d-flex gap-2\">\r\n              <img\r\n                alt=\"BackBtn\"\r\n                src={Assets.BackBtn}\r\n                style={{ width: \"35px\" }}\r\n                onClick={onClose}\r\n                className=\"cursor\"\r\n              />\r\n              <span className=\"Obj-name d-flex align-items-center\">\r\n                Diagnosis (Including ICD)\r\n              </span>\r\n            </div>\r\n          </CCol>\r\n          <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n            <div className=\"d-flex mt-2\">\r\n              <Breadcrumb\r\n                paths={[\r\n                  { label: \"Home\", to: \"/patients\" },\r\n                  { label: \"Patient List\", to: \"/patients\" },\r\n                  { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                  {\r\n                    label: \"Diagnosis (Including ICD)\",\r\n                    to: \"/patients/history\",\r\n                  },\r\n                ]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSelector />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <CRow>\r\n              <DiagnosisTable\r\n                rowData={getCurrentPageItems()}\r\n                columns={columnData}\r\n                getselectedData={getselectedData}\r\n                from={from}\r\n              />\r\n            </CRow>\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <DiagnosisForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {deleteView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteView}\r\n            onClose={() => setDeleteView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Diagnosis;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ImmunizationForm = ({ back, defaultValues }) => {\r\n  console.log(\"first\", defaultValues);\r\n  const [date, setDate] = useState(null);\r\n  const [takendate, setTakenDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.dosage_date;\r\n    const defaultDateString1 = defaultValues?.taken_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.dosage_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n    const defaultDate1 = defaultValues?.taken_date\r\n      ? parseDateString(defaultDateString1)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setTakenDate(defaultDate1);\r\n  }, [defaultValues]);\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Vaccine *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.vaccine}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Period *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.period}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Status *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.status}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Dosage Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Taken Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={takendate}\r\n                onChange={(date) => setTakenDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImmunizationForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImmunizationTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.vaccine}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.period}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  {!dt.taken_date ? (\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.vaccined}\r\n                      className=\"cursor\"\r\n                      style={{ width: \"40px\" }}\r\n                      onClick={() => {\r\n                        if (from !== \"Consult\") {\r\n                          selectedData(dt, \"delete\");\r\n                        }\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      alt=\"delete\"\r\n                      style={{ width: \"40px\" }}\r\n                      src={Assets?.colorVaccined}\r\n                      className=\"cursor\"\r\n                      // onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.dosage_date}</CTableDataCell>\r\n              <CTableDataCell>{dt?.taken_date}</CTableDataCell>\r\n              {/* <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImmunizationTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport ImmunizationForm from \"./ImmunizationForm\";\r\nimport ImmunizationTable from \"../../../../../Tables/ImmunizationTable\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\n\r\nconst Immunization = ({ onClose, from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"VACCINE\" },\r\n    { id: 3, label: \"PERIOD\" },\r\n    { id: 4, label: \"STATUS\" },\r\n    { id: 5, label: \"DOSAGE DATE\" },\r\n    { id: 6, label: \"TAKEN DATE\" },\r\n    // { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 2,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 3,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"\",\r\n    },\r\n    {\r\n      id: 5,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 6,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 7,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 8,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n    {\r\n      id: 9,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"\",\r\n    },\r\n    {\r\n      id: 10,\r\n      vaccine: \"Lorem Ipsum\",\r\n      period: \"Lorem Ipsum\",\r\n      status: \"Lorem Ipsum\",\r\n      dosage_date: \"06-07-2024\",\r\n      taken_date: \"06-07-2024\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [tkDate, setTkDate] = useState(new Date());\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n  const options = [\"Severity\", \"Option 2\", \"Option 3\"]; // Example options\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ImmunizationTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          <CRow className=\"mb-0\">\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Immunization Status\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Immunization Status\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  {/* <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.Add} alt=\"add\" />\r\n                    <span className=\"fs-16 fw-600\">Add</span>\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div> */}\r\n                  <div>\r\n                    {/* onClick={() => addFormPage()} */}\r\n                    <PrimaryButton>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <ImmunizationTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ImmunizationForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure taken this Vaccine ?</h5>\r\n\r\n                    <div style={{ width: \"100%\" }} className=\"mb-3\">\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Taken Date *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            showIcon\r\n                            selected={tkDate}\r\n                            onChange={(date) => setTkDate(date)}\r\n                            maxDate={today}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Immunization;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./MedicalProfile.css\";\r\n\r\nconst MedicalTab = ({ tabs, getCurrentTab, defaultTab }) => {\r\n  console.log(\"first\", tabs, getCurrentTab, defaultTab);\r\n  const [currentTab, setCurrentTab] = useState(tabs[defaultTab]);\r\n\r\n  const switchTab = (data) => {\r\n    setCurrentTab(data);\r\n    getCurrentTab(data.id);\r\n  };\r\n  return (\r\n    <CCard className=\"medical-tabs\">\r\n      <CCardBody className=\"medical-tabs-container\">\r\n        {tabs.map((data, index) => (\r\n          <div\r\n            key={index}\r\n            className={`medical-tab-items ${\r\n              data.id === currentTab?.id ? \"medical-tab-active\" : \"\"\r\n            }`}\r\n            onClick={() => switchTab(data)}\r\n          >\r\n            <span\r\n              className={\r\n                data.id === currentTab?.id\r\n                  ? \"medical-tab-title-active\"\r\n                  : \"medical-tab-title\"\r\n              }\r\n            >\r\n              {data.title}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default MedicalTab;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BKetone = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Ketone(mmol/L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.blood_ketone)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BKetone;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BMI = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Height)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={\"cm\"}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Height *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.height)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Weight)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={\"kg\"}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Weight *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.weight)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                BMI *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.bmi}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BMI;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport useApi from \"../../../../../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\n\r\nconst BPForm = ({ addBack, defaultData, getTableDatas }) => {\r\n  const { post, patch } = useApi();\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [systolic, setSystolic] = useState(\r\n    (defaultData?.systolic || \"\").toString()\r\n  );\r\n  const [diastolic, setDiastolic] = useState(\r\n    (defaultData?.diastolic || \"\").toString()\r\n  );\r\n  const [pulse, setPulse] = useState(\r\n    (defaultData?.[\"pulse_(in_bpm)\"] || \"\").toString()\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const convertISOToTime = (isoString) => {\r\n    // Parse the ISO string into a Date object\r\n    const date = new Date(isoString);\r\n\r\n    // Ensure the Date object is valid\r\n    if (isNaN(date.getTime())) {\r\n      throw new Error(\"Invalid ISO string\");\r\n    }\r\n\r\n    // Extract hours and minutes\r\n    const hours = String(date.getUTCHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getUTCMinutes()).padStart(2, \"0\");\r\n\r\n    // Return the formatted time\r\n    return `${hours}:${minutes}`;\r\n  };\r\n  const getFormattedDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const year = date.getFullYear();\r\n  \r\n    return `${day}-${month}-${year}`;\r\n  };\r\n  \r\n  const currentDate = new Date();\r\n  const formattedDate = getFormattedDate(currentDate);\r\n  \r\n  console.log(formattedDate); // e.g., 25-08-2024\r\n\r\n  const defaultDateTime = defaultData?.date || '';\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(' ')[0] || '';\r\n  const defaultTime = defaultDateTime.split(' ')[1] || '00:00';\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, 'yyyy-MM-dd', new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(':').map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     return new Date(year, month - 1, day, hours, minutes);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultData?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultData\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString1 = defaultData?.time;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate1 = defaultData ? defaultDateString1 : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setSelectedDate(defaultDate);\r\n  //   // setSelectedTime(defaultDate1);\r\n  // }, [defaultData]);\r\n\r\n\r\n\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const validate = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!selectedDate) {\r\n      newErrors.date = \"Date is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!selectedTime) {\r\n      newErrors.time = \"Time is required.\";\r\n      isValid = false;\r\n    }\r\n    if (!systolic?.trim()) {\r\n      newErrors.systolic = \"Systolic is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(systolic)) {\r\n      newErrors.systolic = \"Systolic must be a number.\";\r\n      isValid = false;\r\n    }\r\n    if (!diastolic?.trim()) {\r\n      newErrors.diastolic = \"Diastolic is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(diastolic)) {\r\n      newErrors.diastolic = \"Diastolic must be a number.\";\r\n      isValid = false;\r\n    }\r\n    if (!pulse?.trim()) {\r\n      newErrors.pulse = \"Pulse is required.\";\r\n      isValid = false;\r\n    } else if (isNaN(pulse)) {\r\n      newErrors.pulse = \"Pulse must be a number.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (validate()) {\r\n      if (defaultData) {\r\n        console.log(\"Edit clicked\");\r\n        onEdit();\r\n      }\r\n      if (!defaultData) {\r\n        console.log(\"Add clicked\");\r\n        onAdd();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    try {\r\n      const url = `resource/vitals`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          systolic: systolic,\r\n          diastolic: diastolic,\r\n          pulse: pulse,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"blood-pressure\",\r\n      };\r\n      await post(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Added successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n\r\n  const onEdit = async () => {\r\n    try {\r\n      const url = `resource/vitals/${defaultData.id}`; // Replace with your API endpoint\r\n      const body = {\r\n        details: {\r\n          date: format(selectedDate, \"dd-MM-yyyy\"),\r\n          time: format(selectedTime, \"HH:mm\"),\r\n          systolic: systolic,\r\n          diastolic: diastolic,\r\n          pulse: pulse,\r\n        },\r\n        user_id: \"10\",\r\n        slug: \"blood-pressure\",\r\n      };\r\n      await patch(url, body);\r\n      await getTableDatas(defaultData);\r\n      toast.success(\"Updated successfully\");\r\n      addBack();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n              {errors.date && <div className=\"error-text\">{errors.date}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n              {errors.time && <div className=\"error-text\">{errors.time}</div>}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Systolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"systolic\"\r\n                value={systolic}\r\n                onChange={(e) => setSystolic(e.target.value)}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n                }}\r\n              />\r\n              {errors.systolic && (\r\n                <div className=\"error-text\">{errors.systolic}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Diastolic *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"diastolic\"\r\n                value={diastolic}\r\n                onChange={(e) => setDiastolic(e.target.value)}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n                }}\r\n              />\r\n              {errors.diastolic && (\r\n                <div className=\"error-text\">{errors.diastolic}</div>\r\n              )}\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={6}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse (in BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"pulse\"\r\n                value={pulse}\r\n                onChange={(e) => setPulse(e.target.value)}\r\n                maxLength={3}\r\n                onInput={(e) => {\r\n                  e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n                }}\r\n              />\r\n              {errors.pulse && <div className=\"error-text\">{errors.pulse}</div>}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => onSubmit()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BPForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BSugar = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.type}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'mg/dL'}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Sugar *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.blood_sugar_value}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BSugar;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst BUricAcid = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood Uric Acid(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.blood_uric_acid)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BUricAcid;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Creatinine = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Creatinine(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.creatinine)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Creatinine;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst GFR = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                GFR(mL/min/1.73m²) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.gfr)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GFR;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst HCT = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HCT(%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hct_rate)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HCT;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport Dropdown from \"../../../../../Dropdown/Dropdown\";\r\n\r\nconst HeartRate = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [type, setType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n\r\n  const options = [\"Single Lead\", \"3 Lead\", \"12 Lead\"];\r\n  const findIndex = defaultData?.ecg_type\r\n    ? options?.indexOf(defaultData?.ecg_type)\r\n    : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      setType(data);\r\n    };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Type *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[findIndex]}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"heart_rate_(bpm)\"]}\r\n              /> */}\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG *\r\n              </label>\r\n              <input type=\"file\" id=\"file\" />\r\n              <label for=\"file\">Choose file</label>\r\n\r\n              <div class=\"d-flex flex-column gap-1 justify-content-center h-100\">\r\n                {defaultData?.ecg ? (\r\n                  <span className=\"\">\r\n                    ECG{\"(\"}\r\n                    {defaultData?.ecg?.contentType}\r\n                    {\")\"}\r\n                  </span>\r\n                ) : (\r\n                  <span className=\"\">No File Chosen</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1 justify-content-center h-100\">\r\n              {defaultData?.ecg ? (\r\n                <span className=\"mt-2\">{defaultData?.ecg}</span>\r\n              ) : (\r\n                <span className=\"mt-2\">No File Chosen</span>\r\n              )}\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={8}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ECG Interpretation *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.interpretation}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeartRate;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Hemogloin = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Hemogloin(g/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hemoglobin)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hemogloin;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst LFTForm = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FVC (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"fvc_(l)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1 (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"fev1_(l)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                FEV1/FVC Ratio *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"fev1/fvc\"]}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                PEF (L/Min) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"pef_(l/min)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                SVC (L) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"svc_(l)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={8}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LFTForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst LipidProfileForm = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Result *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultData?.result?.name}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Total) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Total Cholesterol*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.totalOnly}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (Triglycerides) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Triglycerides *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.triglycerides)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (HDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                HDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.hdl)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (LDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.ldl)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                LDL/HDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"ldl/hdl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit (VLDL) *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                defaultValue={\"mg/dL\"}\r\n              >\r\n                <option value=\"dL\">dL</option>\r\n                <option value=\"mg\">mg</option>\r\n                <option value=\"mg/dL\">mg/dL</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                VLDL *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.[\"vldl\"])}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LipidProfileForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst RespirationRateForm = ({ addBack, defaultData }) => {\r\n  // const [selectedDate, setSelectedDate] = useState(new Date());\r\n  // const [selectedTime, setSelectedTime] = useState(new Date());\r\n\r\n  // const handleDateChange = (date) => {\r\n  //   setSelectedDate(date);\r\n  // };\r\n\r\n  // const handleTimeChange = (date) => {\r\n  //   setSelectedTime(date);\r\n  // };\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Respiration Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"respiration_rate_(bpm)\"]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RespirationRateForm;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Spo2 = ({ addBack, defaultData }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          {/* <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pulse Rate(BPM) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.[\"pulse_rate_(bpm)\"]}\r\n              />\r\n            </div>\r\n          </CCol> */}\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                SpO2 (%) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.spo2)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spo2;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Temperature = ({ addBack, defaultData }) => {\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Type *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.type}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Unit *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={'F'}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Temperature *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.temperature_value}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Urea = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      return new Date(year, month - 1, day, hours, minutes);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultData?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultData\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setSelectedDate(defaultDate);\r\n    setSelectedTime(defaultDate);\r\n  }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urea(mg/dL) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.urea)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urea;\r\n","import { CCol, CContainer, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\n\r\nconst Urinalysis = ({ addBack, defaultData }) => {\r\n  console.log(\"first\", defaultData);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [cell, setCell] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n  //   const parseDateString = (dateString) => {\r\n  //     const parts = dateString?.split(\" \");\r\n  //     const datePart = parts[0];\r\n  //     const timePart = parts[1];\r\n  //     const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n  //     const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n  //     return new Date(year, month - 1, day, hours, minutes);\r\n  //   };\r\n\r\n  //   // Example default date string\r\n  //   const defaultDateString = defaultData?.date;\r\n\r\n  //   // Parse default date string to Date object\r\n  //   const defaultDate = defaultData\r\n  //     ? parseDateString(defaultDateString)\r\n  //     : new Date();\r\n\r\n  //   // Set default date in state\r\n  //   setSelectedDate(defaultDate);\r\n  //   setSelectedTime(defaultDate);\r\n  // }, [defaultData]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleTimeChange = (date) => {\r\n    setSelectedTime(date);\r\n  };\r\n  const extractNum = (data) => {\r\n    const numbers = parseFloat(data?.match(/\\d+(\\.\\d+)?/)[0]); // Replace non-digits with empty string\r\n\r\n    return numbers || \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        {/* <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                isClearable\r\n                closeOnScroll={true}\r\n                wrapperClassName=\"date-picker-wrapper\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Time *\r\n              </label>\r\n              <DatePicker\r\n                showIcon\r\n                selected={selectedTime}\r\n                onChange={handleTimeChange}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                isClearable\r\n                closeOnScroll={true}\r\n                timeIntervals={5}\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (μmol/kg/d)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={extractNum(defaultData?.urine)}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urine (pH)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Sugar (mg/dL)*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.sugar}\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.protein}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocytes*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.leukocytes}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                RBC*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.rbc}\r\n\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow> */}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Color *\r\n              </label>\r\n              <select class=\"form-select\" aria-label=\"Disabled select example\">\r\n                <option>Select</option>\r\n                <option value=\"straw\">Straw</option>\r\n                <option value=\"yellow\">Yellow</option>\r\n                <option value=\"amber\">Amber</option>\r\n                <option value=\"red\">Red</option>\r\n                <option value=\"brown\">Brown</option>\r\n                <option value=\"green\">Green</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Clarity *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"clear\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"clear\">Clear</option>\r\n                <option value=\"slightly cloudy\">Slightly Cloudy</option>\r\n                <option value=\"cloudy\">Cloudy</option>\r\n                <option value=\"turbid\">Turbid</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Specific Gravity *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                pH *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Normal\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Normal (6-7)\">Normal (6-7)</option>\r\n                <option value=\"Acidic(<6)\">Acidic ({\"<\"}6)</option>\r\n                <option value=\"Alkaline(>7)\">Alkaline ({\">\"}7)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Protein *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Trace\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"1+ (30 mg/dL)\">1+ (30 mg/dL)</option>\r\n                <option value=\"2+ (100 mg/dL)\">2+ (100 mg/dL)</option>\r\n                <option value=\"3+ (300 mg/dL)\">3+ (300 mg/dL)</option>\r\n                <option value=\"4+ (>2000 mg/dL)\">4+ ({\">\"}2000 mg/dL)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Glucose *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"1+ (100 mg/dL)\">1+ (100 mg/dL)</option>\r\n                <option value=\"2+ (250 mg/dL)\">2+ (250 mg/dL)</option>\r\n                <option value=\"3+ (500 mg/dL)\">3+ (500 mg/dL)</option>\r\n                <option value=\"4+ (1000 mg/dL)\">4+ (1000 mg/dL)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Ketones *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+)\">Small (1+)</option>\r\n                <option value=\"Moderate (2+)\">Moderate (2+)</option>\r\n                <option value=\"Large (3+)\">Large (3+)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Blood in Urine *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+)\">Small (1+)</option>\r\n                <option value=\"Moderate (2+)\">Moderate (2+)</option>\r\n                <option value=\"Large (3+)\">Large (3+)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Leukocyte Esterase *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Trace\">Trace</option>\r\n                <option value=\"Small (1+)\">Small (1+)</option>\r\n                <option value=\"Moderate (2+)\">Moderate (2+)</option>\r\n                <option value=\"Large (3+)\">Large (3+)</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Nitrites *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Positive\">Positive</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Urobilinogen *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                defaultValue={defaultData?.ph}\r\n                placeholder=\"Enter\"\r\n              />\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Bilirubin *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Negative\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Negative\">Negative</option>\r\n                <option value=\"Positive\">Positive</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <div className=\"vertical-line mb-3\"></div>\r\n        <CRow>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cells *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Red Blood Cell\"}\r\n                onChange={(e) => setCell(e.target.value)}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Red Blood Cell\">Red Blood Cell</option>\r\n                <option value=\"White Blood Cell\">White Blood Cell</option>\r\n                <option value=\"Epithelial Cell\">Epithelial Cell</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Crystals *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Uric Acid Crystals\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Uric Acid Crystals\">Uric Acid Crystals</option>\r\n                <option value=\"Calcium Oxalate Crystals\">\r\n                  Calcium Oxalate Crystals\r\n                </option>\r\n                <option value=\"Struvite Crystals\">Struvite Crystals</option>\r\n                <option value=\"Cystine Crystals \">Cystine Crystals </option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Microorganisms *\r\n              </label>\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Disabled select example\"\r\n                // defaultValue={\"Bacteria\"}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Bacteria\">Bacteria</option>\r\n                <option value=\"Yeast\">Yeast</option>\r\n                <option value=\"Parasites\">Parasites</option>\r\n              </select>\r\n            </div>\r\n          </CCol>\r\n          {cell === \"Epithelial Cell\" && (\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Epithelial Cells *\r\n                </label>\r\n                <select\r\n                  class=\"form-select\"\r\n                  aria-label=\"Disabled select example\"\r\n                  // defaultValue={\"Squamous Epithelial Cells\"}\r\n                >\r\n                  <option>Select</option>\r\n\r\n                  <option value=\"Squamous Epithelial Cells\">\r\n                    Squamous Epithelial Cells\r\n                  </option>\r\n                  <option value=\"Transitional Epithelial Cells\">\r\n                    Transitional Epithelial Cells\r\n                  </option>\r\n                  <option value=\"Renal Tubular Epithelial Cells\">\r\n                    Renal Tubular Epithelial Cells\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </CCol>\r\n          )}\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol xs={3} md={2}>\r\n            <PrimaryButton onClick={() => addBack()}>SAVE</PrimaryButton>\r\n          </CCol>\r\n          <CCol xs={3} md={2}>\r\n            <SecondaryButton onClick={() => addBack()}>CANCEL</SecondaryButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Urinalysis;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst LabForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lab Test Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Upload Results / Image (pdf, jpg, jpeg, png)\r\n              </label>\r\n              <div class=\"input-file-container\">\r\n                <input class=\"input-file\" id=\"my-file\" type=\"file\" />\r\n                <label\r\n                  tabindex=\"0\"\r\n                  for=\"my-file\"\r\n                  className=\"input-file-trigger\"\r\n                >\r\n                  <img alt=\"upload\" src={Assets.Export} />\r\n                  <span>Choose File</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol className=\"d-flex align-items-center\">\r\n          <span className=\"fs-18 fw-400\">No Files Chosen</span>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport DateCards from \"../../../../../DateCards/DateCards\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport ActiveButton from \"../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport SingleDatePicker from \"../../../../../DateRangePicker/SingleDatePicker\";\r\nimport OptionItem from \"../../../../../OptionItems/OptionItem\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\n\r\nconst PhysicalExam = ({ onClose, from }) => {\r\n  const dateCards = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      ga: {\r\n        status: \"Normal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n      skin: {\r\n        status: \"Abnormal\",\r\n        notes: \"Lorem ipsum\",\r\n        select: [\"Posture and Gait\"],\r\n      },\r\n    },\r\n    { id: 9, date: \"06-07-2024\" },\r\n    { id: 10, date: \"06-07-2024\" },\r\n    { id: 11, date: \"06-07-2024\" },\r\n    { id: 12, date: \"06-07-2024\" },\r\n    { id: 13, date: \"06-07-2024\" },\r\n    { id: 14, date: \"06-07-2024\" },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(true);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [skinselectedOptions, setSkinSelectedOptions] = useState([]);\r\n\r\n  const [labelName1, setLabelname1] = useState(\"\");\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [selectedData, setSelectedData] = useState(\r\n    from === \"Consult\" ? dateCards[1] : {}\r\n  );\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const [labelName, setLabelname] = useState(selectedData?.ga?.status || \"\");\r\n  const [editView, setEditView] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setEditView(true);\r\n  }, [from]);\r\n\r\n  const options = [\r\n    \"Appearance (well, ill, distressed, etc.)\",\r\n    \"Level of Consciousness (alert, drowsy, unresponsive, etc.)\",\r\n    \"Posture and Gait\",\r\n  ];\r\n\r\n  const skinoptions = [\r\n    \"Appearance (well, ill, distressed, etc.)\",\r\n    \"Level of Consciousness (alert, drowsy, unresponsive, etc.)\",\r\n    \"Posture and Gait\",\r\n  ];\r\n\r\n  const itemsPerPage = 9; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return dateCards?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const handleSelect = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    } else {\r\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\r\n    }\r\n  };\r\n\r\n  const handleSelectSkin = (option, isSelected) => {\r\n    if (isSelected) {\r\n      setSkinSelectedOptions([...skinselectedOptions, option]);\r\n    } else {\r\n      setSkinSelectedOptions(\r\n        skinselectedOptions.filter((item) => item !== option)\r\n      );\r\n    }\r\n  };\r\n\r\n  const [nutritionOpen, setNutritionOpen] = useState(false);\r\n  const [constiOpen, setConstiOpen] = useState(false);\r\n  const [generalOpen, setGeneralOpen] = useState(false);\r\n  const [heentOpen, setHeentOpen] = useState(false);\r\n\r\n  const nutritionTabOpen = () => {\r\n    setNutritionOpen(true);\r\n  };\r\n\r\n  const nutritionTabClose = () => {\r\n    setNutritionOpen(false);\r\n  };\r\n\r\n  const constiTabOpen = () => {\r\n    setConstiOpen(true);\r\n  };\r\n\r\n  const constiTabClose = () => {\r\n    setConstiOpen(false);\r\n  };\r\n\r\n  const generalTabOpen = () => {\r\n    setGeneralOpen(true);\r\n  };\r\n\r\n  const generalTabClose = () => {\r\n    setGeneralOpen(false);\r\n  };\r\n\r\n  const heentTabOpen = () => {\r\n    setHeentOpen(true);\r\n  };\r\n\r\n  const heentTabClose = () => {\r\n    setHeentOpen(false);\r\n  };\r\n\r\n  const toggleSelected = (label) => {\r\n    setIsSelected(!isSelected);\r\n    setLabelname(label);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editView) {\r\n      setLabelname(selectedData?.ga?.status);\r\n      setLabelname1(selectedData?.skin?.status);\r\n      setSelectedOptions(selectedData?.ga?.select);\r\n      setSkinSelectedOptions(selectedData?.skin?.select);\r\n      if (selectedData?.ga?.status === \"Abnormal\") {\r\n        setGeneralOpen(true);\r\n      }\r\n      if (selectedData?.skin?.status === \"Abnormal\") {\r\n        setHeentOpen(true);\r\n      }\r\n    } else {\r\n      setLabelname(\"\");\r\n      setLabelname1(\"\");\r\n      setGeneralOpen(false);\r\n      setHeentOpen(false);\r\n      setSelectedOptions([]);\r\n    }\r\n  }, [editView]);\r\n\r\n  const getselected = (data, method) => {\r\n    setSelectedData(data);\r\n    if (method === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (method === \"edit\") {\r\n      addFormPage();\r\n      setEditView(true);\r\n    }\r\n  };\r\n\r\n  const toggleSelected1 = (label) => {\r\n    setLabelname1(label);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <CRow className=\"mb-2\">\r\n              <CCol className=\"d-flex align-items-center gap-2\">\r\n                <span>Date</span>\r\n                <SingleDatePicker defaultDate={selectedData?.date} />\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"vertical-line mb-3\"></div>\r\n\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={generalTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {generalOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={generalTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">General Appearance</span>\r\n              </CCol>\r\n              <CRow>\r\n                <CCol>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <label class=\"form-label\">Status:</label>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected(\"Normal\");\r\n                        setGeneralOpen(false);\r\n                      }}\r\n                    >\r\n                      {\"Normal\"}\r\n                    </div>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName === \"Abnormal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected(\"Abnormal\");\r\n                        setGeneralOpen(true);\r\n                      }}\r\n                    >\r\n                      {\"Abnormal\"}\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              {generalOpen && (\r\n                <>\r\n                  {labelName === \"Abnormal\" && (\r\n                    <CRow>\r\n                      {options?.map((option, index) => (\r\n                        <CCol lg={\"auto\"}>\r\n                          <OptionItem\r\n                            key={index}\r\n                            label={option}\r\n                            onSelect={handleSelect}\r\n                            selected={selectedOptions.includes(option)}\r\n                            disabled={editView}\r\n                          />\r\n                        </CCol>\r\n                      ))}\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            defaultValue={selectedData?.ga?.notes}\r\n                            disabled={editView}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    // onClick={heentTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {heentOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    // onClick={heentTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Skin</span>\r\n              </CCol>\r\n              <CRow>\r\n                <CCol>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <label class=\"form-label\">Status:</label>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected1(\"Normal\");\r\n                        setHeentOpen(false);\r\n                      }}\r\n                    >\r\n                      {\"Normal\"}\r\n                    </div>\r\n                    <div\r\n                      className={`option-item ${\r\n                        labelName1 === \"Abnormal\" ? \"selected primary-bg\" : \"\"\r\n                      } ${editView ? \"disabled\" : \"\"}`}\r\n                      onClick={() => {\r\n                        toggleSelected1(\"Abnormal\");\r\n                        setHeentOpen(true);\r\n                      }}\r\n                    >\r\n                      {\"Abnormal\"}\r\n                    </div>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              {heentOpen && (\r\n                <>\r\n                  {/* <CRow>\r\n            <CCol>\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <label class=\"form-label\">Status:</label>\r\n                <div\r\n                  className={`option-item ${\r\n                    labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                  }`}\r\n                  onClick={() => toggleSelected1(\"Normal\")}\r\n                >\r\n                  {\"Normal\"}\r\n                </div>\r\n                <div\r\n                  className={`option-item ${\r\n                    labelName1 === \"Abnormal\"\r\n                      ? \"selected primary-bg\"\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => toggleSelected1(\"Abnormal\")}\r\n                >\r\n                  {\"Abnormal\"}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow> */}\r\n                  {labelName1 === \"Abnormal\" && (\r\n                    <>\r\n                      <CRow>\r\n                        {skinoptions?.map((option, index) => (\r\n                          <CCol lg={\"auto\"}>\r\n                            <OptionItem\r\n                              key={index}\r\n                              label={option}\r\n                              onSelect={handleSelectSkin}\r\n                              selected={skinselectedOptions?.includes(option)}\r\n                              disabled={editView}\r\n                            />\r\n                          </CCol>\r\n                        ))}\r\n                      </CRow>\r\n                      <CCol lg={12} className=\"mb-2\">\r\n                        <div class=\"position-relative\">\r\n                          <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Notes\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"Enter\"\r\n                            disabled={editView}\r\n                            defaultValue={selectedData?.skin?.notes}\r\n                          />\r\n                        </div>\r\n                      </CCol>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </CRow>\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          <CRow className=\"mb-0\">\r\n            <CCol md={6} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Physical Exam\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Physical Exam\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton\r\n                      onClick={() => {\r\n                        addFormPage();\r\n                        setSelectedData({});\r\n                      }}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  {getCurrentPageItems()?.map((item, i) => (\r\n                    <CCol lg={4} className=\"mb-3\" key={i}>\r\n                      <DateCards data={item} onClick={getselected} />\r\n                    </CCol>\r\n                  ))}\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={dateCards?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <CRow className=\"mb-2\">\r\n                  <CCol className=\"d-flex align-items-center gap-2\">\r\n                    <span>Date</span>\r\n                    <SingleDatePicker defaultDate={selectedData?.date} />\r\n                  </CCol>\r\n                  <CCol className=\"d-flex justify-content-end\">\r\n                    <div style={{ width: \"120px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => {\r\n                          setAddFormView(false);\r\n                          setEditView(false);\r\n                          setSelectedData({});\r\n                        }}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets?.listview} alt=\"close\" />\r\n                          <span>List View</span>\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <div className=\"vertical-line mb-3\"></div>\r\n                {/* <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!nutritionOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={nutritionTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {nutritionOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={nutritionTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Nutritional</span>\r\n              </CCol>\r\n              {nutritionOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"d-flex align-items-center gap-2 mb-1\">\r\n                {!constiOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.PlusIcon}\r\n                    onClick={constiTabOpen}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                {constiOpen && (\r\n                  <img\r\n                    alt=\"plus\"\r\n                    src={Assets?.MinusIcon}\r\n                    onClick={constiTabClose}\r\n                    className=\"cursor\"\r\n                  />\r\n                )}\r\n                <span className=\"fs-16 fw-600\">Constitutional</span>\r\n              </CCol>\r\n              {constiOpen && (\r\n                <>\r\n                  <CCol lg={12} className=\"mb-2\">\r\n                    <div class=\"position-relative\">\r\n                      <label for=\"validationTooltip01\" class=\"form-label\">\r\n                        Custom Entry\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"validationTooltip01\"\r\n                        placeholder=\"Custom Entry\"\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                  <CRow>\r\n                    {options?.map((option, index) => (\r\n                      <CCol lg={\"auto\"}>\r\n                        <OptionItem\r\n                          key={index}\r\n                          label={option}\r\n                          onSelect={handleSelect}\r\n                        />\r\n                      </CCol>\r\n                    ))}\r\n                  </CRow>\r\n                </>\r\n              )}\r\n            </CRow>\r\n            <div className=\"vertical-line mt-2 mb-3\"></div> */}\r\n                <CRow className=\"mb-2\">\r\n                  <CCol\r\n                    lg={12}\r\n                    className=\"d-flex align-items-center gap-2 mb-1\"\r\n                  >\r\n                    {!generalOpen && (\r\n                      <img\r\n                        alt=\"plus\"\r\n                        src={Assets?.PlusIcon}\r\n                        // onClick={generalTabOpen}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                    {generalOpen && (\r\n                      <img\r\n                        alt=\"plus\"\r\n                        src={Assets?.MinusIcon}\r\n                        // onClick={generalTabClose}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                    <span className=\"fs-16 fw-600\">General Appearance</span>\r\n                  </CCol>\r\n                  <CRow>\r\n                    <CCol>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <label class=\"form-label\">Status:</label>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                          } ${editView ? \"disabled\" : \"\"}`}\r\n                          onClick={() => {\r\n                            toggleSelected(\"Normal\");\r\n                            setGeneralOpen(false);\r\n                          }}\r\n                        >\r\n                          {\"Normal\"}\r\n                        </div>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName === \"Abnormal\"\r\n                              ? \"selected primary-bg\"\r\n                              : \"\"\r\n                          } ${editView ? \"disabled\" : \"\"}`}\r\n                          onClick={() => {\r\n                            toggleSelected(\"Abnormal\");\r\n                            setGeneralOpen(true);\r\n                          }}\r\n                        >\r\n                          {\"Abnormal\"}\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  {generalOpen && (\r\n                    <>\r\n                      {labelName === \"Abnormal\" && (\r\n                        <CRow>\r\n                          {options?.map((option, index) => (\r\n                            <CCol lg={\"auto\"}>\r\n                              <OptionItem\r\n                                key={index}\r\n                                label={option}\r\n                                onSelect={handleSelect}\r\n                                selected={selectedOptions.includes(option)}\r\n                                disabled={editView}\r\n                              />\r\n                            </CCol>\r\n                          ))}\r\n                          <CCol lg={12} className=\"mb-2\">\r\n                            <div class=\"position-relative\">\r\n                              <label\r\n                                for=\"validationTooltip01\"\r\n                                class=\"form-label\"\r\n                              >\r\n                                Notes\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                defaultValue={selectedData?.ga?.notes}\r\n                                disabled={editView}\r\n                              />\r\n                            </div>\r\n                          </CCol>\r\n                        </CRow>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </CRow>\r\n                <div className=\"vertical-line mt-2 mb-3\"></div>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol\r\n                    lg={12}\r\n                    className=\"d-flex align-items-center gap-2 mb-1\"\r\n                  >\r\n                    {!heentOpen && (\r\n                      <img\r\n                        alt=\"plus\"\r\n                        src={Assets?.PlusIcon}\r\n                        // onClick={heentTabOpen}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                    {heentOpen && (\r\n                      <img\r\n                        alt=\"plus\"\r\n                        src={Assets?.MinusIcon}\r\n                        // onClick={heentTabClose}\r\n                        className=\"cursor\"\r\n                      />\r\n                    )}\r\n                    <span className=\"fs-16 fw-600\">Skin</span>\r\n                  </CCol>\r\n                  <CRow>\r\n                    <CCol>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <label class=\"form-label\">Status:</label>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                          } ${editView ? \"disabled\" : \"\"}`}\r\n                          onClick={() => {\r\n                            toggleSelected1(\"Normal\");\r\n                            setHeentOpen(false);\r\n                          }}\r\n                        >\r\n                          {\"Normal\"}\r\n                        </div>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Abnormal\"\r\n                              ? \"selected primary-bg\"\r\n                              : \"\"\r\n                          } ${editView ? \"disabled\" : \"\"}`}\r\n                          onClick={() => {\r\n                            toggleSelected1(\"Abnormal\");\r\n                            setHeentOpen(true);\r\n                          }}\r\n                        >\r\n                          {\"Abnormal\"}\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  {heentOpen && (\r\n                    <>\r\n                      {/* <CRow>\r\n                    <CCol>\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <label class=\"form-label\">Status:</label>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Normal\" ? \"selected primary-bg\" : \"\"\r\n                          }`}\r\n                          onClick={() => toggleSelected1(\"Normal\")}\r\n                        >\r\n                          {\"Normal\"}\r\n                        </div>\r\n                        <div\r\n                          className={`option-item ${\r\n                            labelName1 === \"Abnormal\"\r\n                              ? \"selected primary-bg\"\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => toggleSelected1(\"Abnormal\")}\r\n                        >\r\n                          {\"Abnormal\"}\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow> */}\r\n                      {labelName1 === \"Abnormal\" && (\r\n                        <>\r\n                          <CRow>\r\n                            {skinoptions?.map((option, index) => (\r\n                              <CCol lg={\"auto\"}>\r\n                                <OptionItem\r\n                                  key={index}\r\n                                  label={option}\r\n                                  onSelect={handleSelectSkin}\r\n                                  selected={skinselectedOptions?.includes(\r\n                                    option\r\n                                  )}\r\n                                  disabled={editView}\r\n                                />\r\n                              </CCol>\r\n                            ))}\r\n                          </CRow>\r\n                          <CCol lg={12} className=\"mb-2\">\r\n                            <div class=\"position-relative\">\r\n                              <label\r\n                                for=\"validationTooltip01\"\r\n                                class=\"form-label\"\r\n                              >\r\n                                Notes\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                disabled={editView}\r\n                                defaultValue={selectedData?.skin?.notes}\r\n                              />\r\n                            </div>\r\n                          </CCol>\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </CRow>\r\n                {!editView && (\r\n                  <>\r\n                    <div className=\"vertical-line mt-2 mb-3\"></div>\r\n                    <CRow className=\"mb-1\">\r\n                      <div style={{ width: \"128px\" }}>\r\n                        <PrimaryButton>SAVE</PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"128px\" }}>\r\n                        <SecondaryButton\r\n                          onClick={() => {\r\n                            setAddFormView(false);\r\n                            setEditView(false);\r\n                          }}\r\n                        >\r\n                          CANCEL\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </CRow>\r\n                  </>\r\n                )}\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhysicalExam;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst NextAppointmentTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.provider_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.reason}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextAppointmentTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst NextAppointmentForm = ({ back, defaultValues }) => {\r\n\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  \r\n    const options = [\"one\", \"Two\",\"Three\"];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Provider Name *\r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Reason *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"Enter\"\r\n              defaultValue={defaultValues?.reason}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NextAppointmentForm","import React, { useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PatientEducationForm from \"../../PatientEducation/PatientEducationTab/PatientEducationForm\";\r\nimport NextAppointmentTable from \"../../../../../../Tables/NextAppointmentTable\";\r\nimport NextAppointmentForm from \"./NextAppointmentForm\";\r\n\r\nconst NextAppointmentTab = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No\" },\r\n    { id: 2, label: \"Date & Time\" },\r\n    { id: 3, label: \"Provider Name\" },\r\n    { id: 3, label: \"Reason\" },\r\n    { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      provider_name: \"Lorem ipsum \",\r\n      reason: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <NextAppointmentTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <NextAppointmentTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <NextAppointmentForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextAppointmentTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PatientEducationTab from \"./NextAppointmentTab/NextAppointmentTab\";\r\n\r\nconst NextAppointment = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Next Appointment\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Next Appointment\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <PatientEducationTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextAppointment;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst ImagingOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Raj Scan 1\", \"Raj Scan 2\", \"Raj Scan 3\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getbtnNames = () => {\r\n    console.log(\"getbtnNames\");\r\n  };\r\n  const eoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd_code}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={eoptions}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Imaging Order Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Scan Center *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"250px\" }}>\r\n          {/* <PrimaryButton>SEND TO LAB</PrimaryButton> */}\r\n          <DropdownButton\r\n            buttonName2={\"SEND TO SCAN CENTER\"}\r\n            getbtnNames={getbtnNames}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ImagingOrderForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\n\r\nconst ImagingOrder = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"NAME\" },\r\n    { id: 4, label: \"FILES\" },\r\n    // { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"SCAN CENTER & STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"01-01-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Accepted\",\r\n      scan_name: \"Raj Scan 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Prescribed\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PDF\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      scan_status: \"Not Uploaded\",\r\n      scan_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ImagingOrderTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <ImagingOrderTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ImagingOrderForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"lg\"\r\n              >\r\n                <CModalBody className=\"p-5\">\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12}>\r\n                      <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.date}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Scan Name\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          ICD Code\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Scan Center\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.scan_name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                        <div\r\n                          className=\"w-100\"\r\n                          // style={{\r\n                          //   border: \"1px solid #17171D33\",\r\n                          //   borderRadius: \"5px\",\r\n                          // }}\r\n                        >\r\n                          {/* <Dropdown\r\n                        options={options}\r\n                        getSelectedValue={getSelectedValue}\r\n                      /> */}\r\n                          <CFormSelect\r\n                            aria-label=\"Default select example\"\r\n                            disabled={\r\n                              selectedData.scan_status === \"Uploaded\" ||\r\n                              (selectedData.scan_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          >\r\n                            <option>Select</option>\r\n                            <option value=\"Morning\">Morning</option>\r\n                            <option value=\"Afternoon\">Afternoon</option>\r\n                            <option value=\"Evening\">Evening</option>\r\n                            <option value=\"Night\">Night</option>\r\n                          </CFormSelect>\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <PrimaryButton>SAVE</PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <SecondaryButton onClick={() => setDetailView(false)}>\r\n                        CANCEL\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </CRow>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrder;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst LabOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Raj Scan 1\", \"Raj Scan 2\", \"Raj Scan 3\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getbtnNames = () => {\r\n    console.log(\"getbtnNames\");\r\n  };\r\n  const eoptions = [\"E11.8\", \"E11.9\", \"E12.0\", \"E12.1\", \"E12.2\"];\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd_code}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={eoptions}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Lab Test Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Link of Imaging File URL\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.link}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Select Lab *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"250px\" }}>\r\n          {/* <PrimaryButton>SEND TO LAB</PrimaryButton> */}\r\n          <DropdownButton\r\n            buttonName2={\"SEND TO LAB\"}\r\n            getbtnNames={getbtnNames}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrderForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport LabOrderForm from \"./LabOrderForm\";\r\n\r\nconst LabOrder = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"NAME\" },\r\n    { id: 4, label: \"FILE\" },\r\n    // { id: 5, label: \"NOTES\" },\r\n    { id: 6, label: \"LINK\" },\r\n    { id: 7, label: \"ICD CODE\" },\r\n    { id: 8, label: \"LAB & STATUS\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Accepted\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"PNG\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      file: \"-\",\r\n      notes: \"-\",\r\n      link: \"-\",\r\n      icd_code: \"D64.9\",\r\n      lab_status: \"Not Uploaded\",\r\n      lab_name: \"Raj Lab 1\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <LabOrderTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <LabOrderTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <LabOrderForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"lg\"\r\n              >\r\n                <CModalBody className=\"p-5\">\r\n                  <CRow className=\"mb-3\">\r\n                    <CCol lg={12}>\r\n                      <span className=\"fs-20 fw-600\">Slot Confirmation​</span>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Date​</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.date}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Test Name\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          ICD Code\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">D64.9</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={3} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Notes</span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">-</span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Lab/Scan Center\r\n                        </span>\r\n                        <span className=\"fs-18 fw-400 dark-label\">\r\n                          {selectedData?.lab_name}\r\n                        </span>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">Slot</span>\r\n                        <div\r\n                          className=\"w-100\"\r\n                          // style={{\r\n                          //   border: \"1px solid #17171D33\",\r\n                          //   borderRadius: \"5px\",\r\n                          // }}\r\n                        >\r\n                          {/* <Dropdown\r\n                        options={options}\r\n                        getSelectedValue={getSelectedValue}\r\n                      /> */}\r\n                          <CFormSelect\r\n                            aria-label=\"Default select example\"\r\n                            disabled={\r\n                              selectedData.lab_status === \"Uploaded\" ||\r\n                              (selectedData.lab_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          >\r\n                            <option>Select</option>\r\n                            <option value=\"Morning\">Morning</option>\r\n                            <option value=\"Afternoon\">Afternoon</option>\r\n                            <option value=\"Evening\">Evening</option>\r\n                            <option value=\"Night\">Night</option>\r\n                          </CFormSelect>\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol lg={4} className=\"mb-3\">\r\n                      <div className=\"d-flex flex-column gap-2\">\r\n                        <span className=\"fs-14 fw-400 light-label\">\r\n                          Test Type\r\n                        </span>\r\n                        <div>\r\n                          <CFormCheck\r\n                            inline\r\n                            type=\"radio\"\r\n                            name=\"inlineRadioOptions\"\r\n                            id=\"inlineCheckbox1\"\r\n                            value=\"Lab Test\"\r\n                            label=\"Lab Test\"\r\n                            defaultChecked\r\n                            disabled={\r\n                              selectedData.lab_status === \"Uploaded\" ||\r\n                              (selectedData.lab_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          />\r\n                          <CFormCheck\r\n                            inline\r\n                            type=\"radio\"\r\n                            name=\"inlineRadioOptions\"\r\n                            id=\"inlineCheckbox2\"\r\n                            value=\"Home Test\"\r\n                            label=\"Home Test\"\r\n                            disabled={\r\n                              selectedData.lab_status === \"Uploaded\" ||\r\n                              (selectedData.lab_status === \"Not Uploaded\" &&\r\n                                true)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <PrimaryButton>SAVE</PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"128px\" }}>\r\n                      <SecondaryButton onClick={() => setDetailView(false)}>\r\n                        CANCEL\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </CRow>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrder;\r\n","import {\r\n  CCol,\r\n  CFormCheck,\r\n  CFormSelect,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst MedicationOrderForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState(\r\n    defaultValues.medicines\r\n      ? defaultValues.medicines\r\n      : [\r\n          {\r\n            id: 1,\r\n            type: \"\",\r\n            name: \"\",\r\n            strength: \"\",\r\n            strengthMeasurement: \"\",\r\n            days: \"\",\r\n            totalQty: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            instruction: \"\",\r\n            reason: \"\",\r\n            status: \"\",\r\n            m: 0,\r\n            a: 0,\r\n            e: 0,\r\n            n: 0,\r\n            food: \"bf\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, value, fieldName) => {\r\n    console.log(fieldName, value);\r\n    const newValue = value?.replace(/[^0-9]/g, \"\");\r\n    const processedValue =\r\n      fieldName === \"startDate\" || fieldName === \"endDate\"\r\n        ? value\r\n          ? value.toISOString()\r\n          : \"\" // Convert date to ISO string\r\n        : fieldName === \"strength\"\r\n        ? newValue\r\n        : fieldName === \"totalQty\"\r\n        ? newValue\r\n        : fieldName === \"days\"\r\n        ? newValue\r\n        : value;\r\n\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [fieldName]: processedValue };\r\n      }\r\n      return medicine;\r\n    });\r\n\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  console.log(\"first\", medicines);\r\n  const [btnValue, setBtnValue] = useState();\r\n  const [btnView, setBtnView] = useState(false);\r\n\r\n  const getbtnNames = (data) => {\r\n    setBtnValue(data);\r\n    if (data === \"SEND TO PHARMACY\") {\r\n      setBtnView(true);\r\n    }\r\n  };\r\n  console.log(btnValue, \"SEND TO PHARMACY\");\r\n\r\n  const [strength, setStrength] = useState(defaultValues?.strength || \"\");\r\n  const [qty, setQty] = useState(defaultValues?.strength || \"\");\r\n  const [timeTaken, setTimeTaken] = useState(defaultValues?.strength || \"\");\r\n\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newValue = input.replace(/[^0-9]/g, \"\");\r\n    if (name === \"strength\") {\r\n      setStrength(newValue);\r\n    }\r\n    if (name === \"totalQty\") {\r\n      setQty(newValue);\r\n    }\r\n    if (name === \"days\") {\r\n      setTimeTaken(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">\r\n              {defaultValues?.medicines?.length >= 1 ? \"Edit \" : \"Add \"} New\r\n              Medicine\r\n            </span>\r\n          </CCol>\r\n\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3 h-100 d-flex align-items-center justify-content-between\">\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n              <CCol\r\n                lg={8}\r\n                className=\"mt-4 d-flex justify-content-between\"\r\n                style={{ width: \"42%\" }}\r\n              >\r\n                <CRow className=\"mb-3\">\r\n                  <div style={{ width: \"250px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                    {/* <DropdownButton /> */}\r\n                  </div>\r\n                  <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                  </div>\r\n                </CRow>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ) : null}\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine, index) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\" key={index}>\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"type\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"Brand\">Brand</option>\r\n                          <option value=\"Generic\">Generic</option>\r\n                        </CFormSelect>\r\n                        {/* <input\r\n                          name=\"type\"\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"name\"\r\n                          defaultValue={medicine?.name}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"strength\"\r\n                          value={medicine?.strength}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Route of administration\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strengthMeasurement\"\r\n                          defaultValue={medicine?.strengthMeasurement}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"days\"\r\n                          value={medicine?.days}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"00\"\r\n                          name=\"totalQty\"\r\n                          value={medicine?.totalQty}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"startDate\"\r\n                          defaultValue={medicine?.startDate}\r\n                          onChange={(e) => handleMedicineInputChange(medicine?.id, e.target.value, e.target.name)}\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : defaultValues?.medicines?.length >= 1\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            name=\"startDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.startDate\r\n                                ? new Date(medicine?.startDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"startDate\"\r\n                              )\r\n                            }\r\n                            dateFormat={DATE_FORMAT}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"endDate\"\r\n                          defaultValue={medicine?.endDate}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : defaultValues?.medicines?.length >= 1\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            name=\"endDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.endDate\r\n                                ? new Date(medicine?.endDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"endDate\"\r\n                              )\r\n                            }\r\n                            dateFormat={DATE_FORMAT}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"m\"\r\n                          defaultValue={medicine?.m}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"a\"\r\n                          defaultValue={medicine?.a}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"e\"\r\n                          defaultValue={medicine?.e}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"n\"\r\n                          defaultValue={medicine?.n}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          key={index}\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"bf\"\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"bf\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"af\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"af\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"instruction\"\r\n                          defaultValue={medicine?.instruction}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"reason\"\r\n                          defaultValue={medicine?.reason}\r\n                          disabled={\r\n                            defaultValues?.lab_status === \"Prescribed\"\r\n                              ? false\r\n                              : defaultValues?.medicines?.length >= 1\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              {defaultValues?.medicines?.length >= 1 ? (\r\n                defaultValues?.lab_status === \"Prescribed\" &&\r\n                (medicine?.id === 1 ? null : (\r\n                  <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => handleRemoveMedicine(medicine.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                ))\r\n              ) : medicine.id === 1 ? null : (\r\n                <CCol lg={1}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton\r\n                      onClick={() => handleRemoveMedicine(medicine.id)}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteDel} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              )}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          defaultValues?.lab_status === \"Prescribed\" && (\r\n            <>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton onClick={handleAddMedicine}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteAdd} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div className=\"vertical-line\"></div>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddMedicine}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? null : (\r\n          <>\r\n            <CRow>\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"250px\" }}>\r\n                {/* <PrimaryButton>SEND TO PHARMACY</PrimaryButton> */}\r\n                <DropdownButton\r\n                  buttonName2={\"SEND TO PHARMACY\"}\r\n                  getbtnNames={getbtnNames}\r\n                />\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {btnView && (\r\n          <BlurBackground>\r\n            <CModal\r\n              alignment=\"center\"\r\n              visible={btnView}\r\n              onClose={() => setBtnView(false)}\r\n              aria-labelledby=\"VerticallyCenteredExample\"\r\n              size=\"md\"\r\n            >\r\n              <CModalBody className=\"p-3\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Select a Pharmacy\r\n                </label>\r\n                <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                  <CFormSelect\r\n                    size=\"lg\"\r\n                    className=\"mb-3\"\r\n                    aria-label=\"Large select example\"\r\n                    name=\"strength\"\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"1\">One</option>\r\n                    <option value=\"2\">Two</option>\r\n                    <option value=\"3\">Three</option>\r\n                  </CFormSelect>\r\n                  <div className=\"d-flex gap-2 mt-2\">\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <PrimaryButton onClick={() => setBtnView(false)}>\r\n                        Save\r\n                      </PrimaryButton>\r\n                    </div>\r\n                    <div style={{ width: \"80px\" }}>\r\n                      <SecondaryButton onClick={() => setBtnView(false)}>\r\n                        Cancel\r\n                      </SecondaryButton>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CModalBody>\r\n            </CModal>\r\n          </BlurBackground>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrderForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport Badge from \"../../../../../../Badge/Badge\";\r\n\r\nconst DetailsTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"detailsTable\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.rx}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.frequency[0]}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.qty}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {i === 0 && (\r\n                <CTableDataCell\r\n                  style={{ height: \"10px\" }}\r\n                  rowSpan={rowData.length}\r\n                >\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.TickCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.PlusCircle}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                        style={{transform:'rotate(45deg)'}}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailsTable;\r\n","import { CCol, CFormCheck, CFormSelect, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport DropdownButton from \"../../../../../../Buttons/DropDownButton/DropDownButton\";\r\n\r\nconst MedicationCompleted = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [medicines, setMedicines] = useState(\r\n    defaultValues.medicines\r\n      ? defaultValues.medicines\r\n      : [\r\n          {\r\n            id: 1,\r\n            type: \"\",\r\n            name: \"\",\r\n            strength: \"\",\r\n            strengthMeasurement: \"\",\r\n            days: \"\",\r\n            totalQty: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            instruction: \"\",\r\n            reason: \"\",\r\n            status: \"\",\r\n            m: 0,\r\n            a: 0,\r\n            e: 0,\r\n            n: 0,\r\n            food: \"bf\",\r\n          },\r\n        ]\r\n  );\r\n\r\n  // Function to handle adding a new medicine field\r\n  const handleAddMedicine = () => {\r\n    const newMedicines = [...medicines];\r\n    const id = newMedicines.length + 1;\r\n    newMedicines.push({\r\n      id,\r\n      type: \"\",\r\n      name: \"\",\r\n      strength: \"\",\r\n      strengthMeasurement: \"\",\r\n      days: \"\",\r\n      totalQty: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      instruction: \"\",\r\n      reason: \"\",\r\n      status: \"\",\r\n    });\r\n    setMedicines(newMedicines);\r\n  };\r\n  const handleRemoveMedicine = (id) => {\r\n    const newMedicines = medicines.filter((medicine) => medicine.id !== id);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  // Function to handle input change in medicine fields\r\n  const handleMedicineInputChange = (id, value, fieldName) => {\r\n    // Handle date values differently\r\n    const processedValue =\r\n      fieldName === \"startDate\" || fieldName === \"endDate\"\r\n        ? value\r\n          ? value.toISOString()\r\n          : \"\" // Convert date to ISO string\r\n        : value; // For non-date fields, just use the value directly\r\n\r\n    const newMedicines = medicines.map((medicine) => {\r\n      if (medicine.id === id) {\r\n        return { ...medicine, [fieldName]: processedValue };\r\n      }\r\n      return medicine;\r\n    });\r\n\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n  console.log(\"first\", medicines);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3 p-4\">\r\n        <CRow className=\"d-flex align-items-center mb-3\">\r\n          <CCol lg={6}>\r\n            <span className=\"fs-16 fw-600\">View Medicine</span>\r\n          </CCol>\r\n\r\n          <CCol lg={5} className=\"d-flex justify-content-end\">\r\n            <div style={{ width: \"120px\" }}>\r\n              <ActiveButton onClick={back}>\r\n                <div className=\"d-flex align-items-center gap-2\">\r\n                  <img src={Assets?.listview} alt=\"close\" />\r\n                  <span>List View</span>\r\n                </div>\r\n              </ActiveButton>\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"mb-3\">\r\n          <CCol lg={11}>\r\n            <div className=\"vertical-line\"></div>\r\n          </CCol>\r\n        </CRow>\r\n        {medicines.map((medicine, index) => (\r\n          <>\r\n            <CRow className=\"d-flex align-items-center mb-3\" key={index}>\r\n              <CCol lg={11}>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Type *\r\n                        </label>\r\n                        <input\r\n                          name=\"type\"\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          defaultValue={medicine?.type}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Medicine Name *\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"name\"\r\n                          defaultValue={medicine?.name}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Strength measurement\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strength\"\r\n                          defaultValue={medicine?.strength}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Route of administration\r\n                        </label>\r\n                        <CFormSelect\r\n                          size=\"lg\"\r\n                          className=\"mb-3\"\r\n                          aria-label=\"Large select example\"\r\n                          name=\"strengthMeasurement\"\r\n                          defaultValue={medicine?.strengthMeasurement}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        >\r\n                          <option>Select</option>\r\n                          <option value=\"1\">One</option>\r\n                          <option value=\"2\">Two</option>\r\n                          <option value=\"3\">Three</option>\r\n                        </CFormSelect>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          No. of Day(s)\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"days\"\r\n                          defaultValue={medicine?.days}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Total Qty / Taken\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"totalQty\"\r\n                          defaultValue={medicine?.totalQty}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Start Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"startDate\"\r\n                          defaultValue={medicine?.startDate}\r\n                          onChange={(e) => handleMedicineInputChange(medicine?.id, e.target.value, e.target.name)}\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                            name=\"startDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.startDate\r\n                                ? new Date(medicine?.startDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"startDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          End Date\r\n                        </label>\r\n                        {/* <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"endDate\"\r\n                          defaultValue={medicine?.endDate}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        /> */}\r\n                        <div className=\"date-size\">\r\n                          <DatePicker\r\n                            disabled={\r\n                              defaultValues?.lab_status === \"Prescribed\"\r\n                                ? false\r\n                                : true\r\n                            }\r\n                            name=\"endDate\"\r\n                            showIcon\r\n                            selected={\r\n                              medicine?.endDate\r\n                                ? new Date(medicine?.endDate)\r\n                                : new Date()\r\n                            }\r\n                            onChange={(date) =>\r\n                              handleMedicineInputChange(\r\n                                medicine?.id,\r\n                                date,\r\n                                \"endDate\"\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={3} style={{ paddingRight: \"0\" }}>\r\n                    <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          M\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"m\"\r\n                          defaultValue={medicine?.m}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          A\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"a\"\r\n                          defaultValue={medicine?.a}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          E\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"e\"\r\n                          defaultValue={medicine?.e}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          N\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10 text-align-center\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"0\"\r\n                          name=\"n\"\r\n                          defaultValue={medicine?.n}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={3}>\r\n                    <div className=\"h-100 d-flex align-items-end w-100 justify-content-end\">\r\n                      <div\r\n                        style={{\r\n                          boxSizing: \"border-box\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"1px solid #17171D33\",\r\n                          padding: \"10px\",\r\n                        }}\r\n                      >\r\n                        <CFormCheck\r\n                          key={index}\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox1\"\r\n                          value=\"bf\"\r\n                          disabled={true}\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              BF\r\n                            </label>\r\n                          }\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"bf\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                        <CFormCheck\r\n                          className=\"mb-0\"\r\n                          inline\r\n                          type=\"radio\"\r\n                          id=\"inlineCheckbox2\"\r\n                          value=\"af\"\r\n                          label={\r\n                            <label\r\n                              for=\"validationTooltip01\"\r\n                              class=\"form-label mb-0\"\r\n                            >\r\n                              AF\r\n                            </label>\r\n                          }\r\n                          disabled={true}\r\n                          name=\"food\"\r\n                          defaultChecked={\r\n                            medicine?.food === \"af\" ? true : false\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Instruction\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"instruction\"\r\n                          defaultValue={medicine?.instruction}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                          Reason for medication\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control  pad-10\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"Enter\"\r\n                          name=\"reason\"\r\n                          defaultValue={medicine?.reason}\r\n                          disabled={true}\r\n                          onChange={(e) =>\r\n                            handleMedicineInputChange(\r\n                              medicine?.id,\r\n                              e.target.value,\r\n                              e.target.name\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              {defaultValues?.medicines?.length >= 1 ? (\r\n                defaultValues?.lab_status === \"Prescribed\" && (\r\n                  <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton\r\n                        onClick={() => handleRemoveMedicine(medicine.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n                )\r\n              ) : (\r\n                <CCol lg={1}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton\r\n                      onClick={() => handleRemoveMedicine(medicine.id)}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteDel} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              )}\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        ))}\r\n        {defaultValues?.medicines?.length >= 1 ? (\r\n          defaultValues?.lab_status === \"Prescribed\" && (\r\n            <>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div style={{ width: \"40px\" }}>\r\n                    <ActiveButton onClick={handleAddMedicine}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.whiteAdd} alt=\"add\" />\r\n                      </div>\r\n                    </ActiveButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={11}>\r\n                  <div className=\"vertical-line\"></div>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddMedicine}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={11}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        )}\r\n\r\n        {defaultValues?.medicines?.length >= 1 ? null : (\r\n          <>\r\n            <CRow>\r\n              <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Status\r\n                    </label>\r\n                    <CFormSelect\r\n                      size=\"lg\"\r\n                      className=\"mb-3\"\r\n                      aria-label=\"Large select example\"\r\n                      name=\"strengthMeasurement\"\r\n                      defaultValue={defaultValues?.lab_status}\r\n                    >\r\n                      {/* <option>Select</option> */}\r\n                      <option value=\"Prescribed\">Prescribed</option>\r\n                      <option value=\"Received\">Received</option>\r\n                      <option value=\"Dispensed\">Dispensed</option>\r\n                      <option value=\"Delivered\">Delivered</option>\r\n                    </CFormSelect>\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n              <div style={{ width: \"250px\" }}>\r\n                {/* <PrimaryButton>SEND TO PHARMACY</PrimaryButton> */}\r\n                <DropdownButton />\r\n              </div>\r\n              <div style={{ width: \"128px\" }}>\r\n                <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n              </div>\r\n            </CRow>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationCompleted;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicationOrderForm from \"./MedicationOrderForm\";\r\nimport MedicationOrderTable from \"../../../../../../Tables/MedicationOrderTable\";\r\nimport DetailsTable from \"./DetailsTable\";\r\nimport MedicationCompleted from \"./MedicationCompleted\";\r\n\r\nconst MedicationOrder = ({ from }) => {\r\n  const detailsData = [\r\n    { id: 1, label: \"\" },\r\n    { id: 2, label: \"RX\" },\r\n    { id: 3, label: \"FREQUENCY\" },\r\n    { id: 4, label: \"DURATION\" },\r\n    { id: 5, label: \"QTY/TAKEN\" },\r\n    { id: 6, label: \"ACTIONS​\" },\r\n  ];\r\n\r\n  const detailsValue = [\r\n    {\r\n      id: 1,\r\n      name: \"Prescribed\",\r\n      rx: \"Medicine 1\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Alternative\",\r\n      rx: \"Medicine 2\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n  ];\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"MEDICATION DATE\" },\r\n    { id: 3, label: \"MEDICATION NAME\" },\r\n    { id: 4, label: \"Strength & Dosage\" },\r\n    { id: 5, label: \"M | A | E | N\" },\r\n    { id: 6, label: \"BF/AF\" },\r\n    { id: 7, label: \"Pharmacy & STATUS\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Received\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine A\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine C\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Waiting For Approval\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine D\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Delivered\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine A\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"bf\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine AB\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine J\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1,\r\n          n: 1,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024\",\r\n      name: \"Complete Blood Count\",\r\n      lab_status: \"Prescribed\",\r\n      lab_name: \"Raj Pharmacy 1\",\r\n      medicines: [\r\n        {\r\n          id: 1,\r\n          type: \"lorem ipsum\",\r\n          name: \"Medicine B\",\r\n          strength: \"3\",\r\n          strengthMeasurement: \"1\",\r\n          days: \"12\",\r\n          totalQty: \"200\",\r\n          startDate: \"06-07-2024\",\r\n          endDate: \"06-07-2024\",\r\n          instruction: \"lorem ipsum\",\r\n          reason: \"lorem ipsum\",\r\n          status: \"Received\",\r\n          m: 1,\r\n          a: 0,\r\n          e: 1 / 2,\r\n          n: 1 / 2,\r\n          food: \"af\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n  const [completedView, setCompletedView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"details\") {\r\n      detailPage();\r\n    }\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n    if (type === \"completed\") {\r\n      setCompletedView(true);\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <MedicationOrderTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          <>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSelector />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <div className=\"mb-2\">\r\n              <CRow>\r\n                <MedicationOrderTable\r\n                  rowData={getCurrentPageItems()}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n              </CRow>\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            </div>\r\n          </>\r\n          {addFormView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={addFormView}\r\n                onClose={() => setAddFormView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"xl\"\r\n              >\r\n                <CModalBody className=\"p-0\">\r\n                  <div\r\n                    className=\"close-modal\"\r\n                    onClick={() => {\r\n                      setAddFormView(false);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={Assets.CloseBtn}\r\n                      alt=\"close-btn\"\r\n                      style={{ width: \"100%\" }}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <MedicationOrderForm\r\n                    back={() => {\r\n                      setAddFormView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                    defaultValues={selectedData}\r\n                  />\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n\r\n          {completedView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={completedView}\r\n                onClose={() => setCompletedView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"xl\"\r\n              >\r\n                <CModalBody className=\"p-0\">\r\n                  <div\r\n                    className=\"close-modal\"\r\n                    onClick={() => {\r\n                      setCompletedView(false);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={Assets.CloseBtn}\r\n                      alt=\"close-btn\"\r\n                      style={{ width: \"100%\" }}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <MedicationCompleted\r\n                    back={() => {\r\n                      setCompletedView(false);\r\n                      setSelectedData({});\r\n                    }}\r\n                    defaultValues={selectedData}\r\n                  />\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n                size=\"lg\"\r\n              >\r\n                <CModalBody className=\"p-0\">\r\n                  <div\r\n                    className=\"close-modal\"\r\n                    onClick={() => setDetailView(false)}\r\n                  >\r\n                    <img\r\n                      src={Assets.CloseBtn}\r\n                      alt=\"close-btn\"\r\n                      style={{ width: \"100%\" }}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <DetailsTable\r\n                    rowData={detailsValue}\r\n                    columns={detailsData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrder;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst PatientEducationTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.notes}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducationTable;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PatientEducationTable from \"../../../../../../Tables/PatientEducationTable\";\r\nimport PatientEducationForm from \"./PatientEducationForm\";\r\n\r\nconst PatientEducationTab = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Notes\" },\r\n    { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024\",\r\n      notes: \"Lorem ipsum Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <PatientEducationTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <PatientEducationTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <PatientEducationForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducationTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport PatientEducationTab from \"./PatientEducationTab/PatientEducationTab\";\r\n\r\nconst PatientEducation = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Patient Education\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Patient Education\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <PatientEducationTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientEducation;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\n\r\n\r\nconst PatientEducationForm = ({ back, defaultValues }) => {\r\n\r\n    const [date, setDate] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n      const parseDateString = (dateString) => {\r\n        const parts = dateString?.split(\" \");\r\n        const datePart = parts[0];\r\n        const timePart = parts[1];\r\n        const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n        const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n        const date = new Date(year, month - 1, day, hours, minutes);\r\n        return date;\r\n      };\r\n  \r\n      // Example default date string\r\n      const defaultDateString = defaultValues?.date;\r\n  \r\n      // Parse default date string to Date object\r\n      const defaultDate = defaultValues?.date\r\n        ? parseDateString(defaultDateString)\r\n        : new Date();\r\n  \r\n      // Set default date in state\r\n      setDate(defaultDate);\r\n    }, [defaultValues]);\r\n  \r\n    \r\n      const options = [\"one\", \"Two\",\"Three\"];\r\n      const findIndex = defaultValues?.prev_illness\r\n        ? options?.indexOf(defaultValues?.prev_illness)\r\n        : 0;\r\n  \r\n      const getSelectedValue = (data) => {\r\n        console.log(data);\r\n      };\r\n  \r\n\r\n   \r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={8}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Notes *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"Enter\"\r\n              defaultValue={defaultValues?.notes}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n      \r\n    </CRow>\r\n \r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n\r\n  )\r\n}\r\n\r\nexport default PatientEducationForm","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst ProcedureForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [disableText, setDisableText] = useState(false);\r\n  const gravidaoptions = [\"93000\", \"93009\", \"93001\", \"93002\", \"93003\"];\r\n  const findgravidaIndex =\r\n    defaultValues?.id &&\r\n    gravidaoptions?.indexOf(defaultValues?.id);\r\n  const getSelectedGravida = (data) => {\r\n    console.log(data);\r\n    setDisableText(true);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Date *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                  dateFormat={DATE_FORMAT}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                CPT Code *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.treatment}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={12}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Description *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                // defaultValue={defaultValues?.remark}\r\n                disabled\r\n                defaultValue={defaultValues?.description}\r\n                value={\r\n                  disableText\r\n                    ? \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\"\r\n                    : null\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ProcedurerTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.no}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.description}</CTableDataCell>\r\n              {/* <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.visibleEye}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"details\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell> */}\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedurerTable;\r\n","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport ProcedureForm from \"./ProcedureForm\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport DiagnosisTable from \"../../../../../../Tables/DiagnosisTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ProcedurerTable from \"../../../../../../Tables/ProcedurerTable\";\r\n\r\nconst ProcedureTab = ({ onClose, from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"CPT Code\" },\r\n    { id: 4, label: \"DESCRIPTION\" },\r\n    { id: 5, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      no: 1,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 2,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 3,\r\n      date: \"06-07-2024\",\r\n      id: \"93008\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 4,\r\n      date: \"06-07-2024\",\r\n      id: \"93006\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 5,\r\n      date: \"06-07-2024\",\r\n      id: \"93005\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 6,\r\n      date: \"06-07-2024\",\r\n      id: \"93002\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 7,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 8,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 9,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    {\r\n      no: 10,\r\n      date: \"06-07-2024\",\r\n      id: \"93000\",\r\n      description:\r\n        \"Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report.\",\r\n    },\r\n    // {\r\n    //   no: 11,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12321\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n    // {\r\n    //   no: 12,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12322\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n    // {\r\n    //   no: 13,\r\n    //   date: \"06-07-2024\",\r\n    //   id: \"12323\",\r\n    //   description: \"Lorem Ipsum\",\r\n    // },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ProcedurerTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSelector />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <ProcedurerTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ProcedureForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcedureTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport ProcedureTab from \"./ProcedureTab/ProcedureTab\";\r\n\r\nconst Cpt = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Procedure (CPT Code)\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Procedure (CPT Code)\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <ProcedureTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cpt;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst TherapiesTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date_time}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.therapy_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.therapist_name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.duration}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TherapiesTable;\r\n","import { CCol, CFormCheck, CFormSelect, CRow, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst TherapiesForm = ({ back, defaultValues }) => {\r\n\r\n    const options = [\"Physical\", \"Occupational\", \"Speech\",\"Psychotherapy\",\"Others\"];\r\n\r\n    const getSelectedValue = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    const options1 = [\"one\", \"Two\", \"Three\",];\r\n\r\n    const getSelectedValue1 = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div class=\"position-relative\">\r\n                            <label for=\"validationTooltip01\" class=\"form-label\">\r\n                                Type *\r\n                            </label>\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{\r\n                                    border: \"1px solid #17171D33\",\r\n                                    borderRadius: \"5px\",\r\n                                }}\r\n                            >\r\n                                <Dropdown\r\n                                    options={options}\r\n                                    getSelectedValue={getSelectedValue}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div class=\"position-relative\">\r\n                            <label for=\"validationTooltip01\" class=\"form-label\">\r\n                                Therapy Name *\r\n                            </label>\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{\r\n                                    border: \"1px solid #17171D33\",\r\n                                    borderRadius: \"5px\",\r\n                                }}\r\n                            >\r\n                                <Dropdown\r\n                                    options={options1}\r\n                                    getSelectedValue={getSelectedValue1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={4}>\r\n                <div style={{ width: \"100%\" }}>\r\n                        <div class=\"position-relative\">\r\n                            <label for=\"validationTooltip01\" class=\"form-label\">\r\n                                Therapy Name *\r\n                            </label>\r\n                            <div\r\n                                className=\"w-100\"\r\n                                style={{\r\n                                    border: \"1px solid #17171D33\",\r\n                                    borderRadius: \"5px\",\r\n                                }}\r\n                            >\r\n                                <Dropdown\r\n                                    options={options1}\r\n                                    getSelectedValue={getSelectedValue1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                                Duration (in days)\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"00\"\r\n                                defaultValue={defaultValues?.duration}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"position-relative\">\r\n                            <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                               Notes\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control pad-10\"\r\n                                id=\"validationTooltip01\"\r\n                                placeholder=\"Enter\"\r\n                                defaultValue={defaultValues?.notes}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n\r\n\r\n\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TherapiesForm","import React, { useState } from \"react\";\r\nimport Breadcrumb from \"../../../../../../Breadcrumb/Breadcrumb\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport TherapiesTable from \"../../../../../../Tables/TherapiesTable\";\r\nimport TherapiesForm from \"./TherapiesForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst TherapiesTab = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date & Time\" },\r\n    { id: 3, label: \"Type\" },\r\n    { id: 4, label: \"Therapy Name\" },\r\n    { id: 5, label: \"Therapist Name\" },\r\n    { id: 6, label: \"Duration (in days)\" },\r\n    { id: 7, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date_time: \"06-07-2024\",\r\n      type: \"Physical\",\r\n      therapy_name: \"Lorem ipsum\",\r\n      therapist_name: \"Lorem ipsum\",\r\n      duration: \"5\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date_time: \"06-07-2024\",\r\n      type: \"Occupational\",\r\n      therapy_name: \"Lorem ipsum\",\r\n      therapist_name: \"Lorem ipsum\",\r\n      duration: \"5\",\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      setDeleteView(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <TherapiesTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <CRow>\r\n                  <TherapiesTable\r\n                    rowData={getCurrentPageItems()}\r\n                    columns={columnData}\r\n                    getselectedData={getselectedData}\r\n                  />\r\n                </CRow>\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <TherapiesForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {deleteView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={deleteView}\r\n                onClose={() => setDeleteView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDeleteView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDeleteView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TherapiesTab;\r\n","import React from \"react\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport TherapiesTab from \"./TherapiesTab/TherapiesTab\";\r\n\r\nconst Therapies = ({ onClose, from }) => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-0\">\r\n        {from !== \"Consult\" && (\r\n          <>\r\n            {\" \"}\r\n            <CCol md={4} className=\"mb-2\">\r\n              <div className=\"d-flex gap-2\">\r\n                <img\r\n                  alt=\"BackBtn\"\r\n                  src={Assets.BackBtn}\r\n                  style={{ width: \"35px\" }}\r\n                  onClick={onClose}\r\n                  className=\"cursor\"\r\n                />\r\n                <span className=\"Obj-name d-flex align-items-center\">\r\n                  Therapies\r\n                </span>\r\n              </div>\r\n            </CCol>\r\n            <CCol md={8} className=\"mb-2 d-flex justify-content-end\">\r\n              <div className=\"d-flex mt-2\">\r\n                <Breadcrumb\r\n                  paths={[\r\n                    { label: \"Home\", to: \"/patients\" },\r\n                    { label: \"Patient List\", to: \"/patients\" },\r\n                    { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                    { label: \"Therapies\", to: \"/patients/history\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n        <CCol>\r\n          <TherapiesTab from={from} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Therapies;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\nimport { tableDateTime } from \"../../../Utils/dateUtils\";\r\n\r\nconst ChiefComplaintTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{tableDateTime(dt?.date)}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.complaints}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.notes}</span>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaintTable;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport { isValid, parse } from \"date-fns\";\r\nimport { DATE_FORMAT } from \"../../../../../../Config/config\";\r\n\r\nconst ChiefComplaintsForm = ({ back, defaultValues }) => {\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const defaultDateTime = defaultValues?.date || \"\";\r\n\r\n  // Split date and time\r\n  const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  const defaultTime = defaultDateTime.split(\" \")[1] || \"00:00\";\r\n  useEffect(() => {\r\n    // Combine default date and time into a single Date object\r\n    let date = new Date();\r\n\r\n    if (defaultDate) {\r\n      const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n      if (isValid(parsedDate)) {\r\n        date = parsedDate;\r\n      }\r\n    }\r\n\r\n    if (defaultTime) {\r\n      const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n      date.setHours(hours);\r\n      date.setMinutes(minutes);\r\n      date.setSeconds(0); // Reset seconds\r\n    }\r\n\r\n    setSelectedDate(date);\r\n    setSelectedTime(date); // Initialize time picker with the same Date object\r\n  }, [defaultDate, defaultTime]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    if (date) {\r\n      setSelectedTime(date); // Sync time picker with the updated date\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (time) => {\r\n    if (time) {\r\n      const updatedDateTime = new Date(selectedDate || time);\r\n      updatedDateTime.setHours(time.getHours());\r\n      updatedDateTime.setMinutes(time.getMinutes());\r\n      updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n      setSelectedDate(updatedDateTime); // Optionally update date as well\r\n      setSelectedTime(time);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative d-flex flex-column gap-1\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <DatePicker\r\n              showIcon\r\n              selected={selectedDate}\r\n              onChange={handleDateChange}\r\n              isClearable\r\n              closeOnScroll={true}\r\n              wrapperClassName=\"date-picker-wrapper\"\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div class=\"position-relative d-flex flex-column gap-1\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <DatePicker\r\n              showIcon\r\n              selected={selectedTime}\r\n              onChange={handleTimeChange}\r\n              showTimeSelect\r\n              showTimeSelectOnly\r\n              isClearable\r\n              closeOnScroll={true}\r\n              timeIntervals={5}\r\n              dateFormat=\"h:mm aa\"\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Chief Complaints *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.complaints}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={8}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n                rows={3}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaintsForm;\r\n","// import React from \"react\";\r\n// import Table from \"../../../../../Tables/Table\";\r\n// import { Assets } from \"../../../../../../assets/Assets\";\r\n// import { CCol, CRow } from \"@coreui/react\";\r\n// import Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\n// import ChiefComplaintTable from \"../../../../../Tables/Subjective/ChiefComplaintTable\";\r\n\r\n// const ChiefComplaints = ({ OnClose }) => {\r\n//   const columns = [\r\n//     { label: \"No.\" },\r\n//     { label: \"Complaints\" },\r\n//     { label: \"Notes\" },\r\n//     { label: \"Actions\" },\r\n//   ];\r\n\r\n//   const data = {\r\n//     columnsData: columns,\r\n//     tableData: [\r\n//       {\r\n//         no_: 1,\r\n//         complaints:\r\n//           \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n//         notes: \"Taking dole\",\r\n//         action: [{ type: \"edit\" }, { type: \"delete\" }],\r\n//       },\r\n//     ],\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <CRow>\r\n//         <CCol md={6} className=\"mb-2\">\r\n//           <div className=\"d-flex gap-2\">\r\n//             <img\r\n//               alt=\"BackBtn\"\r\n//               src={Assets.BackBtn}\r\n//               style={{ width: \"35px\" }}\r\n//               onClick={OnClose}\r\n//               className=\"cursor\"\r\n//             />\r\n//             <span className=\"Obj-name d-flex align-items-center\">\r\n//               Chief Complaints\r\n//             </span>\r\n//           </div>\r\n//         </CCol>\r\n//         <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n//           <div className=\"d-flex mt-2\">\r\n//             <Breadcrumb\r\n//               paths={[\r\n//                 { label: \"Home\", to: \"/patients\" },\r\n//                 { label: \"Patient List\", to: \"/patients\" },\r\n//                 { label: \"Medical Profile\", to: \"/patients/history\" },\r\n//                 { label: \"Chief Complaints\", to: \"/patients/history\" },\r\n//               ]}\r\n//             />\r\n//           </div>\r\n//         </CCol>\r\n//       </CRow>\r\n//       <CRow>\r\n//         <CCol md={6} xl={6} className=\"mb-3 chief-complaints\">\r\n//           <div className=\"search-bar\">\r\n//             <input type=\"text\" placeholder=\"Search\" />\r\n//             <button type=\"submit\">\r\n//               <i className=\"fas fa-search\"></i>\r\n//             </button>\r\n//           </div>\r\n//         </CCol>\r\n//         <CCol\r\n//           md={6}\r\n//           xl={6}\r\n//           className=\"mb-3 d-flex justify-content-end align-items-center gap-15\"\r\n//         >\r\n//           <div className=\"patient-adding\">\r\n//             <button>+ ADD</button>\r\n//           </div>\r\n//           <div className=\"patient-adding\">\r\n//             <button>\r\n//               <img src={Assets.ThreeDots} alt=\"settings\" />\r\n//             </button>\r\n//           </div>\r\n//         </CCol>\r\n//       </CRow>\r\n//       <Table columns={columns} data={data} />\r\n//       <ChiefComplaintTable/>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ChiefComplaints;\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../assets/Assets\";\r\nimport BlurBackground from \"../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ChiefComplaintTable from \"../../../../../Tables/Subjective/ChiefComplaintTable\";\r\nimport ChiefComplaintsForm from \"./ChiefComplaintsForm\";\r\nimport Breadcrumb from \"../../../../../Breadcrumb/Breadcrumb\";\r\nimport DateSelector from \"../../../../../DateRangePicker/DateSelector\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ChiefComplaints = ({ OnClose, from }) => {\r\n  const columnData = [\r\n    { label: \"No.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Complaints\" },\r\n    { label: \"Notes\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n      date: \"2024-07-05 17:52\",\r\n    },\r\n    {\r\n      id: 2,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n      date: \"2024-07-05 18:15\",\r\n    },\r\n    {\r\n      id: 3,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n      date: \"2024-08-05 03:15\",\r\n    },\r\n    {\r\n      id: 4,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n      date: \"2024-08-05 18:15\",\r\n    },\r\n    {\r\n      id: 5,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n      date: \"2024-08-05 18:15\",\r\n    },\r\n    {\r\n      id: 6,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n      date: \"2024-08-05 18:15\",\r\n    },\r\n    {\r\n      id: 7,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n      date: \"2024-08-05 18:15\",\r\n    },\r\n    {\r\n      id: 8,\r\n      complaints:\r\n        \"Abdominal pain, radiating to right shoulder and shoulder blades\",\r\n      notes: \"Taking dole\",\r\n      date: \"2024-08-05 18:15\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from !== \"Consult\" && (\r\n        <CRow>\r\n          <CCol md={6} className=\"mb-2\">\r\n            <div className=\"d-flex gap-2\">\r\n              <img\r\n                alt=\"BackBtn\"\r\n                src={Assets.BackBtn}\r\n                style={{ width: \"35px\" }}\r\n                onClick={() => {\r\n                  OnClose();\r\n                }}\r\n                className=\"cursor\"\r\n              />\r\n              <span className=\"Obj-name d-flex align-items-center\">\r\n                Chief Complaints\r\n              </span>\r\n            </div>\r\n          </CCol>\r\n          <CCol md={6} className=\"mb-2 d-flex justify-content-end\">\r\n            <div className=\"d-flex mt-2\">\r\n              <Breadcrumb\r\n                paths={[\r\n                  { label: \"Home\", to: \"/patients\" },\r\n                  { label: \"Patient List\", to: \"/patients\" },\r\n                  { label: \"Medical Profile\", to: \"/patients/history\" },\r\n                  { label: \"Chief Complaints\", to: \"/patients/history\" },\r\n                ]}\r\n              />\r\n            </div>\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow>\r\n              <CCol md={7} xl={7} className=\"mb-3 chief-complaints\">\r\n                {/* <div className=\"search-bar\">\r\n                <input type=\"text\" placeholder=\"Search\" />\r\n                <button type=\"submit\">\r\n                  <i className=\"fas fa-search\"></i>\r\n                </button>\r\n              </div> */}\r\n                <DateSelector />\r\n              </CCol>\r\n              <CCol\r\n                md={5}\r\n                xl={5}\r\n                className=\"mb-3 d-flex justify-content-end align-items-center gap-15\"\r\n              >\r\n                <div className=\"patient-adding\" onClick={() => addFormPage()}>\r\n                  <button>+ ADD</button>\r\n                </div>\r\n                <div className=\"patient-adding\">\r\n                  <button>\r\n                    <img src={Assets.ThreeDots} alt=\"settings\" />\r\n                  </button>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <ChiefComplaintTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <ChiefComplaintsForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChiefComplaints;\r\n","import {\r\n  CFormCheck,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst FamilyHistoryTable = ({\r\n  columns,\r\n  rowData,\r\n  getselectedData,\r\n  addFormView,\r\n}) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.disease}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.grandparents === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.father === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.mother === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Brother === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Sister === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Daughter === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <CFormCheck\r\n                    id=\"flexCheckChecked\"\r\n                    defaultChecked={dt?.Son === \"yes\" ? true : false}\r\n                    disabled={!addFormView}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.Delete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyHistoryTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport FamilyHistoryTable from \"../../../../../../Tables/Subjective/FamilyHistoryTable\";\r\n\r\nconst FamilyHistory = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Disease\" },\r\n    { id: 3, label: \"Grandparents\" },\r\n    { id: 4, label: \"Father\" },\r\n    { id: 5, label: \"Mother\" },\r\n    { id: 6, label: \"Brother(s)\" },\r\n    { id: 7, label: \"Sister(s)\" },\r\n    { id: 8, label: \"Daughter(s)\" },\r\n    { id: 9, label: \"Son(s)\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      disease: \"Migraine\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"yes\",\r\n      Daughter: \"yes\",\r\n      Son: \"no\",\r\n    },\r\n    {\r\n      id: 2,\r\n      disease: \"Stroke\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"no\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 3,\r\n      disease: \"Thyroid Disease\",\r\n      grandparents: \"no\",\r\n      father: \"no\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 4,\r\n      disease: \"Sinus\",\r\n      grandparents: \"yes\",\r\n      father: \"yes\",\r\n      mother: \"yes\",\r\n      Brother: \"no\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"yes\",\r\n    },\r\n    {\r\n      id: 5,\r\n      disease: \"Tuberculosis\",\r\n      grandparents: \"no\",\r\n      father: \"no\",\r\n      mother: \"yes\",\r\n      Brother: \"yes\",\r\n      Sister: \"no\",\r\n      Daughter: \"yes\",\r\n      Son: \"no\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        {from !== \"Consult\" && (\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={8} className=\"\">\r\n              <DateSelector />\r\n            </CCol>\r\n            <CCol\r\n              lg={4}\r\n              className=\"d-flex justify-content-end align-items-center gap-2\"\r\n            >\r\n              <div>\r\n                {!addFormView ? (\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.EditPencil} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Edit</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                ) : (\r\n                  <div style={{ width: \"100px\" }}>\r\n                    <PrimaryButton onClick={() => setAddFormView(false)}>\r\n                      <div className=\"d-flex justify-content-center gap-2 w-100\">\r\n                        <span className=\"fs-16 fw-600\">Save</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <PrimaryButton onClick={() => addFormPage()}>\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                  </div>\r\n                </PrimaryButton>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n        )}\r\n        <div className=\"mb-2\">\r\n          <FamilyHistoryTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            addFormView={addFormView}\r\n          />\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  onPageChange={onPageChange}\r\n                  totalItems={rowData?.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n        </div>\r\n      </>\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FamilyHistory;\r\n","import { CCol, CFormCheck, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst MedHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.onset;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.onset\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Yes\", \"No\"];\r\n  const findIndex = defaultValues?.prev_illness\r\n    ? options?.indexOf(defaultValues?.prev_illness)\r\n    : 0;\r\n\r\n  const findIndex1 = defaultValues?.chronic\r\n    ? options?.indexOf(defaultValues?.chronic)\r\n    : 0;\r\n\r\n  const icdoptions = [\r\n    \"E11.5 - Type 2 diabetes mellitus without complications\",\r\n    \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n    \"E11.7 - Type 2 diabetes mellitus without complications\",\r\n  ];\r\n\r\n  const findIndex2 = defaultValues?.icd10\r\n    ? icdoptions?.indexOf(defaultValues?.icd10)\r\n    : 0;\r\n\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedValue = (data) => {\r\n    setTrimester(data);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative d-flex flex-column gap-1\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Onset Date *\r\n              </label>\r\n              <div className=\"date-size\">\r\n                <DatePicker\r\n                  showIcon\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                  isClearable\r\n                  closeOnScroll={true}\r\n                  wrapperClassName=\"date-picker-wrapper\"\r\n                  dateFormat={DATE_FORMAT}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Conditions *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.conditions}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.icd10}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={icdoptions}\r\n                  defaultValue={\r\n                    defaultValues?.icd10 ? icdoptions[findIndex2] : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Chronic\r\n              </label>\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={defaultValues?.chronic === \"Yes\"}\r\n                // onChange={handleChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={defaultValues?.chronic === \"No\"}\r\n              />\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.chronic}\r\n              /> */}\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultValues?.chronic ? options[findIndex1] : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Previous Illness\r\n              </label>\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault1\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={defaultValues?.prev_illness === \"Yes\"}\r\n                // onChange={handleChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={defaultValues?.prev_illness === \"No\"}\r\n              />\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.prev_illness}\r\n              /> */}\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={\r\n                    defaultValues?.prev_illness ? options[findIndex] : null\r\n                  }\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedHistoryForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedHistoryForm from \"./MedHistoryForm\";\r\nimport MedicalHistoryTable from \"../../../../../../Tables/Subjective/MedicalHistoryTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst MedicalHistory = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"ONSET DATE\" },\r\n    { id: 3, label: \"CONDITIONS\" },\r\n    { id: 4, label: \"ICD\" },\r\n    { id: 5, label: \"Chronic\" },\r\n    { id: 6, label: \"Previous Illness\" },\r\n    // { id: 7, label: \"Notes\" },\r\n    { id: 7, label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"No\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      onset: \"01-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"No\",\r\n      prev_illness: \"No\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      onset: \"01-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"No\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"No\",\r\n      prev_illness: \"No\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      onset: \"02-04-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      onset: \"12-03-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      onset: \"02-03-2024\",\r\n      conditions: \"Lorem ipsum\",\r\n      icd10: \"E11.6 - Type 2 diabetes mellitus without complications\",\r\n      chronic: \"Yes\",\r\n      prev_illness: \"Yes\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <MedicalHistoryTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MedHistoryForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistory;\r\n","import { CCol, CFormCheck, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst ObstericHistoryForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  const [fert_treatment, setFert_treatment] = useState(\r\n    defaultValues?.fert_treatment || \"No\"\r\n  );\r\n  const [para, setPara] = useState(\"\");\r\n  const [lacating, setLacating] = useState(\"\");\r\n  const [gravida, setGravida] = useState(\"\");\r\n  const [trimester, setTrimester] = useState(\"\");\r\n\r\n  const getSelectedTrimster = (data) => {\r\n    setTrimester(data);\r\n  };\r\n\r\n  const getSelectedGravida = (data) => {\r\n    setGravida(data);\r\n  };\r\n  const getSelectedLacating = (data) => {\r\n    setLacating(data);\r\n  };\r\n  const getSelectedPara = (data) => {\r\n    setPara(data);\r\n  };\r\n  const getSelectedFertValue = (data) => {\r\n    setFert_treatment(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.lmp_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.lmp_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.ed_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.ed_date\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n  }, [defaultValues]);\r\n  const options = [\"First\", \"Second\", \"Third\"];\r\n  const findIndex = defaultValues?.trimster\r\n    ? options?.indexOf(defaultValues?.trimster)\r\n    : 0;\r\n\r\n  const lacatingoptions = [\"Yes\", \"No\"];\r\n  const findlacatingIndex = defaultValues?.lacating\r\n    ? lacatingoptions?.indexOf(defaultValues?.lacating)\r\n    : 1;\r\n  const findtreatmentIndex = defaultValues?.fert_treatment\r\n    ? lacatingoptions?.indexOf(defaultValues?.fert_treatment)\r\n    : 1;\r\n  const gravidaoptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n  const findgravidaIndex = defaultValues?.gravida\r\n    ? gravidaoptions?.indexOf(defaultValues?.gravida)\r\n    : 0;\r\n  const findparaIndex = defaultValues?.para\r\n    ? gravidaoptions?.indexOf(defaultValues?.para)\r\n    : 0;\r\n  const findingIndex5 = defaultValues?.lacating\r\n    ? lacatingoptions?.indexOf(defaultValues?.lacating)\r\n    : 1;\r\n  const getSelectedValue5 = (data) => {\r\n    console.log(data);\r\n  };\r\n  const [bad, setBad] = useState(\"No\");\r\n  const findingIndex6 = defaultValues?.bad\r\n    ? lacatingoptions?.indexOf(defaultValues?.bad)\r\n    : 1;\r\n  const getSelectedValue6 = (data) => {\r\n    setBad(data);\r\n  };\r\n\r\n  const [preg, setPreg] = useState(defaultValues?.pregnant || \"No\");\r\n  const [fertTreat, setFertTreat] = useState(\r\n    defaultValues?.fert_treatment || \"No\"\r\n  );\r\n  const [lact, setLact] = useState(defaultValues?.lacating || \"No\");\r\n  const [cesarean, setCesarean] = useState(defaultValues?.cesarean || \"No\");\r\n  const [obstetric, setObsteric] = useState(defaultValues?.obstetric || \"No\");\r\n\r\n  const handleChangeObste = (e) => {\r\n    setObsteric(e.target.value);\r\n  };\r\n\r\n  const handleChangeCesa = (e) => {\r\n    setCesarean(e.target.value);\r\n  };\r\n  const handleChangeLact = (e) => {\r\n    setLact(e.target.value);\r\n  };\r\n  const handleChangeFert = (e) => {\r\n    setFertTreat(e.target.value);\r\n  };\r\n  const findingIndex7 = defaultValues?.bad\r\n    ? lacatingoptions?.indexOf(defaultValues?.bad)\r\n    : 1;\r\n  const getSelectedValue7 = (data) => {\r\n    setPreg(data);\r\n  };\r\n  const handleChange = (e) => {\r\n    setPreg(e.target.value);\r\n  };\r\n  const [gravidaValue, setGravidaValue] = useState(\r\n    defaultValues?.gravida || \"\"\r\n  );\r\n  const [paraValue, setParaValue] = useState(defaultValues?.para || \"\");\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newstrValue = input.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (name === \"gravida\") {\r\n      setGravidaValue(newstrValue);\r\n    }\r\n    if (name === \"para\") {\r\n      setParaValue(newstrValue);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Pregnant *\r\n              </label>\r\n\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                name=\"exampleRadios\"\r\n                id=\"exampleRadios1\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={preg === \"Yes\"}\r\n                onChange={handleChange}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={preg === \"No\"}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {preg === \"Yes\" && (\r\n          <>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  LMP Date *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date}\r\n                    onChange={(date) => setDate(date)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  ED Date\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date2}\r\n                    onChange={(date) => setDate2(date)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Trimester *\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.trimster}\r\n              /> */}\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={options}\r\n                      defaultValue={options[findIndex]}\r\n                      getSelectedValue={getSelectedTrimster}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Gravida *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    name=\"gravida\"\r\n                    placeholder=\"00\"\r\n                    defaultValue={defaultValues?.gravida}\r\n                    value={gravidaValue}\r\n                    onChange={numCheck}\r\n                  />\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedGravida}\r\n                      options={gravidaoptions}\r\n                      defaultValue={gravidaoptions[findgravidaIndex]}\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Para *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"00\"\r\n                    defaultValue={defaultValues?.para}\r\n                    name=\"para\"\r\n                    value={paraValue}\r\n                    onChange={numCheck}\r\n                  />\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedPara}\r\n                      options={gravidaoptions}\r\n                      defaultValue={gravidaoptions[findparaIndex]}\r\n                    />\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Fertility Treament\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.fert_treatment}\r\n              /> */}\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={lacatingoptions}\r\n                      defaultValue={lacatingoptions[findtreatmentIndex]}\r\n                      getSelectedValue={getSelectedFertValue}\r\n                    />\r\n                  </div> */}\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"Yes\"\r\n                    value=\"Yes\"\r\n                    checked={fertTreat === \"Yes\"}\r\n                    onChange={handleChangeFert}\r\n                  />\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"No\"\r\n                    value=\"No\"\r\n                    checked={fertTreat === \"No\"}\r\n                    onChange={handleChangeFert}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            {fertTreat === \"Yes\" && (\r\n              <CCol lg={4} className=\"mb-3\">\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div class=\"position-relative\">\r\n                    <label for=\"validationTooltip01\" class=\"form-label\">\r\n                      Treament Description*\r\n                    </label>\r\n                    <CFormTextarea\r\n                      type=\"text\"\r\n                      class=\"form-control  pad-10\"\r\n                      id=\"validationTooltip01\"\r\n                      placeholder=\"Enter\"\r\n                      // defaultValue={defaultValues?.fert_treatment}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            )}\r\n            <CCol lg={4} className=\"mb-3\">\r\n              <div style={{ width: \"100%\" }}>\r\n                <div class=\"position-relative\">\r\n                  <label for=\"validationTooltip01\" class=\"form-label\">\r\n                    Lacatating\r\n                  </label>\r\n                  {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.lacating}\r\n              /> */}\r\n                  {/* <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      getSelectedValue={getSelectedLacating}\r\n                      options={lacatingoptions}\r\n                      defaultValue={lacatingoptions[findlacatingIndex]}\r\n                    />\r\n                  </div> */}\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"Yes\"\r\n                    value=\"Yes\"\r\n                    checked={lact === \"Yes\"}\r\n                    onChange={handleChangeLact}\r\n                  />\r\n                  <CFormCheck\r\n                    type=\"radio\"\r\n                    label=\"No\"\r\n                    value=\"No\"\r\n                    checked={lact === \"No\"}\r\n                    onChange={handleChangeLact}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </>\r\n        )}\r\n      </CRow>\r\n      <CRow>\r\n        <CCol lg={6} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Previous Cesarean Sections\r\n              </label>\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={lacatingoptions}\r\n                  defaultValue={lacatingoptions[findingIndex5]}\r\n                  getSelectedValue={getSelectedValue5}\r\n                />\r\n              </div> */}\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={cesarean === \"Yes\"}\r\n                onChange={handleChangeCesa}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={cesarean === \"No\"}\r\n                onChange={handleChangeCesa}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol lg={6} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Bad Obstetric History\r\n              </label>\r\n              {/* <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={lacatingoptions}\r\n                  defaultValue={lacatingoptions[findingIndex6]}\r\n                  getSelectedValue={getSelectedValue6}\r\n                />\r\n              </div> */}\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"Yes\"\r\n                value=\"Yes\"\r\n                checked={obstetric === \"Yes\"}\r\n                onChange={handleChangeObste}\r\n              />\r\n              <CFormCheck\r\n                type=\"radio\"\r\n                label=\"No\"\r\n                value=\"No\"\r\n                checked={obstetric === \"No\"}\r\n                onChange={handleChangeObste}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {obstetric === \"Yes\" && (\r\n          <CCol lg={6} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Bad Obstetric History Description*\r\n                </label>\r\n                <CFormTextarea\r\n                  type=\"text\"\r\n                  class=\"form-control  pad-10\"\r\n                  id=\"validationTooltip01\"\r\n                  placeholder=\"Enter\"\r\n                  // defaultValue={defaultValues?.fert_treatment}\r\n                />\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"130px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObstericHistoryForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst ObstetricHistoryTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.lmp_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.ed_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.trimster}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.gravida}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.para}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.boh}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lacating}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ObstetricHistoryTable;\r\n","import { CCol, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\n\r\nconst MensturalHistoryForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.lmp;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.lmp\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.ed_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.ed_date\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n  }, [defaultValues]);\r\n\r\n  const options = [\"Yes\", \"No\"];\r\n  const flow_duration = [\"2-7 days\", \"< 2 Days\", \"> 7 Days\"];\r\n  const flow_type = [\"Less\", \"Moderate\", \"Severe\"];\r\n\r\n  const findIndex = defaultValues?.trimster\r\n    ? options?.indexOf(defaultValues?.trimster)\r\n    : 1;\r\n\r\n  const [menopause, setMenopause] = useState(defaultValues.menopause || \"No\");\r\n\r\n  const handleClick = (event) => {\r\n    setMenopause(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n  const getSelected = (data) => {\r\n    console.log(data);\r\n    setMenopause(data);\r\n  };\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedBleeding = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedCycle = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedDysmen = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const [value, setValue] = useState(\r\n    defaultValues?.age ? defaultValues?.age : \"\"\r\n  );\r\n  const [value1, setValue1] = useState(\r\n    defaultValues?.age ? defaultValues?.age : \"\"\r\n  );\r\n  const [value2, setValue2] = useState(\r\n    defaultValues?.cycle_per_year ? defaultValues?.cycle_per_year : \"\"\r\n  );\r\n  const [value3, setValue3] = useState(\r\n    defaultValues?.cycle_in_days ? defaultValues?.cycle_in_days : \"\"\r\n  );\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const input = e.target.value;\r\n\r\n    // Remove non-digit characters and limit to two digits\r\n    const newValue = input.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (input.length > 2 && newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      if (e.target.name === \"MenopauseAge\") {\r\n        setValue(newValue);\r\n      } else if (e.target.name === \"MenarcheAge\") {\r\n        setValue1(newValue);\r\n      } else if (e.target.name === \"cycle_per_year\") {\r\n        setValue2(newValue);\r\n      } else if (e.target.name === \"cycle_in_days\") {\r\n        setValue3(newValue);\r\n      }\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const paste = e.clipboardData.getData(\"text\");\r\n    const newValue = paste.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      if (e.target.name === \"MenopauseAge\") {\r\n        setValue(newValue);\r\n      } else if (e.target.name === \"MenarcheAge\") {\r\n        setValue1(newValue);\r\n      } else if (e.target.name === \"cycle_per_year\") {\r\n        setValue2(newValue);\r\n      } else if (e.target.name === \"cycle_in_days\") {\r\n        setValue3(newValue);\r\n      }\r\n      setError(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Menarche Age *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={}\r\n                name=\"MenarcheAge\"\r\n                value={value1}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycles per Year {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={defaultValues?.cycle_per_year}\r\n                name=\"cycle_per_year\"\r\n                value={value2}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Cycle Length in days {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"00\"\r\n                // defaultValue={defaultValues?.cycle_in_days}\r\n                name=\"cycle_in_days\"\r\n                value={value3}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Flow Duration {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={flow_duration}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Flow Type {menopause !== \"Yes\" && \"*\"}\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={flow_type}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\"> InterMenstrual Bleeding </p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menstrualYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"menstrual\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menstrualNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"menstrual\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\"> Cycle Irregularity </p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"irregularityYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"irregularity\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"irregularityNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"irregularity\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">Dysmenorrhea</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"dysmenorrheaYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"dysmenorrhea\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"dysmenorrheaNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"dysmenorrhea\"\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              LMP Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">Menopause</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menopauseYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"menopause\"\r\n                checked={menopause === \"Yes\"}\r\n                onChange={handleClick}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"menopauseNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"menopause\"\r\n                checked={menopause === \"No\"}\r\n                onChange={handleClick}\r\n                disabled={from === \"Consult-Gynaec\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {menopause === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Menopause Age\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control  pad-10\"\r\n                  id=\"validationTooltip01\"\r\n                  placeholder=\"00\"\r\n                  // defaultValue={defaultValues?.age}\r\n                  name=\"MenopauseAge\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  onPaste={handlePaste}\r\n                  disabled={from === \"Consult-Gynaec\" ? true : false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n\r\n      {from !== \"Consult-Gynaec\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"130px\" }}>\r\n            <PrimaryButton>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MensturalHistoryForm;\r\n","import { CCol, CFormTextarea, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst ScreeningHistoryForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date2, setDate2] = useState(null);\r\n  const [date3, setDate3] = useState(null);\r\n  const [abnormalStatus, setAbnormalStatus] = useState(\r\n    defaultValues?.history_of_abnormal || \"No\"\r\n  );\r\n  const [mamogramStatus, setMamogramStatus] = useState(\r\n    defaultValues?.history_of_mamogram || \"No\"\r\n  );\r\n  const [breastStatus, setBreastStatus] = useState(\r\n    defaultValues?.history_of_breast || \"No\"\r\n  );\r\n\r\n  const handleAbnormalStatus = (event) => {\r\n    setAbnormalStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  const handleMamogramStatus = (event) => {\r\n    setMamogramStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  const handleBreastStatus = (event) => {\r\n    setBreastStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date_of_last_pap;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date_of_last_pap\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.date_of_last_mamogram;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.date_of_last_mamogram\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Example default date string\r\n    const defaultDateString3 = defaultValues?.date_of_last_breast;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate3 = defaultValues?.date_of_last_breast\r\n      ? parseDateString(defaultDateString3)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate2(defaultDate2);\r\n    setDate3(defaultDate3);\r\n  }, [defaultValues]);\r\n  const options = [\"Yes\", \"No\"];\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    setAbnormalStatus(data);\r\n  };\r\n\r\n  const findIndex = defaultValues?.history_of_abnormal\r\n    ? options?.indexOf(defaultValues?.history_of_abnormal)\r\n    : 1;\r\n\r\n  const getSelectedValue3 = (data) => {\r\n    setMamogramStatus(data);\r\n  };\r\n\r\n  const getSelectedValue4 = (data) => {\r\n    setBreastStatus(data);\r\n  };\r\n\r\n  const findIndex3 = defaultValues?.history_of_mamogram\r\n    ? options?.indexOf(defaultValues?.history_of_mamogram)\r\n    : 1;\r\n\r\n  const findIndex4 = defaultValues?.history_of_breast\r\n    ? options?.indexOf(defaultValues?.history_of_breast)\r\n    : 1;\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last pap smear\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">History of abnormal pap smear</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"abnormalYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"abnormal\"\r\n                checked={abnormalStatus === \"Yes\"}\r\n                onChange={handleAbnormalStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"abnormalNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"abnormal\"\r\n                checked={abnormalStatus === \"No\"}\r\n                onChange={handleAbnormalStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {abnormalStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Abnormal pap smear details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult-Screen\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last mamogram\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date2}\r\n                onChange={(date) => setDate2(date)}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">History of mamogram</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"mamogramYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"mamogram\"\r\n                checked={mamogramStatus === \"Yes\"}\r\n                onChange={handleMamogramStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"mamogramNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"mamogram\"\r\n                checked={mamogramStatus === \"No\"}\r\n                onChange={handleMamogramStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {mamogramStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Mamogram details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult-Screen\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date of last breast exam\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date3}\r\n                onChange={(date) => setDate3(date)}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <p className=\"radio-label\">History of breast exam</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"breastYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"breast\"\r\n                checked={breastStatus === \"Yes\"}\r\n                onChange={handleBreastStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"breastNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"breast\"\r\n                checked={breastStatus === \"No\"}\r\n                onChange={handleBreastStatus}\r\n                disabled={from === \"Consult-Screen\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {breastStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Breast exam details\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                  disabled={from === \"Consult-Screen\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n\r\n      {from !== \"Consult-Screen\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"130px\" }}>\r\n            <PrimaryButton>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScreeningHistoryForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ImagingOrderForm from \"./ObstericHistoryForm\";\r\nimport ImagingOrderTable from \"../../../../../../Tables/ImagingOrderTable\";\r\nimport MedicalTab from \"../../../MedicalTab\";\r\nimport ObstetricHistoryTable from \"../../../../../../Tables/Subjective/ObstetricHistoryTable\";\r\nimport GynaecHistoryTable from \"../../../../../../Tables/Subjective/GynaecHistoryTable\";\r\nimport ScreeningHistory from \"../../../../../../Tables/Subjective/ScreeningHistory\";\r\nimport MensturalHistoryForm from \"./MensturalHistoryForm\";\r\nimport ScreeningHistoryForm from \"./ScreeningHistoryForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst OGHistory = ({ from, back }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"LMP Date\" },\r\n    { id: 3, label: \"ED Date\" },\r\n    { id: 4, label: \"Trimester\" },\r\n    { id: 5, label: \"Gravida\" },\r\n    { id: 6, label: \"Para\" },\r\n    { id: 7, label: \"Bad Obstetric History\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 3,\r\n      para: 5,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      pregnant: \"Yes\",\r\n      cesarean: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      cesarean: \"Yes\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 3,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"No\",\r\n      lacating: \"Yes\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 4,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"No\",\r\n      boh: \"No\",\r\n    },\r\n    {\r\n      id: 5,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"No\",\r\n      lacating: \"No\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 6,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 7,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 8,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 9,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n    {\r\n      id: 10,\r\n      lmp_date: \"01-01-2024\",\r\n      ed_date: \"05-02-2024\",\r\n      trimster: \"First\",\r\n      gravida: 1,\r\n      para: 1,\r\n      fert_treatment: \"Yes\",\r\n      lacating: \"Yes\",\r\n      boh: \"Yes\",\r\n    },\r\n  ];\r\n\r\n  const MensuralcolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 3, label: \"Menarche Age\" },\r\n    // { id: 3, label: \"Cycles per Year\" },\r\n    // { id: 4, label: \"Cycle Length in days\" },\r\n    // { id: 5, label: \"Flow Duration\" },\r\n    // { id: 6, label: \"Flow Type\" },\r\n    // { id: 7, label: \"InterMenstrual Bleeding\" },\r\n    { id: 3, label: \"cycle irregularity\" },\r\n    { id: 4, label: \"dysmenorrhea\" },\r\n    { id: 5, label: \"LMP\" },\r\n    { id: 2, label: \"Menopause\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const MenstrualrowData = [\r\n    {\r\n      id: 1,\r\n      age: \"18\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"20\",\r\n      cycle_in_days: \"30\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 2,\r\n      age: \"25\",\r\n      menopause: \"No\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 3,\r\n      age: \"25\",\r\n      menopause: \"No\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 4,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 5,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 6,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 7,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 8,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 9,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n    {\r\n      id: 10,\r\n      age: \"25\",\r\n      menopause: \"Yes\",\r\n      cycle_per_year: \"45\",\r\n      cycle_in_days: \"37\",\r\n      flow_duration: \"Lorem ipsum\",\r\n      flow_type: \"Lorem ipsum\",\r\n      bleeding: \"Yes\",\r\n      irregularity: \"Yes\",\r\n      dysmenorrhea: \"Yes\",\r\n      lmp: \"02-05-2024\",\r\n    },\r\n  ];\r\n\r\n  const ScreeningcolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"date of last pap smear\" },\r\n    { id: 3, label: \"History of abnormal pap smear\" },\r\n    { id: 4, label: \"date of last mamogram\" },\r\n    { id: 5, label: \"History of mamogram\" },\r\n    { id: 6, label: \"date of last Breast Exam\" },\r\n    { id: 7, label: \"History of Breast Exam\" },\r\n    { id: 8, label: \"ACTIONS\" },\r\n  ];\r\n  const ScreeningrowData = [\r\n    {\r\n      id: 1,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"08-06-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-07-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"Yes\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"Yes\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"No\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date_of_last_pap: \"02-05-2024\",\r\n      history_of_abnormal: \"No\",\r\n      date_of_last_mamogram: \"07-05-2024\",\r\n      history_of_mamogram: \"No\",\r\n      date_of_last_breast: \"12-05-2024\",\r\n      history_of_breast: \"Yes\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentMenstrualPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return MenstrualrowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentScreeningItem = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return ScreeningrowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Yes\", \"No\"];\r\n  const PatientSubMenu4 = localStorage.getItem(\"PatientSubMenu-4\");\r\n  const ParsedPatientSubMenu = PatientSubMenu4\r\n    ? JSON.parse(PatientSubMenu4)\r\n    : 1;\r\n  const tabs = [\r\n    { id: 1, title: \"Obstetric History\" },\r\n    { id: 2, title: \"Gynaec History\" },\r\n  ];\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n\r\n  const PatientSubMenu5 = localStorage.getItem(\"PatientSubMenu-5\");\r\n  const ParsedPatientSubMenu5 = PatientSubMenu5\r\n    ? JSON.parse(PatientSubMenu5)\r\n    : 1;\r\n  const [currentHistoryTab, setCurrentHistoryTab] = useState(\r\n    ParsedPatientSubMenu5\r\n  );\r\n\r\n  const GynaecTabs = [\r\n    { id: 1, title: \"Menstrual History\" },\r\n    { id: 2, title: \"Screening and Diagnostic History\" },\r\n  ];\r\n\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n    setAddFormView(false);\r\n  };\r\n\r\n  const getHistoryCurrentTab = (data) => {\r\n    setCurrentHistoryTab(data);\r\n    setAddFormView(false);\r\n  };\r\n\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedValue1 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <ObstetricHistoryTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from === \"Consult-Gynaec\" && (\r\n        <CRow>\r\n          <CCard className=\"p-2 cursor-default mb-5\">\r\n            <CCardBody className=\"mb-3\">\r\n              <MensturalHistoryForm\r\n                back={back}\r\n                defaultValues={selectedData}\r\n                from={from}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CRow>\r\n      )}\r\n      {from === \"Consult-Screen\" && (\r\n        <CRow>\r\n          <CCard className=\"p-2 cursor-default mb-5\">\r\n            <CCardBody className=\"mb-3\">\r\n              <ScreeningHistoryForm\r\n                back={back}\r\n                defaultValues={selectedData}\r\n                from={from}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CRow>\r\n      )}\r\n      {from === \"\" && (\r\n        <>\r\n          <CRow className=\"mb-2\">\r\n            <CCol lg={5} className=\"\">\r\n              <MedicalTab\r\n                tabs={tabs}\r\n                getCurrentTab={getCurrentTab}\r\n                defaultTab={currentTab - 1}\r\n              />\r\n            </CCol>\r\n            <CCol lg={7}>\r\n              {currentTab === 1 && (\r\n                // <CRow>\r\n                //   <CCol lg={4}>\r\n                //     <div style={{ width: \"100%\" }}>\r\n                //       <div class=\"position-relative\">\r\n                //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n                //           Pregnant\r\n                //         </label>\r\n                //         <div\r\n                //           className=\"w-100\"\r\n                //           style={{\r\n                //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                //           }}\r\n                //         >\r\n                //           <Dropdown\r\n                //             options={options}\r\n                //             defaultValue={options[0]}\r\n                //             getSelectedValue={getSelectedValue}\r\n                //           />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   </CCol>\r\n                //   <CCol lg={4}>\r\n                //     <div style={{ width: \"100%\" }}>\r\n                //       <div class=\"position-relative\">\r\n                //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n                //           Previous Cesarean Sections\r\n                //         </label>\r\n                //         <div\r\n                //           className=\"w-100\"\r\n                //           style={{\r\n                //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                //           }}\r\n                //         >\r\n                //           <Dropdown\r\n                //             options={options}\r\n                //             defaultValue={options[1]}\r\n                //             getSelectedValue={getSelectedValue1}\r\n                //           />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   </CCol>\r\n                //   <CCol lg={4}>\r\n                //     <div style={{ width: \"100%\" }}>\r\n                //       <div class=\"position-relative\">\r\n                //         <label for=\"validationTooltip01\" class=\"form-label\">\r\n                //           Bad Obstetric History\r\n                //         </label>\r\n                //         <div\r\n                //           className=\"w-100\"\r\n                //           style={{\r\n                //             boxShadow: \"0px 4px 17px 0px #17171D14\",\r\n                //           }}\r\n                //         >\r\n                //           <Dropdown\r\n                //             options={options}\r\n                //             defaultValue={options[1]}\r\n                //             getSelectedValue={getSelectedValue2}\r\n                //           />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   </CCol>\r\n                // </CRow>\r\n                <></>\r\n              )}\r\n              {currentTab === 2 && (\r\n                <MedicalTab\r\n                  tabs={GynaecTabs}\r\n                  getCurrentTab={getHistoryCurrentTab}\r\n                  defaultTab={currentHistoryTab - 1}\r\n                />\r\n              )}\r\n            </CCol>\r\n          </CRow>\r\n\r\n          {!addFormView && currentTab === 1 && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <div className=\"mb-2\">\r\n                {currentTab === 1 && (\r\n                  <>\r\n                    <CRow>\r\n                      <ObstetricHistoryTable\r\n                        rowData={getCurrentPageItems()}\r\n                        columns={columnData}\r\n                        getselectedData={getselectedData}\r\n                        from={from}\r\n                      />\r\n                    </CRow>\r\n\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={rowData?.length}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                )}\r\n                {/* {currentTab === 2 && currentHistoryTab === 1 && (\r\n                  <>\r\n                    <CRow>\r\n                      <GynaecHistoryTable\r\n                        rowData={getCurrentMenstrualPageItems()}\r\n                        columns={MensuralcolumnData}\r\n                        getselectedData={getselectedData}\r\n                      />\r\n                    </CRow>\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={rowData?.length}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                )}\r\n                {currentTab === 2 && currentHistoryTab === 2 && (\r\n                  <>\r\n                    <CRow>\r\n                      <ScreeningHistory\r\n                        rowData={getCurrentScreeningItem()}\r\n                        columns={ScreeningcolumnData}\r\n                        getselectedData={getselectedData}\r\n                      />\r\n                    </CRow>\r\n                    <CRow className=\"mb-3\">\r\n                      <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                          currentPage={currentPage}\r\n                          onPageChange={onPageChange}\r\n                          totalItems={rowData?.length}\r\n                          itemsPerPage={itemsPerPage}\r\n                        />\r\n                      </CCol>\r\n                    </CRow>\r\n                  </>\r\n                )} */}\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {from === \"\" && (\r\n        <>\r\n          {addFormView && (\r\n            <CRow className=\"mb-2\">\r\n              <CCard className=\"p-2 cursor-default mb-5\">\r\n                <CCardBody className=\"mb-3\">\r\n                  {currentTab === 1 && (\r\n                    <ImagingOrderForm\r\n                      back={() => {\r\n                        setAddFormView(false);\r\n                        setSelectedData({});\r\n                      }}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                  {/* {currentTab === 2 && currentHistoryTab === 1 && (\r\n                <MensturalHistoryForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )}\r\n              {currentTab === 2 && currentHistoryTab === 2 && (\r\n                <ScreeningHistoryForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              )} */}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CRow>\r\n          )}\r\n\r\n          {currentTab !== 1 && (\r\n            <CRow className=\"mb-2\">\r\n              <CCard className=\"p-2 cursor-default mb-5\">\r\n                <CCardBody className=\"mb-3\">\r\n                  {currentTab === 2 && currentHistoryTab === 1 && (\r\n                    <MensturalHistoryForm\r\n                      back={back}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                  {currentTab === 2 && currentHistoryTab === 2 && (\r\n                    <ScreeningHistoryForm\r\n                      back={back}\r\n                      defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CRow>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OGHistory;\r\n","import { CCol, CFormTextarea, CFormCheck, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst MedHistoryForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [smokingStatus, setSmokingStatus] = useState(\r\n    defaultValues?.smoking || \"No\"\r\n  );\r\n\r\n  const [alcoholStatus, setAlcoholStatus] = useState(\r\n    defaultValues?.alcohol || \"No\"\r\n  );\r\n\r\n  const [drugStatus, setDrugStatus] = useState(defaultValues?.drugs || \"No\");\r\n\r\n  const handleSmokingStatus = (event) => {\r\n    setSmokingStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  const handleAlcoholStatus = (event) => {\r\n    setAlcoholStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  const handleDrugStatus = (event) => {\r\n    setDrugStatus(event.target.value === \"yes\" ? \"Yes\" : \"No\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.onset;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.onset\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  const options = [\"Yes\", \"No\"];\r\n\r\n  const getSelectedValue1 = (data) => {\r\n    setSmokingStatus(data);\r\n  };\r\n\r\n  const findIndex = defaultValues?.smoking\r\n    ? options?.indexOf(defaultValues?.smoking)\r\n    : 1;\r\n\r\n  const getSelectedValue2 = (data) => {\r\n    setAlcoholStatus(data);\r\n  };\r\n\r\n  const findIndex2 = defaultValues?.alcohol\r\n    ? options?.indexOf(defaultValues?.alcohol)\r\n    : 1;\r\n\r\n  const getSelectedValue3 = (data) => {\r\n    setDrugStatus(data);\r\n  };\r\n\r\n  const findIndex3 = defaultValues?.drugs\r\n    ? options?.indexOf(defaultValues?.drugs)\r\n    : 1;\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <p className=\"radio-label\">Smoking</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"smokingYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"smoking\"\r\n                checked={smokingStatus === \"Yes\"}\r\n                onChange={handleSmokingStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"smokingNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"smoking\"\r\n                checked={smokingStatus === \"No\"}\r\n                onChange={handleSmokingStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {smokingStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Smoking details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4}>\r\n          <p className=\"radio-label\">Alcohol</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"alcoholYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"alcohol\"\r\n                checked={alcoholStatus === \"Yes\"}\r\n                onChange={handleAlcoholStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"alcoholNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"alcohol\"\r\n                checked={alcoholStatus === \"No\"}\r\n                onChange={handleAlcoholStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {alcoholStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Alcohol details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 8-20 words long.\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n        <CCol lg={4}>\r\n          <p className=\"radio-label\">Drugs</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"drugsYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"drugs\"\r\n                checked={drugStatus === \"Yes\"}\r\n                onChange={handleDrugStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"drugsNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"drugs\"\r\n                checked={drugStatus === \"No\"}\r\n                onChange={handleDrugStatus}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {drugStatus === \"Yes\" && (\r\n          <CCol lg={4} className=\"mb-3\">\r\n            <div style={{ width: \"100%\" }}>\r\n              <div class=\"position-relative\">\r\n                <label for=\"validationTooltip01\" class=\"form-label\">\r\n                  Drugs details*\r\n                </label>\r\n                <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3}\r\n                  // text=\"Must be 4-20 words long.\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n                ></CFormTextarea>\r\n              </div>\r\n            </div>\r\n          </CCol>\r\n        )}\r\n      </CRow>\r\n      {from !== \"Consult\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedHistoryForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SocialHistoryTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.smoking}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.alcohol}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.drugs}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialHistoryTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedHistoryForm from \"./MedHistoryForm\";\r\nimport MedicalHistoryTable from \"../../../../../../Tables/Subjective/MedicalHistoryTable\";\r\nimport SocialHistoryTable from \"../../../../../../Tables/Subjective/SocialHistoryTable\";\r\n\r\nconst SocialHistory = ({ from, back }) => {\r\n  const Data = {\r\n    id: 1,\r\n    smoking: \"No\",\r\n    alcohol: \"No\",\r\n    drugs: \"No\",\r\n  };\r\n  return (\r\n    <>\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <MedHistoryForm back={back} defaultValues={Data} from={from} />\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialHistory;\r\n","import { CCol, CRow ,CFormTextarea} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst SurgicalForm = ({ back, defaultValues }) => {\r\n\r\n  const [date, setDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  const gravidaoptions = [\"Lorem Ipsum\", \"Lorem Ipsum\"];\r\n  const findgravidaIndex = defaultValues?.gravida\r\n    ? gravidaoptions?.indexOf(defaultValues?.gravida)\r\n    : 0;\r\n  const getSelectedGravida = (data) => {\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeCaption=\"Time\"\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Surgery Name *\r\n              </label>\r\n\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  // defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Surgery Reason *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                ICD Code\r\n              </label>\r\n\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  getSelectedValue={getSelectedGravida}\r\n                  options={gravidaoptions}\r\n                  // defaultValue={gravidaoptions[findgravidaIndex]}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Performed by Doctor *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Referred by Doctor\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={6}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Hospital *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n      <CCol lg={6}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Notes\r\n            </label>\r\n            <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  // label=\"Example textarea\"\r\n                  rows={3} >\r\n                \r\n                </CFormTextarea>\r\n          </div>\r\n        </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SurgicalTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.icd_code}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.Performed_by}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.hospital}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SurgicalForm from \"./SurgicalForm\";\r\nimport MedicationTable from \"../../../../../../Tables/Subjective/MedicationTable\";\r\nimport SurgicalTable from \"../../../../../../Tables/Subjective/SurgicalTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst SurgicalHistory = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Surgery Name\" },\r\n    { id: 4, label: \" ICD Code\" },\r\n    { id: 5, label: \"Performed by\" },\r\n    { id: 5, label: \"Hospital\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 7,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 8,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 9,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 10,\r\n      date: \"06-07-2024 12:10\",\r\n      name: \"Lorem Ipsum\",\r\n      icd_code: \"56788\",\r\n      Performed_by: \"Lorem ipsum\",\r\n      hospital: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <SurgicalTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <SurgicalForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurgicalHistory;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicationForm from \"./MedicationForm\";\r\nimport MedicationTable from \"../../../../../../Tables/Subjective/MedicationTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Medication = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Medication Name\" },\r\n    // { id: 3, label: \"Strength\" },\r\n    // { id: 4, label: \" strength measurement\" },\r\n    // { id: 5, label: \"dosage \" },\r\n    { id: 6, label: \"M | A | E | N \" },\r\n    { id: 7, label: \"BF/AF\" },\r\n    { id: 8, label: \"Quantity\" },\r\n    { id: 9, label: \" start date\" },\r\n    { id: 10, label: \"Status\" },\r\n    { id: 11, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"bf\",\r\n      m: 0,\r\n      a: 0.5,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 2,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 3,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 4,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 5,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 6,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 7,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 8,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 9,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n    {\r\n      id: 10,\r\n      start_date: \"06-07-2024\",\r\n      end_date: \"06-08-2024\",\r\n      name: \"Paracetamol\",\r\n      strength: \"650\",\r\n      strength_measurement: \"mg\",\r\n      qty: \"1456\",\r\n      dosage: \"Tablet\",\r\n      time_taken: \"5\",\r\n      status: \"Not Taking\",\r\n      food_times: \"af\",\r\n      m: 0,\r\n      a: 1,\r\n      e: 1,\r\n      n: 1,\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  const options = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <MedicationTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <MedicationForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Medication;\r\n","import { CCol, CFormCheck, CFormSelect,CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst MedicationForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [date1, setDate1] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.start_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.start_date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n    // Example default date string\r\n    const defaultDateString2 = defaultValues?.end_date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate2 = defaultValues?.end_date\r\n      ? parseDateString(defaultDateString2)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n    setDate1(defaultDate2);\r\n  }, [defaultValues]);\r\n\r\n  const options = [\"Taking\", \"Not Taking\", \"Discontinued\", \"Status Unknown\"];\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const options1 = [\"Brand\", \"Generic\"];\r\n  const getSelectedValue1 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const options2 = [\r\n    \"Tablet\",\r\n    \"Chewable tablet\",\r\n    \"Sublingual tablet\",\r\n    \"Buccal tablet\",\r\n    \"Capsule\",\r\n    \"Hard capsule\",\r\n    \"Soft gelatin capsule\",\r\n    \"Powder\",\r\n    \"Oral powder\",\r\n    \"Topical powder\",\r\n    \"Liquid\",\r\n    \"Syrup\",\r\n    \"Elixir\",\r\n    \"Suspension\",\r\n    \"Solution\",\r\n    \"Tincture\",\r\n    \"Ointment\",\r\n    \"Cream\",\r\n    \"Gel\",\r\n    \"Paste\",\r\n    \"Suppository\",\r\n    \"Patch\",\r\n    \"Inhaler\",\r\n    \"Metered-dose inhaler (MDI)\",\r\n    \"Dry powder inhaler (DPI)\",\r\n    \"Nasal Spray\",\r\n    \"Eye Drop\",\r\n    \"Ear Drop\",\r\n    \"Intravenous (IV) solution\",\r\n    \"Intramuscular (IM) injection\",\r\n    \"Subcutaneous (SC) injection\",\r\n    \"Intradermal (ID) injection\",\r\n    \"Implant\",\r\n  ];\r\n  const getSelectedValue2 = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const [strength, setStrength] = useState(defaultValues?.strength || \"\");\r\n  const [qty, setQty] = useState(defaultValues?.qty || \"\");\r\n  const [timeTaken, setTimeTaken] = useState(defaultValues?.time_taken || \"\");\r\n\r\n  const numCheck = (e) => {\r\n    const input = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    const newDaysValue = input.replace(/[^0-9]/g, \"\").slice(0, 3);\r\n    const newstrValue = input.replace(/[^0-9]/g, \"\").slice(0, 4);\r\n    const newQtyValue = input.replace(/[^0-9]/g, \"\").slice(0, 4);\r\n\r\n    if (name === \"str&dos\") {\r\n      setStrength(newstrValue);\r\n    }\r\n    if (name === \"totalQty\") {\r\n      setQty(newQtyValue);\r\n    }\r\n    if (name === \"days\") {\r\n      setTimeTaken(newDaysValue);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (date && timeTaken) {\r\n      // Convert numDays to an integer\r\n      const days = parseInt(timeTaken, 10);\r\n\r\n      if (!isNaN(days)) {\r\n        // Calculate the end date\r\n        const end = new Date(date);\r\n        end.setDate(end.getDate() + days);\r\n        setDate1(end);\r\n      } else {\r\n        setDate1(null);\r\n      }\r\n    } else {\r\n      setDate1(null);\r\n    }\r\n  }, [date, timeTaken]);\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Medication Type *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options1}\r\n                  // defaultValue={options[1]}\r\n                  getSelectedValue={getSelectedValue1}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Medication Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Dosage *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options2}\r\n                  // defaultValue={options[1]}\r\n                  getSelectedValue={getSelectedValue2}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Strength *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                name=\"str&dos\"\r\n                // defaultValue={defaultValues?.strength}\r\n                value={strength}\r\n                onChange={numCheck}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Strength measurement *\r\n              </label>\r\n              <CFormSelect\r\n                size=\"lg\"\r\n                className=\"mb-3\"\r\n                aria-label=\"Large select example\"\r\n                name=\"strength\"\r\n                defaultValue={'mg'}\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"cfu/ml\">\r\n                  Colony forming units per milliliter (cfu/ml)\r\n                </option>\r\n                <option value=\"iu\">International unit (iu) </option>\r\n                <option value=\"meq/ml\">\r\n                  Milliequivalent per liter (meq/ml)\r\n                </option>\r\n                <option value=\"meq\">Milliequivalent(meq)</option>\r\n                <option value=\"Milligram per milliliter\">\r\n                  Milligram per milliliter{\" \"}\r\n                </option>\r\n                <option value=\"mg\">Milligram(mg)</option>{\" \"}\r\n                <option value=\"ml\">milliliter(ml)</option>\r\n                <option value=\"%\">percentage(%) </option>\r\n                <option value=\"unt\">Unit (unt)</option>\r\n                <option value=\"unt/ml\">Unit per milliliter (unt/ml)</option>\r\n                <option value=\"kg\">Kilogram (kg) </option>\r\n                <option value=\"mcg\">Microgram (mcg)</option>\r\n              </CFormSelect>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Total Qty / Taken *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                name=\"totalQty\"\r\n                value={qty}\r\n                onChange={numCheck}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Route of administration *\r\n              </label>\r\n              <CFormSelect\r\n                size=\"lg\"\r\n                className=\"mb-3\"\r\n                aria-label=\"Large select example\"\r\n                name=\"strengthMeasurement\"\r\n              >\r\n                <option>Select</option>\r\n                <option value=\"Oral\">Oral</option>{\" \"}\r\n                <option value=\"Sublingual\">Sublingual</option>\r\n                <option value=\"Buccal\">Buccal </option>\r\n                <option value=\"Intravenous\">Intravenous </option>\r\n                <option value=\"Intramuscular\">Intramuscular</option>\r\n                <option value=\"Subcutaneous\">Subcutaneous</option>\r\n                <option value=\"Intradermal\">Intradermal</option>\r\n                <option value=\"Topical\">Topical</option>{\" \"}\r\n                <option value=\"Transdermal\">Transdermal</option>\r\n                <option value=\"Ocular\">Ocular </option>\r\n                <option value=\"Otic\">Otic </option>\r\n                <option value=\"Nasal\">Nasal</option>\r\n                <option value=\"Inhalation\">Inhalation</option>\r\n                <option value=\"Rectal\">Rectal</option>\r\n                <option value=\"Vaginal\">Vaginal </option>\r\n                <option value=\"Implant\">Implant </option>\r\n                <option value=\"Intrathecal\">Intrathecal</option>\r\n                <option value=\"Epidural\">Epidural</option>\r\n              </CFormSelect>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Start Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat={DATE_FORMAT}\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                No. of Day(s) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"000\"\r\n                name=\"days\"\r\n                value={timeTaken}\r\n                onChange={numCheck}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\">\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              End Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date1}\r\n                onChange={(date) => setDate1(date)}\r\n                dateFormat={DATE_FORMAT}\r\n                \r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4} className=\"mb-3\" style={{ paddingRight: \"0\" }}>\r\n          <div style={{ width: \"100%\" }} className=\"d-flex gap-3\">\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                M\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"m\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                A\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"a\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                E\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"e\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                N\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10 text-align-center\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0\"\r\n                name=\"n\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3} className=\"mb-3\">\r\n          <div className=\"h-100 d-flex align-items-end w-100 justify-content-start\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"inlineCheckbox1\"\r\n                value=\"bf\"\r\n                disabled={\r\n                  defaultValues?.lab_status === \"Prescribed\"\r\n                    ? false\r\n                    : defaultValues?.medicines?.length >= 1\r\n                    ? true\r\n                    : false\r\n                }\r\n                label={\r\n                  <label for=\"validationTooltip01\" class=\"form-label mb-0\">\r\n                    BF\r\n                  </label>\r\n                }\r\n                name=\"food\"\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"inlineCheckbox2\"\r\n                value=\"af\"\r\n                label={\r\n                  <label for=\"validationTooltip01\" class=\"form-label mb-0\">\r\n                    AF\r\n                  </label>\r\n                }\r\n                name=\"food\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={5} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  rows={3} >\r\n                </CFormTextarea>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        {/* <CCol lg={7} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Reason for medication\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                name=\"reason\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol> */}\r\n        <CCol lg={5} className=\"mb-3\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Status *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[1]}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationForm;\r\n","import { CCol, CFormTextarea, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { toast } from \"react-toastify\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\nimport { isValid, parse } from \"date-fns\";\r\n\r\nconst SignsSymptomsForm = ({ back, defaultValues }) => {\r\n\r\n  const [date, setDate] = useState(new Date());\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date and Time objects\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n\r\n      // Create Date and Time objects\r\n      const parsedDate = new Date(year, month - 1, day);\r\n      const parsedTime = new Date();\r\n      parsedTime.setHours(hours, minutes, 0, 0);\r\n\r\n      return { parsedDate, parsedTime };\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date and Time objects\r\n    const { parsedDate, parsedTime } = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : { parsedDate: new Date(), parsedTime: new Date() };\r\n\r\n    // Set default date and time in state\r\n    setDate(parsedDate);\r\n    setTime(parsedTime);\r\n  }, [defaultValues]);\r\n\r\n  const today = new Date();\r\n  const todayStart = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0);\r\n  const todayEnd = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 23, 59, 59);\r\n\r\n\r\n\r\n\r\n  const options = [\r\n    \"Normal\",\r\n    \"Mild\",\r\n    \"Moderate\",\r\n    \"Severe\",\r\n    \"Very Severe\",\r\n    \"Worst\",\r\n  ];\r\n  const getSelectedValue = (data) => {\r\n    console.log(data);\r\n  };\r\n  const options1 = [\"Headache\", \"Fracture\", \"Fever\"];\r\n  const getSelectedValue1 = (data) => {\r\n    console.log(data);\r\n  };\r\n  const [value3, setValue3] = useState(defaultValues?.duration_days || \"\");\r\n  const [error, setError] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    const input = e.target.value;\r\n\r\n    // Remove non-digit characters and limit to two digits\r\n    const newValue = input.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n    const newValueDuration = input.replace(/[^0-9]/g, \"\").slice(0, 4);\r\n\r\n    if (\r\n      e.target.name === \"dur_in_days\" &&\r\n      input.length > 4 &&\r\n      newValueDuration.length > 4\r\n    ) {\r\n      setError(\"Input should not exceed 4 digits.\");\r\n    } else {\r\n      setValue3(newValueDuration);\r\n      setError(\"\");\r\n    }\r\n\r\n    if (input.length > 2 && newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      // if (e.target.name === \"dur_in_days\") {\r\n      //   setValue3(newValue);\r\n      // }\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const paste = e.clipboardData.getData(\"text\");\r\n    const newValue = paste.replace(/[^0-9]/g, \"\").slice(0, 2);\r\n\r\n    if (newValue.length > 2) {\r\n      setError(\"Input should not exceed 2 digits.\");\r\n    } else {\r\n      if (e.target.name === \"dur_in_days\") {\r\n        setValue3(newValue);\r\n      }\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  // const [selectedTime, setSelectedTime] = useState(null);\r\n  // const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  // const defaultDateTime = defaultValues?.onset || \"\";\r\n\r\n  // // Split date and time\r\n  // const defaultDate = defaultDateTime.split(\" \")[0] || \"\";\r\n  // const defaultTime = defaultDateTime.split(\" \")[1] || \"00:00\";\r\n  // useEffect(() => {\r\n  //   // Combine default date and time into a single Date object\r\n  //   let date = new Date();\r\n\r\n  //   if (defaultDate) {\r\n  //     const parsedDate = parse(defaultDate, \"yyyy-MM-dd\", new Date());\r\n  //     if (isValid(parsedDate)) {\r\n  //       date = parsedDate;\r\n  //     }\r\n  //   }\r\n\r\n  //   if (defaultTime) {\r\n  //     const [hours, minutes] = defaultTime.split(\":\").map(Number);\r\n  //     date.setHours(hours);\r\n  //     date.setMinutes(minutes);\r\n  //     date.setSeconds(0); // Reset seconds\r\n  //   }\r\n\r\n  //   setSelectedDate(date);\r\n  //   setSelectedTime(date); // Initialize time picker with the same Date object\r\n  // }, [defaultDate, defaultTime, defaultValues]);\r\n\r\n  // const handleDateChange = (date) => {\r\n  //   setSelectedDate(date);\r\n  //   if (date) {\r\n  //     setSelectedTime(date); // Sync time picker with the updated date\r\n  //   }\r\n  // };\r\n\r\n  // const handleTimeChange = (time) => {\r\n  //   if (time) {\r\n  //     const updatedDateTime = new Date(selectedDate || time);\r\n  //     updatedDateTime.setHours(time.getHours());\r\n  //     updatedDateTime.setMinutes(time.getMinutes());\r\n  //     updatedDateTime.setSeconds(0); // Reset seconds\r\n\r\n  //     setSelectedDate(updatedDateTime); // Optionally update date as well\r\n  //     setSelectedTime(time);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        {/* <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Onset *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.onset}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol> */}\r\n        <CCol lg={3}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                showIcon\r\n                selected={date}\r\n                onChange={(date) => setDate(date)}\r\n                dateFormat=\"MM-dd-yyyy\"\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n                 showIcon\r\n                 selected={time}\r\n                 onChange={(time) => setTime(time)}\r\n                 showTimeSelect\r\n                 showTimeSelectOnly\r\n                 timeIntervals={15}\r\n                 timeCaption=\"Time\"\r\n                 dateFormat=\"h:mm aa\"\r\n                 \r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Location *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.location}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={3}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Duration in Days *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"0000\"\r\n                defaultValue={defaultValues?.duration_days}\r\n                name=\"dur_in_days\"\r\n                value={value3}\r\n                onChange={handleChange}\r\n                onPaste={handlePaste}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Symptoms *\r\n              </label>\r\n              {/* <input\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.characteristics}\r\n              /> */}\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options1}\r\n                  // defaultValue={options1[1]}\r\n                  getSelectedValue={getSelectedValue1}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Aggravating factors\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.aggravating}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Relieving factors\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.relieving}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Temporal factors\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.temporal}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Severity *\r\n              </label>\r\n              <div\r\n                className=\"w-100\"\r\n                style={{\r\n                  border: \"1px solid #17171D33\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <Dropdown\r\n                  options={options}\r\n                  defaultValue={options[1]}\r\n                  getSelectedValue={getSelectedValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol lg={4}>\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Notes\r\n              </label>\r\n              <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.notes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignsSymptomsForm;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst SymtomsTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.onset}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.location}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.characteristics}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration_days}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.aggravating}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.relieving}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.temporal}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.severity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SymtomsTable;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport LabForm from \"../../../Objective/Lab/LabForm\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport LabTable from \"../../../../../../Tables/LabTable\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport LabOrderTable from \"../../../../../../Tables/LabOrderTable\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport SignsSymptomsForm from \"./SignsSymptomsForm\";\r\nimport MedicationOrderTable from \"../../../../../../Tables/MedicationOrderTable\";\r\nimport SymtomsTable from \"../../../../../../Tables/Subjective/SymtomsTable\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst SignsSymptoms = ({ from }) => {\r\n  const detailsData = [\r\n    { id: 1, label: \"\" },\r\n    { id: 2, label: \"RX\" },\r\n    { id: 3, label: \"FREQUENCY\" },\r\n    { id: 4, label: \"DURATION\" },\r\n    { id: 5, label: \"QTY/TAKEN\" },\r\n    { id: 6, label: \"ACTIONS​\" },\r\n  ];\r\n\r\n  const detailsValue = [\r\n    {\r\n      id: 1,\r\n      name: \"Prescribed\",\r\n      rx: \"Medicine 1\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Alternative\",\r\n      rx: \"Medicine 2\",\r\n      frequency: [\"1/2\", 0, 0, 0],\r\n      duration: \"3 Days\",\r\n      qty: \"1 tablet\",\r\n    },\r\n  ];\r\n\r\n  const columnData = [\r\n    { id: 1, label: \"NO.\" },\r\n    { id: 2, label: \"DATE\" },\r\n    { id: 3, label: \"LOCATION\" },\r\n    { id: 5, label: \"Symptoms\" },\r\n    { id: 4, label: \"DURATION IN DAYS\" },\r\n    // { id: 6, label: \"aggravating factors\" },\r\n    // { id: 7, label: \"Relieving factors\" },\r\n    // { id: 8, label: \"Temporal factors\" },\r\n    { id: 6, label: \"Severity\" },\r\n    // { id: 10, label: \"Notes\" },\r\n    { id: 6, label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      onset: \"2024-07-15 03:15\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Normal\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 2,\r\n      onset: \"2024-08-15 10:15\",\r\n      location: \"Knee\",\r\n      duration_days: \"150\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Mild\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 3,\r\n      onset: \"2024-07-18 20:15\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Normal\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 4,\r\n      onset: \"2024-07-15 18:15\",\r\n      location: \"Knee\",\r\n      duration_days: \"120\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Moderate\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 5,\r\n      onset: \"2024-07-15 18:15\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Worst\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 6,\r\n      onset: \"2024-07-15 18:15\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Severe\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 7,\r\n      onset: \"2024-07-15 18:15\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Normal\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 8,\r\n      onset: \"2024-07-15 18:15\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Normal\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 9,\r\n      onset: \"2024-07-15 18:15\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Normal\",\r\n      notes: \"-\",\r\n    },\r\n    {\r\n      id: 10,\r\n      onset: \"2024-07-15 18:15\",\r\n      location: \"Knee\",\r\n      duration_days: \"20\",\r\n      characteristics: \"Fracture\",\r\n      aggravating: \"Fracture\",\r\n      relieving: \"Fracture\",\r\n      temporal: \"Fracture\",\r\n      severity: \"Normal\",\r\n      notes: \"-\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!addFormView && (\r\n        <>\r\n          {from !== \"Consult\" && (\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={8} className=\"\">\r\n                <DateSearch />\r\n              </CCol>\r\n              <CCol\r\n                lg={4}\r\n                className=\"d-flex justify-content-end align-items-center gap-2\"\r\n              >\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.Add} alt=\"add\" />\r\n                      <span className=\"fs-16 fw-600\">Add</span>\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n                <div>\r\n                  <PrimaryButton onClick={() => addFormPage()}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                    </div>\r\n                  </PrimaryButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <div className=\"mb-2\">\r\n            <SymtomsTable\r\n              rowData={getCurrentPageItems()}\r\n              columns={columnData}\r\n              getselectedData={getselectedData}\r\n              from={from}\r\n            />\r\n\r\n            {from !== \"Consult\" && (\r\n              <CRow className=\"mb-3\">\r\n                <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                  <Pagination\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChange}\r\n                    totalItems={rowData?.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {addFormView && (\r\n        <CCard className=\"p-2 cursor-default mb-5\">\r\n          <CCardBody className=\"mb-3\">\r\n            <SignsSymptomsForm\r\n              back={() => {\r\n                setAddFormView(false);\r\n                setSelectedData({});\r\n              }}\r\n              defaultValues={selectedData}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      )}\r\n\r\n      {detailView && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={detailView}\r\n            onClose={() => setDetailView(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => setDetailView(false)}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDetailView(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignsSymptoms;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport ActiveButton from \"../../../../../../Buttons/ActiveButton/ActiveButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst ExcerciseHabitForm = ({ back, defaultValues }) => {\r\n  const [exercises, setExercises] = useState([\r\n    {\r\n      id: 1,\r\n      type: \"\",\r\n      date:  new Date(),\r\n      time: new Date(),\r\n      duration: \"\",\r\n      intensity: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleAddExercise = () => {\r\n    const newExercises = [\r\n      ...exercises,\r\n      {\r\n        id: exercises.length + 1,\r\n        type: \"\",\r\n        date: new Date(),\r\n        time: new Date(),\r\n        duration: \"\",\r\n        intensity: \"\",\r\n      },\r\n    ];\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  const handleRemoveExercise = (id) => {\r\n    const newExercises = exercises.filter((exercise) => exercise.id !== id);\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  const handleChange = (id, updatedData) => {\r\n    const newExercises = exercises.map((ex) =>\r\n      ex.id === id ? { ...ex, ...updatedData } : ex\r\n    );\r\n    setExercises(newExercises);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {exercises.map((exercise, index) => (\r\n        <div key={index}>\r\n          <CRow className=\"mb-3\">\r\n             <CCol lg={12}>\r\n               <div className=\"vertical-line\"></div>\r\n             </CCol>\r\n           </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={4}>\r\n              <div className=\"position-relative\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Date *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={exercise.date}\r\n                    onChange={(date) => handleChange(exercise.id, { date })}\r\n                    dateFormat={DATE_FORMAT}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4}>\r\n              <div className=\"position-relative\">\r\n                <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                  Time *\r\n                </label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={exercise.date}\r\n                    onChange={(date) => handleChange(exercise.id, { date })}\r\n                    showTimeSelect\r\n                    showTimeSelectOnly\r\n                    timeIntervals={15}\r\n                    timeCaption=\"Time\"\r\n                    dateFormat=\"h:mm aa\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={4}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Type *\r\n                  </label>\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={[\"One\", \"Two\"]}\r\n                      defaultValue={exercise.type}\r\n                      getSelectedValue={(value) =>\r\n                        handleChange(exercise.id, { type: value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Duration (in minutes)\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"000\"\r\n                    maxLength={3}\r\n                    defaultValue={defaultValues?.duration}\r\n                    onInput={(e) => {\r\n                      e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n                    }}\r\n                  \r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label htmlFor=\"validationTooltip01\" className=\"form-label\">\r\n                    Intensity *\r\n                  </label>\r\n                  <div\r\n                    className=\"w-100\"\r\n                    style={{\r\n                      border: \"1px solid #17171D33\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <Dropdown\r\n                      options={[\"One\", \"Two\"]}\r\n                      defaultValue={exercise.intensity}\r\n                      getSelectedValue={(value) =>\r\n                        handleChange(exercise.id, { intensity: value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          {index > 0 && (\r\n            <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={1}>\r\n                    <div style={{ width: \"40px\" }}>\r\n                      <ActiveButton hgdf\r\n                        onClick={() => handleRemoveExercise(exercise.id)}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.whiteDel} alt=\"add\" />\r\n                        </div>\r\n                      </ActiveButton>\r\n                    </div>\r\n                  </CCol>\r\n            </CRow>\r\n           </>\r\n            \r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      <>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12}>\r\n                <div style={{ width: \"40px\" }}>\r\n                  <ActiveButton onClick={handleAddExercise}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <img src={Assets.whiteAdd} alt=\"add\" />\r\n                    </div>\r\n                  </ActiveButton>\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n              <CCol lg={12}>\r\n                <div className=\"vertical-line\"></div>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n\r\n      <CRow className=\"mb-1\">\r\n        <div style={{ width: \"128px\" }}>\r\n          <PrimaryButton>SAVE</PrimaryButton>\r\n        </div>\r\n        <div style={{ width: \"128px\" }}>\r\n          <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n        </div>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExcerciseHabitForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExerciseHabitTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/ExerciseHabitTable\";\r\nimport ExcerciseHabitForm from \"./ExcerciseHabitForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst ExerciseHabit = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Type\" },\r\n    { label: \"DURATION\" },\r\n    { label: \"INTENSITY\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration: \"30\",\r\n      intensity: \"Moderate\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration: \"30\",\r\n      intensity: \"Moderate\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration: \"30\",\r\n      intensity: \"Moderate\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration: \"30\",\r\n      intensity: \"Moderate\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration: \"30\",\r\n      intensity: \"Moderate\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Yoga \",\r\n      duration: \"30\",\r\n      intensity: \"Moderate\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <ExerciseHabitTable\r\n          rowData={getCurrentPageItems()}\r\n          columns={columnData}\r\n          getselectedData={getselectedData}\r\n          from={from}\r\n        />\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <ExerciseHabitTable\r\n                  rowData={getCurrentPageItems()}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <ExcerciseHabitForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExerciseHabit;\r\n","import { CCol, CRow, CFormCheck } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\n\r\nconst MoodForm = ({ back, defaultValues }) => {\r\n\r\n    const [date, setDate] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n        const parseDateString = (dateString) => {\r\n            const parts = dateString?.split(\" \");\r\n            const datePart = parts[0];\r\n            const timePart = parts[1];\r\n            const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n            const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n            const date = new Date(year, month - 1, day, hours, minutes);\r\n            return date;\r\n        };\r\n\r\n        // Example default date string\r\n        const defaultDateString = defaultValues?.date;\r\n\r\n        // Parse default date string to Date object\r\n        const defaultDate = defaultValues?.date\r\n            ? parseDateString(defaultDateString)\r\n            : new Date();\r\n\r\n        // Set default date in state\r\n        setDate(defaultDate);\r\n    }, [defaultValues]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <CRow className=\"mb-3\">\r\n                <CCol lg={6}>\r\n                    <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Date *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={date}\r\n                                onChange={(date) => setDate(date)}\r\n                                dateFormat={DATE_FORMAT}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n                <CCol lg={6}>\r\n                    <div class=\"position-relative\">\r\n                        <label for=\"validationTooltip01\" class=\"form-label\">\r\n                            Time *\r\n                        </label>\r\n                        <div className=\"date-size\">\r\n                            <DatePicker\r\n                                showIcon\r\n                                selected={date}\r\n                                onChange={(date) => setDate(date)}\r\n                                showTimeSelect\r\n                                showTimeSelectOnly\r\n                                timeIntervals={15}\r\n                                timeCaption=\"Time\"\r\n                                dateFormat=\"h:mm aa\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n\r\n            </CRow>\r\n            <CRow className=\"mb-3\">\r\n                <p className=\"radio-label\">Type *</p>\r\n                <CCol lg={12}>\r\n\r\n                    <div className=\"h-100 d-flex align-items-end w-100 \">\r\n\r\n                        <div\r\n                            style={{\r\n                                boxSizing: \"border-box\",\r\n                                borderRadius: \"5px\",\r\n                                border: \"1px solid #17171D33\",\r\n                                padding: \"10px\",\r\n                            }}\r\n                        >\r\n                            <CFormCheck\r\n\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox1\"\r\n                                value=\"bf\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Happy\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox2\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Sad\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox3\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Angry\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox4\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Relaxed\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox5\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Excited\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox6\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Anxious\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox7\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Content\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox8\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Frustrated\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox9\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Surprised\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n                            <CFormCheck\r\n                                className=\"mb-0\"\r\n                                inline\r\n                                type=\"radio\"\r\n                                id=\"inlineCheckbox10\"\r\n                                value=\"af\"\r\n                                label={\r\n                                    <label\r\n                                        for=\"validationTooltip01\"\r\n                                        class=\"form-label mb-0\"\r\n                                    >\r\n                                        Confident\r\n                                    </label>\r\n                                }\r\n                                name=\"food\"\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow className=\"mb-1\">\r\n                <div style={{ width: \"128px\" }}>\r\n                    <PrimaryButton>SAVE</PrimaryButton>\r\n                </div>\r\n                <div style={{ width: \"128px\" }}>\r\n                    <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n                </div>\r\n            </CRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MoodForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport MoodTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/MoodTable\";\r\nimport MoodForm from \"./MoodForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Mood = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Type\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Happy \",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <MoodTable\r\n          rowData={getCurrentPageItems()}\r\n          columns={columnData}\r\n          getselectedData={getselectedData}\r\n          from={from}\r\n        />\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <MoodTable\r\n                  rowData={getCurrentPageItems()}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <MoodForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  //  defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mood;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst NutritionDietTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type_of_diet}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NutritionDietTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst NutritionFluidTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult-Intake\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.intake}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult-Intake\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NutritionFluidTable;\r\n","import { CCol, CRow,CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst DietForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  \r\n    const options = [\"Veg\", \"Non-Veg\",\"Others\"];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type of Diet * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Notes\r\n            </label>\r\n            <CFormTextarea\r\n                type=\"text\"\r\n                class=\"form-control  pad-10\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n                defaultValue={defaultValues?.name}\r\n              />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default DietForm","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst FluidIntakeForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n    const options = [\"Water\", \"Oral Rehydration Solutions\",\"Clear Broth\", \"Milk\",\"Fruit Juices\",\"Herbal Teas\",\"Coffee\",\"Tea\",\"Sports Drinks\",\"Soft Drinks\",\r\n        \"Energy Drinks\",\"Coconut Water\",\"Infused Water\",\"Soup\",\"Electrolyte Solutions\",\"Alcoholic Beverages\",];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Intake (ml)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"0000\"\r\n              maxLength={4}\r\n              defaultValue={defaultValues?.name}\r\n              onInput={(e) => {\r\n                e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default FluidIntakeForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport MedicalTab from \"../../../MedicalTab\";\r\nimport ExerciseHabitTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/ExerciseHabitTable\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport NutritionDietTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/NutritionDietTable\";\r\nimport NutritionFluidTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/NutritionFluidTable\";\r\nimport DietForm from \"./DietForm\";\r\nimport FluidIntakeForm from \"./FluidIntakeForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Nutrition = ({ from }) => {\r\n  const columnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 2, label: \"Date\" },\r\n    { id: 3, label: \"Type of Diet\" },\r\n    { id: 4, label: \"Notes\" },\r\n    { id: 9, label: \"ACTIONS\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type_of_diet: \"Non-Veg\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type_of_diet: \"Non-Veg\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type_of_diet: \"Non-Veg\",\r\n      notes: \"Lorem ipsum\",\r\n    },\r\n  ];\r\n\r\n  const FluidIntakecolumnData = [\r\n    { id: 1, label: \"No.\" },\r\n    { id: 3, label: \"Date\" },\r\n    { id: 3, label: \"Type\" },\r\n    { id: 4, label: \"INTAKE (ML)\" },\r\n    { id: 6, label: \"ACTIONS\" },\r\n  ];\r\n  const FluidIntakerowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Water\",\r\n      intake: \"1500\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Water\",\r\n      intake: \"1500\",\r\n    },\r\n  ];\r\n\r\n  const tabs = [\r\n    { id: 1, title: \"Diet\" },\r\n    { id: 2, title: \"Fluid Intake\" },\r\n  ];\r\n\r\n  const PatientSubMenu2 = localStorage.getItem(\"PatientSubMenu-4\");\r\n  const ParsedPatientSubMenu = PatientSubMenu2\r\n    ? JSON.parse(PatientSubMenu2)\r\n    : 1;\r\n  const [currentTab, setCurrentTab] = useState(ParsedPatientSubMenu);\r\n  const getCurrentTab = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const getCurrentFluidPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return FluidIntakerowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n    setSelectedData({});\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      setAddFormView(true);\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <CRow>\r\n          <NutritionDietTable\r\n            rowData={getCurrentPageItems()}\r\n            columns={columnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from === \"Consult-Intake\" && (\r\n        <CRow>\r\n          <NutritionFluidTable\r\n            rowData={getCurrentFluidPageItems()}\r\n            columns={FluidIntakecolumnData}\r\n            getselectedData={getselectedData}\r\n            from={from}\r\n          />\r\n        </CRow>\r\n      )}\r\n      {from !== \"Consult\" && from !== \"Consult-Intake\" && (\r\n        <>\r\n          <>\r\n            <CRow className=\"mb-2\">\r\n              <CCol lg={12} className=\"\">\r\n                <MedicalTab\r\n                  tabs={tabs}\r\n                  getCurrentTab={getCurrentTab}\r\n                  defaultTab={ParsedPatientSubMenu - 1}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n            {!addFormView && (\r\n              <>\r\n                <CRow className=\"mb-2\">\r\n                  <CCol lg={8} className=\"\">\r\n                    <DateSearch />\r\n                  </CCol>\r\n                  <CCol\r\n                    lg={4}\r\n                    className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                  >\r\n                    <div>\r\n                      <PrimaryButton onClick={() => addFormPage()}>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.Add} alt=\"add\" />\r\n                          <span className=\"fs-16 fw-600\">Add</span>\r\n                        </div>\r\n                      </PrimaryButton>\r\n                    </div>\r\n                    <div>\r\n                      <PrimaryButton onClick={() => addFormPage()}>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                        </div>\r\n                      </PrimaryButton>\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <div className=\"mb-2\">\r\n                  {currentTab === 1 && (\r\n                    <>\r\n                      <CRow>\r\n                        <NutritionDietTable\r\n                          rowData={getCurrentPageItems()}\r\n                          columns={columnData}\r\n                          getselectedData={getselectedData}\r\n                        />\r\n                      </CRow>\r\n                      <CRow className=\"mb-3\">\r\n                        <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                          <Pagination\r\n                            currentPage={currentPage}\r\n                            onPageChange={onPageChange}\r\n                            totalItems={rowData?.length}\r\n                            itemsPerPage={itemsPerPage}\r\n                          />\r\n                        </CCol>\r\n                      </CRow>\r\n                    </>\r\n                  )}\r\n                  {currentTab === 2 && (\r\n                    <>\r\n                      <CRow>\r\n                        <NutritionFluidTable\r\n                          rowData={getCurrentFluidPageItems()}\r\n                          columns={FluidIntakecolumnData}\r\n                          getselectedData={getselectedData}\r\n                        />\r\n                      </CRow>\r\n                      <CRow className=\"mb-3\">\r\n                        <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                          <Pagination\r\n                            currentPage={currentPage}\r\n                            onPageChange={onPageChange}\r\n                            totalItems={rowData?.length}\r\n                            itemsPerPage={itemsPerPage}\r\n                          />\r\n                        </CCol>\r\n                      </CRow>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n\r\n          {addFormView && (\r\n            <CRow className=\"mb-2\">\r\n              <CCard className=\"p-2 cursor-default mb-5\">\r\n                <CCardBody className=\"mb-3\">\r\n                  {currentTab === 1 && (\r\n                    <DietForm\r\n                      back={() => {\r\n                        setAddFormView(false);\r\n                        setSelectedData({});\r\n                      }}\r\n                      // defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                  {currentTab === 2 && (\r\n                    <FluidIntakeForm\r\n                      back={() => {\r\n                        setAddFormView(false);\r\n                        setSelectedData({});\r\n                      }}\r\n                      // defaultValues={selectedData}\r\n                    />\r\n                  )}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CRow>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nutrition;\r\n","import { CCol, CRow, CFormCheck, CFormTextarea } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst SexualStatusForm = ({ back, defaultValues, from }) => {\r\n  const [date, setDate] = useState(null);\r\n  const [historySti, setHistorySti] = useState(false);\r\n  const [currentSti, setCurrentSti] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      return new Date(year, month - 1, day);\r\n    };\r\n\r\n    const defaultDateString = defaultValues?.date;\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n\r\n  const handleHistoryStiClick = (event) => {\r\n    setHistorySti(event.target.value === \"yes\");\r\n  };\r\n\r\n  const handleCurrentStiClick = (event) => {\r\n    setCurrentSti(event.target.value === \"positive\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-3\">\r\n        <CCol lg={6}>\r\n          <p className=\"radio-label\">Sexual Activity</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"activityYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"activity\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"activityNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"activity\"\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol lg={6}>\r\n          <p className=\"radio-label\">History of STI</p>\r\n          <div className=\"d-flex align-items-end w-100\">\r\n            <div\r\n              style={{\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #17171D33\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"historyYes\"\r\n                value=\"yes\"\r\n                label={<label className=\"form-label mb-0\">Yes</label>}\r\n                name=\"sti\"\r\n                checked={historySti === true}\r\n                onChange={handleHistoryStiClick}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n              <CFormCheck\r\n                className=\"mb-0\"\r\n                inline\r\n                type=\"radio\"\r\n                id=\"historyNo\"\r\n                value=\"no\"\r\n                label={<label className=\"form-label mb-0\">No</label>}\r\n                name=\"sti\"\r\n                checked={historySti === false}\r\n                onChange={handleHistoryStiClick}\r\n                disabled={from === \"Consult\" ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      {historySti && (\r\n        <>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <div className=\"position-relative\">\r\n                <label className=\"form-label\">Last STI Screening Date *</label>\r\n                <div className=\"date-size\">\r\n                  <DatePicker\r\n                    showIcon\r\n                    selected={date}\r\n                    onChange={(date) => setDate(date)}\r\n                    dateFormat={DATE_FORMAT}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            <CCol lg={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"position-relative\">\r\n                  <label className=\"form-label\">STI History Notes</label>\r\n                  <CFormTextarea\r\n                    type=\"text\"\r\n                    class=\"form-control  pad-10\"\r\n                    id=\"validationTooltip01\"\r\n                    placeholder=\"Enter\"\r\n                    defaultValue={defaultValues?.sti_current_notes}\r\n                    disabled={from === \"Consult\" ? true : false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow className=\"mb-3\">\r\n            <CCol lg={6}>\r\n              <p className=\"radio-label\">Current STI Status</p>\r\n              <div className=\"d-flex align-items-end w-100\">\r\n                <div\r\n                  style={{\r\n                    boxSizing: \"border-box\",\r\n                    borderRadius: \"5px\",\r\n                    border: \"1px solid #17171D33\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <CFormCheck\r\n                    className=\"mb-0\"\r\n                    inline\r\n                    type=\"radio\"\r\n                    id=\"statusPositive\"\r\n                    value=\"positive\"\r\n                    label={<label className=\"form-label mb-0\">Positive</label>}\r\n                    name=\"sti_status\"\r\n                    checked={currentSti === true}\r\n                    onChange={handleCurrentStiClick}\r\n                    disabled={from === \"Consult\" ? true : false}\r\n                  />\r\n                  <CFormCheck\r\n                    className=\"mb-0\"\r\n                    inline\r\n                    type=\"radio\"\r\n                    id=\"statusNegative\"\r\n                    value=\"negative\"\r\n                    label={<label className=\"form-label mb-0\">Negative</label>}\r\n                    name=\"sti_status\"\r\n                    checked={currentSti === false}\r\n                    onChange={handleCurrentStiClick}\r\n                    disabled={from === \"Consult\" ? true : false}\r\n                  />\r\n                  <CFormCheck\r\n                    className=\"mb-0\"\r\n                    inline\r\n                    type=\"radio\"\r\n                    id=\"statusUnknown\"\r\n                    value=\"unknown\"\r\n                    label={<label className=\"form-label mb-0\">Unknown</label>}\r\n                    name=\"sti_status\"\r\n                    checked={currentSti === false}\r\n                    onChange={handleCurrentStiClick}\r\n                    disabled={from === \"Consult\" ? true : false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CCol>\r\n            {currentSti && (\r\n              <CCol lg={6}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <div className=\"position-relative\">\r\n                    <label className=\"form-label\">Current STI Notes</label>\r\n                    <CFormTextarea\r\n                      type=\"text\"\r\n                      class=\"form-control  pad-10\"\r\n                      id=\"validationTooltip01\"\r\n                      placeholder=\"Enter\"\r\n                      defaultValue={defaultValues?.name}\r\n                      disabled={from === \"Consult\" ? true : false}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CCol>\r\n            )}\r\n          </CRow>\r\n        </>\r\n      )}\r\n\r\n      {from !== \"Consult\" && (\r\n        <CRow className=\"mb-1\">\r\n          <div style={{ width: \"128px\" }}>\r\n            <PrimaryButton>SAVE</PrimaryButton>\r\n          </div>\r\n          <div style={{ width: \"128px\" }}>\r\n            <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n          </div>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SexualStatusForm;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport MoodTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/MoodTable\";\r\nimport SexualStatusTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/SexualStatusTable\";\r\nimport SexualStatusForm from \"./SexualStatusForm\";\r\n\r\nconst SexualStatus = ({ back, from }) => {\r\n  const Data = {\r\n    id: 1,\r\n    sexual_activity: \"Active\",\r\n    history: \"Yes \",\r\n    screening_date: \"06-06-2024 \",\r\n    current_status: \"Active \",\r\n    sti_current_notes: \"lorem\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"p-2 cursor-default mb-5\">\r\n        <CCardBody className=\"mb-3\">\r\n          <SexualStatusForm back={back} defaultValues={Data} from={from} />\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SexualStatus;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst SleepTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SleepTable;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport Dropdown from \"../../../../../../Dropdown/Dropdown\";\r\nimport { DATE_FORMAT } from \"../../../../../../../Config/config\";\r\n\r\nconst SleepForm = ({ back, defaultValues }) => {\r\n  const [date, setDate] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Function to parse date string \"MM-DD-YYYY HH:mm\" to Date object\r\n    const parseDateString = (dateString) => {\r\n      const parts = dateString?.split(\" \");\r\n      const datePart = parts[0];\r\n      const timePart = parts[1];\r\n      const [month, day, year] = datePart?.split(\"-\")?.map(Number);\r\n      const [hours, minutes] = timePart?.split(\":\")?.map(Number);\r\n      const date = new Date(year, month - 1, day, hours, minutes);\r\n      return date;\r\n    };\r\n\r\n    // Example default date string\r\n    const defaultDateString = defaultValues?.date;\r\n\r\n    // Parse default date string to Date object\r\n    const defaultDate = defaultValues?.date\r\n      ? parseDateString(defaultDateString)\r\n      : new Date();\r\n\r\n    // Set default date in state\r\n    setDate(defaultDate);\r\n  }, [defaultValues]);\r\n  \r\n    const options = [\"Disturbed\", \"Undisturbed\",\"Excess Dreams\",];\r\n    const findIndex = defaultValues?.prev_illness\r\n      ? options?.indexOf(defaultValues?.prev_illness)\r\n      : 0;\r\n\r\n    const getSelectedValue = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Date *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               dateFormat={DATE_FORMAT}\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n      <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n              Time *\r\n            </label>\r\n            <div className=\"date-size\">\r\n              <DatePicker\r\n               showIcon\r\n               selected={date}\r\n               onChange={(date) => setDate(date)}\r\n               showTimeSelect\r\n               showTimeSelectOnly\r\n               timeIntervals={15}\r\n               timeCaption=\"Time\"\r\n               dateFormat=\"h:mm aa\"\r\n              />\r\n            </div>\r\n          </div>\r\n      </CCol>\r\n      <CCol lg={4}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n            Type * \r\n            </label>\r\n            <div\r\n              className=\"w-100\"\r\n              style={{\r\n                border: \"1px solid #17171D33\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n               <Dropdown\r\n                options={options}\r\n                defaultValue={\r\n                  defaultValues?.chronic ? options[findIndex] : null\r\n                }\r\n                getSelectedValue={getSelectedValue}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-3\">\r\n      <CCol lg={12}>\r\n        <div style={{ width: \"100%\" }}>\r\n          <div class=\"position-relative\">\r\n            <label for=\"validationTooltip01\" class=\"form-label\">\r\n           Duration (mins)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control pad-10\"\r\n              id=\"validationTooltip01\"\r\n              placeholder=\"0000\"\r\n              maxLength={4}\r\n              defaultValue={defaultValues?.name}\r\n              onInput={(e) => {\r\n                e.target.value = e.target.value.replace(/[^0-9]/g, \"\"); \r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow className=\"mb-1\">\r\n      <div style={{ width: \"128px\" }}>\r\n        <PrimaryButton>SAVE</PrimaryButton>\r\n      </div>\r\n      <div style={{ width: \"128px\" }}>\r\n        <SecondaryButton onClick={back}>CANCEL</SecondaryButton>\r\n      </div>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default SleepForm","import {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport Pagination from \"../../../../../../Pagination/Pagination\";\r\nimport PrimaryButton from \"../../../../../../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../../../../../../assets/Assets\";\r\nimport DateSelector from \"../../../../../../DateRangePicker/DateSelector\";\r\nimport BlurBackground from \"../../../../../../BlurBackground/BlurBackground\";\r\nimport SecondaryButton from \"../../../../../../Buttons/SecondaryButton/SecondaryButton\";\r\nimport ExcerciseHabitForm from \"../ExerciseHabit/ExcerciseHabitForm\";\r\nimport SleepTable from \"../../../../../../Tables/Subjective/WellnessProfileTable/SleepTable\";\r\nimport SleepForm from \"./SleepForm\";\r\nimport DateSearch from \"../../../../../../DateRangePicker/DateSearch\";\r\n\r\nconst Sleep = ({ from }) => {\r\n  const columnData = [\r\n    { label: \"NO.\" },\r\n    { label: \"Date\" },\r\n    { label: \"Type\" },\r\n    { label: \"DURATION (IN MINS)\" },\r\n    { label: \"Actions\" },\r\n  ];\r\n  const rowData = [\r\n    {\r\n      id: 1,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 3,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 4,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 5,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n    {\r\n      id: 6,\r\n      date: \"02-04-2024 12:13\",\r\n      type: \"Undisturbed \",\r\n      duration: \"360\",\r\n    },\r\n  ];\r\n  const [addFormView, setAddFormView] = useState(false);\r\n  const [detailView, setDetailView] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedData, setSelectedData] = useState({});\r\n\r\n  const itemsPerPage = 5; // Number of items to display per page\r\n\r\n  // Function to handle page change\r\n  const onPageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Function to get items for the current page\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return rowData?.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const addFormPage = () => {\r\n    setAddFormView(true);\r\n  };\r\n\r\n  const detailPage = () => {\r\n    setDetailView(true);\r\n  };\r\n\r\n  const getselectedData = (data, type) => {\r\n    console.log(type, \"first\", data);\r\n    setSelectedData(data);\r\n    if (type === \"edit\") {\r\n      addFormPage();\r\n    }\r\n    if (type === \"delete\") {\r\n      detailPage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {from === \"Consult\" && (\r\n        <SleepTable\r\n          rowData={getCurrentPageItems()}\r\n          columns={columnData}\r\n          getselectedData={getselectedData}\r\n          from={from}\r\n        />\r\n      )}\r\n      {from !== \"Consult\" && (\r\n        <>\r\n          {!addFormView && (\r\n            <>\r\n              <CRow className=\"mb-2\">\r\n                <CCol lg={8} className=\"\">\r\n                  <DateSearch />\r\n                </CCol>\r\n                <CCol\r\n                  lg={4}\r\n                  className=\"d-flex justify-content-end align-items-center gap-2\"\r\n                >\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.Add} alt=\"add\" />\r\n                        <span className=\"fs-16 fw-600\">Add</span>\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div>\r\n                    <PrimaryButton onClick={() => addFormPage()}>\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <img src={Assets.OptionsIcon} alt=\"add\" />\r\n                      </div>\r\n                    </PrimaryButton>\r\n                  </div>\r\n                </CCol>\r\n              </CRow>\r\n              <div className=\"mb-2\">\r\n                <SleepTable\r\n                  rowData={getCurrentPageItems()}\r\n                  columns={columnData}\r\n                  getselectedData={getselectedData}\r\n                />\r\n\r\n                <CRow className=\"mb-3\">\r\n                  <CCol lg={12} className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                      currentPage={currentPage}\r\n                      onPageChange={onPageChange}\r\n                      totalItems={rowData?.length}\r\n                      itemsPerPage={itemsPerPage}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </>\r\n          )}\r\n          {addFormView && (\r\n            <CCard className=\"p-2 cursor-default mb-5\">\r\n              <CCardBody className=\"mb-3\">\r\n                <SleepForm\r\n                  back={() => {\r\n                    setAddFormView(false);\r\n                    setSelectedData({});\r\n                  }}\r\n                  // defaultValues={selectedData}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          )}\r\n\r\n          {detailView && (\r\n            <BlurBackground>\r\n              <CModal\r\n                alignment=\"center\"\r\n                visible={detailView}\r\n                onClose={() => setDetailView(false)}\r\n                aria-labelledby=\"VerticallyCenteredExample\"\r\n              >\r\n                <CModalBody className=\"p-3\">\r\n                  <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                    <h5>Are you sure want to delete ?</h5>\r\n                    <div className=\"d-flex gap-2 mt-2\">\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <PrimaryButton onClick={() => setDetailView(false)}>\r\n                          Yes\r\n                        </PrimaryButton>\r\n                      </div>\r\n                      <div style={{ width: \"80px\" }}>\r\n                        <SecondaryButton onClick={() => setDetailView(false)}>\r\n                          No\r\n                        </SecondaryButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CModalBody>\r\n              </CModal>\r\n            </BlurBackground>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sleep;\r\n","import { CCard, CCardBody } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst DateCards = ({ data, onClick }) => {\r\n  return (\r\n    <>\r\n      <CCard className=\"date-card cursor-default\">\r\n        <CCardBody>\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <div onClick={() => onClick(data, \"edit\")} className=\"cursor\">\r\n              <span className=\"fs-20 fw-600\">\r\n                {format(data?.date, \"dd-MM-yyyy\")}\r\n              </span>\r\n            </div>\r\n            <div onClick={() => onClick(data, \"delete\")}>\r\n              <img src={Assets.deleteorg} alt=\"Del\" className=\"cursor\" />\r\n            </div>\r\n          </div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateCards;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst DateSearch = () => {\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n  \r\n    // Get today's date\r\n    const today = new Date();\r\n\r\n\r\n  return (\r\n    <>\r\n    <CRow className=\"mb-2\">\r\n      <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n        <span className=\"fs-18 fw-400 label-color\">Start Date *</span>\r\n        <div style={{ width: \"100%\" }}>\r\n          <DatePicker\r\n            showIcon\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n            className=\"date-range-selector\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n        <span className=\"fs-18 fw-400 label-color\">End Date *</span>\r\n        <div style={{ width: \"100%\" }}>\r\n          <DatePicker\r\n            showIcon\r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            className=\"date-range-selector\"\r\n            maxDate={today}\r\n            dateFormat={DATE_FORMAT}\r\n          />\r\n        </div>\r\n      </CCol>\r\n      <CCol\r\n       md={3}\r\n        className=\"d-flex flex-column gap-1 justify-content-end\"\r\n      >\r\n      <div className=\"search-bar\"  style={{ width: \"100%\",borderRadius: \"10px\" }}>\r\n            <input type=\"text\" placeholder=\"Search\" style={{ padding: \"7px\" }} />\r\n          </div>\r\n      </CCol>\r\n      <CCol\r\n        md={3}\r\n        className=\"d-flex flex-column gap-1 justify-content-end\"\r\n        style={{ width: \"60px\" }}\r\n      >\r\n        <PrimaryButton>\r\n          <div className=\"d-flex align-items-center gap-2\">\r\n            <img src={Assets.search} alt=\"close\" />\r\n          </div>\r\n        </PrimaryButton>\r\n      </CCol>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default DateSearch","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst DateSelector = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span className=\"fs-18 fw-400 label-color\">Start Date *</span>\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol md={3} className=\"d-flex flex-column gap-1\">\r\n          <span className=\"fs-18 fw-400 label-color\">End Date *</span>\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={endDate}\r\n              onChange={(date) => setEndDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateSelector;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DATE_FORMAT } from \"../../Config/config\";\r\n\r\nconst SingleDatePicker = ({ defaultDate }) => {\r\n  const [startDate, setStartDate] = useState(\r\n    defaultDate ? new Date(defaultDate) : new Date()\r\n  );\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={12} className=\"d-flex flex-column gap-1\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <DatePicker\r\n              showIcon\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              className=\"date-range-selector\"\r\n              maxDate={today}\r\n              dateFormat={DATE_FORMAT}\r\n            />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleDatePicker;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst Dropdown = ({ options, defaultValue, getSelectedValue }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\r\n    defaultValue || \"Select\" || options[0]\r\n  );\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    setSelectedOption(option);\r\n    setIsOpen(false); // Close the dropdown after selecting an option\r\n    getSelectedValue(option);\r\n  };\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Attach the event listener for clicks outside\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    \r\n    // Cleanup event listener on component unmount\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"dropdown-container\" ref={dropdownRef}>\r\n      <div className=\"dropdown-header\" onClick={toggleDropdown}>\r\n        <span>{selectedOption || \"Select an option\"}</span>\r\n        <span className={`arrow ${isOpen ? \"open\" : \"\"}`}></span>\r\n      </div>\r\n      {isOpen && (\r\n        <ul className=\"dropdown-list\">\r\n          {options.map((option, index) => (\r\n            <li key={index} onClick={() => handleOptionClick(option)}>\r\n              {option}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst OptionItem = ({ label, onSelect, selected, disabled }) => {\r\n  const [isSelected, setIsSelected] = useState(selected);\r\n  useEffect(() => {\r\n    setIsSelected(selected);\r\n  }, [selected]);\r\n  const toggleSelected = () => {\r\n    setIsSelected(!isSelected);\r\n    onSelect(label, !isSelected); // Notify parent component of selection change\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`option-item ${isSelected ? \"selected\" : \"\"} ${\r\n        disabled ? \"disabled\" : \"\"\r\n      }`}\r\n      onClick={toggleSelected}\r\n    >\r\n      {label}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionItem;\r\n","// import React, { useState, useEffect } from \"react\";\r\n\r\n// const Pagination = ({\r\n//   currentPage,\r\n//   onPageChange,\r\n//   totalItems,\r\n//   itemsPerPage,\r\n// }) => {\r\n//   const [totalPages, setTotalPages] = useState(1);\r\n//   const [pages, setPages] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Calculate total pages based on totalItems and itemsPerPage\r\n//     const pagesCount = Math.ceil(totalItems / itemsPerPage);\r\n//     setTotalPages(pagesCount);\r\n\r\n//     // Generate array of pages dynamically\r\n//     setPages(Array.from(Array(pagesCount).keys()));\r\n//   }, [totalItems, itemsPerPage]);\r\n\r\n//   const handlePageClick = (pageNumber) => {\r\n//     onPageChange(pageNumber);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"pagination\">\r\n//       {pages.map((page) => (\r\n//         <button\r\n//           key={page}\r\n//           onClick={() => handlePageClick(page + 1)}\r\n//           className={currentPage === page + 1 ? \"active-page\" : \"\"}\r\n//         >\r\n//           {page + 1}\r\n//         </button>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Pagination;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Pagination = ({ currentPage, totalItems, onPageChange, itemsPerPage }) => {\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  \r\n  useEffect(() => {\r\n    // Calculate total pages based on totalItems and itemsPerPage\r\n    const pagesCount = Math.ceil(totalItems / itemsPerPage);\r\n    setTotalPages(pagesCount);\r\n  }, [totalItems, itemsPerPage]);\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      onPageChange(page);\r\n    }\r\n  };\r\n\r\n  const getPageNumbers = () => {\r\n    const pageNumbers = [];\r\n    const range = 1; // Number of pages to show around the current page\r\n\r\n    if (totalPages <= 5) {\r\n      // Less than or equal to 5 pages, show all\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n    } else {\r\n      // More than 5 pages, use ellipses\r\n      if (currentPage <= 3) {\r\n        // Show first few pages and the last page\r\n        for (let i = 1; i <= 3; i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n        pageNumbers.push('...');\r\n        pageNumbers.push(totalPages);\r\n      } else if (currentPage >= totalPages - 2) {\r\n        // Show last few pages and the first page\r\n        pageNumbers.push(1);\r\n        pageNumbers.push('...');\r\n        for (let i = totalPages - 2; i <= totalPages; i++) {\r\n          pageNumbers.push(i);\r\n        }\r\n      } else {\r\n        // Show a range around the current page\r\n        pageNumbers.push(1);\r\n        pageNumbers.push('...');\r\n        for (let i = currentPage - range; i <= currentPage + range; i++) {\r\n          if (i > 0 && i <= totalPages) {\r\n            pageNumbers.push(i);\r\n          }\r\n        }\r\n        pageNumbers.push('...');\r\n        pageNumbers.push(totalPages);\r\n      }\r\n    }\r\n\r\n    // Remove duplicate ellipses\r\n    return pageNumbers.filter((item, index, arr) => item !== '...' || (index > 0 && arr[index - 1] !== '...'));\r\n  };\r\n\r\n  const pageNumbers = getPageNumbers();\r\n\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button\r\n        onClick={() => handlePageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n        aria-label=\"Previous\"\r\n      >\r\n        &lt;\r\n      </button>\r\n      {pageNumbers.map((number, index) => (\r\n        <button\r\n          key={index}\r\n          onClick={() => {\r\n            if (number !== \"...\") {\r\n              handlePageChange(number);\r\n            }\r\n          }}\r\n          className={number === currentPage ? \"active-page\" : \"\"}\r\n          disabled={number === \"...\"}\r\n          aria-current={number === currentPage ? \"page\" : undefined}\r\n        >\r\n          {number}\r\n        </button>\r\n      ))}\r\n      <button\r\n        onClick={() => handlePageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n        aria-label=\"Next\"\r\n      >\r\n        &gt;\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Pagination;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst SearchBar = () => {\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2\">\r\n        <CCol md={6} className=\"d-flex flex-column gap-1\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <div class=\"position-relative\">\r\n              <label for=\"validationTooltip01\" class=\"form-label\">\r\n                Search\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"validationTooltip01\"\r\n                placeholder=\"Enter\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </CCol>\r\n        <CCol\r\n          md={3}\r\n          className=\"d-flex flex-column gap-1 justify-content-end\"\r\n          style={{ width: \"60px\" }}\r\n        >\r\n          <PrimaryButton>\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <img src={Assets.search} alt=\"close\" />\r\n            </div>\r\n          </PrimaryButton>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst PsychiatricTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell>\r\n              <span className=\"fs-16 fw-500\">{dt?.result}</span>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <Badge label={dt?.result} color={dt?.result ? \"error\" : \"\"} />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={\r\n                        i === 0 ? Assets?.testSubIcon : Assets?.testUnSubIcon\r\n                      }\r\n                      className=\"cursor\"\r\n                    />\r\n                    {/* {i === 0 && ( */}\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.testViewIcon}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"view\")}\r\n                    />\r\n                    {/* )} */}\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PsychiatricTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst DiagnosisTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.condition}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.treatment}</CTableDataCell>\r\n              {/* <CTableDataCell>{dt?.remark}</CTableDataCell> */}\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                    <img\r\n                      alt=\"edit\"\r\n                      src={Assets?.TableEdit}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagnosisTable;\r\n","import React, { useState } from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\nimport { CModal, CModalBody, CModalHeader } from \"@coreui/react\";\r\nimport BlurBackground from \"../BlurBackground/BlurBackground\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton/PrimaryButton\";\r\nimport SecondaryButton from \"../Buttons/SecondaryButton/SecondaryButton\";\r\nimport RespirationRateForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/RespirationRateForm\";\r\nimport Spo2 from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Spo2\";\r\nimport Temperature from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Temperature\";\r\nimport LFTForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LFTForm\";\r\nimport HeartRate from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HeartRate\";\r\nimport BSugar from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BSugar\";\r\nimport LipidProfileForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/LipidProfileForm\";\r\nimport HCT from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/HCT\";\r\nimport Hemogloin from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Hemogloin\";\r\nimport BKetone from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BKetone\";\r\nimport BUricAcid from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BUricAcid\";\r\nimport GFR from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/GFR\";\r\nimport Creatinine from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Creatinine\";\r\nimport Urea from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urea\";\r\nimport Urinalysis from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/Urinalysis\";\r\nimport BMI from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BMI\";\r\nimport BPForm from \"../Dashboard/PatientTabs/MedicalProfileTab/Objective/Forms/BPForm\";\r\nimport useApi from \"../../ApiServices/useApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\n\r\nconst DynamicTable = ({ columnsData, tableData, getTableDatas, from }) => {\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [selectedData, setSelectedData] = useState(\"\");\r\n  const { loading, del, clearCache } = useApi();\r\n\r\n  const deleteData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setDeleteModal(true);\r\n    }\r\n  };\r\n\r\n  const editData = (data) => {\r\n    setSelectedData(data);\r\n    if (data) {\r\n      setEditModal(true);\r\n    }\r\n  };\r\n\r\n  const onDelete = async () => {\r\n    try {\r\n      const url = `resource/vitals/${selectedData?.id}`; // Replace with your API endpoint\r\n      await del(url);\r\n      await getTableDatas(selectedData);\r\n      toast.success(\"Deleted successfully\");\r\n      setDeleteModal(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"responsive-table-container\">\r\n        <table\r\n          class=\"responsive-table\"\r\n          style={{ background: from === \"Consult\" ? \"white\" : \"transparent\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              {columnsData?.map(\r\n                (data, i) =>\r\n                  from === \"Consult\" && i === columnsData.length - 1 ? null : (\r\n                    <th key={i}>{data?.label}</th>\r\n                  )\r\n                // <th key={column.id}>{column.label}</th>\r\n              )}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableData?.map((row, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {columnsData.map((column, i) =>\r\n                  from === \"Consult\" && i === columnsData.length - 1 ? null : (\r\n                    <td key={`${rowIndex}-${column?.id}`}>\r\n                      {renderCell(row, column)}\r\n                    </td>\r\n                  )\r\n                )}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Delete Modal */}\r\n      {deleteModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={deleteModal}\r\n            onClose={() => setDeleteModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n          >\r\n            <CModalBody className=\"p-3\">\r\n              <div className=\"w-100 mt-2 d-flex justify-content-center flex-column align-items-center\">\r\n                <h5>Are you sure want to delete ?</h5>\r\n                <div className=\"d-flex gap-2 mt-2\">\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <PrimaryButton onClick={() => onDelete()}>\r\n                      Yes\r\n                    </PrimaryButton>\r\n                  </div>\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <SecondaryButton onClick={() => setDeleteModal(false)}>\r\n                      No\r\n                    </SecondaryButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n\r\n      {/* Edit Modal */}\r\n      {editModal && (\r\n        <BlurBackground>\r\n          <CModal\r\n            alignment=\"center\"\r\n            visible={editModal}\r\n            onClose={() => setEditModal(false)}\r\n            aria-labelledby=\"VerticallyCenteredExample\"\r\n            size=\"lg\"\r\n          >\r\n            <CModalHeader>\r\n              <h4 className=\"fw-600\">Edit {selectedData?.name}</h4>\r\n            </CModalHeader>\r\n            <CModalBody className=\"p-3\">\r\n              {selectedData?.name === \"BMI\" && (\r\n                <BMI\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Pressure\" && (\r\n                <BPForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                  getTableDatas={getTableDatas}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Respiration Rate\" && (\r\n                <RespirationRateForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"SpO2\" && (\r\n                <Spo2\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Temperature\" && (\r\n                <Temperature\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Lung Function Test (LFT)\" && (\r\n                <LFTForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Heart Rate\" && (\r\n                <HeartRate\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Blood Sugar\" && (\r\n                <BSugar\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Lipid Profile\" && (\r\n                <LipidProfileForm\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"HCT\" && (\r\n                <HCT\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Hemoglobin\" && (\r\n                <Hemogloin\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Ketone\" && (\r\n                <BKetone\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"Blood Uric Acid\" && (\r\n                <BUricAcid\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n\r\n              {selectedData?.name === \"GFR\" && (\r\n                <GFR\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Creatinine\" && (\r\n                <Creatinine\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urea\" && (\r\n                <Urea\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n              {selectedData?.name === \"Urinalysis\" && (\r\n                <Urinalysis\r\n                  addBack={() => setEditModal(false)}\r\n                  defaultData={selectedData}\r\n                />\r\n              )}\r\n            </CModalBody>\r\n          </CModal>\r\n        </BlurBackground>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const renderImage = (contentUrl) => {\r\n    return (\r\n      <img\r\n        src={contentUrl}\r\n        alt=\"Image\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  function renderCell(row, column) {\r\n    const columnKey = getColumnKey(column?.label);\r\n    const value = row[columnKey];\r\n    // console.log(\"first\", value);\r\n\r\n    if (columnKey === \"ecg\") {\r\n      // Function to render PDF content\r\n      const renderPdf = (contentUrl) => {\r\n        window.open(contentUrl, \"_blank\");\r\n      };\r\n      return (\r\n        <div style={{ width: \"80px\" }} onClick={() => renderPdf(value.link)}>\r\n          <span className=\"hyperlink\">ECG</span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"result\") {\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          <Badge label={value?.name} color={value?.status} />\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"date\") {\r\n      // Function to format date-time string\r\n      const formatDateTime = (dateTimeString) => {\r\n        if (!dateTimeString) {\r\n          return \"Invalid date-time\"; // Handle empty or invalid input\r\n        }\r\n\r\n        // Parse the date and time string\r\n        const parsedDate = parse(\r\n          dateTimeString,\r\n          \"yyyy-MM-dd HH:mm\",\r\n          new Date()\r\n        );\r\n\r\n        // Check if the parsed date is valid\r\n        if (!isValid(parsedDate)) {\r\n          return \"Invalid date-time\"; // Handle invalid date\r\n        }\r\n\r\n        // Format the date and time into 'dd-MM-yyyy HH:mm'\r\n        return format(parsedDate, \"dd-MM-yyyy HH:mm\");\r\n      };\r\n\r\n      return (\r\n        <div style={{ width: \"180px\" }}>\r\n          <span>{formatDateTime(value)} </span>\r\n        </div>\r\n      );\r\n    } else if (columnKey === \"action\") {\r\n      return (\r\n        <div className=\"d-flex gap-2\">\r\n          {value.map((data, i) => (\r\n            <div key={i} className=\"d-flex\">\r\n              {renderActionButton(data, row)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      // Default rendering for regular data\r\n      return <span className=\"fs-16 fw-500\">{value}</span>;\r\n    }\r\n  }\r\n\r\n  function renderActionButton(data, row) {\r\n    switch (data.type) {\r\n      case \"warning\":\r\n        return <img src={Assets.Warning} alt=\"warn\" className=\"cursor\" />;\r\n      case \"edit\":\r\n        return (\r\n          <img\r\n            src={Assets.EditPencil}\r\n            alt=\"edit\"\r\n            className=\"cursor\"\r\n            onClick={() => editData(row)}\r\n          />\r\n        );\r\n      case \"delete\":\r\n        return (\r\n          <img\r\n            src={Assets.Delete}\r\n            alt=\"delete\"\r\n            className=\"cursor\"\r\n            onClick={() => deleteData(row)}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function getColumnKey(columnLabel) {\r\n    // Convert label to a key format used in your data object\r\n    // Example: \"Heart Rate (BPM)\" -> \"heart_rate_(bpm)\"\r\n    return columnLabel.toLowerCase().replace(/\\s+/g, \"_\");\r\n  }\r\n};\r\n\r\nexport default DynamicTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst ImagingOrderTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.file !== \"-\" ? (\r\n                    <Badge label={dt?.file} color={\"primary\"} />\r\n                  ) : (\r\n                    \"-\"\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.notes}\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.link}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.icd_code}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.scan_name}</span>\r\n                  <Badge\r\n                    label={dt?.scan_status}\r\n                    color={\r\n                      dt?.scan_status === \"Accepted\"\r\n                        ? \"yellow\"\r\n                        : dt?.scan_status === \"Uploaded\"\r\n                        ? \"success\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                    >\r\n                      {dt?.scan_status === \"Accepted\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.Approve}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.scan_status === \"Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.scan_status === \"Not Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.EditPencil}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                          />\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.TableDelete}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"delete\")}\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                    }}\r\n                    className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                  >\r\n                    {dt?.scan_status === \"Accepted\" && (\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.Accept}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"details\")}\r\n                      />\r\n                    )}\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.EditPencil}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.TableDelete}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"delete\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell> */}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagingOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst LabOrderTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.file !== \"-\" ? (\r\n                    <Badge label={dt?.file} color={\"primary\"} />\r\n                  ) : (\r\n                    \"-\"\r\n                  )}\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.notes}\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.link}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  {dt?.icd_code}\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lab_name}</span>\r\n                  <Badge\r\n                    label={dt?.lab_status}\r\n                    color={\r\n                      dt?.lab_status === \"Accepted\"\r\n                        ? \"yellow\"\r\n                        : dt?.lab_status === \"Uploaded\"\r\n                        ? \"success\"\r\n                        : dt?.lab_status === \"Prescribed\"\r\n                        ? \"warning\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                    >\r\n                      {dt?.lab_status === \"Accepted\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.Approve}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.lab_status === \"Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.lab_status === \"Not Uploaded\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          src={Assets?.visibleEye}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.EditPencil}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                          />\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.TableDelete}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"delete\")}\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst LabTable = ({ columns, rowData, getselectedData }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) => (\r\n              <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n            ))}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n              </CTableDataCell>\r\n              <CTableDataCell>\r\n                <Badge label={dt?.file} color={\"primary\"} />\r\n              </CTableDataCell>\r\n              <CTableDataCell>{dt?.notes}</CTableDataCell>\r\n              <CTableDataCell>{dt?.link}</CTableDataCell>\r\n              <CTableDataCell>\r\n                <div className=\"d-flex align-items-center justify-content-center gap-2\">\r\n                  <img\r\n                    alt=\"edit\"\r\n                    src={Assets?.TableEdit}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"edit\")}\r\n                  />\r\n                  <img\r\n                    alt=\"delete\"\r\n                    src={Assets?.TableDelete}\r\n                    className=\"cursor\"\r\n                    onClick={() => selectedData(dt, \"delete\")}\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport { Assets } from \"../../assets/Assets\";\r\n\r\nconst MedicationOrderTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  console.log(\"first\", rowData[0]);\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span className=\"fs-16 fw-500\">{dat?.name}</span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span className=\"fs-16 fw-500\">{dat?.strength} mg</span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span className=\"fs-16 fw-500\">\r\n                        {dat?.m} | {dat?.a} | {dat?.e} | {dat?.n}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <div className=\"d-flex flex-column\">\r\n                    {dt?.medicines?.map((dat, i) => (\r\n                      <span\r\n                        className=\"fs-16 fw-500\"\r\n                        style={{\r\n                          textTransform: \"capitalize\",\r\n                        }}\r\n                      >\r\n                        {dat?.food}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.lab_name}</span>\r\n                  <Badge\r\n                    label={dt?.lab_status}\r\n                    color={\r\n                      dt?.lab_status === \"Received\"\r\n                        ? \"primary\"\r\n                        : dt?.lab_status === \"Delivered\"\r\n                        ? \"success\"\r\n                        : dt?.lab_status === \"Prescribed\"\r\n                        ? \"warning\"\r\n                        : \"error\"\r\n                    }\r\n                  />\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      className=\"d-flex align-items-center justify-content-center gap-3 \"\r\n                    >\r\n                      {dt?.lab_status === \"Waiting For Approval\" ? (\r\n                        <img\r\n                          alt=\"edit\"\r\n                          // src={Assets?.UpdateIcon}\r\n                          src={Assets?.Approve}\r\n                          className=\"cursor\"\r\n                          onClick={() => selectedData(dt, \"details\")}\r\n                        />\r\n                      ) : dt?.lab_status === \"Prescribed\" ? (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.EditPencil}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                          />\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.TableDelete}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"delete\")}\r\n                          />\r\n                        </>\r\n                      ) : dt?.lab_status === \"Received\" ? (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.UStatus}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"edit\")}\r\n                            style={{ width: \"35px\" }}\r\n                          />\r\n                        </>\r\n                      ) : dt?.lab_status === \"Delivered\" ? (\r\n                        <>\r\n                          <img\r\n                            alt=\"delete\"\r\n                            src={Assets?.visibleEye}\r\n                            className=\"cursor\"\r\n                            onClick={() => selectedData(dt, \"completed\")}\r\n                            style={{ width: \"30px\" }}\r\n                          />\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n                    {/* <div\r\n                    style={{\r\n                      width: dt?.lab_status === \"Accepted\" ? \"50%\" : \"100%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"delete\"\r\n                      src={Assets?.visibleEye}\r\n                      className=\"cursor\"\r\n                      onClick={() => selectedData(dt, \"edit\")}\r\n                    />\r\n                  </div> */}\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationOrderTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst MedicalHistoryTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.onset}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.conditions}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.icd10}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.chronic}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.prev_illness}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.notes}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistoryTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../Badge/Badge\";\r\nimport { Assets } from \"../../../assets/Assets\";\r\n\r\nconst MedicationTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100 flex-column\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.name}</span>\r\n                  <small>\r\n                    {dt?.strength} {dt?.strength_measurement} {dt?.dosage}\r\n                  </small>\r\n                </div>\r\n              </CTableDataCell>\r\n              {/* <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.strength}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">\r\n                    {dt?.strength_measurement}\r\n                  </span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.dosage}</span>\r\n                </div>\r\n              </CTableDataCell> */}\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">\r\n                    {dt?.m} | {dt?.a} | {dt?.e} | {dt?.n}\r\n                  </span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.food_times}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.qty}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.start_date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\"> {dt?.status} </span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicationTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nfunction ExerciseHabitTable({ columns, rowData, getselectedData, from }) {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.duration}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <span>{dt?.intensity}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExerciseHabitTable;\r\n","import {\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Badge from \"../../../Badge/Badge\";\r\nimport { Assets } from \"../../../../assets/Assets\";\r\n\r\nconst MoodTable = ({ columns, rowData, getselectedData, from }) => {\r\n  const selectedData = (data, type) => {\r\n    getselectedData(data, type);\r\n  };\r\n  return (\r\n    <>\r\n      <CTable className=\"lab-responsive-table\">\r\n        <CTableHead color=\"dark\">\r\n          <CTableRow>\r\n            {columns?.map((data, i) =>\r\n              from === \"Consult\" && i === columns.length - 1 ? null : (\r\n                <CTableHeaderCell key={i}>{data?.label}</CTableHeaderCell>\r\n              )\r\n            )}\r\n          </CTableRow>\r\n        </CTableHead>\r\n        <CTableBody>\r\n          {rowData?.map((dt, i) => (\r\n            <CTableRow key={i}>\r\n              <CTableHeaderCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.id}</span>\r\n                </div>\r\n              </CTableHeaderCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.date}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              <CTableDataCell style={{ height: \"10px\" }}>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100\">\r\n                  <span className=\"fs-16 fw-500\">{dt?.type}</span>\r\n                </div>\r\n              </CTableDataCell>\r\n              {from !== \"Consult\" && (\r\n                <CTableDataCell style={{ height: \"10px\" }}>\r\n                  <div className=\"d-flex align-items-center justify-content-center gap-2 h-100\">\r\n                    <div\r\n                      style={{\r\n                        width: \"20%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"edit\"\r\n                        src={Assets?.EditPencil}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"edit\")}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        width: \"20%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"delete\"\r\n                        src={Assets?.Delete}\r\n                        className=\"cursor\"\r\n                        onClick={() => selectedData(dt, \"delete\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CTableDataCell>\r\n              )}\r\n            </CTableRow>\r\n          ))}\r\n        </CTableBody>\r\n      </CTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoodTable;\r\n","// Define your constants\r\nconst DATE_FORMAT = \"dd-MM-yyyy\";\r\n\r\nexport { DATE_FORMAT };\r\n","import { format, isValid, parse } from \"date-fns\";\r\n\r\n// Function to format date as DD-MM-YYYY HH:mm AM/PM\r\nexport function formatDateTime(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n\r\n  const options = {\r\n    day: \"2-digit\",\r\n    month: \"2-digit\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  };\r\n\r\n  return date.toLocaleString(\"en-GB\", options).replace(\",\", \"\");\r\n}\r\n\r\n// Function to format date as DD-MM-YYYY\r\nexport function formatDate(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are zero-indexed\r\n  const year = date.getFullYear();\r\n\r\n  return `${day}-${month}-${year}`;\r\n}\r\n\r\n// Function to format time as HH:mm AM/PM\r\nexport function formatTime(originalDateStr) {\r\n  const date = new Date(originalDateStr);\r\n  const options = {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    hour12: true,\r\n  };\r\n\r\n  return date.toLocaleTimeString(\"en-GB\", options);\r\n}\r\n\r\nexport function tableDateTime(dateTimeString) {\r\n  if (!dateTimeString) {\r\n    return \"Invalid date-time\"; // Handle empty or invalid input\r\n  }\r\n\r\n  // Parse the date and time string\r\n  const parsedDate = parse(dateTimeString, \"yyyy-MM-dd HH:mm\", new Date());\r\n\r\n  // Check if the parsed date is valid\r\n  if (!isValid(parsedDate)) {\r\n    return \"Invalid date-time\"; // Handle invalid date\r\n  }\r\n\r\n  // Format the date and time into 'dd-MM-yyyy HH:mm'\r\n  return format(parsedDate, \"dd-MM-yyyy HH:mm\");\r\n}\r\n"],"names":["useApi","apiUrl","process","apiKey","loading","setLoading","useState","error","setError","cache","useRef","fetchData","useCallback","async","url","options","current","startsWith","response","fetch","ok","Error","concat","statusText","data","json","message","get","method","headers","Authorization","sessionStorage","getItem","post","body","JSON","stringify","patch","del","clearCache","_ref","label","color","_jsx","className","children","paths","lastIndex","length","_Fragment","CBreadcrumb","map","index","CBreadcrumbItem","href","to","onClick","buttonName2","getbtnNames","buttonText","setButtonText","isOpen","setIsOpen","handleItemClick","text","_jsxs","toggleDropdown","src","Assets","cUp","alt","cDown","ObjectiveDatas","id","icon","VitalBP","name","date","category","badge","columnsData","tableData","result","status","systolic","diastolic","chartLabel1","action","type","VitalBs","blood_sugar","blood_sugar_value","VitalBMI","bmi","height","weight","VitalHCT","hct_rate","VitalHBeat","ecg_result","ecg","contentType","link","ecgSample","interpretation","ecg_type","VitalHae","hemoglobin","hemoglobinValue","BKetone","blood_ketone","blood_ketone_value","VitalLipid","total_cholesterol","totalOnly","triglycerides","hdl","ldl","vldl","VitalRespi","SpO2","spo2","Temp","temperature","temperature_value","LFT","BUAcid","blood_uric_acid","blood_uric_acid_value","Urinalysis","chartLabel2","chartValue","specific_gravity","ph","clarity","protein","glucose","Urea","urea","urea_value","Creatinine","creatinine","creatinine_value","GFR","gfr","gfr_value","from","rowData","questions","addFormView","setAddFormView","currentPage","setCurrentPage","selectedData","setSelectedData","PsychiatricTable","getCurrentPageItems","startIndex","endIndex","slice","columns","getselectedData","console","log","CCard","CCardBody","PsychiatricForm","back","defaultValues","formTitle","setFormTitle","formData","setFormData","handleChange","e","value","target","prevState","onSubmit","preventDefault","question","CRow","CCol","option","cIndex","CFormCheck","onChange","checked","style","width","PrimaryButton","SecondaryButton","setDate","useEffect","defaultDateString","defaultDate","dateString","_datePart$split","datePart","split","month","day","year","Number","Date","parseDateString","disableText","setDisableText","gravidaoptions","findgravidaIndex","condition","indexOf","lg","class","for","DatePicker","showIcon","selected","dateFormat","DATE_FORMAT","border","borderRadius","Dropdown","getSelectedValue","defaultValue","disabled","treatment","onClose","remark","deleteView","setDeleteView","addFormPage","md","BackBtn","Breadcrumb","DateSelector","Add","OptionsIcon","DiagnosisTable","Pagination","onPageChange","pageNumber","totalItems","itemsPerPage","DiagnosisForm","BlurBackground","CModal","alignment","visible","CModalBody","takendate","setTakenDate","dosage_date","defaultDateString1","taken_date","defaultDate1","placeholder","vaccine","period","CTable","CTableHead","CTableRow","i","CTableHeaderCell","CTableBody","dt","CTableDataCell","colorVaccined","vaccined","columnData","startDate","setStartDate","endDate","setEndDate","tkDate","setTkDate","today","ImmunizationTable","ImmunizationForm","maxDate","tabs","getCurrentTab","defaultTab","currentTab","setCurrentTab","switchTab","title","addBack","defaultData","selectedTime","setSelectedTime","selectedDate","setSelectedDate","_timePart$split","parts","timePart","hours","minutes","CContainer","isClearable","closeOnScroll","wrapperClassName","showTimeSelect","showTimeSelectOnly","timeIntervals","parseFloat","match","xs","extractNum","getTableDatas","setSystolic","toString","setDiastolic","pulse","setPulse","errors","setErrors","formattedDate","String","getDate","padStart","getMonth","getFullYear","getFormattedDate","defaultDateTime","defaultTime","parsedDate","parse","isValid","setHours","setMinutes","setSeconds","validate","newErrors","time","trim","isNaN","onEdit","onAdd","details","format","user_id","slug","toast","success","updatedDateTime","getHours","getMinutes","maxLength","onInput","replace","_defaultData$ecg","setType","findIndex","_defaultData$result","cell","setCell","notes","tabindex","Export","_selectedData$ga","_selectedData$ga5","_selectedData$skin4","_getCurrentPageItems","_selectedData$ga6","_selectedData$skin5","dateCards","ga","select","skin","selectedOptions","setSelectedOptions","skinselectedOptions","setSkinSelectedOptions","labelName1","setLabelname1","isSelected","setIsSelected","labelName","setLabelname","editView","setEditView","skinoptions","handleSelect","filter","item","handleSelectSkin","nutritionOpen","setNutritionOpen","constiOpen","setConstiOpen","generalOpen","setGeneralOpen","heentOpen","setHeentOpen","toggleSelected","_selectedData$ga2","_selectedData$skin","_selectedData$ga3","_selectedData$skin2","_selectedData$ga4","_selectedData$skin3","getselected","toggleSelected1","SingleDatePicker","PlusIcon","MinusIcon","OptionItem","onSelect","includes","DateCards","ActiveButton","listview","provider_name","reason","TableEdit","TableDelete","prev_illness","timeCaption","NextAppointmentTable","NextAppointmentForm","PatientEducationTab","trimester","setTrimester","DropdownButton","file","icd_code","scan_status","scan_name","detailView","setDetailView","ImagingOrderTable","ImagingOrderForm","size","CFormSelect","lab_status","lab_name","LabOrderTable","LabOrderForm","inline","defaultChecked","_defaultValues$medici","_defaultValues$medici2","_defaultValues$medici21","_defaultValues$medici22","medicines","setMedicines","strength","strengthMeasurement","days","totalQty","instruction","m","a","n","food","handleAddMedicine","newMedicines","push","handleRemoveMedicine","medicine","handleMedicineInputChange","fieldName","newValue","processedValue","toISOString","btnValue","setBtnValue","btnView","setBtnView","setStrength","qty","setQty","timeTaken","setTimeTaken","_defaultValues$medici3","_defaultValues$medici4","_defaultValues$medici5","_defaultValues$medici6","_defaultValues$medici7","_defaultValues$medici8","_defaultValues$medici9","_defaultValues$medici10","_defaultValues$medici11","_defaultValues$medici12","_defaultValues$medici13","_defaultValues$medici14","_defaultValues$medici15","_defaultValues$medici16","_defaultValues$medici17","_defaultValues$medici18","_defaultValues$medici19","_defaultValues$medici20","paddingRight","boxSizing","padding","whiteDel","whiteAdd","rx","frequency","duration","rowSpan","TickCircle","display","justifyContent","PlusCircle","transform","completedView","setCompletedView","MedicationOrderTable","CloseBtn","MedicationOrderForm","MedicationCompleted","DetailsTable","PatientEducationTable","PatientEducationForm","description","no","ProcedurerTable","ProcedureForm","ProcedureTab","date_time","therapy_name","therapist_name","options1","getSelectedValue1","htmlFor","TherapiesTable","DateSearch","TherapiesForm","TherapiesTab","tableDateTime","complaints","EditPencil","Delete","CFormTextarea","rows","OnClose","xl","ThreeDots","ChiefComplaintTable","ChiefComplaintsForm","disease","grandparents","father","mother","Brother","Sister","Daughter","Son","FamilyHistoryTable","onset","icdoptions","chronic","findIndex2","icd10","conditions","MedicalHistoryTable","MedHistoryForm","date2","setDate2","fert_treatment","setFert_treatment","para","setPara","lacating","setLacating","gravida","setGravida","lmp_date","defaultDateString2","ed_date","defaultDate2","trimster","lacatingoptions","bad","setBad","preg","setPreg","pregnant","fertTreat","setFertTreat","lact","setLact","cesarean","setCesarean","obstetric","setObsteric","handleChangeObste","handleChangeCesa","handleChangeLact","handleChangeFert","gravidaValue","setGravidaValue","paraValue","setParaValue","numCheck","input","newstrValue","boh","lmp","menopause","setMenopause","handleClick","event","getSelectedValue2","setValue","age","value1","setValue1","value2","setValue2","cycle_per_year","value3","setValue3","cycle_in_days","handlePaste","clipboardData","getData","onPaste","date3","setDate3","abnormalStatus","setAbnormalStatus","history_of_abnormal","mamogramStatus","setMamogramStatus","history_of_mamogram","breastStatus","setBreastStatus","history_of_breast","handleAbnormalStatus","handleMamogramStatus","handleBreastStatus","date_of_last_pap","date_of_last_mamogram","defaultDateString3","date_of_last_breast","defaultDate3","PatientSubMenu4","localStorage","ParsedPatientSubMenu","PatientSubMenu5","ParsedPatientSubMenu5","currentHistoryTab","setCurrentHistoryTab","ObstetricHistoryTable","MensturalHistoryForm","ScreeningHistoryForm","MedicalTab","smokingStatus","setSmokingStatus","smoking","alcoholStatus","setAlcoholStatus","alcohol","drugStatus","setDrugStatus","drugs","handleSmokingStatus","handleAlcoholStatus","handleDrugStatus","getSelectedGravida","Performed_by","hospital","SurgicalTable","SurgicalForm","start_date","end_date","strength_measurement","dosage","time_taken","food_times","MedicationTable","MedicationForm","date1","setDate1","newDaysValue","newQtyValue","parseInt","end","setTime","parsedTime","duration_days","location","newValueDuration","aggravating","relieving","temporal","characteristics","severity","SymtomsTable","SignsSymptomsForm","exercises","setExercises","intensity","updatedData","newExercises","ex","exercise","hgdf","handleRemoveExercise","handleAddExercise","ExerciseHabitTable","ExcerciseHabitForm","MoodTable","MoodForm","type_of_diet","intake","FluidIntakecolumnData","FluidIntakerowData","PatientSubMenu2","getCurrentFluidPageItems","NutritionDietTable","NutritionFluidTable","DietForm","FluidIntakeForm","historySti","setHistorySti","currentSti","setCurrentSti","handleHistoryStiClick","handleCurrentStiClick","sti_current_notes","SexualStatusForm","sexual_activity","history","screening_date","current_status","SleepTable","SleepForm","deleteorg","search","dropdownRef","selectedOption","setSelectedOption","handleClickOutside","contains","document","addEventListener","removeEventListener","ref","handleOptionClick","totalPages","setTotalPages","pagesCount","Math","ceil","handlePageChange","page","pageNumbers","getPageNumbers","arr","number","undefined","SearchBar","Badge","testSubIcon","testUnSubIcon","testViewIcon","deleteModal","setDeleteModal","editModal","setEditModal","deleteData","editData","background","row","rowIndex","column","renderCell","onDelete","CModalHeader","BMI","BPForm","RespirationRateForm","Spo2","Temperature","LFTForm","HeartRate","BSugar","LipidProfileForm","HCT","Hemogloin","BUricAcid","columnKey","toLowerCase","renderPdf","contentUrl","window","open","formatDateTime","dateTimeString","renderActionButton","Warning","Approve","visibleEye","_dt$medicines","_dt$medicines2","_dt$medicines3","_dt$medicines4","dat","textTransform","UStatus","originalDateStr","toLocaleString","hour","minute","hour12"],"sourceRoot":""}